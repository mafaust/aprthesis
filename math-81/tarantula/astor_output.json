{
  "general": {
    "NR_RIGHT_COMPILATIONS": 141,
    "EXECUTION_IDENTIFIER": "",
    "FAULT_LOCALIZATION": "flacoco",
    "OUTPUT_STATUS": "STOP_BY_PATCH_FOUND",
    "NR_FAILLING_COMPILATIONS": 51,
    "NR_GENERATIONS": 192,
    "TOTAL_TIME": 260.828
  },
  "patches": [
    {
      "VARIANT_ID": "384",
      "VALIDATION": "|true|0|2103|[]|",
      "patchhunks": [
        {
          "LOCATION": "org.apache.commons.math.linear.EigenDecompositionImpl",
          "PATH": "\\/Users\\/marekmazur\\/astor\\/defects4j\\/math-81\\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
          "INGREDIENT_SCOPE": "LOCAL",
          "SUSPICIOUNESS": "0,993",
          "INGREDIENT_PARENT": "dN2 \u003d 0",
          "PATCH_HUNK_TYPE": "CtAssignmentImpl|CtBlockImpl",
          "ORIGINAL_CODE": "switch (deflated) {\\n\\n\\tcase 0 : \\t\\t\\/\\/ no realEigenvalues deflated.\\n\\t\\tif ((dMin \u003d\u003d dN) || (dMin \u003d\u003d dN1)) {\\n\\n\\t\\t\\tdouble b1 \u003d java.lang.Math.sqrt(work[nn - 3]) * java.lang.Math.sqrt(work[nn - 5]);\\n\\t\\t\\tdouble b2 \u003d java.lang.Math.sqrt(work[nn - 7]) * java.lang.Math.sqrt(work[nn - 9]);\\n\\t\\t\\tdouble a2 \u003d work[nn - 7] + work[nn - 5];\\n\\n\\t\\t\\tif ((dMin \u003d\u003d dN) \u0026\u0026 (dMin1 \u003d\u003d dN1)) {\\n\\t\\t\\t\\t\\/\\/ cases 2 and 3.\\n\\t\\t\\t\\tfinal double gap2 \u003d (dMin2 - a2) - (dMin2 * 0.25);\\n\\t\\t\\t\\tfinal double gap1 \u003d (a2 - dN) - ((gap2 \u003e 0.0) \u0026\u0026 (gap2 \u003e b2) ? (b2 \\/ gap2) * b2 : b1 + b2);\\n\\t\\t\\t\\tif ((gap1 \u003e 0.0) \u0026\u0026 (gap1 \u003e b1)) {\\n\\t\\t\\t\\t\\ttau \u003d java.lang.Math.max(dN - ((b1 \\/ gap1) * b1), 0.5 * dMin);\\n\\t\\t\\t\\t\\ttType \u003d -2;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdouble s \u003d 0.0;\\n\\t\\t\\t\\t\\tif (dN \u003e b1) {\\n\\t\\t\\t\\t\\t\\ts \u003d dN - b1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif (a2 \u003e (b1 + b2)) {\\n\\t\\t\\t\\t\\t\\ts \u003d java.lang.Math.min(s, a2 - (b1 + b2));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, 0.333 * dMin);\\n\\t\\t\\t\\t\\ttType \u003d -3;\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t\\/\\/ case 4.\\n\\t\\t\\t\\ttType \u003d -4;\\n\\t\\t\\t\\tdouble s \u003d 0.25 * dMin;\\n\\t\\t\\t\\tdouble gam;\\n\\t\\t\\t\\tint np;\\n\\t\\t\\t\\tif (dMin \u003d\u003d dN) {\\n\\t\\t\\t\\t\\tgam \u003d dN;\\n\\t\\t\\t\\t\\ta2 \u003d 0.0;\\n\\t\\t\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb2 \u003d work[nn - 5] \\/ work[nn - 7];\\n\\t\\t\\t\\t\\tnp \u003d nn - 9;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tnp \u003d nn - (2 * pingPong);\\n\\t\\t\\t\\t\\tb2 \u003d work[np - 2];\\n\\t\\t\\t\\t\\tgam \u003d dN1;\\n\\t\\t\\t\\t\\tif (work[np - 4] \u003e work[np - 2]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\ta2 \u003d work[np - 4] \\/ work[np - 2];\\n\\t\\t\\t\\t\\tif (work[nn - 9] \u003e work[nn - 11]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb2 \u003d work[nn - 9] \\/ work[nn - 11];\\n\\t\\t\\t\\t\\tnp \u003d nn - 13;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\/\\/ approximate contribution to norm squared from i \u003c nn-1.\\n\\t\\t\\t\\ta2 \u003d a2 + b2;\\n\\t\\t\\t\\tfor (int i4 \u003d np; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n\\t\\t\\t\\t\\tif (b2 \u003d\u003d 0.0) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb1 \u003d b2;\\n\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb2 \u003d b2 * (work[i4] \\/ work[i4 - 2]);\\n\\t\\t\\t\\t\\ta2 \u003d a2 + b2;\\n\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) \u003c a2) || (cnst1 \u003c a2)) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ta2 \u003d cnst3 * a2;\\n\\n\\t\\t\\t\\t\\/\\/ rayleigh quotient residual bound.\\n\\t\\t\\t\\tif (a2 \u003c cnst1) {\\n\\t\\t\\t\\t\\ts \u003d (gam * (1 - java.lang.Math.sqrt(a2))) \\/ (1 + a2);\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ttau \u003d s;\\n\\n\\t\\t\\t}\\n\\t\\t} else if (dMin \u003d\u003d dN2) {\\n\\n\\t\\t\\t\\/\\/ case 5.\\n\\t\\t\\ttType \u003d -5;\\n\\t\\t\\tdouble s \u003d 0.25 * dMin;\\n\\n\\t\\t\\t\\/\\/ compute contribution to norm squared from i \u003e nn-2.\\n\\t\\t\\tfinal int np \u003d nn - (2 * pingPong);\\n\\t\\t\\tdouble b1 \u003d work[np - 2];\\n\\t\\t\\tdouble b2 \u003d work[np - 6];\\n\\t\\t\\tfinal double gam \u003d dN2;\\n\\t\\t\\tif ((work[np - 8] \u003e b2) || (work[np - 4] \u003e b1)) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tdouble a2 \u003d (work[np - 8] \\/ b2) * (1 + (work[np - 4] \\/ b1));\\n\\n\\t\\t\\t\\/\\/ approximate contribution to norm squared from i \u003c nn-2.\\n\\t\\t\\tif ((end - start) \u003e 2) {\\n\\t\\t\\t\\tb2 \u003d work[nn - 13] \\/ work[nn - 15];\\n\\t\\t\\t\\ta2 \u003d a2 + b2;\\n\\t\\t\\t\\tfor (int i4 \u003d nn - 17; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n\\t\\t\\t\\t\\tif (b2 \u003d\u003d 0.0) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb1 \u003d b2;\\n\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb2 \u003d b2 * (work[i4] \\/ work[i4 - 2]);\\n\\t\\t\\t\\t\\ta2 \u003d a2 + b2;\\n\\t\\t\\t\\t\\tif (((100 * java.lang.Math.max(b2, b1)) \u003c a2) || (cnst1 \u003c a2)) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\ta2 \u003d cnst3 * a2;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (a2 \u003c cnst1) {\\n\\t\\t\\t\\ttau \u003d (gam * (1 - java.lang.Math.sqrt(a2))) \\/ (1 + a2);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttau \u003d s;\\n\\t\\t\\t}\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t\\/\\/ case 6, no information to guide us.\\n\\t\\t\\tif (tType \u003d\u003d (-6)) {\\n\\t\\t\\t\\tg +\u003d 0.333 * (1 - g);\\n\\t\\t\\t} else if (tType \u003d\u003d (-18)) {\\n\\t\\t\\t\\tg \u003d 0.25 * 0.333;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tg \u003d 0.25;\\n\\t\\t\\t}\\n\\t\\t\\ttau \u003d g * dMin;\\n\\t\\t\\ttType \u003d -6;\\n\\n\\t\\t}\\n\\t\\tbreak;\\n\\n\\tcase 1 : \\t\\t\\/\\/ one eigenvalue just deflated. use dMin1, dN1 for dMin and dN.\\n\\t\\tif ((dMin1 \u003d\u003d dN1) \u0026\u0026 (dMin2 \u003d\u003d dN2)) {\\n\\n\\t\\t\\t\\/\\/ cases 7 and 8.\\n\\t\\t\\ttType \u003d -7;\\n\\t\\t\\tdouble s \u003d 0.333 * dMin1;\\n\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tdouble b1 \u003d work[nn - 5] \\/ work[nn - 7];\\n\\t\\t\\tdouble b2 \u003d b1;\\n\\t\\t\\tif (b2 !\u003d 0.0) {\\n\\t\\t\\t\\tfor (int i4 \u003d ((4 * end) - 10) + pingPong; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n\\t\\t\\t\\t\\tfinal double oldB1 \u003d b1;\\n\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb1 \u003d b1 * (work[i4] \\/ work[i4 - 2]);\\n\\t\\t\\t\\t\\tb2 \u003d b2 + b1;\\n\\t\\t\\t\\t\\tif ((100 * java.lang.Math.max(b1, oldB1)) \u003c b2) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tb2 \u003d java.lang.Math.sqrt(cnst3 * b2);\\n\\t\\t\\tfinal double a2 \u003d dMin1 \\/ (1 + (b2 * b2));\\n\\t\\t\\tfinal double gap2 \u003d (0.5 * dMin2) - a2;\\n\\t\\t\\tif ((gap2 \u003e 0.0) \u0026\u0026 (gap2 \u003e (b2 * a2))) {\\n\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 \\/ gap2)) * b2)));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\\n\\t\\t\\t\\ttType \u003d -8;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\n\\t\\t\\t\\/\\/ case 9.\\n\\t\\t\\ttau \u003d 0.25 * dMin1;\\n\\t\\t\\tif (dMin1 \u003d\u003d dN1) {\\n\\t\\t\\t\\ttau \u003d 0.5 * dMin1;\\n\\t\\t\\t}\\n\\t\\t\\ttType \u003d -9;\\n\\t\\t}\\n\\t\\tbreak;\\n\\n\\tcase 2 : \\t\\t\\/\\/ two realEigenvalues deflated. use dMin2, dN2 for dMin and dN.\\n\\n\\t\\t\\/\\/ cases 10 and 11.\\n\\t\\tif ((dMin2 \u003d\u003d dN2) \u0026\u0026 ((2 * work[nn - 5]) \u003c work[nn - 7])) {\\n\\t\\t\\ttType \u003d -10;\\n\\t\\t\\tfinal double s \u003d 0.333 * dMin2;\\n\\t\\t\\tif (work[nn - 5] \u003e work[nn - 7]) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\tdouble b1 \u003d work[nn - 5] \\/ work[nn - 7];\\n\\t\\t\\tdouble b2 \u003d b1;\\n\\t\\t\\tif (b2 !\u003d 0.0) {\\n\\t\\t\\t\\tfor (int i4 \u003d ((4 * end) - 9) + pingPong; i4 \u003e\u003d (((4 * start) + 2) + pingPong); i4 -\u003d 4) {\\n\\t\\t\\t\\t\\tif (work[i4] \u003e work[i4 - 2]) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tb1 *\u003d work[i4] \\/ work[i4 - 2];\\n\\t\\t\\t\\t\\tb2 +\u003d b1;\\n\\t\\t\\t\\t\\tif ((100 * b1) \u003c b2) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tb2 \u003d java.lang.Math.sqrt(cnst3 * b2);\\n\\t\\t\\tfinal double a2 \u003d dMin2 \\/ (1 + (b2 * b2));\\n\\t\\t\\tfinal double gap2 \u003d ((work[nn - 7] + work[nn - 9]) - \\n\\t\\t\\t(java.lang.Math.sqrt(work[nn - 11]) * java.lang.Math.sqrt(work[nn - 9]))) - a2;\\n\\t\\t\\tif ((gap2 \u003e 0.0) \u0026\u0026 (gap2 \u003e (b2 * a2))) {\\n\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (((cnst2 * a2) * (b2 \\/ gap2)) * b2)));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttau \u003d java.lang.Math.max(s, a2 * (1 - (cnst2 * b2)));\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\ttau \u003d 0.25 * dMin2;\\n\\t\\t\\ttType \u003d -11;\\n\\t\\t}\\n\\t\\tbreak;\\n\\n\\tdefault : \\t\\t\\/\\/ case 12, more than two realEigenvalues deflated. no information.\\n\\t\\ttau \u003d 0.0;\\n\\t\\ttType \u003d -12;}",
          "BUGGY_CODE_TYPE": "CtSwitchImpl|CtBlockImpl",
          "OPERATOR": "InsertBeforeOp",
          "MODIFIED_FILE_PATH": "\\/Users\\/marekmazur\\/astor\\/.\\/output_astor\\/AstorMain-math-81\\/\\/src\\/\\/variant-384\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java",
          "LINE": "1445",
          "MP_RANKING": "249",
          "PATCH_HUNK_CODE": "dN2 \u003d 0"
        }
      ],
      "TIME": "260",
      "GENERATION": "192",
      "FOLDER_SOLUTION_CODE": "\\/Users\\/marekmazur\\/astor\\/.\\/output_astor\\/AstorMain-math-81\\/\\/src\\/\\/variant-384",
      "PATCH_DIFF_ORIG": "--- \\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java\\n+++ \\/src\\/main\\/java\\/org\\/apache\\/commons\\/math\\/linear\\/EigenDecompositionImpl.java\\n@@ -1444 +1444 @@\\n-\\t\\tint nn \u003d ((4 * end) + pingPong) - 1;\\n+\\t\\tint nn \u003d ((4 * end) + pingPong) - 1; \\t\\tdN2 \u003d 0;\\n\\n"
    }
  ]
}