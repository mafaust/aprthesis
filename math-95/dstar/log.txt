[0] INFO ProjectConfiguration - Version of the JVM used: 1.8.0_202
[1] INFO main - Java version of the JDK used to run tests: 1.8.0_202
[1] INFO main - The compliance of the JVM is:  8
[1] INFO main - command line arguments: [-location  /Users/marekmazur/astor/defects4j/math-95  -mode  jgenprog  -package  org.apache.commons  -jvm4testexecution  /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin  -failing  org.apache.commons.math.distribution.FDistributionTest  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -stopfirst  true  -dependencies  /Users/marekmazur/astor/examples/libs/junit-4.4.jar  -maxgen  1000000  -seed  10  -maxtime  60  -scope  local  -stopfirst  true  -flthreshold  0  -population  1  -faultlocalization  flacoco]
[1] INFO AstorMain - Running Astor on a JDK at /Users/marekmazur/Library/Java/JavaVirtualMachines/openjdk-19.0.1/Contents/Home
Source folders: [/Users/marekmazur/astor/defects4j/math-95/src/java]
Source Test folders: [/Users/marekmazur/astor/defects4j/math-95/src/test]
---- Creating spoon model
Creating model,  Code location from working folder: /Users/marekmazur/astor/defects4j/math-95/src/java
building model: /Users/marekmazur/astor/defects4j/math-95/src/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/Users/marekmazur/astor/examples/libs/junit-4.4.jar]
Spoon Model built from location: /Users/marekmazur/astor/defects4j/math-95/src/java
Number of CtTypes created: 251
Running chosen test detection strategy: CLASSLOADER
Test retrieved from classes: 155
Running Flacoco...
Running spectrum-based fault localization...
FlacocoConfig{workspace='/Users/marekmazur/astor/.', projectPath='/Users/marekmazur/astor/defects4j/math-95', srcJavaDir=[/Users/marekmazur/astor/defects4j/math-95/src/java], srcTestDir=[/Users/marekmazur/astor/defects4j/math-95/src/test], binJavaDir=[/Users/marekmazur/astor/defects4j/math-95/target/classes], binTestDir=[/Users/marekmazur/astor/defects4j/math-95/target/test-classes], classpath='/Users/marekmazur/astor/examples/libs/junit-4.4.jar', customJUnitClasspath='null', customJacocoClasspath='null', mavenHome='/Users/marekmazur/.m2/repository/', coverTests=false, testRunnerVerbose=false, testRunnerTimeoutInMs=3600000, testRunnerJVMArgs='null', threshold=0.0, includeZeros=false, complianceLevel=8, testDetectionStrategy=CLASSLOADER, ignoredTests=[], jUnit4Tests=[org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.util.MathUtilsTest#testRoundFloat, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexTest#testLogInf, org.apache.commons.math.geometry.RotationTest#testCompose, org.apache.commons.math.analysis.PolynomialFunctionTest#testfirstDerivativeComparison, org.apache.commons.math.linear.RealMatrixImplTest#testAdd, org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, org.apache.commons.math.linear.LUDecompositionImplTest#testDeterminant, org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.complex.ComplexTest#testCoshNaN, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.StatUtilsTest#testStats, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, org.apache.commons.math.analysis.SimpsonIntegratorTest#testSinFunction, org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, org.apache.commons.math.distribution.TDistributionTest#testConsistency, org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, org.apache.commons.math.random.RandomAdaptorTest#testConfig, org.apache.commons.math.complex.ComplexTest#testConstructor, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, org.apache.commons.math.analysis.NevilleInterpolatorTest#testSinFunction, org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, org.apache.commons.math.linear.RealVectorImplTest#testMisc, org.apache.commons.math.special.GammaTest#testLogGammaNegative, org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testLinearFunction, org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, org.apache.commons.math.linear.RealVectorImplTest#testConstructors, org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, org.apache.commons.math.random.ValueServerTest#testReplay, org.apache.commons.math.util.MathUtilsTest#testSignInt, org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.linear.RealMatrixImplTest#testSubMatrix, org.apache.commons.math.fraction.FractionTest#testDoubleValue, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, org.apache.commons.math.analysis.RombergIntegratorTest#testSinFunction, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testSerialization, org.apache.commons.math.geometry.Vector3DTest#testAdd, org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, org.apache.commons.math.estimation.EstimatedParameterTest#testBound, org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, org.apache.commons.math.complex.ComplexTest#testTan, org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.fraction.FractionFormatTest#testFormat, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testClone, org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, org.apache.commons.math.linear.RealMatrixImplTest#testLUDecomposition, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionTest#testDivide, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testParameters, org.apache.commons.math.analysis.BrentSolverTest#testBadEndpoints, org.apache.commons.math.linear.RealMatrixImplTest#testDeterminant, org.apache.commons.math.complex.ComplexTest#testAbs, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.geometry.Vector3DTest#testNorm, org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, org.apache.commons.math.linear.RealMatrixImplTest#testSolve, org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testCosNaN, org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testCoefficients, org.apache.commons.math.analysis.TrapezoidIntegratorTest#testQuinticFunction, org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, org.apache.commons.math.random.RandomDataTest#testNextInt, org.apache.commons.math.analysis.MullerSolverTest#testParameters, org.apache.commons.math.random.RandomDataTest#testNextUniform, org.apache.commons.math.fraction.FractionTest#testCompareTo, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, org.apache.commons.math.linear.RealMatrixImplTest#testToString, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverNull, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testDivideInfinite, org.apache.commons.math.complex.ComplexTest#testSqrtNaN, org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, org.apache.commons.math.analysis.BisectionSolverTest#testSetRelativeAccuracy, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBigStep, org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNull, org.apache.commons.math.linear.QRDecompositionImplTest#testNoDecompose, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, org.apache.commons.math.complex.ComplexTest#testSubtractNaN, org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, org.apache.commons.math.complex.ComplexTest#testEqualsClass, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.linear.RealVectorImplTest#testPredicates, org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, org.apache.commons.math.complex.ComplexTest#testCoshInf, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.complex.ComplexTest#testSinhNaN, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, org.apache.commons.math.analysis.RiddersSolverTest#testSinFunction, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, org.apache.commons.math.util.MathUtilsTest#testNextAfter, org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function2, org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function, org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.geometry.Vector3DTest#testCoordinates, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.complex.ComplexTest#testAsinNaN, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.QRDecompositionImplTest#testSolve, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.random.RandomDataTest#testNextSecureLong, org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, org.apache.commons.math.geometry.RotationTest#testAngles, org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, org.apache.commons.math.random.RandomAdaptorTest#testNextLong, org.apache.commons.math.linear.LUDecompositionImplTest#testSolve, org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, org.apache.commons.math.distribution.PoissonDistributionTest#testMean, org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, org.apache.commons.math.analysis.LaguerreSolverTest#testParameters, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.distribution.BetaDistributionTest#testDensity, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.complex.ComplexTest#testAdd, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, org.apache.commons.math.linear.QRDecompositionImplTest#testRank, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.complex.ComplexTest#testSqrtInf, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinear, org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDecreasingSteps, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testInterpolationInside, org.apache.commons.math.complex.ComplexTest#testAbsInfinite, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, org.apache.commons.math.linear.RealVectorImplTest#testBasicFunctions, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testParameters, org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, org.apache.commons.math.complex.ComplexTest#testEqualsNaN, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testParameters, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, org.apache.commons.math.stat.inference.TTestTest#testPaired, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, org.apache.commons.math.random.ValueServerTest#testNextDigestFail, org.apache.commons.math.optimization.NelderMeadTest#testCostExceptions, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, org.apache.commons.math.complex.ComplexTest#testTanhCritical, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, org.apache.commons.math.geometry.Vector3DTest#testSubtract, org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.random.RandomAdaptorTest#testNextSample, org.apache.commons.math.analysis.BisectionSolverTest#testSetMaximalIterationCount, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.StatUtilsTest#testMax, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, org.apache.commons.math.special.GammaTest#testLogGammaPositive, org.apache.commons.math.stat.StatUtilsTest#testProduct, org.apache.commons.math.complex.ComplexTest#testCosInf, org.apache.commons.math.analysis.RombergIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, org.apache.commons.math.geometry.Vector3DTest#testNormalize, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testCorrectorCoefficients, org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.FrequencyTest#testToString, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testNoReset, org.apache.commons.math.complex.ComplexTest#testPowInf, org.apache.commons.math.geometry.Vector3DTest#testAngular, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, org.apache.commons.math.util.MathUtilsTest#testGcd, org.apache.commons.math.distribution.GammaDistributionTest#testValues, org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructor, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, org.apache.commons.math.complex.ComplexTest#testTanh, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, org.apache.commons.math.stat.FrequencyTest#testAdd, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, org.apache.commons.math.random.RandomDataTest#testNextPoisson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.TrapezoidIntegratorTest#testSinFunction, org.apache.commons.math.linear.RealMatrixImplTest#testMath209, org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.complex.ComplexTest#testpowNull, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, org.apache.commons.math.distribution.CauchyDistributionTest#testScale, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, org.apache.commons.math.analysis.PolynomialFunctionTest#testLinear, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, org.apache.commons.math.complex.ComplexTest#testExpInf, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, org.apache.commons.math.fraction.FractionTest#testConstructor, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction, org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, org.apache.commons.math.analysis.TrapezoidIntegratorTest#testParameters, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, org.apache.commons.math.distribution.FDistributionTest#testConsistency, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, org.apache.commons.math.linear.RealMatrixImplTest#testTrace, org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, org.apache.commons.math.analysis.BisectionSolverTest#testQuinticZero, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, org.apache.commons.math.analysis.MullerSolverTest#testSinFunction2, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, org.apache.commons.math.complex.ComplexTest#testConstructorNaN, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testInterpolationAtBounds, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, org.apache.commons.math.linear.LUDecompositionImplTest#testNoDecompose, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, org.apache.commons.math.util.TransformerMapTest#testTransformers, org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, org.apache.commons.math.analysis.MullerSolverTest#testSinFunction, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNoRoot, org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, org.apache.commons.math.util.MathUtilsTest#testSignFloat, org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, org.apache.commons.math.util.MathUtilsTest#testSignDouble, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, org.apache.commons.math.optimization.NelderMeadTest#testPowell, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.geometry.RotationOrderTest#testName, org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, org.apache.commons.math.complex.ComplexTest#testEqualsTrue, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, org.apache.commons.math.complex.ComplexTest#testEqualsNull, org.apache.commons.math.linear.RealMatrixImplTest#testIsSingular, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testSinh, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, org.apache.commons.math.analysis.BisectionSolverTest#testSetAbsoluteAccuracy, org.apache.commons.math.complex.ComplexTest#testTanNaN, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, org.apache.commons.math.util.TransformerMapTest#testClear, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, org.apache.commons.math.complex.ComplexTest#testSqrtPolar, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, org.apache.commons.math.random.ValueServerTest#testFill, org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.random.RandomDataTest#testNextSample, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverNull, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerializationError, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, org.apache.commons.math.geometry.RotationTest#testSingularities, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testClone, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, org.apache.commons.math.analysis.PolynomialFunctionTest#testQuintic, org.apache.commons.math.util.MathUtilsTest#testFactorialFail, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, org.apache.commons.math.analysis.NewtonSolverTest#testQuinticZero, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, org.apache.commons.math.ConvergenceExceptionTest#testConstructor, org.apache.commons.math.linear.BigMatrixImplTest#testTrace, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuadraticFunction, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testSerialization, org.apache.commons.math.distribution.NormalDistributionTest#testDensity, org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, org.apache.commons.math.complex.ComplexTest#testLogNaN, org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, org.apache.commons.math.analysis.RiddersSolverTest#testExpm1Function, org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testFactorial, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, org.apache.commons.math.analysis.SplineInterpolatorTest#testIllegalArguments, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.TransformerMapTest#testPutTransformer, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, org.apache.commons.math.MathExceptionTest#testConstructor, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testValues, org.apache.commons.math.MathExceptionTest#testConstructorCause, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.complex.ComplexTest#testAbsNaN, org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.random.RandomDataTest#testNextLong, org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, org.apache.commons.math.special.GammaTest#testLogGammaZero, org.apache.commons.math.stat.StatUtilsTest#testPercentile, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, org.apache.commons.math.linear.RealMatrixImplTest#testOperate, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, org.apache.commons.math.geometry.RotationTest#testComposeInverse, org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, org.apache.commons.math.optimization.MultiDirectionalTest#testPowell, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, org.apache.commons.math.analysis.PolynomialFunctionTest#testQuadratic, org.apache.commons.math.complex.ComplexTest#testMath221, org.apache.commons.math.random.RandomDataTest#testNextSecureHex, org.apache.commons.math.random.RandomAdaptorTest#testNextHex, org.apache.commons.math.complex.ComplexTest#testSqrt1z, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, org.apache.commons.math.analysis.NewtonSolverTest#testSinZero, org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, org.apache.commons.math.geometry.RotationTest#testQuaternion, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, org.apache.commons.math.distribution.TDistributionTest#testSmallDf, org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testSerialization, org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testPredictorCoefficients, org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuinticFunction, org.apache.commons.math.complex.ComplexTest#testSinInf, org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, org.apache.commons.math.util.TransformerMapTest#testContainsClass, org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDecreasingSteps, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, org.apache.commons.math.geometry.RotationTest#testMatrix, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.analysis.NevilleInterpolatorTest#testParameters, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testClone, org.apache.commons.math.complex.ComplexFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, org.apache.commons.math.util.MathUtilsTest#test0Choose0, org.apache.commons.math.util.DefaultTransformerTest#testTransformString, org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBadParameters, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.complex.ComplexTest#testAsin, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.geometry.Vector3DFormatTest#testNan, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, org.apache.commons.math.complex.ComplexTest#testConjugate, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, org.apache.commons.math.linear.LUDecompositionImplTest#testSolveSingularityErrors, org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, org.apache.commons.math.geometry.RotationTest#testAxisAngle, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, org.apache.commons.math.random.RandomAdaptorTest#testNextInt, org.apache.commons.math.geometry.RotationTest#testRevert, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuinticFunction, org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverNull, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, org.apache.commons.math.analysis.BrentSolverTest#testRootEndpoints, org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testLinearFunction, org.apache.commons.math.analysis.LaguerreSolverTest#testQuadraticFunction, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.util.MathUtilsTest#testCoshNaN, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, org.apache.commons.math.stat.StatUtilsTest#testSumLog, org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.complex.ComplexTest#testDivideNaN, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, org.apache.commons.math.transform.FastSineTransformerTest#testParameters, org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, org.apache.commons.math.linear.BigMatrixImplTest#testAdd, org.apache.commons.math.complex.ComplexTest#testPowZero, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, org.apache.commons.math.fraction.FractionFormatTest#testParseProper, org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, org.apache.commons.math.analysis.BisectionSolverTest#testResetFunctionValueAccuracy, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, org.apache.commons.math.geometry.RotationTest#testVectorOnePair, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDimensionCheck, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.analysis.RiddersSolverTest#testQuinticFunction, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.fraction.FractionTest#testFloatValue, org.apache.commons.math.complex.ComplexTest#testDivide, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, org.apache.commons.math.complex.ComplexTest#testSubtract, org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBigStep, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, org.apache.commons.math.linear.QRDecompositionImplTest#testSolveDimensionErrors, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, org.apache.commons.math.complex.ComplexTest#testNegateNaN, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.fraction.FractionTest#testMultiply, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.complex.ComplexTest#testSinNaN, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, org.apache.commons.math.complex.ComplexTest#testAtan, org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, org.apache.commons.math.linear.RealVectorFormatTest#testNan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction2, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracySin, org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverNull, org.apache.commons.math.complex.ComplexTest#testLogZero, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.estimation.MinpackTest#testMinpackBard, org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, org.apache.commons.math.analysis.LaguerreSolverTest#testLinearFunction, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, org.apache.commons.math.complex.ComplexTest#testCosh, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBackward, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, org.apache.commons.math.analysis.BrentSolverTest#testQuinticZero, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.stat.StatUtilsTest#testMean, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, org.apache.commons.math.optimization.MultiDirectionalTest#testRosenbrock, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, org.apache.commons.math.fraction.FractionFormatTest#testParse, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, org.apache.commons.math.analysis.NevilleInterpolatorTest#testExpm1Function, org.apache.commons.math.complex.ComplexTest#testSin, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, org.apache.commons.math.linear.BigMatrixImplTest#testNorm, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, org.apache.commons.math.linear.RealMatrixImplTest#testExamples, org.apache.commons.math.distribution.GammaDistributionTest#testDensity, org.apache.commons.math.analysis.PolynomialFunctionTest#testConstants, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testExpNaN, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, org.apache.commons.math.linear.RealMatrixImplTest#testInverse, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, org.apache.commons.math.analysis.BisectionSolverTest#testResetMaximalIterationCount, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveBadParameters, org.apache.commons.math.linear.RealVectorImplTest#testDataInOut, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.analysis.BisectionSolverTest#testResetAbsoluteAccuracy, org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testClone, org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, org.apache.commons.math.linear.BigMatrixImplTest#testInverse, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.geometry.RotationTest#testIdentity, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, org.apache.commons.math.random.ValueServerTest#testNextDigest, org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, org.apache.commons.math.MathExceptionTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testCosh, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, org.apache.commons.math.random.RandomDataTest#testNextGaussian, org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, org.apache.commons.math.linear.RealMatrixImplTest#testNorm, org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, org.apache.commons.math.MathExceptionTest#testPrintStackTrace, org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateSin, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.complex.ComplexFormatTest#testNan, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, org.apache.commons.math.random.RandomDataTest#testNextPermutation, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, org.apache.commons.math.linear.BigMatrixImplTest#testToString, org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testSinh, org.apache.commons.math.special.ErfTest#testErf2576, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, org.apache.commons.math.util.MathUtilsTest#testArrayHash, org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.analysis.BisectionSolverTest#testSinZero, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.util.MathUtilsTest#testLcm, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, org.apache.commons.math.util.MathUtilsTest#testSignByte, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, org.apache.commons.math.analysis.SimpsonIntegratorTest#testParameters, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, org.apache.commons.math.complex.ComplexTest#testTanInf, org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testSmallStep, org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, org.apache.commons.math.complex.ComplexTest#testTanhInf, org.apache.commons.math.stat.FrequencyTest#testCounts, org.apache.commons.math.linear.BigMatrixImplTest#testSolve, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, org.apache.commons.math.special.ErfTest#testErf3291, org.apache.commons.math.complex.ComplexTest#testHashCode, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testTanhNaN, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.BisectionSolverTest#testResetRelativeAccuracy, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.complex.ComplexTest#testAddNaN, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testSerialization, org.apache.commons.math.analysis.RombergIntegratorTest#testParameters, org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, org.apache.commons.math.fraction.FractionTest#testAbs, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, org.apache.commons.math.util.MathUtilsTest#testEquals, org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction2, org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testSmallStep, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, org.apache.commons.math.complex.ComplexTest#testConjugateNaN, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, org.apache.commons.math.util.MathUtilsTest#testLog, org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketCornerSolution, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, org.apache.commons.math.linear.BigMatrixImplTest#testMath209, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketSin, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, org.apache.commons.math.util.MathUtilsTest#testSignLong, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, org.apache.commons.math.analysis.SimpsonIntegratorTest#testQuinticFunction, org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.complex.ComplexTest#testCos, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, org.apache.commons.math.complex.ComplexTest#testMultiply, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.analysis.BrentSolverTest#testInitialGuess, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.random.RandomDataTest#testConfig, org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, org.apache.commons.math.complex.ComplexTest#testAsinInf, org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, org.apache.commons.math.complex.ComplexTest#testAtanNaN, org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, org.apache.commons.math.analysis.BisectionSolverTest#testSetFunctionValueAccuracy, org.apache.commons.math.complex.ComplexTest#testAcosInf, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, org.apache.commons.math.fraction.FractionTest#testAdd, org.apache.commons.math.complex.ComplexTest#testNegate, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testSinhInf, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, org.apache.commons.math.complex.ComplexTest#testPow, org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.util.MathUtilsTest#testArrayEquals, org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.random.RandomDataTest#testNextSecureInt, org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, org.apache.commons.math.stat.FrequencyTest#testEmptyTable, org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, org.apache.commons.math.stat.StatUtilsTest#testSumSq, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.complex.ComplexTest#testAcos, org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.StatUtilsTest#testVariance, org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBackward, org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, org.apache.commons.math.geometry.Vector3DTest#testConstructors, org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.distribution.PascalDistributionTest#testDensities, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, org.apache.commons.math.complex.ComplexTest#testTanCritical, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.FrequencyTest#testPcts, org.apache.commons.math.geometry.Vector3DTest#testAngle, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, org.apache.commons.math.complex.ComplexTest#testExp, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, org.apache.commons.math.stat.StatUtilsTest#testMin, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testSerialization, org.apache.commons.math.random.ValueServerTest#testProperties, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.linear.QRDecompositionImplTest#testSolveRankErrors, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.complex.ComplexTest#testAtanInf, org.apache.commons.math.special.ErfTest#testErf2807, org.apache.commons.math.fraction.FractionTest#testConstructorDouble, org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, org.apache.commons.math.analysis.BrentSolverTest#testSinZero, org.apache.commons.math.linear.BigMatrixImplTest#testOperate, org.apache.commons.math.util.TransformerMapTest#testClasses, org.apache.commons.math.optimization.MultiDirectionalTest#testCostExceptions, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, org.apache.commons.math.fraction.FractionTest#testSubtract, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.util.MathUtilsTest#testSignShort, org.apache.commons.math.complex.ComplexTest#testPowNaNBase, org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testSerialization, org.apache.commons.math.analysis.BisectionSolverTest#testSerialization, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, org.apache.commons.math.special.ErfTest#testErf1960, org.apache.commons.math.util.MathUtilsTest#testHash, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.fraction.FractionTest#testReciprocal, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testExpm1Function, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, org.apache.commons.math.special.GammaTest#testLogGammaNan, org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, org.apache.commons.math.util.MathUtilsTest#testSinhNaN, org.apache.commons.math.random.RandomDataTest#testNextHex, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, org.apache.commons.math.stat.FrequencyTest#testIntegerValues, org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, org.apache.commons.math.fraction.FractionTest#testIntValue, org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testSinFunction, org.apache.commons.math.complex.ComplexTest#testAcosNaN, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, org.apache.commons.math.linear.LUDecompositionImplTest#testSolveDimensionErrors, org.apache.commons.math.complex.ComplexTest#testAddInfinite, org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, org.apache.commons.math.random.ValueServerTest#testModes, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.fraction.FractionTest#testLongValue, org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, org.apache.commons.math.complex.ComplexTest#testLog, org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.LUDecompositionImplTest#testThreshold, org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.optimization.NelderMeadTest#testRosenbrock, org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, org.apache.commons.math.stat.data.LewTest#testCertifiedValues, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.analysis.NewtonSolverTest#testSerialization, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testSerialization, org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveSin, org.apache.commons.math.complex.ComplexTest#testEqualsSame, org.apache.commons.math.random.EmpiricalDistributionTest#testNext, org.apache.commons.math.linear.RealVectorImplTest#testMapFunctions, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testRoundDouble, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, org.apache.commons.math.fraction.FractionTest#testGoldenRatio, org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, org.apache.commons.math.special.ErfTest#testErf0, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.random.RandomDataTest#testNextExponential, org.apache.commons.math.fraction.FractionTest#testNegate, org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, org.apache.commons.math.analysis.RiddersSolverTest#testParameters, org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], jUnit5Tests=[], jacocoIncludes=[org.apache.commons.*], jacocoExcludes=[java.*], family=SPECTRUM_BASED, spectrumFormula=DSTAR, computeSpoonResults=false}
Computing tests from config.
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.analysis.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.analysis.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.analysis.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testBound, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testCoefficients, [Manual]TestMethod=org.apache.commons.math.analysis.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testNoDecompose, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testInterpolationInside, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.optimization.NelderMeadTest#testCostExceptions, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.analysis.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testCorrectorCoefficients, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.analysis.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testSinFunction2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testInterpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNoDecompose, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignFloat, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignDouble, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.NelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.geometry.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinh, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverNull, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerializationError, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, [Manual]TestMethod=org.apache.commons.math.analysis.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.optimization.MultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.analysis.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testPredictorCoefficients, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBadParameters, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverNull, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.optimization.MultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.analysis.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveBadParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCosh, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.analysis.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEquals, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLog, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketCornerSolution, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.analysis.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.optimization.MultiDirectionalTest#testCostExceptions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.optimization.NelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.analysis.NewtonSolverTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@19f9d595}
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.analysis.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.analysis.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.analysis.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testBound, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testCoefficients, [Manual]TestMethod=org.apache.commons.math.analysis.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testNoDecompose, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testInterpolationInside, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.optimization.NelderMeadTest#testCostExceptions, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.analysis.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testCorrectorCoefficients, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.analysis.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testSinFunction2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testInterpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNoDecompose, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignFloat, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignDouble, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.NelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.geometry.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinh, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverNull, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerializationError, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, [Manual]TestMethod=org.apache.commons.math.analysis.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.optimization.MultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.analysis.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testPredictorCoefficients, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBadParameters, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverNull, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.MullerSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest#testNewSecantSolverNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.optimization.MultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.analysis.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.analysis.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveBadParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testClone, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCosh, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.analysis.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testResetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEquals, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLog, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketCornerSolution, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.analysis.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.analysis.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.analysis.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.optimization.MultiDirectionalTest#testCostExceptions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.BisectionSolverTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.analysis.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.optimization.NelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.analysis.NewtonSolverTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorImplTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.analysis.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@19f9d595}
Path to runner Classes: /Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
Adding a line where an exception was thrown: org.apache.commons.math.analysis.UnivariateRealSolverUtils@-@179
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.UnivariateRealSolverUtils@-@179
Adding a line where an exception was thrown: org.apache.commons.math.analysis.UnivariateRealSolverUtils@-@128
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.UnivariateRealSolverUtils@-@128
Adding a line where an exception was thrown: org.apache.commons.math.distribution.AbstractContinuousDistribution@-@84
Adding a line from the block where an exception was thrown: org.apache.commons.math.distribution.AbstractContinuousDistribution@-@84
Adding a line where an exception was thrown: org.apache.commons.math.distribution.FDistributionImpl@-@106
Adding a line from the block where an exception was thrown: org.apache.commons.math.distribution.FDistributionImpl@-@100
Adding a line from the block where an exception was thrown: org.apache.commons.math.distribution.FDistributionImpl@-@103
Adding a line from the block where an exception was thrown: org.apache.commons.math.distribution.FDistributionImpl@-@106
Tests found: 1303
Tests executed: 1303
Suspicious: 1 line org.apache.commons.math.fraction.FractionFormat l: 233, susp 1.4545454545454546
Suspicious: 2 line org.apache.commons.math.fraction.ProperFractionFormat l: 59, susp 1.2307692307692308
Suspicious: 3 line org.apache.commons.math.fraction.ProperFractionFormat l: 60, susp 1.2307692307692308
Suspicious: 4 line org.apache.commons.math.fraction.FractionFormat l: 63, susp 1.2307692307692308
Suspicious: 5 line org.apache.commons.math.fraction.FractionFormat l: 64, susp 1.2307692307692308
Suspicious: 6 line org.apache.commons.math.fraction.ProperFractionFormat l: 73, susp 1.2307692307692308
Suspicious: 7 line org.apache.commons.math.fraction.ProperFractionFormat l: 74, susp 1.2307692307692308
Suspicious: 8 line org.apache.commons.math.fraction.FractionFormat l: 75, susp 1.2307692307692308
Suspicious: 9 line org.apache.commons.math.fraction.ProperFractionFormat l: 75, susp 1.2307692307692308
Suspicious: 10 line org.apache.commons.math.fraction.FractionFormat l: 76, susp 1.2307692307692308
Suspicious: 11 line org.apache.commons.math.fraction.FractionFormat l: 77, susp 1.2307692307692308
Suspicious: 12 line org.apache.commons.math.fraction.FractionFormat l: 78, susp 1.2307692307692308
Suspicious: 13 line org.apache.commons.math.fraction.FractionFormat l: 114, susp 1.2307692307692308
Suspicious: 14 line org.apache.commons.math.fraction.FractionFormat l: 115, susp 1.2307692307692308
Suspicious: 15 line org.apache.commons.math.fraction.FractionFormat l: 132, susp 1.2307692307692308
Suspicious: 16 line org.apache.commons.math.fraction.FractionFormat l: 133, susp 1.2307692307692308
Suspicious: 17 line org.apache.commons.math.fraction.FractionFormat l: 154, susp 1.2307692307692308
Suspicious: 18 line org.apache.commons.math.fraction.FractionFormat l: 155, susp 1.2307692307692308
Suspicious: 19 line org.apache.commons.math.fraction.FractionFormat l: 156, susp 1.2307692307692308
Suspicious: 20 line org.apache.commons.math.fraction.FractionFormat l: 157, susp 1.2307692307692308
Suspicious: 21 line org.apache.commons.math.fraction.ProperFractionFormat l: 224, susp 1.2307692307692308
Suspicious: 22 line org.apache.commons.math.fraction.ProperFractionFormat l: 228, susp 1.2307692307692308
Suspicious: 23 line org.apache.commons.math.fraction.ProperFractionFormat l: 229, susp 1.2307692307692308
Suspicious: 24 line org.apache.commons.math.fraction.ProperFractionFormat l: 116, susp 1.125
Suspicious: 25 line org.apache.commons.math.fraction.ProperFractionFormat l: 149, susp 1.0
Suspicious: 26 line org.apache.commons.math.fraction.ProperFractionFormat l: 150, susp 1.0
Suspicious: 27 line org.apache.commons.math.fraction.FractionFormat l: 272, susp 1.0
Suspicious: 28 line org.apache.commons.math.fraction.FractionFormat l: 273, susp 1.0
Suspicious: 29 line org.apache.commons.math.fraction.ProperFractionFormat l: 90, susp 0.6666666666666666
Suspicious: 30 line org.apache.commons.math.fraction.ProperFractionFormat l: 91, susp 0.6666666666666666
Suspicious: 31 line org.apache.commons.math.fraction.ProperFractionFormat l: 93, susp 0.6666666666666666
Suspicious: 32 line org.apache.commons.math.fraction.ProperFractionFormat l: 94, susp 0.6666666666666666
Suspicious: 33 line org.apache.commons.math.fraction.ProperFractionFormat l: 95, susp 0.6666666666666666
Suspicious: 34 line org.apache.commons.math.fraction.ProperFractionFormat l: 96, susp 0.6666666666666666
Suspicious: 35 line org.apache.commons.math.fraction.ProperFractionFormat l: 98, susp 0.6666666666666666
Suspicious: 36 line org.apache.commons.math.fraction.ProperFractionFormat l: 103, susp 0.6666666666666666
Suspicious: 37 line org.apache.commons.math.fraction.ProperFractionFormat l: 104, susp 0.6666666666666666
Suspicious: 38 line org.apache.commons.math.fraction.ProperFractionFormat l: 105, susp 0.6666666666666666
Suspicious: 39 line org.apache.commons.math.fraction.ProperFractionFormat l: 108, susp 0.6666666666666666
Suspicious: 40 line org.apache.commons.math.fraction.FractionFormat l: 200, susp 0.6666666666666666
Suspicious: 41 line org.apache.commons.math.fraction.FractionFormat l: 202, susp 0.6666666666666666
Suspicious: 42 line org.apache.commons.math.fraction.FractionFormat l: 203, susp 0.6666666666666666
Suspicious: 43 line org.apache.commons.math.fraction.FractionFormat l: 217, susp 0.6666666666666666
Suspicious: 44 line org.apache.commons.math.fraction.ProperFractionFormat l: 138, susp 0.5714285714285714
Suspicious: 45 line org.apache.commons.math.fraction.ProperFractionFormat l: 141, susp 0.5714285714285714
Suspicious: 46 line org.apache.commons.math.fraction.ProperFractionFormat l: 144, susp 0.5714285714285714
Suspicious: 47 line org.apache.commons.math.fraction.ProperFractionFormat l: 145, susp 0.5714285714285714
Suspicious: 48 line org.apache.commons.math.fraction.FractionFormat l: 247, susp 0.5714285714285714
Suspicious: 49 line org.apache.commons.math.fraction.FractionFormat l: 248, susp 0.5714285714285714
Suspicious: 50 line org.apache.commons.math.fraction.FractionFormat l: 383, susp 0.5
Suspicious: 51 line org.apache.commons.math.fraction.ProperFractionFormat l: 133, susp 0.4444444444444444
Suspicious: 52 line org.apache.commons.math.fraction.ProperFractionFormat l: 134, susp 0.4444444444444444
Suspicious: 53 line org.apache.commons.math.fraction.FractionFormat l: 244, susp 0.4444444444444444
Suspicious: 54 line org.apache.commons.math.fraction.FractionFormat l: 245, susp 0.4444444444444444
Suspicious: 55 line org.apache.commons.math.fraction.FractionFormat l: 246, susp 0.4444444444444444
Suspicious: 56 line org.apache.commons.math.fraction.FractionFormat l: 261, susp 0.4444444444444444
Suspicious: 57 line org.apache.commons.math.fraction.FractionFormat l: 264, susp 0.4444444444444444
Suspicious: 58 line org.apache.commons.math.fraction.FractionFormat l: 267, susp 0.4444444444444444
Suspicious: 59 line org.apache.commons.math.fraction.FractionFormat l: 268, susp 0.4444444444444444
Suspicious: 60 line org.apache.commons.math.fraction.FractionFormat l: 360, susp 0.4444444444444444
Suspicious: 61 line org.apache.commons.math.fraction.FractionFormat l: 361, susp 0.4444444444444444
Suspicious: 62 line org.apache.commons.math.fraction.FractionFormat l: 362, susp 0.4444444444444444
Suspicious: 63 line org.apache.commons.math.fraction.FractionFormat l: 371, susp 0.4444444444444444
Suspicious: 64 line org.apache.commons.math.fraction.FractionFormat l: 372, susp 0.4444444444444444
Suspicious: 65 line org.apache.commons.math.fraction.FractionFormat l: 373, susp 0.4444444444444444
Suspicious: 66 line org.apache.commons.math.fraction.FractionFormat l: 375, susp 0.4444444444444444
Suspicious: 67 line org.apache.commons.math.fraction.FractionFormat l: 378, susp 0.4444444444444444
Suspicious: 68 line org.apache.commons.math.fraction.FractionFormat l: 379, susp 0.4444444444444444
Suspicious: 69 line org.apache.commons.math.fraction.FractionFormat l: 380, susp 0.4444444444444444
Suspicious: 70 line org.apache.commons.math.fraction.FractionFormat l: 382, susp 0.4444444444444444
Suspicious: 71 line org.apache.commons.math.fraction.FractionFormat l: 387, susp 0.4444444444444444
Suspicious: 72 line org.apache.commons.math.fraction.FractionFormat l: 225, susp 0.36363636363636365
Suspicious: 73 line org.apache.commons.math.fraction.ProperFractionFormat l: 99, susp 0.2
Suspicious: 74 line org.apache.commons.math.fraction.ProperFractionFormat l: 100, susp 0.2
Suspicious: 75 line org.apache.commons.math.fraction.ProperFractionFormat l: 101, susp 0.2
Suspicious: 76 line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 179, susp 0.2
Suspicious: 77 line org.apache.commons.math.fraction.Fraction l: 321, susp 0.18181818181818182
Suspicious: 78 line org.apache.commons.math.fraction.Fraction l: 329, susp 0.17391304347826086
Suspicious: 79 line org.apache.commons.math.distribution.FDistributionImpl l: 106, susp 0.16666666666666666
Suspicious: 80 line org.apache.commons.math.distribution.FDistributionImpl l: 119, susp 0.16666666666666666
Suspicious: 81 line org.apache.commons.math.distribution.FDistributionImpl l: 132, susp 0.16666666666666666
Suspicious: 82 line org.apache.commons.math.distribution.FDistributionImpl l: 145, susp 0.16666666666666666
Suspicious: 83 line org.apache.commons.math.distribution.FDistributionImpl l: 147, susp 0.16666666666666666
Suspicious: 84 line org.apache.commons.math.distribution.FDistributionImpl l: 148, susp 0.16666666666666666
Suspicious: 85 line org.apache.commons.math.distribution.FDistributionImpl l: 100, susp 0.14285714285714285
Suspicious: 86 line org.apache.commons.math.distribution.FDistributionImpl l: 103, susp 0.14285714285714285
Suspicious: 87 line org.apache.commons.math.fraction.Fraction l: 201, susp 0.10810810810810811
Suspicious: 88 line org.apache.commons.math.fraction.Fraction l: 202, susp 0.10810810810810811
Suspicious: 89 line org.apache.commons.math.fraction.Fraction l: 205, susp 0.10810810810810811
Suspicious: 90 line org.apache.commons.math.fraction.Fraction l: 214, susp 0.10810810810810811
Suspicious: 91 line org.apache.commons.math.fraction.Fraction l: 215, susp 0.10810810810810811
Suspicious: 92 line org.apache.commons.math.fraction.Fraction l: 221, susp 0.10810810810810811
Suspicious: 93 line org.apache.commons.math.fraction.Fraction l: 225, susp 0.10810810810810811
Suspicious: 94 line org.apache.commons.math.fraction.Fraction l: 226, susp 0.10810810810810811
Suspicious: 95 line org.apache.commons.math.fraction.Fraction l: 227, susp 0.10810810810810811
Suspicious: 96 line org.apache.commons.math.util.MathUtils l: 442, susp 0.10810810810810811
Suspicious: 97 line org.apache.commons.math.util.MathUtils l: 410, susp 0.10526315789473684
Suspicious: 98 line org.apache.commons.math.util.MathUtils l: 413, susp 0.10526315789473684
Suspicious: 99 line org.apache.commons.math.util.MathUtils l: 414, susp 0.10526315789473684
Suspicious: 100 line org.apache.commons.math.util.MathUtils l: 417, susp 0.10526315789473684
Suspicious: 101 line org.apache.commons.math.util.MathUtils l: 418, susp 0.10526315789473684
Suspicious: 102 line org.apache.commons.math.util.MathUtils l: 424, susp 0.10526315789473684
Suspicious: 103 line org.apache.commons.math.util.MathUtils l: 429, susp 0.10526315789473684
Suspicious: 104 line org.apache.commons.math.util.MathUtils l: 435, susp 0.10526315789473684
Suspicious: 105 line org.apache.commons.math.util.MathUtils l: 439, susp 0.10526315789473684
Suspicious: 106 line org.apache.commons.math.util.MathUtils l: 445, susp 0.10526315789473684
Suspicious: 107 line org.apache.commons.math.util.MathUtils l: 448, susp 0.10526315789473684
Suspicious: 108 line org.apache.commons.math.util.MathUtils l: 449, susp 0.10526315789473684
Suspicious: 109 line org.apache.commons.math.util.MathUtils l: 402, susp 0.10256410256410256
Suspicious: 110 line org.apache.commons.math.distribution.FDistributionImpl l: 75, susp 0.09090909090909091
Suspicious: 111 line org.apache.commons.math.distribution.FDistributionImpl l: 76, susp 0.09090909090909091
Suspicious: 112 line org.apache.commons.math.distribution.FDistributionImpl l: 78, susp 0.09090909090909091
Suspicious: 113 line org.apache.commons.math.distribution.FDistributionImpl l: 72, susp 0.08333333333333333
Suspicious: 114 line org.apache.commons.math.distribution.FDistributionImpl l: 82, susp 0.08333333333333333
Suspicious: 115 line org.apache.commons.math.distribution.FDistributionImpl l: 170, susp 0.08333333333333333
Suspicious: 116 line org.apache.commons.math.distribution.FDistributionImpl l: 192, susp 0.08333333333333333
Suspicious: 117 line org.apache.commons.math.distribution.FDistributionImpl l: 50, susp 0.06666666666666667
Suspicious: 118 line org.apache.commons.math.distribution.FDistributionImpl l: 51, susp 0.06666666666666667
Suspicious: 119 line org.apache.commons.math.distribution.FDistributionImpl l: 52, susp 0.06666666666666667
Suspicious: 120 line org.apache.commons.math.distribution.FDistributionImpl l: 53, susp 0.06666666666666667
Suspicious: 121 line org.apache.commons.math.distribution.FDistributionImpl l: 158, susp 0.06666666666666667
Suspicious: 122 line org.apache.commons.math.distribution.FDistributionImpl l: 162, susp 0.06666666666666667
Suspicious: 123 line org.apache.commons.math.distribution.FDistributionImpl l: 163, susp 0.06666666666666667
Suspicious: 124 line org.apache.commons.math.distribution.FDistributionImpl l: 180, susp 0.06666666666666667
Suspicious: 125 line org.apache.commons.math.distribution.FDistributionImpl l: 184, susp 0.06666666666666667
Suspicious: 126 line org.apache.commons.math.distribution.FDistributionImpl l: 185, susp 0.06666666666666667
Suspicious: 127 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 67, susp 0.05555555555555555
Suspicious: 128 line org.apache.commons.math.distribution.AbstractContinuousDistribution$1 l: 68, susp 0.05555555555555555
Suspicious: 129 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 80, susp 0.05555555555555555
Suspicious: 130 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 81, susp 0.05555555555555555
Suspicious: 131 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 82, susp 0.05555555555555555
Suspicious: 132 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 84, susp 0.05555555555555555
Suspicious: 133 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 85, susp 0.05555555555555555
Suspicious: 134 line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 128, susp 0.05263157894736842
Suspicious: 135 line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 171, susp 0.047619047619047616
Suspicious: 136 line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 174, susp 0.047619047619047616
Suspicious: 137 line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 178, susp 0.047619047619047616
Suspicious: 138 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 61, susp 0.043478260869565216
Suspicious: 139 line org.apache.commons.math.util.MathUtils l: 440, susp 0.03125
Suspicious: 140 line org.apache.commons.math.util.MathUtils l: 436, susp 0.027777777777777776
Suspicious: 141 line org.apache.commons.math.special.Beta$1 l: 141, susp 0.02127659574468085
Suspicious: 142 line org.apache.commons.math.special.Beta$1 l: 142, susp 0.02127659574468085
Suspicious: 143 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 310, susp 0.02040816326530612
Suspicious: 144 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 311, susp 0.02040816326530612
Suspicious: 145 line org.apache.commons.math.special.Beta l: 130, susp 0.018518518518518517
Suspicious: 146 line org.apache.commons.math.special.Beta l: 133, susp 0.018518518518518517
Suspicious: 147 line org.apache.commons.math.special.Beta$1 l: 133, susp 0.018518518518518517
Suspicious: 148 line org.apache.commons.math.special.Beta$1 l: 140, susp 0.018518518518518517
Suspicious: 149 line org.apache.commons.math.special.Beta$1 l: 145, susp 0.018518518518518517
Suspicious: 150 line org.apache.commons.math.special.Beta$1 l: 146, susp 0.018518518518518517
Suspicious: 151 line org.apache.commons.math.special.Beta$1 l: 149, susp 0.018518518518518517
Suspicious: 152 line org.apache.commons.math.special.Beta$1 l: 153, susp 0.018518518518518517
Suspicious: 153 line org.apache.commons.math.special.Beta l: 156, susp 0.018518518518518517
Suspicious: 154 line org.apache.commons.math.special.Beta l: 157, susp 0.018518518518518517
Suspicious: 155 line org.apache.commons.math.special.Beta l: 158, susp 0.018518518518518517
Suspicious: 156 line org.apache.commons.math.special.Beta l: 200, susp 0.01818181818181818
Suspicious: 157 line org.apache.commons.math.special.Beta l: 201, susp 0.01818181818181818
Suspicious: 158 line org.apache.commons.math.special.Beta l: 197, susp 0.01639344262295082
Suspicious: 159 line org.apache.commons.math.special.Beta l: 204, susp 0.01639344262295082
Suspicious: 160 line org.apache.commons.math.special.Beta l: 59, susp 0.016129032258064516
Suspicious: 161 line org.apache.commons.math.special.Beta l: 126, susp 0.016129032258064516
Suspicious: 162 line org.apache.commons.math.special.Beta l: 161, susp 0.016129032258064516
Suspicious: 163 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 102, susp 0.014705882352941176
Suspicious: 164 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 107, susp 0.014705882352941176
Suspicious: 165 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 116, susp 0.013157894736842105
Suspicious: 166 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 117, susp 0.013157894736842105
Suspicious: 167 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 118, susp 0.013157894736842105
Suspicious: 168 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 119, susp 0.013157894736842105
Suspicious: 169 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 120, susp 0.013157894736842105
Suspicious: 170 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 121, susp 0.013157894736842105
Suspicious: 171 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 122, susp 0.013157894736842105
Suspicious: 172 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 128, susp 0.013157894736842105
Suspicious: 173 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 129, susp 0.013157894736842105
Suspicious: 174 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 130, susp 0.013157894736842105
Suspicious: 175 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 131, susp 0.013157894736842105
Suspicious: 176 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 132, susp 0.013157894736842105
Suspicious: 177 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 133, susp 0.013157894736842105
Suspicious: 178 line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 134, susp 0.013157894736842105
Suspicious: 179 line org.apache.commons.math.util.ContinuedFraction l: 51, susp 0.011904761904761904
Suspicious: 180 line org.apache.commons.math.util.ContinuedFraction l: 52, susp 0.011904761904761904
Suspicious: 181 line org.apache.commons.math.util.ContinuedFraction l: 133, susp 0.011904761904761904
Suspicious: 182 line org.apache.commons.math.util.ContinuedFraction l: 134, susp 0.011904761904761904
Suspicious: 183 line org.apache.commons.math.util.ContinuedFraction l: 135, susp 0.011904761904761904
Suspicious: 184 line org.apache.commons.math.util.ContinuedFraction l: 136, susp 0.011904761904761904
Suspicious: 185 line org.apache.commons.math.util.ContinuedFraction l: 137, susp 0.011904761904761904
Suspicious: 186 line org.apache.commons.math.util.ContinuedFraction l: 138, susp 0.011904761904761904
Suspicious: 187 line org.apache.commons.math.util.ContinuedFraction l: 139, susp 0.011904761904761904
Suspicious: 188 line org.apache.commons.math.util.ContinuedFraction l: 140, susp 0.011904761904761904
Suspicious: 189 line org.apache.commons.math.util.ContinuedFraction l: 141, susp 0.011904761904761904
Suspicious: 190 line org.apache.commons.math.util.ContinuedFraction l: 142, susp 0.011904761904761904
Suspicious: 191 line org.apache.commons.math.util.ContinuedFraction l: 143, susp 0.011904761904761904
Suspicious: 192 line org.apache.commons.math.util.ContinuedFraction l: 144, susp 0.011904761904761904
Suspicious: 193 line org.apache.commons.math.util.ContinuedFraction l: 145, susp 0.011904761904761904
Suspicious: 194 line org.apache.commons.math.util.ContinuedFraction l: 146, susp 0.011904761904761904
Suspicious: 195 line org.apache.commons.math.util.ContinuedFraction l: 161, susp 0.011904761904761904
Suspicious: 196 line org.apache.commons.math.util.ContinuedFraction l: 162, susp 0.011904761904761904
Suspicious: 197 line org.apache.commons.math.util.ContinuedFraction l: 165, susp 0.011904761904761904
Suspicious: 198 line org.apache.commons.math.util.ContinuedFraction l: 166, susp 0.011904761904761904
Suspicious: 199 line org.apache.commons.math.util.ContinuedFraction l: 167, susp 0.011904761904761904
Suspicious: 200 line org.apache.commons.math.util.ContinuedFraction l: 168, susp 0.011904761904761904
Suspicious: 201 line org.apache.commons.math.util.ContinuedFraction l: 169, susp 0.011904761904761904
Suspicious: 202 line org.apache.commons.math.util.ContinuedFraction l: 170, susp 0.011904761904761904
Suspicious: 203 line org.apache.commons.math.util.ContinuedFraction l: 172, susp 0.011904761904761904
Suspicious: 204 line org.apache.commons.math.util.ContinuedFraction l: 178, susp 0.011904761904761904
Suspicious: 205 line org.apache.commons.math.special.Gamma l: 93, susp 0.009708737864077669
Suspicious: 206 line org.apache.commons.math.special.Gamma l: 95, susp 0.009708737864077669
Suspicious: 207 line org.apache.commons.math.special.Gamma l: 96, susp 0.009708737864077669
Suspicious: 208 line org.apache.commons.math.special.Gamma l: 97, susp 0.009708737864077669
Suspicious: 209 line org.apache.commons.math.special.Gamma l: 99, susp 0.009708737864077669
Suspicious: 210 line org.apache.commons.math.special.Gamma l: 101, susp 0.009708737864077669
Suspicious: 211 line org.apache.commons.math.special.Gamma l: 102, susp 0.009708737864077669
Suspicious: 212 line org.apache.commons.math.special.Gamma l: 103, susp 0.009708737864077669
Suspicious: 213 line org.apache.commons.math.special.Gamma l: 90, susp 0.009433962264150943
Suspicious: 214 line org.apache.commons.math.special.Gamma l: 106, susp 0.009433962264150943
Suspicious: 215 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 45, susp 0.009009009009009009
Suspicious: 216 line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 46, susp 0.009009009009009009
Suspicious: 217 line org.apache.commons.math.distribution.AbstractDistribution l: 38, susp 0.007352941176470588
Suspicious: 218 line org.apache.commons.math.distribution.AbstractDistribution l: 39, susp 0.007352941176470588
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 233, susp 1.4545454545454546
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 59, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 60, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 63, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 64, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 73, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 74, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 75, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 75, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 76, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 77, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 78, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 114, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 115, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 132, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 133, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 154, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 155, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 156, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 157, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 224, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 228, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 229, susp 1.2307692307692308
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 116, susp 1.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 149, susp 1.0
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 150, susp 1.0
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 272, susp 1.0
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 273, susp 1.0
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 90, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 91, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 93, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 94, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 95, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 96, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 98, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 103, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 104, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 105, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 108, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 200, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 202, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 203, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 217, susp 0.6666666666666666
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 138, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 141, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 144, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 145, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 247, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 248, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 383, susp 0.5
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 133, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 134, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 244, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 245, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 246, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 261, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 264, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 267, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 268, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 360, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 361, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 362, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 371, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 372, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 373, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 375, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 378, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 379, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 380, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 382, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 387, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 225, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 99, susp 0.2
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 100, susp 0.2
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 101, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 179, susp 0.2
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 321, susp 0.18181818181818182
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 329, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 106, susp 0.16666666666666666
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 119, susp 0.16666666666666666
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 132, susp 0.16666666666666666
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 145, susp 0.16666666666666666
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 147, susp 0.16666666666666666
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 148, susp 0.16666666666666666
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 100, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 103, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 201, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 202, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 205, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 214, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 215, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 221, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 225, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 226, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 227, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.util.MathUtils l: 442, susp 0.10810810810810811
Suspicious:  line org.apache.commons.math.util.MathUtils l: 410, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 413, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 414, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 417, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 418, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 424, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 429, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 435, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 439, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 445, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 448, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 449, susp 0.10526315789473684
Suspicious:  line org.apache.commons.math.util.MathUtils l: 402, susp 0.10256410256410256
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 75, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 76, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 78, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 72, susp 0.08333333333333333
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 82, susp 0.08333333333333333
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 170, susp 0.08333333333333333
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 192, susp 0.08333333333333333
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 50, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 51, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 52, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 53, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 158, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 162, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 163, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 180, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 184, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.FDistributionImpl l: 185, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 67, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 68, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 80, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 81, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 82, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 84, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 85, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 128, susp 0.05263157894736842
Suspicious:  line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 171, susp 0.047619047619047616
Suspicious:  line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 174, susp 0.047619047619047616
Suspicious:  line org.apache.commons.math.analysis.UnivariateRealSolverUtils l: 178, susp 0.047619047619047616
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 61, susp 0.043478260869565216
Suspicious:  line org.apache.commons.math.util.MathUtils l: 440, susp 0.03125
Suspicious:  line org.apache.commons.math.util.MathUtils l: 436, susp 0.027777777777777776
Suspicious:  line org.apache.commons.math.special.Beta l: 141, susp 0.02127659574468085
Suspicious:  line org.apache.commons.math.special.Beta l: 142, susp 0.02127659574468085
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 310, susp 0.02040816326530612
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 311, susp 0.02040816326530612
Suspicious:  line org.apache.commons.math.special.Beta l: 130, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 133, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 133, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 140, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 145, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 146, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 149, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 153, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 156, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 157, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 158, susp 0.018518518518518517
Suspicious:  line org.apache.commons.math.special.Beta l: 200, susp 0.01818181818181818
Suspicious:  line org.apache.commons.math.special.Beta l: 201, susp 0.01818181818181818
Suspicious:  line org.apache.commons.math.special.Beta l: 197, susp 0.01639344262295082
Suspicious:  line org.apache.commons.math.special.Beta l: 204, susp 0.01639344262295082
Suspicious:  line org.apache.commons.math.special.Beta l: 59, susp 0.016129032258064516
Suspicious:  line org.apache.commons.math.special.Beta l: 126, susp 0.016129032258064516
Suspicious:  line org.apache.commons.math.special.Beta l: 161, susp 0.016129032258064516
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 102, susp 0.014705882352941176
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 107, susp 0.014705882352941176
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 116, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 117, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 118, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 119, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 120, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 121, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 122, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 128, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 129, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 130, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 131, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 132, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 133, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.distribution.ContinuousDistributionAbstractTest l: 134, susp 0.013157894736842105
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 51, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 52, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 133, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 134, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 135, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 136, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 137, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 138, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 139, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 140, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 141, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 142, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 143, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 144, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 145, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 146, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 161, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 162, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 165, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 166, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 167, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 168, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 169, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 170, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 172, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.util.ContinuedFraction l: 178, susp 0.011904761904761904
Suspicious:  line org.apache.commons.math.special.Gamma l: 93, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 95, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 96, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 97, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 99, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 101, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 102, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 103, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.special.Gamma l: 90, susp 0.009433962264150943
Suspicious:  line org.apache.commons.math.special.Gamma l: 106, susp 0.009433962264150943
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 45, susp 0.009009009009009009
Suspicious:  line org.apache.commons.math.distribution.AbstractContinuousDistribution l: 46, susp 0.009009009009009009
Suspicious:  line org.apache.commons.math.distribution.AbstractDistribution l: 38, susp 0.007352941176470588
Suspicious:  line org.apache.commons.math.distribution.AbstractDistribution l: 39, susp 0.007352941176470588
Executing time Fault localization: 16 sec
Setting up the max to 165780 milliseconds (165 sec)
---- Initial suspicious size: 218
Creating variant 1
--ModifPoint:CtReturnImpl, suspValue 1.4545454545454546, line 233, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.2307692307692308, line 59, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.2307692307692308, line 63, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.2307692307692308, line 74, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.2307692307692308, line 76, file FractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.2307692307692308, line 77, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 1.2307692307692308, line 114, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.2307692307692308, line 115, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 1.2307692307692308, line 132, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.2307692307692308, line 133, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 1.2307692307692308, line 154, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.2307692307692308, line 155, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.2307692307692308, line 156, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.2307692307692308, line 157, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 1.2307692307692308, line 224, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.2307692307692308, line 228, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.125, line 116, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0, line 149, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.0, line 150, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0, line 272, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.0, line 273, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.6666666666666666, line 90, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.6666666666666666, line 91, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.6666666666666666, line 93, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.6666666666666666, line 94, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.6666666666666666, line 95, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.6666666666666666, line 96, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.6666666666666666, line 98, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.6666666666666666, line 103, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.6666666666666666, line 104, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.6666666666666666, line 105, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.6666666666666666, line 108, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.6666666666666666, line 200, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.6666666666666666, line 202, file FractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.6666666666666666, line 203, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.6666666666666666, line 217, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5714285714285714, line 138, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.5714285714285714, line 141, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5714285714285714, line 144, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.5714285714285714, line 145, file ProperFractionFormat.java
--ModifPoint:CtThrowImpl, suspValue 0.5714285714285714, line 247, file FractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 383, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 133, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 134, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 244, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 245, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 246, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 261, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 264, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 267, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 268, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 360, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 361, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 371, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 372, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 373, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 375, file FractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 378, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 380, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 382, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.4444444444444444, line 387, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.36363636363636365, line 225, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.2, line 99, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.2, line 100, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.2, line 101, file ProperFractionFormat.java
--ModifPoint:CtThrowImpl, suspValue 0.2, line 179, file UnivariateRealSolverUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.18181818181818182, line 321, file Fraction.java
--ModifPoint:CtReturnImpl, suspValue 0.17391304347826086, line 329, file Fraction.java
--ModifPoint:CtReturnImpl, suspValue 0.16666666666666666, line 106, file FDistributionImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.16666666666666666, line 119, file FDistributionImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.16666666666666666, line 132, file FDistributionImpl.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.16666666666666666, line 145, file FDistributionImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.16666666666666666, line 147, file FDistributionImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.16666666666666666, line 148, file FDistributionImpl.java
--ModifPoint:CtIfImpl, suspValue 0.14285714285714285, line 100, file FDistributionImpl.java
--ModifPoint:CtIfImpl, suspValue 0.14285714285714285, line 103, file FDistributionImpl.java
--ModifPoint:CtIfImpl, suspValue 0.10810810810810811, line 202, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.10810810810810811, line 205, file Fraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.10810810810810811, line 214, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.10810810810810811, line 215, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.10810810810810811, line 221, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10810810810810811, line 225, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10810810810810811, line 226, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10810810810810811, line 442, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.10526315789473684, line 410, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.10526315789473684, line 413, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10526315789473684, line 414, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.10526315789473684, line 417, file MathUtils.java
--ModifPoint:CtWhileImpl, suspValue 0.10526315789473684, line 418, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.10526315789473684, line 424, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.10526315789473684, line 429, file MathUtils.java
--ModifPoint:CtWhileImpl, suspValue 0.10526315789473684, line 435, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.10526315789473684, line 439, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10526315789473684, line 445, file MathUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.10526315789473684, line 449, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.10256410256410256, line 402, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.09090909090909091, line 75, file FDistributionImpl.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.09090909090909091, line 76, file FDistributionImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.09090909090909091, line 78, file FDistributionImpl.java
--ModifPoint:CtIfImpl, suspValue 0.08333333333333333, line 72, file FDistributionImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.08333333333333333, line 82, file FDistributionImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.08333333333333333, line 170, file FDistributionImpl.java
--ModifPoint:CtReturnImpl, suspValue 0.08333333333333333, line 192, file FDistributionImpl.java
--ModifPoint:CtInvocationImpl, suspValue 0.06666666666666667, line 51, file FDistributionImpl.java
--ModifPoint:CtInvocationImpl, suspValue 0.06666666666666667, line 52, file FDistributionImpl.java
--ModifPoint:CtIfImpl, suspValue 0.06666666666666667, line 158, file FDistributionImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.06666666666666667, line 162, file FDistributionImpl.java
--ModifPoint:CtIfImpl, suspValue 0.06666666666666667, line 180, file FDistributionImpl.java
--ModifPoint:CtAssignmentImpl, suspValue 0.06666666666666667, line 184, file FDistributionImpl.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.05555555555555555, line 67, file AbstractContinuousDistribution.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.05555555555555555, line 80, file AbstractContinuousDistribution.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.05555555555555555, line 81, file AbstractContinuousDistribution.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.05555555555555555, line 82, file AbstractContinuousDistribution.java
--ModifPoint:CtAssignmentImpl, suspValue 0.05555555555555555, line 84, file AbstractContinuousDistribution.java
--ModifPoint:CtReturnImpl, suspValue 0.05263157894736842, line 128, file UnivariateRealSolverUtils.java
--ModifPoint:CtIfImpl, suspValue 0.047619047619047616, line 171, file UnivariateRealSolverUtils.java
--ModifPoint:CtIfImpl, suspValue 0.047619047619047616, line 174, file UnivariateRealSolverUtils.java
--ModifPoint:CtIfImpl, suspValue 0.047619047619047616, line 178, file UnivariateRealSolverUtils.java
--ModifPoint:CtIfImpl, suspValue 0.043478260869565216, line 61, file AbstractContinuousDistribution.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03125, line 440, file MathUtils.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.027777777777777776, line 436, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.02127659574468085, line 141, file Beta.java
--ModifPoint:CtAssignmentImpl, suspValue 0.02127659574468085, line 142, file Beta.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=310, susp=0.02040816326530612]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=311, susp=0.02040816326530612]
--ModifPoint:CtIfImpl, suspValue 0.018518518518518517, line 130, file Beta.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.018518518518518517, line 133, file Beta.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.018518518518518517, line 133, file Beta.java
--ModifPoint:CtIfImpl, suspValue 0.018518518518518517, line 140, file Beta.java
--ModifPoint:CtAssignmentImpl, suspValue 0.018518518518518517, line 145, file Beta.java
--ModifPoint:CtAssignmentImpl, suspValue 0.018518518518518517, line 146, file Beta.java
--ModifPoint:CtReturnImpl, suspValue 0.018518518518518517, line 149, file Beta.java
--ModifPoint:CtReturnImpl, suspValue 0.018518518518518517, line 153, file Beta.java
--ModifPoint:CtAssignmentImpl, suspValue 0.018518518518518517, line 156, file Beta.java
--ModifPoint:CtAssignmentImpl, suspValue 0.01818181818181818, line 200, file Beta.java
--ModifPoint:CtIfImpl, suspValue 0.01639344262295082, line 197, file Beta.java
--ModifPoint:CtReturnImpl, suspValue 0.01639344262295082, line 204, file Beta.java
--ModifPoint:CtReturnImpl, suspValue 0.016129032258064516, line 59, file Beta.java
--ModifPoint:CtIfImpl, suspValue 0.016129032258064516, line 126, file Beta.java
--ModifPoint:CtReturnImpl, suspValue 0.016129032258064516, line 161, file Beta.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=102, susp=0.014705882352941176]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=107, susp=0.014705882352941176]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=116, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=117, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=118, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=119, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=120, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=121, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=122, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=128, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=129, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=130, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=131, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=132, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=133, susp=0.013157894736842105]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.distribution.ContinuousDistributionAbstractTest, methodName=null, lineNumber=134, susp=0.013157894736842105]
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 133, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 134, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 135, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 136, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 137, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 138, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 139, file ContinuedFraction.java
--ModifPoint:CtWhileImpl, suspValue 0.011904761904761904, line 140, file ContinuedFraction.java
--ModifPoint:CtUnaryOperatorImpl, suspValue 0.011904761904761904, line 141, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 142, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 143, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 144, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 145, file ContinuedFraction.java
--ModifPoint:CtIfImpl, suspValue 0.011904761904761904, line 146, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.011904761904761904, line 161, file ContinuedFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011904761904761904, line 162, file ContinuedFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011904761904761904, line 165, file ContinuedFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011904761904761904, line 166, file ContinuedFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011904761904761904, line 167, file ContinuedFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011904761904761904, line 168, file ContinuedFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.011904761904761904, line 169, file ContinuedFraction.java
--ModifPoint:CtIfImpl, suspValue 0.011904761904761904, line 172, file ContinuedFraction.java
--ModifPoint:CtReturnImpl, suspValue 0.011904761904761904, line 178, file ContinuedFraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.009708737864077669, line 93, file Gamma.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.009708737864077669, line 95, file Gamma.java
--ModifPoint:CtForImpl, suspValue 0.009708737864077669, line 96, file Gamma.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009708737864077669, line 97, file Gamma.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009708737864077669, line 99, file Gamma.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.009708737864077669, line 101, file Gamma.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009708737864077669, line 102, file Gamma.java
--ModifPoint:CtIfImpl, suspValue 0.009433962264150943, line 90, file Gamma.java
--ModifPoint:CtReturnImpl, suspValue 0.009433962264150943, line 106, file Gamma.java
Total suspicious from FL: 218,  170
Total ModPoint created: 170
Creating program variant #1, [Variant id: 1, #gens: 170, #ops: 0, parent:-]
Calculating fitness
Calculating fitness for original program variant.
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout165secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.geometry.RotationOrderTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.estimation.EstimatedParameterTest  org.apache.commons.math.ConvergenceExceptionTest  org.apache.commons.math.optimization.MultiDirectionalTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.linear.RealMatrixImplTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.BrentSolverTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.analysis.BisectionSolverTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.geometry.Vector3DFormatTest  org.apache.commons.math.analysis.NewtonSolverTest  org.apache.commons.math.DuplicateSampleAbscissaExceptionTest  org.apache.commons.math.estimation.MinpackTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest  org.apache.commons.math.FunctionEvaluationExceptionTest  org.apache.commons.math.estimation.WeightedMeasurementTest  org.apache.commons.math.stat.inference.TTestFactoryTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.linear.MatrixIndexExceptionTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.BigMatrixImplTest  org.apache.commons.math.stat.inference.ChiSquareFactoryTest  org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.linear.LUDecompositionImplTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.linear.QRDecompositionImplTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.analysis.RombergIntegratorTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.analysis.NevilleInterpolatorTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ArgumentOutsideDomainExceptionTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.linear.RealVectorImplTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.optimization.NelderMeadTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.analysis.PolynomialSplineFunctionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.MaxIterationsExceededExceptionTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.geometry.RotationTest  org.apache.commons.math.analysis.LaguerreSolverTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.geometry.Vector3DTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.analysis.MullerSolverTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.geometry.FrenchVector3DFormatTest  org.apache.commons.math.analysis.SimpsonIntegratorTest  org.apache.commons.math.analysis.TrapezoidIntegratorTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.MathConfigurationExceptionTest  org.apache.commons.math.estimation.GaussNewtonEstimatorTest  org.apache.commons.math.analysis.RiddersSolverTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.analysis.PolynomialFunctionTest  org.apache.commons.math.analysis.SplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.linear.InvalidMatrixExceptionTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 1303] ,[]
The original fitness is : 1.0
----------------------------
---Configuration properties
p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
p:workingDirectory= /Users/marekmazur/astor/./output_astor
p:keepcomments= true
p:maxnumvariablesperingredient= 10
p:folderDiff= ./diffSolutions
p:evo_affected_by_op= true
p:clusteringfilename= clustering.csv
p:validation= process
p:modificationpointnavigation= weight
p:transformingredient= false
p:diffcontext= 0
p:evo_buggy_class= true
p:runjava7code= false
p:manipulatesuper= false
p:forceExecuteRegression= false
p:skipfitnessinitialpopulation= false
p:filterfaultlocalization= true
p:population= 1
p:maxtimefactor= 10
p:elementsToMutate= 10
p:parsesourcefromoriginal= true
p:alternativecompliancelevel= 8
p:bugId= 280
p:regressionforfaultlocalization= true
p:max_synthesis_step= 10000
p:failing= org.apache.commons.math.distribution.FDistributionTest
p:maxmodificationpoints= 1000
p:projectIdentifier= 
p:savecompletepatched= true
p:synthesis_depth= 3
p:seed= 10
p:applyCrossover= false
p:executorjar= ./lib/jtestex7.jar
p:binjavafolder= /target/classes/
p:version-location= ./math-version/
p:tmax1= 10000
p:tmax2= 165780
p:continuewhenmodelfail= true
p:locationGzoltarJar= ./lib/
p:logtestexecution= false
p:processoutputinfile= false
p:gzoltarVersion= 1.7.3
p:javacompliancelevel= 8
p:gzoltarpackagetonotinstrument= junit.framework
p:diff_type= relative
p:cleantemplates= true
p:stopfirst= true
p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
p:testbystep= false
p:maxtime= 60
p:preservelinenumbers= true
p:resetoperations= false
p:forcesubprocesskilling= false
p:jvm4evosuitetestexecution= /Users/marekmazur/Library/Java/JavaVirtualMachines/openjdk-19.0.1/Contents/Home/bin
p:dependenciespath= /Users/marekmazur/astor/examples/libs/junit-4.4.jar
p:pathToMVNRepository= 
p:limitbysuspicious= true
p:faultlocalization= flacoco
p:maxsuspcandidates= 1000
p:antipattern= false
p:reintroduce= PARENTS:ORIGINAL
p:multipointmodification= false
p:probabilistictransformation= true
p:mutationrate= 1 
p:jvm4testexecution= /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:mode= jgenprog
p:pvariantfoldername= variant-
p:flthreshold= 0
p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
p:nrPlaceholders= 1
p:nolog= False
p:saveall= false
p:evoRunOnBuggyClass= true
p:learningdir= 
p:bintestfolder= /target/test-classes/
p:evosuiteresultfolder= evosuite
p:operatorspace= irr-statements
p:resourcesfolder= /src/main/resources:/src/test/resources:
p:includeZeros= false
p:allpoints= false
p:collectonlyusedmethod= false
p:maxVarCombination= 1000
p:timezone= America/Los_Angeles
p:skipfaultlocalization= false
p:savesolution= true
p:maxGeneration= 1000000
p:evosuitetimeout= 120
p:packageToInstrument= org.apache.commons
p:uniqueoptogen= false
p:scope= local
p:srcjavafolder= /src/java/
p:commandTrunk= 50000
p:metid= 0
p:ignoredTestCases= 
p:savespoonmodelondisk= false
p:targetelementprocessor= statements
p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
p:maxCombinationVariableLimit= false
p:jvmversion= 1.8.0_202
p:nomodificationconvergence= 100
p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
p:srctestfolder= /src/test/
p:outputjsonresult= true
p:gzoltartestpackagetoexclude= junit.framework
p:probagenmutation= false
p:resetmodel= true
p:jsonoutputname= astor_output
p:numberExecutions= 1
p:ignoreflakyinfl= false
p:evoDSE= false
p:duplicateingredientsinspace= false
p:overridemaxtime= true
p:maxnumbersolutions= 1000000
p:logsattemps= true
p:location= /Users/marekmazur/astor/defects4j/math-95
p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
----------------------------
----Starting Solution Search
----------Running generation: 1, population size: 1

***** Generation 1 : 0
**Parent Variant: [Variant id: 1, #gens: 170, #ops: 0, parent:-]

--Child created id: 2
--Creating new operations for variant [Variant id: 2, #gens: 170, #ops: 0, parent:1]
---analyzing modificationPoint position: 44
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 11
location: FractionFormat.java155
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2, #gens: 169, #ops: 1, parent:1] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 2
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-2/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(1): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1(f=1.0), 2(f=1.0), )
Selected to next generation: IDs2--> (1(f=1.0), )
----------Running generation: 2, population size: 1

***** Generation 2 : 0
**Parent Variant: [Variant id: 3, #gens: 170, #ops: 0, parent:-]

--Child created id: 4
--Creating new operations for variant [Variant id: 4, #gens: 170, #ops: 0, parent:3]
---analyzing modificationPoint position: 13
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 31
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 32
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 2 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 29
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java104
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 104, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 4, #gens: 171, #ops: 1, parent:3] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 4
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-4/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(2): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (3(f=1.0), 4(f=1.0), )
Selected to next generation: IDs2--> (3(f=1.0), )
----------Running generation: 3, population size: 1

***** Generation 3 : 0
**Parent Variant: [Variant id: 5, #gens: 170, #ops: 0, parent:-]

--Child created id: 6
--Creating new operations for variant [Variant id: 6, #gens: 170, #ops: 0, parent:5]
---analyzing modificationPoint position: 1
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 2
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [this.numeratorFormat]
--> var from patch: this.numeratorFormat spoon.support.reflect.code.CtFieldWriteImpl
SameName: java.text.NumberFormat numeratorFormat
SameName: java.text.NumberFormat numeratorFormat
Transforming shadowed variable in numeratorFormat = numeratorFormat
location: FractionFormat.java77
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 77, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 6, #gens: 170, #ops: 1, parent:5] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 6
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-6/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(3): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (5(f=1.0), 6(f=1.0), )
Selected to next generation: IDs2--> (5(f=1.0), )
----------Running generation: 4, population size: 1

***** Generation 4 : 0
**Parent Variant: [Variant id: 7, #gens: 170, #ops: 0, parent:-]

--Child created id: 8
--Creating new operations for variant [Variant id: 8, #gens: 170, #ops: 0, parent:7]
---analyzing modificationPoint position: 4
location: FractionFormat.java76
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 8, #gens: 169, #ops: 1, parent:7] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 8
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-8/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(4): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (7(f=1.0), 8(f=1.0), )
Selected to next generation: IDs2--> (7(f=1.0), )
----------Running generation: 5, population size: 1

***** Generation 5 : 0
**Parent Variant: [Variant id: 9, #gens: 170, #ops: 0, parent:-]

--Child created id: 10
--Creating new operations for variant [Variant id: 10, #gens: 170, #ops: 0, parent:9]
---analyzing modificationPoint position: 11
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 2
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 4
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 2 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 25
---modifPoint 3 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 45
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 4 not mutation generated in  org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 7
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 5 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(f)
---analyzing modificationPoint position: 19
location: FractionFormat.java272
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 10, #gens: 169, #ops: 1, parent:9] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 10
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-10/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(5): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (9(f=1.0), 10(f=1.0), )
Selected to next generation: IDs2--> (9(f=1.0), )
----------Running generation: 6, population size: 1

***** Generation 6 : 0
**Parent Variant: [Variant id: 11, #gens: 170, #ops: 0, parent:-]

--Child created id: 12
--Creating new operations for variant [Variant id: 12, #gens: 170, #ops: 0, parent:11]
---analyzing modificationPoint position: 37
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 8
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 1 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 34
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java203
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 203, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 12, #gens: 171, #ops: 1, parent:11] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 12, errors: [FractionFormat.java:203: error: call to this must be first statement in constructor
		if (obj instanceof org.apache.commons.math.fraction.Fraction) { 			this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                                                                			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(6): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (11(f=1.0), 12(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (11(f=1.0), )
----------Running generation: 7, population size: 1

***** Generation 7 : 0
**Parent Variant: [Variant id: 13, #gens: 170, #ops: 0, parent:-]

--Child created id: 14
--Creating new operations for variant [Variant id: 14, #gens: 170, #ops: 0, parent:13]
---analyzing modificationPoint position: 40
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  throw new java.text.ParseException(("Unparseable fraction number: \"" +  source) + "\"", parsePositi[...]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 19
location: FractionFormat.java272
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 14, #gens: 169, #ops: 1, parent:13] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 14
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-14/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(7): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (13(f=1.0), 14(f=1.0), )
Selected to next generation: IDs2--> (13(f=1.0), )
----------Running generation: 8, population size: 1

***** Generation 8 : 0
**Parent Variant: [Variant id: 15, #gens: 170, #ops: 0, parent:-]

--Child created id: 16
--Creating new operations for variant [Variant id: 16, #gens: 170, #ops: 0, parent:15]
---analyzing modificationPoint position: 37
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 16, #gens: 169, #ops: 1, parent:15] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 16
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-16/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(8): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (15(f=1.0), 16(f=1.0), )
Selected to next generation: IDs2--> (15(f=1.0), )
----------Running generation: 9, population size: 1

***** Generation 9 : 0
**Parent Variant: [Variant id: 17, #gens: 170, #ops: 0, parent:-]

--Child created id: 18
--Creating new operations for variant [Variant id: 18, #gens: 170, #ops: 0, parent:17]
---analyzing modificationPoint position: 10
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 1
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 30
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 18, #gens: 169, #ops: 1, parent:17] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 18
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-18/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(9): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (17(f=1.0), 18(f=1.0), )
Selected to next generation: IDs2--> (17(f=1.0), )
----------Running generation: 10, population size: 1

***** Generation 10 : 0
**Parent Variant: [Variant id: 19, #gens: 170, #ops: 0, parent:-]

--Child created id: 20
--Creating new operations for variant [Variant id: 20, #gens: 170, #ops: 0, parent:19]
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 100
---modifPoint 2 not mutation generated in  return ret
---analyzing modificationPoint position: 2
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java63
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 63, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 20, #gens: 171, #ops: 1, parent:19] gen mutated: 1 , gen not mut: 3, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 20
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-20/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(10): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (19(f=1.0), 20(f=1.0), )
Selected to next generation: IDs2--> (19(f=1.0), )
----------Running generation: 11, population size: 1

***** Generation 11 : 0
**Parent Variant: [Variant id: 21, #gens: 170, #ops: 0, parent:-]

--Child created id: 22
--Creating new operations for variant [Variant id: 22, #gens: 170, #ops: 0, parent:21]
---analyzing modificationPoint position: 2
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 105
location: FDistributionImpl.java158
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (degreesOfFreedom <= 0.0) { 	throw new java.lang.IllegalArgumentException( 	"degrees of freedom m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 22, #gens: 169, #ops: 1, parent:21] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 22
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-22/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 9] ,[]
-Valid?: |false|2|9|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(11): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (degreesOfFreedom <= 0.0) { 	throw new java.lang.IllegalArgumentException( 	"degrees of freedom m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (21(f=1.0), 22(f=2.0), )
Selected to next generation: IDs2--> (21(f=1.0), )
----------Running generation: 12, population size: 1

***** Generation 12 : 0
**Parent Variant: [Variant id: 23, #gens: 170, #ops: 0, parent:-]

--Child created id: 24
--Creating new operations for variant [Variant id: 24, #gens: 170, #ops: 0, parent:23]
---analyzing modificationPoint position: 22
location: ProperFractionFormat.java91
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 24, #gens: 169, #ops: 1, parent:23] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 24
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-24/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(12): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (23(f=1.0), 24(f=1.0), )
Selected to next generation: IDs2--> (23(f=1.0), )
----------Running generation: 13, population size: 1

***** Generation 13 : 0
**Parent Variant: [Variant id: 25, #gens: 170, #ops: 0, parent:-]

--Child created id: 26
--Creating new operations for variant [Variant id: 26, #gens: 170, #ops: 0, parent:25]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, toAppendTo, pos, num]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java96
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 96, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 26, #gens: 171, #ops: 1, parent:25] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 26
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-26/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(13): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (25(f=1.0), 26(f=1.0), )
Selected to next generation: IDs2--> (25(f=1.0), )
----------Running generation: 14, population size: 1

***** Generation 14 : 0
**Parent Variant: [Variant id: 27, #gens: 170, #ops: 0, parent:-]

--Child created id: 28
--Creating new operations for variant [Variant id: 28, #gens: 170, #ops: 0, parent:27]
---analyzing modificationPoint position: 15
location: ProperFractionFormat.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 28, #gens: 169, #ops: 1, parent:27] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 28
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-28/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(14): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (27(f=1.0), 28(f=1.0), )
Selected to next generation: IDs2--> (27(f=1.0), )
----------Running generation: 15, population size: 1

***** Generation 15 : 0
**Parent Variant: [Variant id: 29, #gens: 170, #ops: 0, parent:-]

--Child created id: 30
--Creating new operations for variant [Variant id: 30, #gens: 170, #ops: 0, parent:29]
---analyzing modificationPoint position: 11
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java155
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 155, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 30, #gens: 171, #ops: 1, parent:29] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 30, errors: [FractionFormat.java:156: error: incompatible types: java.util.Locale[] cannot be converted to java.text.NumberFormat
		nf.setMaximumFractionDigits(0); 		return java.text.NumberFormat.getAvailableLocales();
		                                		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(15): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (29(f=1.0), 30(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (29(f=1.0), )
----------Running generation: 16, population size: 1

***** Generation 16 : 0
**Parent Variant: [Variant id: 31, #gens: 170, #ops: 0, parent:-]

--Child created id: 32
--Creating new operations for variant [Variant id: 32, #gens: 170, #ops: 0, parent:31]
---analyzing modificationPoint position: 11
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 88
Templates availables169
Attempts Base Ingredients  1 total 169
---modifPoint 1 not mutation generated in  while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]
---analyzing modificationPoint position: 12
location: FractionFormat.java156
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 32, #gens: 169, #ops: 1, parent:31] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 32
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-32/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(16): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (31(f=1.0), 32(f=1.0), )
Selected to next generation: IDs2--> (31(f=1.0), )
----------Running generation: 17, population size: 1

***** Generation 17 : 0
**Parent Variant: [Variant id: 33, #gens: 170, #ops: 0, parent:-]

--Child created id: 34
--Creating new operations for variant [Variant id: 34, #gens: 170, #ops: 0, parent:33]
---analyzing modificationPoint position: 4
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java76
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 76, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 34, #gens: 171, #ops: 1, parent:33] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 34, errors: [FractionFormat.java:479: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:482: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:482: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:482: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:482: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:482: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:484: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:485: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:485: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:486: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:487: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:487: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:487: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:488: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:488: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:488: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:489: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:490: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:490: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:490: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(17): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (33(f=1.0), 34(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (33(f=1.0), )
----------Running generation: 18, population size: 1

***** Generation 18 : 0
**Parent Variant: [Variant id: 35, #gens: 170, #ops: 0, parent:-]

--Child created id: 36
--Creating new operations for variant [Variant id: 36, #gens: 170, #ops: 0, parent:35]
---analyzing modificationPoint position: 103
location: FDistributionImpl.java51
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 36, #gens: 169, #ops: 1, parent:35] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 36
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-36/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 6, was successful: false, cases executed: 9] ,[]
-Valid?: |false|6|9|[]|, fitness 6.0
Ingredient counter is Zero
---Undoing: gnrtn(18): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setNumeratorDegreesOfFreedom(numeratorDegreesOfFreedom) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (35(f=1.0), 36(f=6.0), )
Selected to next generation: IDs2--> (35(f=1.0), )
----------Running generation: 19, population size: 1

***** Generation 19 : 0
**Parent Variant: [Variant id: 37, #gens: 170, #ops: 0, parent:-]

--Child created id: 38
--Creating new operations for variant [Variant id: 38, #gens: 170, #ops: 0, parent:37]
---analyzing modificationPoint position: 6
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java114
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 114, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 38, #gens: 171, #ops: 1, parent:37] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 38
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-38/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(19): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (37(f=1.0), 38(f=1.0), )
Selected to next generation: IDs2--> (37(f=1.0), )
----------Running generation: 20, population size: 1

***** Generation 20 : 0
**Parent Variant: [Variant id: 39, #gens: 170, #ops: 0, parent:-]

--Child created id: 40
--Creating new operations for variant [Variant id: 40, #gens: 170, #ops: 0, parent:39]
---analyzing modificationPoint position: 2
location: FractionFormat.java63
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 40, #gens: 169, #ops: 1, parent:39] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 40
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-40/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(20): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (39(f=1.0), 40(f=1.0), )
Selected to next generation: IDs2--> (39(f=1.0), )
----------Running generation: 21, population size: 1

***** Generation 21 : 0
**Parent Variant: [Variant id: 41, #gens: 170, #ops: 0, parent:-]

--Child created id: 42
--Creating new operations for variant [Variant id: 42, #gens: 170, #ops: 0, parent:41]
---analyzing modificationPoint position: 10
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java154
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 42, #gens: 170, #ops: 1, parent:41] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 42
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-42/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(21): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (41(f=1.0), 42(f=1.0), )
Selected to next generation: IDs2--> (41(f=1.0), )
----------Running generation: 22, population size: 1

***** Generation 22 : 0
**Parent Variant: [Variant id: 43, #gens: 170, #ops: 0, parent:-]

--Child created id: 44
--Creating new operations for variant [Variant id: 44, #gens: 170, #ops: 0, parent:43]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java149
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 149, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 44, #gens: 171, #ops: 1, parent:43] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 44, errors: [ProperFractionFormat.java:167: error: illegal start of type
		if (num.intValue() < 0) {
		^, ProperFractionFormat.java:167: error: <identifier> expected
		if (num.intValue() < 0) {
		                ^, ProperFractionFormat.java:167: error: ';' expected
		if (num.intValue() < 0) {
		                  ^, ProperFractionFormat.java:167: error: <identifier> expected
		if (num.intValue() < 0) {
		                    ^, ProperFractionFormat.java:167: error: illegal start of type
		if (num.intValue() < 0) {
		                     ^, ProperFractionFormat.java:176: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:194: error: ';' expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:198: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:198: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:206: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:206: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:206: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:206: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:206: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:215: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:215: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:215: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:226: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw new java.lang.IllegalArgumentException(
	    	       ^, ProperFractionFormat.java:228: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:230: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(22): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (43(f=1.0), 44(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (43(f=1.0), )
----------Running generation: 23, population size: 1

***** Generation 23 : 0
**Parent Variant: [Variant id: 45, #gens: 170, #ops: 0, parent:-]

--Child created id: 46
--Creating new operations for variant [Variant id: 46, #gens: 170, #ops: 0, parent:45]
---analyzing modificationPoint position: 20
location: FractionFormat.java273
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 46, #gens: 169, #ops: 1, parent:45] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 46
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-46/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(23): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (45(f=1.0), 46(f=1.0), )
Selected to next generation: IDs2--> (45(f=1.0), )
----------Running generation: 24, population size: 1

***** Generation 24 : 0
**Parent Variant: [Variant id: 47, #gens: 170, #ops: 0, parent:-]

--Child created id: 48
--Creating new operations for variant [Variant id: 48, #gens: 170, #ops: 0, parent:47]
---analyzing modificationPoint position: 23
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 34
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 6
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java114
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 114, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 48, #gens: 171, #ops: 1, parent:47] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 48, errors: [FractionFormat.java:144: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.FractionFormat
		return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDefault()); 		java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(locale); 		return new org.apache.commons.math.fraction.FractionFormat(f);} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(24): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (47(f=1.0), 48(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (47(f=1.0), )
----------Running generation: 25, population size: 1

***** Generation 25 : 0
**Parent Variant: [Variant id: 49, #gens: 170, #ops: 0, parent:-]

--Child created id: 50
--Creating new operations for variant [Variant id: 50, #gens: 170, #ops: 0, parent:49]
---analyzing modificationPoint position: 15
location: ProperFractionFormat.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 50, #gens: 169, #ops: 1, parent:49] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 50
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-50/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(25): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (49(f=1.0), 50(f=1.0), )
Selected to next generation: IDs2--> (49(f=1.0), )
----------Running generation: 26, population size: 1

***** Generation 26 : 0
**Parent Variant: [Variant id: 51, #gens: 170, #ops: 0, parent:-]

--Child created id: 52
--Creating new operations for variant [Variant id: 52, #gens: 170, #ops: 0, parent:51]
---analyzing modificationPoint position: 73
Templates availables23
Attempts Base Ingredients  1 total 23
vars from patch []
location: FDistributionImpl.java148
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `throw new java.lang.IllegalArgumentException( "degrees of freedom must be positive.")` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.distribution.FDistributionImpl line: 148, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `throw new java.lang.IllegalArgumentException( "degrees of freedom must be positive.")` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 52, #gens: 171, #ops: 1, parent:51] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 52, errors: [FDistributionImpl.java:161: error: unreachable statement
		"degrees of freedom must be positive."); 		return ret;} 	/**
		                                         		^]
Ingredient counter is Zero
---Undoing: gnrtn(26): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `throw new java.lang.IllegalArgumentException( "degrees of freedom must be positive.")` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (51(f=1.0), 52(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (51(f=1.0), )
----------Running generation: 27, population size: 1

***** Generation 27 : 0
**Parent Variant: [Variant id: 53, #gens: 170, #ops: 0, parent:-]

--Child created id: 54
--Creating new operations for variant [Variant id: 54, #gens: 170, #ops: 0, parent:53]
---analyzing modificationPoint position: 52
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java361
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 361, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 54, #gens: 171, #ops: 1, parent:53] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 54
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-54/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(27): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (53(f=1.0), 54(f=1.0), )
Selected to next generation: IDs2--> (53(f=1.0), )
----------Running generation: 28, population size: 1

***** Generation 28 : 0
**Parent Variant: [Variant id: 55, #gens: 170, #ops: 0, parent:-]

--Child created id: 56
--Creating new operations for variant [Variant id: 56, #gens: 170, #ops: 0, parent:55]
---analyzing modificationPoint position: 21
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 16
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 62
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  getWholeFormat().format(whole, toAppendTo, pos)
---analyzing modificationPoint position: 15
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 10
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 4 not mutation generated in  java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 7
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java115
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(f) ` -topatch--> `throw new java.lang.IllegalArgumentException( "Cannot format given object as a fraction")` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 115, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(f) ` -topatch--> `throw new java.lang.IllegalArgumentException( "Cannot format given object as a fraction")` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 56, #gens: 171, #ops: 1, parent:55] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 56, errors: [FractionFormat.java:295: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(28): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(f) ` -topatch--> `throw new java.lang.IllegalArgumentException( "Cannot format given object as a fraction")` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (55(f=1.0), 56(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (55(f=1.0), )
----------Running generation: 29, population size: 1

***** Generation 29 : 0
**Parent Variant: [Variant id: 57, #gens: 170, #ops: 0, parent:-]

--Child created id: 58
--Creating new operations for variant [Variant id: 58, #gens: 170, #ops: 0, parent:57]
---analyzing modificationPoint position: 12
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java156
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `throw new java.lang.IllegalArgumentException( "denominator format can not be null.")` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 156, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `throw new java.lang.IllegalArgumentException( "denominator format can not be null.")` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 58, #gens: 171, #ops: 1, parent:57] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 58, errors: [FractionFormat.java:389: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:392: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:392: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:392: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:392: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:392: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:394: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:395: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:395: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:396: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:397: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:397: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:397: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:398: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:398: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:398: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:399: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:400: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:400: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:400: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(29): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `throw new java.lang.IllegalArgumentException( "denominator format can not be null.")` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (57(f=1.0), 58(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (57(f=1.0), )
----------Running generation: 30, population size: 1

***** Generation 30 : 0
**Parent Variant: [Variant id: 59, #gens: 170, #ops: 0, parent:-]

--Child created id: 60
--Creating new operations for variant [Variant id: 60, #gens: 170, #ops: 0, parent:59]
---analyzing modificationPoint position: 22
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 55
---modifPoint 2 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 32
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 3 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 33
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 4 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 60, #gens: 171, #ops: 1, parent:59] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 60, errors: [ProperFractionFormat.java:176: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:194: error: ';' expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:198: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:198: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:206: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:206: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:206: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:206: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:206: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:215: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:215: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:215: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:226: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw new java.lang.IllegalArgumentException(
	    	       ^, ProperFractionFormat.java:228: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:230: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(30): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (59(f=1.0), 60(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (59(f=1.0), )
----------Running generation: 31, population size: 1

***** Generation 31 : 0
**Parent Variant: [Variant id: 61, #gens: 170, #ops: 0, parent:-]

--Child created id: 62
--Creating new operations for variant [Variant id: 62, #gens: 170, #ops: 0, parent:61]
---analyzing modificationPoint position: 21
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 59
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 8
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 3 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 6
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 4 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 33
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [obj, ret, toAppendTo, pos]
--> var from patch: obj spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java202
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 202, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 62, #gens: 170, #ops: 1, parent:61] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 62
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-62/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(31): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (61(f=1.0), 62(f=1.0), )
Selected to next generation: IDs2--> (61(f=1.0), )
----------Running generation: 32, population size: 1

***** Generation 32 : 0
**Parent Variant: [Variant id: 63, #gens: 170, #ops: 0, parent:-]

--Child created id: 64
--Creating new operations for variant [Variant id: 64, #gens: 170, #ops: 0, parent:63]
---analyzing modificationPoint position: 57
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java378
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 378, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 64, #gens: 170, #ops: 1, parent:63] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 64, errors: [FractionFormat.java:378: error: non-static variable numeratorFormat cannot be referenced from a static context
			do { 				numeratorFormat = numeratorFormat;
			     				^, FractionFormat.java:378: error: non-static variable numeratorFormat cannot be referenced from a static context
			do { 				numeratorFormat = numeratorFormat;
			     				                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(32): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (63(f=1.0), 64(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (63(f=1.0), )
----------Running generation: 33, population size: 1

***** Generation 33 : 0
**Parent Variant: [Variant id: 65, #gens: 170, #ops: 0, parent:-]

--Child created id: 66
--Creating new operations for variant [Variant id: 66, #gens: 170, #ops: 0, parent:65]
---analyzing modificationPoint position: 15
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 3
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 27
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 46
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java246
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 246, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 66, #gens: 171, #ops: 1, parent:65] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 66, errors: [FractionFormat.java:385: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:388: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:388: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:388: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:388: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:388: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:390: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:391: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:391: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:392: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:393: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:393: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:393: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:394: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:394: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:394: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:395: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:396: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:396: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:396: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(33): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (65(f=1.0), 66(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (65(f=1.0), )
----------Running generation: 34, population size: 1

***** Generation 34 : 0
**Parent Variant: [Variant id: 67, #gens: 170, #ops: 0, parent:-]

--Child created id: 68
--Creating new operations for variant [Variant id: 68, #gens: 170, #ops: 0, parent:67]
---analyzing modificationPoint position: 23
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 53
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java371
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 371, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 68, #gens: 170, #ops: 1, parent:67] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 68, errors: [FractionFormat.java:376: error: cannot find symbol
		if (index < n) {
		    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:376: error: cannot find symbol
		if (index < n) {
		            ^
  symbol:   variable n
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:379: error: cannot find symbol
				c = source.charAt(index++);
				                  ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:380: error: cannot find symbol
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                                 ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:380: error: cannot find symbol
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:381: error: cannot find symbol
			pos.setIndex(index);
			             ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:383: error: cannot find symbol
			if (index < n) {
			    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:383: error: cannot find symbol
			if (index < n) {
			            ^
  symbol:   variable n
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(34): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (67(f=1.0), 68(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (67(f=1.0), )
----------Running generation: 35, population size: 1

***** Generation 35 : 0
**Parent Variant: [Variant id: 69, #gens: 170, #ops: 0, parent:-]

--Child created id: 70
--Creating new operations for variant [Variant id: 70, #gens: 170, #ops: 0, parent:69]
---analyzing modificationPoint position: 14
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]
---analyzing modificationPoint position: 54
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java372
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int n = source.length() ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 372, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int n = source.length() ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 70, #gens: 171, #ops: 1, parent:69] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 70, errors: [FractionFormat.java:373: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to char
	 */ 	protected static char parseNextCharacter(java.lang.String source, java.text.ParsePosition pos) { 		int index = pos.getIndex(); 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault()); 		int n = source.length();
	    	                                                                                                 		                            		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(35): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int n = source.length() ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (69(f=1.0), 70(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (69(f=1.0), )
----------Running generation: 36, population size: 1

***** Generation 36 : 0
**Parent Variant: [Variant id: 71, #gens: 170, #ops: 0, parent:-]

--Child created id: 72
--Creating new operations for variant [Variant id: 72, #gens: 170, #ops: 0, parent:71]
---analyzing modificationPoint position: 88
Templates availables169
Attempts Base Ingredients  1 total 169
---modifPoint 0 not mutation generated in  while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 48
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 2 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 28
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 33
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 4 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 0
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 72, #gens: 171, #ops: 1, parent:71] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 72
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-72/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(36): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (71(f=1.0), 72(f=1.0), )
Selected to next generation: IDs2--> (71(f=1.0), )
----------Running generation: 37, population size: 1

***** Generation 37 : 0
**Parent Variant: [Variant id: 73, #gens: 170, #ops: 0, parent:-]

--Child created id: 74
--Creating new operations for variant [Variant id: 74, #gens: 170, #ops: 0, parent:73]
---analyzing modificationPoint position: 18
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java150
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 150, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 74, #gens: 170, #ops: 1, parent:73] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 74, errors: [ProperFractionFormat.java:150: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return wholeFormat;
			                            			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(37): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (73(f=1.0), 74(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (73(f=1.0), )
----------Running generation: 38, population size: 1

***** Generation 38 : 0
**Parent Variant: [Variant id: 75, #gens: 170, #ops: 0, parent:-]

--Child created id: 76
--Creating new operations for variant [Variant id: 76, #gens: 170, #ops: 0, parent:75]
---analyzing modificationPoint position: 53
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java371
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 371, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 76, #gens: 170, #ops: 1, parent:75] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 76, errors: [FractionFormat.java:376: error: cannot find symbol
		if (index < n) {
		    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:379: error: cannot find symbol
				c = source.charAt(index++);
				                  ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:380: error: cannot find symbol
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                                 ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:381: error: cannot find symbol
			pos.setIndex(index);
			             ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:383: error: cannot find symbol
			if (index < n) {
			    ^
  symbol:   variable index
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(38): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (75(f=1.0), 76(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (75(f=1.0), )
----------Running generation: 39, population size: 1

***** Generation 39 : 0
**Parent Variant: [Variant id: 77, #gens: 170, #ops: 0, parent:-]

--Child created id: 78
--Creating new operations for variant [Variant id: 78, #gens: 170, #ops: 0, parent:77]
---analyzing modificationPoint position: 10
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch []
location: FractionFormat.java154
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 78, #gens: 170, #ops: 1, parent:77] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 78, errors: [FractionFormat.java:301: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:310: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:310: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:310: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:322: error: class, interface, or enum expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);}
	    	       ^, FractionFormat.java:322: error: class, interface, or enum expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);}
	    	                                                                                            		                          ^, FractionFormat.java:332: error: class, interface, or enum expected
	 */ 	public void setDenominatorFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw new java.lang.IllegalArgumentException(
	    	       ^, FractionFormat.java:334: error: class, interface, or enum expected
		}
		^, FractionFormat.java:336: error: class, interface, or enum expected
	}
	^, FractionFormat.java:346: error: class, interface, or enum expected
	 */ 	public void setNumeratorFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw new java.lang.IllegalArgumentException(
	    	       ^, FractionFormat.java:348: error: class, interface, or enum expected
		}
		^, FractionFormat.java:350: error: class, interface, or enum expected
	}
	^, FractionFormat.java:362: error: class, interface, or enum expected
		pos.setIndex(pos.getIndex() - 1);
		^, FractionFormat.java:363: error: class, interface, or enum expected
	}
	^, FractionFormat.java:373: error: class, interface, or enum expected
	 */ 	protected static char parseNextCharacter(java.lang.String source, java.text.ParsePosition pos) { 		int index = pos.getIndex(); 		int n = source.length();
	    	                                                                                                 		                            		^, FractionFormat.java:374: error: class, interface, or enum expected
		char ret = 0;
		^, FractionFormat.java:376: error: class, interface, or enum expected
		if (index < n) {
		^, FractionFormat.java:378: error: class, interface, or enum expected
			do {
			^, FractionFormat.java:380: error: class, interface, or enum expected
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			^, FractionFormat.java:381: error: class, interface, or enum expected
			pos.setIndex(index);
			^, FractionFormat.java:383: error: class, interface, or enum expected
			if (index < n) {
			^, FractionFormat.java:385: error: class, interface, or enum expected
			}
			^, FractionFormat.java:389: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(39): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (77(f=1.0), 78(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (77(f=1.0), )
----------Running generation: 40, population size: 1

***** Generation 40 : 0
**Parent Variant: [Variant id: 79, #gens: 170, #ops: 0, parent:-]

--Child created id: 80
--Creating new operations for variant [Variant id: 80, #gens: 170, #ops: 0, parent:79]
---analyzing modificationPoint position: 15
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 41
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  ret = c
---analyzing modificationPoint position: 1
location: ProperFractionFormat.java59
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 80, #gens: 169, #ops: 1, parent:79] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 80
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-80/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(40): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (79(f=1.0), 80(f=1.0), )
Selected to next generation: IDs2--> (79(f=1.0), )
----------Running generation: 41, population size: 1

***** Generation 41 : 0
**Parent Variant: [Variant id: 81, #gens: 170, #ops: 0, parent:-]

--Child created id: 82
--Creating new operations for variant [Variant id: 82, #gens: 170, #ops: 0, parent:81]
---analyzing modificationPoint position: 40
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  throw new java.text.ParseException(("Unparseable fraction number: \"" +  source) + "\"", parsePositi[...]
---analyzing modificationPoint position: 45
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 1 not mutation generated in  org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 14
location: ProperFractionFormat.java224
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 82, #gens: 169, #ops: 1, parent:81] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 82
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-82/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(41): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (81(f=1.0), 82(f=1.0), )
Selected to next generation: IDs2--> (81(f=1.0), )
----------Running generation: 42, population size: 1

***** Generation 42 : 0
**Parent Variant: [Variant id: 83, #gens: 170, #ops: 0, parent:-]

--Child created id: 84
--Creating new operations for variant [Variant id: 84, #gens: 170, #ops: 0, parent:83]
---analyzing modificationPoint position: 40
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  throw new java.text.ParseException(("Unparseable fraction number: \"" +  source) + "\"", parsePositi[...]
---analyzing modificationPoint position: 42
---modifPoint 1 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 14
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [format]
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java224
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 224, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 84, #gens: 170, #ops: 1, parent:83] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 84
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-84/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(42): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (83(f=1.0), 84(f=1.0), )
Selected to next generation: IDs2--> (83(f=1.0), )
----------Running generation: 43, population size: 1

***** Generation 43 : 0
**Parent Variant: [Variant id: 85, #gens: 170, #ops: 0, parent:-]

--Child created id: 86
--Creating new operations for variant [Variant id: 86, #gens: 170, #ops: 0, parent:85]
---analyzing modificationPoint position: 40
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java247
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.text.ParseException(("Unparseable fraction number: \"" +  source) + "\"", parsePositi[...] ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 247, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.text.ParseException(("Unparseable fraction number: \"" +  source) + "\"", parsePositi[...] ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 86, #gens: 171, #ops: 1, parent:85] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 86, errors: [FractionFormat.java:388: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:391: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:391: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:391: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:391: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:391: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:393: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:394: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:394: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:395: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:396: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:396: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:396: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:397: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:397: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:397: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:398: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:399: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:399: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:399: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(43): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.text.ParseException(("Unparseable fraction number: \"" +  source) + "\"", parsePositi[...] ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (85(f=1.0), 86(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (85(f=1.0), )
----------Running generation: 44, population size: 1

***** Generation 44 : 0
**Parent Variant: [Variant id: 87, #gens: 170, #ops: 0, parent:-]

--Child created id: 88
--Creating new operations for variant [Variant id: 88, #gens: 170, #ops: 0, parent:87]
---analyzing modificationPoint position: 99
Templates availables23
Attempts Base Ingredients  1 total 23
---modifPoint 0 not mutation generated in  if (x <= 0.0) { 	ret = 0.0; } else { 	double n = getNumeratorDegreesOfFreedom(); 	double m = getDeno[...]
---analyzing modificationPoint position: 10
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java154
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `throw new java.lang.IllegalArgumentException( "numerator format can not be null.")` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 154, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `throw new java.lang.IllegalArgumentException( "numerator format can not be null.")` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 88, #gens: 171, #ops: 1, parent:87] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 88, errors: [FractionFormat.java:403: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:406: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:406: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:406: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:406: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:406: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:408: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:409: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:409: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:410: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:411: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:411: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:411: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:412: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:412: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:412: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:413: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:414: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:414: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:414: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(44): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `throw new java.lang.IllegalArgumentException( "numerator format can not be null.")` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (87(f=1.0), 88(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (87(f=1.0), )
----------Running generation: 45, population size: 1

***** Generation 45 : 0
**Parent Variant: [Variant id: 89, #gens: 170, #ops: 0, parent:-]

--Child created id: 90
--Creating new operations for variant [Variant id: 90, #gens: 170, #ops: 0, parent:89]
---analyzing modificationPoint position: 4
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [this.denominatorFormat]
--> var from patch: this.denominatorFormat spoon.support.reflect.code.CtFieldWriteImpl
SameName: java.text.NumberFormat denominatorFormat
SameName: java.text.NumberFormat denominatorFormat
Transforming shadowed variable in denominatorFormat = denominatorFormat
location: FractionFormat.java76
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 76, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 90, #gens: 170, #ops: 1, parent:89] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 90
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-90/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(45): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (89(f=1.0), 90(f=1.0), )
Selected to next generation: IDs2--> (89(f=1.0), )
----------Running generation: 46, population size: 1

***** Generation 46 : 0
**Parent Variant: [Variant id: 91, #gens: 170, #ops: 0, parent:-]

--Child created id: 92
--Creating new operations for variant [Variant id: 92, #gens: 170, #ops: 0, parent:91]
---analyzing modificationPoint position: 28
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 92, #gens: 169, #ops: 1, parent:91] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 92
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-92/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(46): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (91(f=1.0), 92(f=1.0), )
Selected to next generation: IDs2--> (91(f=1.0), )
----------Running generation: 47, population size: 1

***** Generation 47 : 0
**Parent Variant: [Variant id: 93, #gens: 170, #ops: 0, parent:-]

--Child created id: 94
--Creating new operations for variant [Variant id: 94, #gens: 170, #ops: 0, parent:93]
---analyzing modificationPoint position: 83
Templates availables22
Attempts Base Ingredients  1 total 22
---modifPoint 0 not mutation generated in  v = t
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 105
location: FDistributionImpl.java158
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (degreesOfFreedom <= 0.0) { 	throw new java.lang.IllegalArgumentException( 	"degrees of freedom m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 94, #gens: 169, #ops: 1, parent:93] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 94
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-94/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 9] ,[]
-Valid?: |false|2|9|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(47): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (degreesOfFreedom <= 0.0) { 	throw new java.lang.IllegalArgumentException( 	"degrees of freedom m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (93(f=1.0), 94(f=2.0), )
Selected to next generation: IDs2--> (93(f=1.0), )
----------Running generation: 48, population size: 1

***** Generation 48 : 0
**Parent Variant: [Variant id: 95, #gens: 170, #ops: 0, parent:-]

--Child created id: 96
--Creating new operations for variant [Variant id: 96, #gens: 170, #ops: 0, parent:95]
---analyzing modificationPoint position: 12
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 5
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 21
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 7
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(f)
---analyzing modificationPoint position: 4
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 4 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 72
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 5 not mutation generated in  // use mean ret = d / (d - 2.0)
---analyzing modificationPoint position: 54
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java372
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int n = source.length() ` -topatch--> `throw new java.lang.IllegalArgumentException( "Cannot convert given object to a fraction.")` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 372, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int n = source.length() ` -topatch--> `throw new java.lang.IllegalArgumentException( "Cannot convert given object to a fraction.")` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 96, #gens: 171, #ops: 1, parent:95] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 96, errors: [FractionFormat.java:373: error: unreachable statement
	 */ 	protected static char parseNextCharacter(java.lang.String source, java.text.ParsePosition pos) { 		int index = pos.getIndex(); 		throw new java.lang.IllegalArgumentException("Cannot convert given object to a fraction."); 		int n = source.length();
	    	                                                                                                 		                            		                                                                                            		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(48): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int n = source.length() ` -topatch--> `throw new java.lang.IllegalArgumentException( "Cannot convert given object to a fraction.")` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (95(f=1.0), 96(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (95(f=1.0), )
----------Running generation: 49, population size: 1

***** Generation 49 : 0
**Parent Variant: [Variant id: 97, #gens: 170, #ops: 0, parent:-]

--Child created id: 98
--Creating new operations for variant [Variant id: 98, #gens: 170, #ops: 0, parent:97]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 21
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 27
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 3 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 9
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 57
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [ret, c]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java378
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 378, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 98, #gens: 171, #ops: 1, parent:97] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 98, errors: [FractionFormat.java:384: error: variable c might not have been initialized
				ret = c; 				c = source.charAt(index++);} while (java.lang.Character.isWhitespace(c) && (index < n) ); 			pos.setIndex(index); 			if (index < n) { 				ret = c;
				      ^]
Ingredient counter is Zero
---Undoing: gnrtn(49): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (97(f=1.0), 98(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (97(f=1.0), )
----------Running generation: 50, population size: 1

***** Generation 50 : 0
**Parent Variant: [Variant id: 99, #gens: 170, #ops: 0, parent:-]

--Child created id: 100
--Creating new operations for variant [Variant id: 100, #gens: 170, #ops: 0, parent:99]
---analyzing modificationPoint position: 26
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java96
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 96, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 100, #gens: 171, #ops: 1, parent:99] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 100, errors: [ProperFractionFormat.java:97: error: variable whole is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		num = num % den; 		int whole = num / den;
		                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(50): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (99(f=1.0), 100(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (99(f=1.0), )
----------Running generation: 51, population size: 1

***** Generation 51 : 0
**Parent Variant: [Variant id: 101, #gens: 170, #ops: 0, parent:-]

--Child created id: 102
--Creating new operations for variant [Variant id: 102, #gens: 170, #ops: 0, parent:101]
---analyzing modificationPoint position: 8
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java132
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 132, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 102, #gens: 171, #ops: 1, parent:101] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 102, errors: [FractionFormat.java:315: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:318: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:318: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:318: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:318: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:318: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:320: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:321: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:321: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:322: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:323: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:323: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:323: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:324: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:324: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:324: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:325: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:326: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:326: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:326: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(51): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (101(f=1.0), 102(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (101(f=1.0), )
----------Running generation: 52, population size: 1

***** Generation 52 : 0
**Parent Variant: [Variant id: 103, #gens: 170, #ops: 0, parent:-]

--Child created id: 104
--Creating new operations for variant [Variant id: 104, #gens: 170, #ops: 0, parent:103]
---analyzing modificationPoint position: 22
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 92
location: MathUtils.java439
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 104, #gens: 169, #ops: 1, parent:103] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 104
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-104/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(52): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (103(f=1.0), 104(f=1.0), )
Selected to next generation: IDs2--> (103(f=1.0), )
----------Running generation: 53, population size: 1

***** Generation 53 : 0
**Parent Variant: [Variant id: 105, #gens: 170, #ops: 0, parent:-]

--Child created id: 106
--Creating new operations for variant [Variant id: 106, #gens: 170, #ops: 0, parent:105]
---analyzing modificationPoint position: 39
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java145
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 145, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 106, #gens: 171, #ops: 1, parent:105] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 106, errors: [ProperFractionFormat.java:176: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:194: error: ';' expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:194: error: <identifier> expected
		org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:198: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:198: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:206: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:206: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:206: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:206: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:206: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:215: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:215: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:215: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:226: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw new java.lang.IllegalArgumentException(
	    	       ^, ProperFractionFormat.java:228: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:230: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(53): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (105(f=1.0), 106(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (105(f=1.0), )
----------Running generation: 54, population size: 1

***** Generation 54 : 0
**Parent Variant: [Variant id: 107, #gens: 170, #ops: 0, parent:-]

--Child created id: 108
--Creating new operations for variant [Variant id: 108, #gens: 170, #ops: 0, parent:107]
---analyzing modificationPoint position: 44
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 22
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 91, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 108, #gens: 171, #ops: 1, parent:107] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 108, errors: [ProperFractionFormat.java:109: error: unreachable statement
		return toAppendTo; 		pos.setEndIndex(0); 		int num = fraction.getNumerator(); 		int den = fraction.getDenominator(); 		int whole = num / den; 		num = num % den; 		if (whole != 0) { 			getWholeFormat().format(whole, toAppendTo, pos); 			toAppendTo.append(' '); 			num = java.lang.Math.abs(num);} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;
		                   		^]
Ingredient counter is Zero
---Undoing: gnrtn(54): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (107(f=1.0), 108(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (107(f=1.0), )
----------Running generation: 55, population size: 1

***** Generation 55 : 0
**Parent Variant: [Variant id: 109, #gens: 170, #ops: 0, parent:-]

--Child created id: 110
--Creating new operations for variant [Variant id: 110, #gens: 170, #ops: 0, parent:109]
---analyzing modificationPoint position: 19
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 54
---modifPoint 1 not mutation generated in  int n = source.length()
---analyzing modificationPoint position: 60
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 2 not mutation generated in  return ret
---analyzing modificationPoint position: 15
location: ProperFractionFormat.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 110, #gens: 169, #ops: 1, parent:109] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 110
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-110/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(55): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (109(f=1.0), 110(f=1.0), )
Selected to next generation: IDs2--> (109(f=1.0), )
----------Running generation: 56, population size: 1

***** Generation 56 : 0
**Parent Variant: [Variant id: 111, #gens: 170, #ops: 0, parent:-]

--Child created id: 112
--Creating new operations for variant [Variant id: 112, #gens: 170, #ops: 0, parent:111]
---analyzing modificationPoint position: 34
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 9
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 110
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [p]
--> var from patch: p spoon.support.reflect.code.CtVariableReadImpl
location: AbstractContinuousDistribution.java80
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// Try to bracket root, test domain endoints if this fails double lowerBound = getDomainLowerBound(p[...] ` -topatch--> `if ((p < 0.0) || (p > 1.0)) { 	throw new java.lang.IllegalArgumentException("p must be between 0.0 a[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.distribution.AbstractContinuousDistribution line: 80, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// Try to bracket root, test domain endoints if this fails double lowerBound = getDomainLowerBound(p[...] ` -topatch--> `if ((p < 0.0) || (p > 1.0)) { 	throw new java.lang.IllegalArgumentException("p must be between 0.0 a[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 112, #gens: 171, #ops: 1, parent:111] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 112
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-112/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(56): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// Try to bracket root, test domain endoints if this fails double lowerBound = getDomainLowerBound(p[...] ` -topatch--> `if ((p < 0.0) || (p > 1.0)) { 	throw new java.lang.IllegalArgumentException("p must be between 0.0 a[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (111(f=1.0), 112(f=1.0), )
Selected to next generation: IDs2--> (111(f=1.0), )
----------Running generation: 57, population size: 1

***** Generation 57 : 0
**Parent Variant: [Variant id: 113, #gens: 170, #ops: 0, parent:-]

--Child created id: 114
--Creating new operations for variant [Variant id: 114, #gens: 170, #ops: 0, parent:113]
---analyzing modificationPoint position: 57
location: FractionFormat.java378
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 114, #gens: 169, #ops: 1, parent:113] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 114, errors: [FractionFormat.java:380: error: variable c might not have been initialized
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(57): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (113(f=1.0), 114(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (113(f=1.0), )
----------Running generation: 58, population size: 1

***** Generation 58 : 0
**Parent Variant: [Variant id: 115, #gens: 170, #ops: 0, parent:-]

--Child created id: 116
--Creating new operations for variant [Variant id: 116, #gens: 170, #ops: 0, parent:115]
---analyzing modificationPoint position: 9
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java149
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 116, #gens: 169, #ops: 1, parent:115] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 116
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-116/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(58): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (115(f=1.0), 116(f=1.0), )
Selected to next generation: IDs2--> (115(f=1.0), )
----------Running generation: 59, population size: 1

***** Generation 59 : 0
**Parent Variant: [Variant id: 117, #gens: 170, #ops: 0, parent:-]

--Child created id: 118
--Creating new operations for variant [Variant id: 118, #gens: 170, #ops: 0, parent:117]
---analyzing modificationPoint position: 29
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 16
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 4
location: FractionFormat.java76
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 118, #gens: 169, #ops: 1, parent:117] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 118
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-118/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(59): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (117(f=1.0), 118(f=1.0), )
Selected to next generation: IDs2--> (117(f=1.0), )
----------Running generation: 60, population size: 1

***** Generation 60 : 0
**Parent Variant: [Variant id: 119, #gens: 170, #ops: 0, parent:-]

--Child created id: 120
--Creating new operations for variant [Variant id: 120, #gens: 170, #ops: 0, parent:119]
---analyzing modificationPoint position: 33
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 13
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 6
---modifPoint 2 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 8
---modifPoint 3 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 9
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 29
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java104
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 104, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 120, #gens: 171, #ops: 1, parent:119] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 120
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-120/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(60): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (119(f=1.0), 120(f=1.0), )
Selected to next generation: IDs2--> (119(f=1.0), )
----------Running generation: 61, population size: 1

***** Generation 61 : 0
**Parent Variant: [Variant id: 121, #gens: 170, #ops: 0, parent:-]

--Child created id: 122
--Creating new operations for variant [Variant id: 122, #gens: 170, #ops: 0, parent:121]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 8
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java132
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 132, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 122, #gens: 171, #ops: 1, parent:121] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 122, errors: [FractionFormat.java:133: error: variable f is already defined in method getProperInstance(java.util.Locale)
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getProperInstance(java.util.Locale locale) { 		java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(locale); 		java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(locale);
	    	                                                                                                           		                                                                                                           		                       ^]
Ingredient counter is Zero
---Undoing: gnrtn(61): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...] ` -topatch--> `java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (121(f=1.0), 122(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (121(f=1.0), )
----------Running generation: 62, population size: 1

***** Generation 62 : 0
**Parent Variant: [Variant id: 123, #gens: 170, #ops: 0, parent:-]

--Child created id: 124
--Creating new operations for variant [Variant id: 124, #gens: 170, #ops: 0, parent:123]
---analyzing modificationPoint position: 59
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 51
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java360
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(source, pos) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 360, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(source, pos) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 124, #gens: 170, #ops: 1, parent:123] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 124
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-124/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(62): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(source, pos) ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (123(f=1.0), 124(f=1.0), )
Selected to next generation: IDs2--> (123(f=1.0), )
----------Running generation: 63, population size: 1

***** Generation 63 : 0
**Parent Variant: [Variant id: 125, #gens: 170, #ops: 0, parent:-]

--Child created id: 126
--Creating new operations for variant [Variant id: 126, #gens: 170, #ops: 0, parent:125]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 14
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]
---analyzing modificationPoint position: 35
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [obj, ret, toAppendTo, pos]
--> var from patch: obj spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java217
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 217, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 126, #gens: 171, #ops: 1, parent:125] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 126
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-126/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(63): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (125(f=1.0), 126(f=1.0), )
Selected to next generation: IDs2--> (125(f=1.0), )
----------Running generation: 64, population size: 1

***** Generation 64 : 0
**Parent Variant: [Variant id: 127, #gens: 170, #ops: 0, parent:-]

--Child created id: 128
--Creating new operations for variant [Variant id: 128, #gens: 170, #ops: 0, parent:127]
---analyzing modificationPoint position: 35
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 12
location: FractionFormat.java156
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 128, #gens: 169, #ops: 1, parent:127] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 128
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-128/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(64): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (127(f=1.0), 128(f=1.0), )
Selected to next generation: IDs2--> (127(f=1.0), )
----------Running generation: 65, population size: 1

***** Generation 65 : 0
**Parent Variant: [Variant id: 129, #gens: 170, #ops: 0, parent:-]

--Child created id: 130
--Creating new operations for variant [Variant id: 130, #gens: 170, #ops: 0, parent:129]
---analyzing modificationPoint position: 4
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java76
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 76, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 130, #gens: 170, #ops: 1, parent:129] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 130
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-130/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(65): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (129(f=1.0), 130(f=1.0), )
Selected to next generation: IDs2--> (129(f=1.0), )
----------Running generation: 66, population size: 1

***** Generation 66 : 0
**Parent Variant: [Variant id: 131, #gens: 170, #ops: 0, parent:-]

--Child created id: 132
--Creating new operations for variant [Variant id: 132, #gens: 170, #ops: 0, parent:131]
---analyzing modificationPoint position: 9
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 32
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 1 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 46
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java246
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 246, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 132, #gens: 171, #ops: 1, parent:131] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 132
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-132/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(66): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (131(f=1.0), 132(f=1.0), )
Selected to next generation: IDs2--> (131(f=1.0), )
----------Running generation: 67, population size: 1

***** Generation 67 : 0
**Parent Variant: [Variant id: 133, #gens: 170, #ops: 0, parent:-]

--Child created id: 134
--Creating new operations for variant [Variant id: 134, #gens: 170, #ops: 0, parent:133]
---analyzing modificationPoint position: 3
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 2
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 46
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [result]
--> var from patch: result spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java246
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `return result` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 246, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `return result` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 134, #gens: 171, #ops: 1, parent:133] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 134, errors: [FractionFormat.java:251: error: unreachable statement
		return result; 		return result;
		               		^]
Ingredient counter is Zero
---Undoing: gnrtn(67): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...] ` -topatch--> `return result` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (133(f=1.0), 134(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (133(f=1.0), )
----------Running generation: 68, population size: 1

***** Generation 68 : 0
**Parent Variant: [Variant id: 135, #gens: 170, #ops: 0, parent:-]

--Child created id: 136
--Creating new operations for variant [Variant id: 136, #gens: 170, #ops: 0, parent:135]
---analyzing modificationPoint position: 60
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 11
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java155
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 155, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 136, #gens: 171, #ops: 1, parent:135] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 136
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-136/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(68): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (135(f=1.0), 136(f=1.0), )
Selected to next generation: IDs2--> (135(f=1.0), )
----------Running generation: 69, population size: 1

***** Generation 69 : 0
**Parent Variant: [Variant id: 137, #gens: 170, #ops: 0, parent:-]

--Child created id: 138
--Creating new operations for variant [Variant id: 138, #gens: 170, #ops: 0, parent:137]
---analyzing modificationPoint position: 38
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 3
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 21
location: ProperFractionFormat.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 138, #gens: 169, #ops: 1, parent:137] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 138
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-138/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(69): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (137(f=1.0), 138(f=1.0), )
Selected to next generation: IDs2--> (137(f=1.0), )
----------Running generation: 70, population size: 1

***** Generation 70 : 0
**Parent Variant: [Variant id: 139, #gens: 170, #ops: 0, parent:-]

--Child created id: 140
--Creating new operations for variant [Variant id: 140, #gens: 170, #ops: 0, parent:139]
---analyzing modificationPoint position: 33
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java202
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 202, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 140, #gens: 171, #ops: 1, parent:139] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 140, errors: [FractionFormat.java:405: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:408: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:408: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:408: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:408: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:408: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:410: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:411: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:411: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:412: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:413: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:413: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:413: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:414: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:414: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:414: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:415: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:416: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:416: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:416: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(70): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (139(f=1.0), 140(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (139(f=1.0), )
----------Running generation: 71, population size: 1

***** Generation 71 : 0
**Parent Variant: [Variant id: 141, #gens: 170, #ops: 0, parent:-]

--Child created id: 142
--Creating new operations for variant [Variant id: 142, #gens: 170, #ops: 0, parent:141]
---analyzing modificationPoint position: 29
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 46
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...]
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 37
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 142, #gens: 169, #ops: 1, parent:141] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 142
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-142/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(71): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (141(f=1.0), 142(f=1.0), )
Selected to next generation: IDs2--> (141(f=1.0), )
----------Running generation: 72, population size: 1

***** Generation 72 : 0
**Parent Variant: [Variant id: 143, #gens: 170, #ops: 0, parent:-]

--Child created id: 144
--Creating new operations for variant [Variant id: 144, #gens: 170, #ops: 0, parent:143]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 10
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch []
location: FractionFormat.java154
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 144, #gens: 170, #ops: 1, parent:143] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 144, errors: [FractionFormat.java:201: error: cannot find symbol
		java.lang.StringBuffer ret = null; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                   		^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:201: error: cannot find symbol
		java.lang.StringBuffer ret = null; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                   		                                		^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:201: error: cannot find symbol
		java.lang.StringBuffer ret = null; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                   		                                		                              		       ^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(72): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (143(f=1.0), 144(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (143(f=1.0), )
----------Running generation: 73, population size: 1

***** Generation 73 : 0
**Parent Variant: [Variant id: 145, #gens: 170, #ops: 0, parent:-]

--Child created id: 146
--Creating new operations for variant [Variant id: 146, #gens: 170, #ops: 0, parent:145]
---analyzing modificationPoint position: 47
---modifPoint 0 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 18
location: ProperFractionFormat.java150
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 146, #gens: 169, #ops: 1, parent:145] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 146
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-146/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(73): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (145(f=1.0), 146(f=1.0), )
Selected to next generation: IDs2--> (145(f=1.0), )
----------Running generation: 74, population size: 1

***** Generation 74 : 0
**Parent Variant: [Variant id: 147, #gens: 170, #ops: 0, parent:-]

--Child created id: 148
--Creating new operations for variant [Variant id: 148, #gens: 170, #ops: 0, parent:147]
---analyzing modificationPoint position: 89
Templates availables169
Attempts Base Ingredients  1 total 169
vars from patch [u, v, k]
--> var from patch: u spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: v spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: k spoon.support.reflect.code.CtVariableReadImpl
location: MathUtils.java424
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (k == 31) { 	throw new java.lang.ArithmeticException("overflow: gcd is 2^31"); } ` -topatch--> `while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]` (spoon.support.reflect.code.CtWhileImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 424, pointed element: CtWhileImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (k == 31) { 	throw new java.lang.ArithmeticException("overflow: gcd is 2^31"); } ` -topatch--> `while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]` (spoon.support.reflect.code.CtWhileImpl) 

--Summary Creation: for variant [Variant id: 148, #gens: 171, #ops: 1, parent:147] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 148
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-148/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(74): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (k == 31) { 	throw new java.lang.ArithmeticException("overflow: gcd is 2^31"); } ` -topatch--> `while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]` (spoon.support.reflect.code.CtWhileImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (147(f=1.0), 148(f=1.0), )
Selected to next generation: IDs2--> (147(f=1.0), )
----------Running generation: 75, population size: 1

***** Generation 75 : 0
**Parent Variant: [Variant id: 149, #gens: 170, #ops: 0, parent:-]

--Child created id: 150
--Creating new operations for variant [Variant id: 150, #gens: 170, #ops: 0, parent:149]
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 67
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 25
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 95, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 150, #gens: 171, #ops: 1, parent:149] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 150, errors: [ProperFractionFormat.java:109: error: unreachable statement
		return toAppendTo; 		int whole = num / den; 		num = num % den; 		if (whole != 0) { 			getWholeFormat().format(whole, toAppendTo, pos); 			toAppendTo.append(' '); 			num = java.lang.Math.abs(num);} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;
		                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(75): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (149(f=1.0), 150(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (149(f=1.0), )
----------Running generation: 76, population size: 1

***** Generation 76 : 0
**Parent Variant: [Variant id: 151, #gens: 170, #ops: 0, parent:-]

--Child created id: 152
--Creating new operations for variant [Variant id: 152, #gens: 170, #ops: 0, parent:151]
---analyzing modificationPoint position: 3
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 4
location: FractionFormat.java76
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 152, #gens: 169, #ops: 1, parent:151] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 152
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-152/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(76): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (151(f=1.0), 152(f=1.0), )
Selected to next generation: IDs2--> (151(f=1.0), )
----------Running generation: 77, population size: 1

***** Generation 77 : 0
**Parent Variant: [Variant id: 153, #gens: 170, #ops: 0, parent:-]

--Child created id: 154
--Creating new operations for variant [Variant id: 154, #gens: 170, #ops: 0, parent:153]
---analyzing modificationPoint position: 6
---modifPoint 0 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 20
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 9
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 32
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java200
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 200, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 154, #gens: 171, #ops: 1, parent:153] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 154, errors: [FractionFormat.java:201: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
	 */ 	public java.lang.StringBuffer format(java.lang.Object obj, java.lang.StringBuffer toAppendTo, java.text.FieldPosition pos) { 		return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefault()); 		java.lang.StringBuffer ret = null;
	    	                                                                                                                             		                                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(77): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (153(f=1.0), 154(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (153(f=1.0), )
----------Running generation: 78, population size: 1

***** Generation 78 : 0
**Parent Variant: [Variant id: 155, #gens: 170, #ops: 0, parent:-]

--Child created id: 156
--Creating new operations for variant [Variant id: 156, #gens: 170, #ops: 0, parent:155]
---analyzing modificationPoint position: 131
Templates availables13
Attempts Base Ingredients  1 total 13
Name Conflict [x, a, b, ret, epsilon, maxIterations, n]
---modifPoint 0 not mutation generated in  ret = (java.lang.Math.exp((((a * java.lang.Math.log(x)) + (b * java.lang.Math.log(1.0 - x))) -  java[...]
---analyzing modificationPoint position: 10
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java154
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 154, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 156, #gens: 171, #ops: 1, parent:155] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 156, errors: [FractionFormat.java:155: error: non-static variable denominatorFormat cannot be referenced from a static context
	 */ 	private static java.text.NumberFormat getDefaultNumberFormat(java.util.Locale locale) { 		denominatorFormat = denominatorFormat; 		java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                        		^, FractionFormat.java:155: error: non-static variable denominatorFormat cannot be referenced from a static context
	 */ 	private static java.text.NumberFormat getDefaultNumberFormat(java.util.Locale locale) { 		denominatorFormat = denominatorFormat; 		java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                        		                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(78): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (155(f=1.0), 156(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (155(f=1.0), )
----------Running generation: 79, population size: 1

***** Generation 79 : 0
**Parent Variant: [Variant id: 157, #gens: 170, #ops: 0, parent:-]

--Child created id: 158
--Creating new operations for variant [Variant id: 158, #gens: 170, #ops: 0, parent:157]
---analyzing modificationPoint position: 6
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 54
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 2 not mutation generated in  int n = source.length()
---analyzing modificationPoint position: 19
location: FractionFormat.java272
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 158, #gens: 169, #ops: 1, parent:157] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 158
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-158/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(79): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (157(f=1.0), 158(f=1.0), )
Selected to next generation: IDs2--> (157(f=1.0), )
----------Running generation: 80, population size: 1

***** Generation 80 : 0
**Parent Variant: [Variant id: 159, #gens: 170, #ops: 0, parent:-]

--Child created id: 160
--Creating new operations for variant [Variant id: 160, #gens: 170, #ops: 0, parent:159]
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 160, #gens: 170, #ops: 1, parent:159] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 160, errors: [ProperFractionFormat.java:199: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(80): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (159(f=1.0), 160(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (159(f=1.0), )
----------Running generation: 81, population size: 1

***** Generation 81 : 0
**Parent Variant: [Variant id: 161, #gens: 170, #ops: 0, parent:-]

--Child created id: 162
--Creating new operations for variant [Variant id: 162, #gens: 170, #ops: 0, parent:161]
---analyzing modificationPoint position: 85
location: MathUtils.java413
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (v > 0) { 	v = -v; }// make v negative  ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 162, #gens: 169, #ops: 1, parent:161] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 162
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-162/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(81): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (v > 0) { 	v = -v; }// make v negative  ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (161(f=1.0), 162(f=1.0), )
Selected to next generation: IDs2--> (161(f=1.0), )
----------Running generation: 82, population size: 1

***** Generation 82 : 0
**Parent Variant: [Variant id: 163, #gens: 170, #ops: 0, parent:-]

--Child created id: 164
--Creating new operations for variant [Variant id: 164, #gens: 170, #ops: 0, parent:163]
---analyzing modificationPoint position: 4
location: FractionFormat.java76
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 164, #gens: 169, #ops: 1, parent:163] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 164
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-164/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(82): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (163(f=1.0), 164(f=1.0), )
Selected to next generation: IDs2--> (163(f=1.0), )
----------Running generation: 83, population size: 1

***** Generation 83 : 0
**Parent Variant: [Variant id: 165, #gens: 170, #ops: 0, parent:-]

--Child created id: 166
--Creating new operations for variant [Variant id: 166, #gens: 170, #ops: 0, parent:165]
---analyzing modificationPoint position: 164
Templates availables36
Attempts Base Ingredients  1 total 36
---modifPoint 0 not mutation generated in  sum = sum + (org.apache.commons.math.special.Gamma.lanczos[i] / (x + i))
---analyzing modificationPoint position: 64
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 166, #gens: 169, #ops: 1, parent:165] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 166
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-166/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(83): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (165(f=1.0), 166(f=1.0), )
Selected to next generation: IDs2--> (165(f=1.0), )
----------Running generation: 84, population size: 1

***** Generation 84 : 0
**Parent Variant: [Variant id: 167, #gens: 170, #ops: 0, parent:-]

--Child created id: 168
--Creating new operations for variant [Variant id: 168, #gens: 170, #ops: 0, parent:167]
---analyzing modificationPoint position: 34
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 4
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 59
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java382
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 382, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 168, #gens: 171, #ops: 1, parent:167] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 168
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-168/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(84): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (167(f=1.0), 168(f=1.0), )
Selected to next generation: IDs2--> (167(f=1.0), )
----------Running generation: 85, population size: 1

***** Generation 85 : 0
**Parent Variant: [Variant id: 169, #gens: 170, #ops: 0, parent:-]

--Child created id: 170
--Creating new operations for variant [Variant id: 170, #gens: 170, #ops: 0, parent:169]
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java149
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 170, #gens: 169, #ops: 1, parent:169] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 170
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-170/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(85): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (169(f=1.0), 170(f=1.0), )
Selected to next generation: IDs2--> (169(f=1.0), )
----------Running generation: 86, population size: 1

***** Generation 86 : 0
**Parent Variant: [Variant id: 171, #gens: 170, #ops: 0, parent:-]

--Child created id: 172
--Creating new operations for variant [Variant id: 172, #gens: 170, #ops: 0, parent:171]
---analyzing modificationPoint position: 10
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch []
location: FractionFormat.java154
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 172, #gens: 170, #ops: 1, parent:171] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 172, errors: [FractionFormat.java:430: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:433: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:433: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:433: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:433: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:433: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:435: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:436: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:436: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:437: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:438: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:438: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:438: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:439: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:439: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:439: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:440: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:441: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:441: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:441: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(86): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (171(f=1.0), 172(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (171(f=1.0), )
----------Running generation: 87, population size: 1

***** Generation 87 : 0
**Parent Variant: [Variant id: 173, #gens: 170, #ops: 0, parent:-]

--Child created id: 174
--Creating new operations for variant [Variant id: 174, #gens: 170, #ops: 0, parent:173]
---analyzing modificationPoint position: 30
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 38
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 174, #gens: 170, #ops: 1, parent:173] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 174, errors: [ProperFractionFormat.java:226: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw new java.lang.IllegalArgumentException(
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(87): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (173(f=1.0), 174(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (173(f=1.0), )
----------Running generation: 88, population size: 1

***** Generation 88 : 0
**Parent Variant: [Variant id: 175, #gens: 170, #ops: 0, parent:-]

--Child created id: 176
--Creating new operations for variant [Variant id: 176, #gens: 170, #ops: 0, parent:175]
---analyzing modificationPoint position: 23
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 26
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java96
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 96, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 176, #gens: 170, #ops: 1, parent:175] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 176
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-176/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(88): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (175(f=1.0), 176(f=1.0), )
Selected to next generation: IDs2--> (175(f=1.0), )
----------Running generation: 89, population size: 1

***** Generation 89 : 0
**Parent Variant: [Variant id: 177, #gens: 170, #ops: 0, parent:-]

--Child created id: 178
--Creating new operations for variant [Variant id: 178, #gens: 170, #ops: 0, parent:177]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]
---analyzing modificationPoint position: 82
location: Fraction.java226
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 178, #gens: 169, #ops: 1, parent:177] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 178, errors: [Fraction.java:228: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(89): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (177(f=1.0), 178(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (177(f=1.0), )
----------Running generation: 90, population size: 1

***** Generation 90 : 0
**Parent Variant: [Variant id: 179, #gens: 170, #ops: 0, parent:-]

--Child created id: 180
--Creating new operations for variant [Variant id: 180, #gens: 170, #ops: 0, parent:179]
---analyzing modificationPoint position: 4
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 90
---modifPoint 1 not mutation generated in  // B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]
---analyzing modificationPoint position: 3
location: ProperFractionFormat.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 180, #gens: 169, #ops: 1, parent:179] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 180
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-180/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(90): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (179(f=1.0), 180(f=1.0), )
Selected to next generation: IDs2--> (179(f=1.0), )
----------Running generation: 91, population size: 1

***** Generation 91 : 0
**Parent Variant: [Variant id: 181, #gens: 170, #ops: 0, parent:-]

--Child created id: 182
--Creating new operations for variant [Variant id: 182, #gens: 170, #ops: 0, parent:181]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 22
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 29
location: ProperFractionFormat.java104
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 182, #gens: 169, #ops: 1, parent:181] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 182
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-182/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(91): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (181(f=1.0), 182(f=1.0), )
Selected to next generation: IDs2--> (181(f=1.0), )
----------Running generation: 92, population size: 1

***** Generation 92 : 0
**Parent Variant: [Variant id: 183, #gens: 170, #ops: 0, parent:-]

--Child created id: 184
--Creating new operations for variant [Variant id: 184, #gens: 170, #ops: 0, parent:183]
---analyzing modificationPoint position: 3
location: ProperFractionFormat.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 184, #gens: 169, #ops: 1, parent:183] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 184
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-184/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(92): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (183(f=1.0), 184(f=1.0), )
Selected to next generation: IDs2--> (183(f=1.0), )
----------Running generation: 93, population size: 1

***** Generation 93 : 0
**Parent Variant: [Variant id: 185, #gens: 170, #ops: 0, parent:-]

--Child created id: 186
--Creating new operations for variant [Variant id: 186, #gens: 170, #ops: 0, parent:185]
---analyzing modificationPoint position: 30
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 6
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 18
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java150
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 150, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 186, #gens: 171, #ops: 1, parent:185] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 186, errors: [ProperFractionFormat.java:150: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return wholeFormat;
			                            			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(93): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (185(f=1.0), 186(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (185(f=1.0), )
----------Running generation: 94, population size: 1

***** Generation 94 : 0
**Parent Variant: [Variant id: 187, #gens: 170, #ops: 0, parent:-]

--Child created id: 188
--Creating new operations for variant [Variant id: 188, #gens: 170, #ops: 0, parent:187]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]
---analyzing modificationPoint position: 33
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 8
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 2 not mutation generated in  java.text.NumberFormat f = org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(lo[...]
---analyzing modificationPoint position: 15
location: ProperFractionFormat.java228
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 188, #gens: 169, #ops: 1, parent:187] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 188
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-188/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(94): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (187(f=1.0), 188(f=1.0), )
Selected to next generation: IDs2--> (187(f=1.0), )
----------Running generation: 95, population size: 1

***** Generation 95 : 0
**Parent Variant: [Variant id: 189, #gens: 170, #ops: 0, parent:-]

--Child created id: 190
--Creating new operations for variant [Variant id: 190, #gens: 170, #ops: 0, parent:189]
---analyzing modificationPoint position: 60
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 95
Templates availables169
Attempts Base Ingredients  1 total 169
---modifPoint 1 not mutation generated in  if ((u * v) == 0) { 	return java.lang.Math.abs(u) + java.lang.Math.abs(v); }
---analyzing modificationPoint position: 5
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
SameName: java.text.NumberFormat denominatorFormat
SameName: java.text.NumberFormat denominatorFormat
Transforming shadowed variable in return denominatorFormat
location: FractionFormat.java77
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 77, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 190, #gens: 171, #ops: 1, parent:189] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 190, errors: [FractionFormat.java:328: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:331: error: illegal start of expression
	 * Parses a string to produce a object.
	 ^, FractionFormat.java:331: error: ';' expected
	 * Parses a string to produce a object.
	         ^, FractionFormat.java:331: error: ';' expected
	 * Parses a string to produce a object.
	                  ^, FractionFormat.java:331: error: ';' expected
	 * Parses a string to produce a object.
	                             ^, FractionFormat.java:331: error: ';' expected
	 * Parses a string to produce a object.
	                                      ^, FractionFormat.java:333: error: <identifier> expected
	 * @param source
	                ^, FractionFormat.java:334: error: ';' expected
	 * 		the string to parse
	   		          ^, FractionFormat.java:334: error: ';' expected
	 * 		the string to parse
	   		                   ^, FractionFormat.java:335: error: <identifier> expected
	 * @param pos
	             ^, FractionFormat.java:336: error: not a statement
	 * 		input/ouput parsing parameter.
	   		     ^, FractionFormat.java:336: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		           ^, FractionFormat.java:336: error: ';' expected
	 * 		input/ouput parsing parameter.
	   		                             ^, FractionFormat.java:337: error: <identifier> expected
	 * @return the parsed object.
	    ^, FractionFormat.java:337: error: ';' expected
	 * @return the parsed object.
	              ^, FractionFormat.java:337: error: ';' expected
	 * @return the parsed object.
	                            ^, FractionFormat.java:338: error: illegal character: '#'
	 * @see java.text.Format#parseObject(java.lang.String, java.text.ParsePosition)
	                        ^, FractionFormat.java:339: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	  ^, FractionFormat.java:339: error: illegal start of expression
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	       ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	           ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	            ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                 ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                        ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                   ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                    ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                        ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                         ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                             ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                              ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                     ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                           ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                             ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                 ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                  ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                      ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                       ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                     ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                        ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                          ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		       ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		            ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		             ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                   ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                     ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                        ^, FractionFormat.java:339: error: case, default, or '}' expected
	 */ 	public java.lang.Object parseObject(java.lang.String source, java.text.ParsePosition pos) { 		return parse(source, pos);} 	/**
	    	                                                                                            		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(95): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (189(f=1.0), 190(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (189(f=1.0), )
----------Running generation: 96, population size: 1

***** Generation 96 : 0
**Parent Variant: [Variant id: 191, #gens: 170, #ops: 0, parent:-]

--Child created id: 192
--Creating new operations for variant [Variant id: 192, #gens: 170, #ops: 0, parent:191]
---analyzing modificationPoint position: 0
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: FractionFormat.java233
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 192, #gens: 170, #ops: 1, parent:191] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 192, errors: [FractionFormat.java:233: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.text.NumberFormat
	 */ 	public java.text.NumberFormat getNumeratorFormat() { 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
	    	                                                     		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(96): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (191(f=1.0), 192(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (191(f=1.0), )
----------Running generation: 97, population size: 1

***** Generation 97 : 0
**Parent Variant: [Variant id: 193, #gens: 170, #ops: 0, parent:-]

--Child created id: 194
--Creating new operations for variant [Variant id: 194, #gens: 170, #ops: 0, parent:193]
---analyzing modificationPoint position: 24
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 13
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: FractionFormat.java157
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 157, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 194, #gens: 170, #ops: 1, parent:193] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 194, errors: [FractionFormat.java:157: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.text.NumberFormat
		nf.setParseIntegerOnly(true); 		return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefault());
		                              		                                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(97): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (193(f=1.0), 194(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (193(f=1.0), )
----------Running generation: 98, population size: 1

***** Generation 98 : 0
**Parent Variant: [Variant id: 195, #gens: 170, #ops: 0, parent:-]

--Child created id: 196
--Creating new operations for variant [Variant id: 196, #gens: 170, #ops: 0, parent:195]
---analyzing modificationPoint position: 57
location: FractionFormat.java378
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 196, #gens: 169, #ops: 1, parent:195] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 196, errors: [FractionFormat.java:380: error: variable c might not have been initialized
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(98): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (195(f=1.0), 196(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (195(f=1.0), )
----------Running generation: 99, population size: 1

***** Generation 99 : 0
**Parent Variant: [Variant id: 197, #gens: 170, #ops: 0, parent:-]

--Child created id: 198
--Creating new operations for variant [Variant id: 198, #gens: 170, #ops: 0, parent:197]
---analyzing modificationPoint position: 51
location: FractionFormat.java360
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 198, #gens: 169, #ops: 1, parent:197] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 198
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-198/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(99): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (197(f=1.0), 198(f=1.0), )
Selected to next generation: IDs2--> (197(f=1.0), )
----------Running generation: 100, population size: 1

***** Generation 100 : 0
**Parent Variant: [Variant id: 199, #gens: 170, #ops: 0, parent:-]

--Child created id: 200
--Creating new operations for variant [Variant id: 200, #gens: 170, #ops: 0, parent:199]
---analyzing modificationPoint position: 42
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 1
location: ProperFractionFormat.java59
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 200, #gens: 169, #ops: 1, parent:199] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 200
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-200/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(100): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (199(f=1.0), 200(f=1.0), )
Selected to next generation: IDs2--> (199(f=1.0), )
----------Running generation: 101, population size: 1

***** Generation 101 : 0
**Parent Variant: [Variant id: 201, #gens: 170, #ops: 0, parent:-]

--Child created id: 202
--Creating new operations for variant [Variant id: 202, #gens: 170, #ops: 0, parent:201]
---analyzing modificationPoint position: 22
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 202, #gens: 170, #ops: 1, parent:201] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 202
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-202/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(101): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (201(f=1.0), 202(f=1.0), )
Selected to next generation: IDs2--> (201(f=1.0), )
----------Running generation: 102, population size: 1

***** Generation 102 : 0
**Parent Variant: [Variant id: 203, #gens: 170, #ops: 0, parent:-]

--Child created id: 204
--Creating new operations for variant [Variant id: 204, #gens: 170, #ops: 0, parent:203]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 14
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]
---analyzing modificationPoint position: 9
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(f)
---analyzing modificationPoint position: 30
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 204, #gens: 170, #ops: 1, parent:203] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 204
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-204/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(102): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (203(f=1.0), 204(f=1.0), )
Selected to next generation: IDs2--> (203(f=1.0), )
----------Running generation: 103, population size: 1

***** Generation 103 : 0
**Parent Variant: [Variant id: 205, #gens: 170, #ops: 0, parent:-]

--Child created id: 206
--Creating new operations for variant [Variant id: 206, #gens: 170, #ops: 0, parent:205]
---analyzing modificationPoint position: 41
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java383
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 383, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 206, #gens: 171, #ops: 1, parent:205] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 206, errors: [FractionFormat.java:384: error: non-static variable numeratorFormat cannot be referenced from a static context
				ret = c; 				numeratorFormat = numeratorFormat;
				         				^, FractionFormat.java:384: error: non-static variable numeratorFormat cannot be referenced from a static context
				ret = c; 				numeratorFormat = numeratorFormat;
				         				                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(103): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (205(f=1.0), 206(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (205(f=1.0), )
----------Running generation: 104, population size: 1

***** Generation 104 : 0
**Parent Variant: [Variant id: 207, #gens: 170, #ops: 0, parent:-]

--Child created id: 208
--Creating new operations for variant [Variant id: 208, #gens: 170, #ops: 0, parent:207]
---analyzing modificationPoint position: 34
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 59
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 13
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 14
location: ProperFractionFormat.java224
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 208, #gens: 169, #ops: 1, parent:207] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 208
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-208/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(104): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (207(f=1.0), 208(f=1.0), )
Selected to next generation: IDs2--> (207(f=1.0), )
----------Running generation: 105, population size: 1

***** Generation 105 : 0
**Parent Variant: [Variant id: 209, #gens: 170, #ops: 0, parent:-]

--Child created id: 210
--Creating new operations for variant [Variant id: 210, #gens: 170, #ops: 0, parent:209]
---analyzing modificationPoint position: 1
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 31
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 9
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: FractionFormat.java133
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(f) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 133, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(f) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 210, #gens: 170, #ops: 1, parent:209] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 210, errors: [FractionFormat.java:144: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.FractionFormat
		return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDefault());} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(105): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(f) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (209(f=1.0), 210(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (209(f=1.0), )
----------Running generation: 106, population size: 1

***** Generation 106 : 0
**Parent Variant: [Variant id: 211, #gens: 170, #ops: 0, parent:-]

--Child created id: 212
--Creating new operations for variant [Variant id: 212, #gens: 170, #ops: 0, parent:211]
---analyzing modificationPoint position: 34
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 57
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java378
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 378, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 212, #gens: 171, #ops: 1, parent:211] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 212, errors: [FractionFormat.java:379: error: non-static variable denominatorFormat cannot be referenced from a static context
				c = source.charAt(index++); 				return denominatorFormat;
				                            				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(106): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (211(f=1.0), 212(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (211(f=1.0), )
----------Running generation: 107, population size: 1

***** Generation 107 : 0
**Parent Variant: [Variant id: 213, #gens: 170, #ops: 0, parent:-]

--Child created id: 214
--Creating new operations for variant [Variant id: 214, #gens: 170, #ops: 0, parent:213]
---analyzing modificationPoint position: 46
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw new java.text.ParseException(("Unparseable fraction numb[...]
---analyzing modificationPoint position: 26
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java96
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 96, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 214, #gens: 170, #ops: 1, parent:213] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 214
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-214/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(107): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (213(f=1.0), 214(f=1.0), )
Selected to next generation: IDs2--> (213(f=1.0), )
----------Running generation: 108, population size: 1

***** Generation 108 : 0
**Parent Variant: [Variant id: 215, #gens: 170, #ops: 0, parent:-]

--Child created id: 216
--Creating new operations for variant [Variant id: 216, #gens: 170, #ops: 0, parent:215]
---analyzing modificationPoint position: 13
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 5
Templates availables68
Attempts Base Ingredients  1 total 68
---modifPoint 1 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 88
Templates availables169
Attempts Base Ingredients  1 total 169
---modifPoint 2 not mutation generated in  while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]
---analyzing modificationPoint position: 41
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch []
location: FractionFormat.java383
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 383, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 216, #gens: 171, #ops: 1, parent:215] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 216
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-216/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(108): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (215(f=1.0), 216(f=1.0), )
Selected to next generation: IDs2--> (215(f=1.0), )
----------Running generation: 109, population size: 1

***** Generation 109 : 0
**Parent Variant: [Variant id: 217, #gens: 170, #ops: 0, parent:-]

--Child created id: 218
--Creating new operations for variant [Variant id: 218, #gens: 170, #ops: 0, parent:217]
---analyzing modificationPoint position: 48
Templates availables68
Attempts Base Ingredients  1 total 68
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java264
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 264, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 218, #gens: 171, #ops: 1, parent:217] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 218
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-218/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(109): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (217(f=1.0), 218(f=1.0), )
Selected to next generation: IDs2--> (217(f=1.0), )
----------Running generation: 110, population size: 1

***** Generation 110 : 0
**Parent Variant: [Variant id: 219, #gens: 170, #ops: 0, parent:-]

--Child created id: 220
--Creating new operations for variant [Variant id: 220, #gens: 170, #ops: 0, parent:219]
---analyzing modificationPoint position: 31
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 60
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 21
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 28
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 220, #gens: 170, #ops: 1, parent:219] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 220
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-220/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(110): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (219(f=1.0), 220(f=1.0), )
Selected to next generation: IDs2--> (219(f=1.0), )
----------Running generation: 111, population size: 1

***** Generation 111 : 0
**Parent Variant: [Variant id: 221, #gens: 170, #ops: 0, parent:-]

--Child created id: 222
--Creating new operations for variant [Variant id: 222, #gens: 170, #ops: 0, parent:221]
---analyzing modificationPoint position: 160
---modifPoint 0 not mutation generated in  return c
---analyzing modificationPoint position: 29
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java104
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 104, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 222, #gens: 170, #ops: 1, parent:221] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 222
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-222/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(111): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (221(f=1.0), 222(f=1.0), )
Selected to next generation: IDs2--> (221(f=1.0), )
----------Running generation: 112, population size: 1

***** Generation 112 : 0
**Parent Variant: [Variant id: 223, #gens: 170, #ops: 0, parent:-]

--Child created id: 224
--Creating new operations for variant [Variant id: 224, #gens: 170, #ops: 0, parent:223]
---analyzing modificationPoint position: 5
location: FractionFormat.java77
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 224, #gens: 169, #ops: 1, parent:223] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 224
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-224/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 9] ,[]
-Valid?: |false|1|9|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(112): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (223(f=1.0), 224(f=1.0), )
Selected to next generation: IDs2--> (223(f=1.0), )
----------Running generation: 113, population size: 1

***** Generation 113 : 0
**Parent Variant: [Variant id: 225, #gens: 170, #ops: 0, parent:-]

--Child created id: 226
--Creating new operations for variant [Variant id: 226, #gens: 170, #ops: 0, parent:225]
---analyzing modificationPoint position: 14
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw new java.lang.IllegalArgumentException( 	"whole format can not be null.[...]
---analyzing modificationPoint position: 3
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 57
location: FractionFormat.java378
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 226, #gens: 169, #ops: 1, parent:225] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 226, errors: [FractionFormat.java:380: error: variable c might not have been initialized
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(113): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (225(f=1.0), 226(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (225(f=1.0), )
----------Running generation: 114, population size: 1

***** Generation 114 : 0
**Parent Variant: [Variant id: 227, #gens: 170, #ops: 0, parent:-]

--Child created id: 228
--Creating new operations for variant [Variant id: 228, #gens: 170, #ops: 0, parent:227]
---analyzing modificationPoint position: 59
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 73
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: FDistributionImpl.java148
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return 0.0` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.distribution.FDistributionImpl line: 148, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return 0.0` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 228, #gens: 170, #ops: 1, parent:227] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 228
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-228/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.distribution.FDistributionTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 9] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout165secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/variant-228/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-95/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.geometry.RotationOrderTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.estimation.EstimatedParameterTest  org.apache.commons.math.ConvergenceExceptionTest  org.apache.commons.math.optimization.MultiDirectionalTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.linear.RealMatrixImplTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.BrentSolverTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.analysis.BisectionSolverTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.geometry.Vector3DFormatTest  org.apache.commons.math.analysis.NewtonSolverTest  org.apache.commons.math.DuplicateSampleAbscissaExceptionTest  org.apache.commons.math.estimation.MinpackTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest  org.apache.commons.math.FunctionEvaluationExceptionTest  org.apache.commons.math.estimation.WeightedMeasurementTest  org.apache.commons.math.stat.inference.TTestFactoryTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.linear.MatrixIndexExceptionTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.BigMatrixImplTest  org.apache.commons.math.stat.inference.ChiSquareFactoryTest  org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.linear.LUDecompositionImplTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.linear.QRDecompositionImplTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.analysis.RombergIntegratorTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.analysis.NevilleInterpolatorTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ArgumentOutsideDomainExceptionTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.linear.RealVectorImplTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.optimization.NelderMeadTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.analysis.PolynomialSplineFunctionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.MaxIterationsExceededExceptionTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.geometry.RotationTest  org.apache.commons.math.analysis.LaguerreSolverTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.geometry.Vector3DTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.analysis.MullerSolverTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.geometry.FrenchVector3DFormatTest  org.apache.commons.math.analysis.SimpsonIntegratorTest  org.apache.commons.math.analysis.TrapezoidIntegratorTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.MathConfigurationExceptionTest  org.apache.commons.math.estimation.GaussNewtonEstimatorTest  org.apache.commons.math.analysis.RiddersSolverTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.analysis.PolynomialFunctionTest  org.apache.commons.math.analysis.SplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.linear.InvalidMatrixExceptionTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 1303] ,[]
-Valid?: |true|0|1303|[]|, fitness 0.0
-Found Solution, child variant #228
Ingredient counter is Zero

Attempts to find patch Id 228: 0, successful 0, failing 0

-Saving child on disk variant #228 at /Users/marekmazur/astor/./output_astor/AstorMain-math-95//src//variant-228

-Saving child on disk variant #228 at /Users/marekmazur/astor/./output_astor/AstorMain-math-95//src//variant-228_f
---Undoing: gnrtn(114): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return 0.0` (spoon.support.reflect.code.CtReturnImpl) 
/Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/default_f/org/apache/commons/math/distribution/FDistributionImpl.java
/Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/variant-228_f/org/apache/commons/math/distribution/FDistributionImpl.java
diff command : diff -w -b  --label=/src/java/org/apache/commons/math/distribution/FDistributionImpl.java --label=/src/java/org/apache/commons/math/distribution/FDistributionImpl.java /Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/default_f/org/apache/commons/math/distribution/FDistributionImpl.java /Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/variant-228_f/org/apache/commons/math/distribution/FDistributionImpl.java --unified=0
/Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/default/org/apache/commons/math/distribution/FDistributionImpl.java
/Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/variant-228/org/apache/commons/math/distribution/FDistributionImpl.java
diff command : diff -w -b  --label=/src/java/org/apache/commons/math/distribution/FDistributionImpl.java --label=/src/java/org/apache/commons/math/distribution/FDistributionImpl.java /Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/default/org/apache/commons/math/distribution/FDistributionImpl.java /Users/marekmazur/astor/./output_astor/AstorMain-math-95/src/variant-228/org/apache/commons/math/distribution/FDistributionImpl.java --unified=0
Generation 1
Generation 2
Generation 3
Generation 4
Generation 5
Generation 6
Generation 7
Generation 8
Generation 9
Generation 10
Generation 11
Generation 12
Generation 13
Generation 14
Generation 15
Generation 16
Generation 17
Generation 18
Generation 19
Generation 20
Generation 21
Generation 22
Generation 23
Generation 24
Generation 25
Generation 26
Generation 27
Generation 28
Generation 29
Generation 30
Generation 31
Generation 32
Generation 33
Generation 34
Generation 35
Generation 36
Generation 37
Generation 38
Generation 39
Generation 40
Generation 41
Generation 42
Generation 43
Generation 44
Generation 45
Generation 46
Generation 47
Generation 48
Generation 49
Generation 50
Generation 51
Generation 52
Generation 53
Generation 54
Generation 55
Generation 56
Generation 57
Generation 58
Generation 59
Generation 60
Generation 61
Generation 62
Generation 63
Generation 64
Generation 65
Generation 66
Generation 67
Generation 68
Generation 69
Generation 70
Generation 71
Generation 72
Generation 73
Generation 74
Generation 75
Generation 76
Generation 77
Generation 78
Generation 79
Generation 80
Generation 81
Generation 82
Generation 83
Generation 84
Generation 85
Generation 86
Generation 87
Generation 88
Generation 89
Generation 90
Generation 91
Generation 92
Generation 93
Generation 94
Generation 95
Generation 96
Generation 97
Generation 98
Generation 99
Generation 100
Generation 101
Generation 102
Generation 103
Generation 104
Generation 105
Generation 106
Generation 107
Generation 108
Generation 109
Generation 110
Generation 111
Generation 112
Generation 113
Generation 114
Storing ing JSON at ./diffSolutions/patchinfo_228.json
./diffSolutions/patchinfo_228.json:
{"VARIANT_ID":"228","VALIDATION":"|true|0|1303|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.distribution.FDistributionImpl","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-95\\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0,167","INGREDIENT_PARENT":"return 0.0","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"return ret","BUGGY_CODE_TYPE":"CtReturnImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-95\\\/\\\/src\\\/\\\/variant-228\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","LINE":"148","MP_RANKING":"73","PATCH_HUNK_CODE":"return 0.0"}],"TIME":"58","GENERATION":"114","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-95\\\/\\\/src\\\/\\\/variant-228","PATCH_DIFF_ORIG":"--- \\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n+++ \\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n@@ -147,2 +147,2 @@\\n-\\t\\tret = d \\\/ (d - 2.0);\\n-\\t\\treturn ret;\\n+\\t\\tret = d \\\/ (d - 2.0); \\t\\treturn 0.0;\\n+\\n\\n"}
Saving patch info at ./diffSolutions/patchinfo_228.json
Storing ing JSON at /Users/marekmazur/astor/./diffSolutions/patch_58579_228.diff
/Users/marekmazur/astor/./diffSolutions/patch_58579_228.diff:
{"VARIANT_ID":"228","VALIDATION":"|true|0|1303|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.distribution.FDistributionImpl","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-95\\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0,167","INGREDIENT_PARENT":"return 0.0","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"return ret","BUGGY_CODE_TYPE":"CtReturnImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-95\\\/\\\/src\\\/\\\/variant-228\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","LINE":"148","MP_RANKING":"73","PATCH_HUNK_CODE":"return 0.0"}],"TIME":"58","GENERATION":"114","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-95\\\/\\\/src\\\/\\\/variant-228","PATCH_DIFF_ORIG":"--- \\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n+++ \\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n@@ -147,2 +147,2 @@\\n-\\t\\tret = d \\\/ (d - 2.0);\\n-\\t\\treturn ret;\\n+\\t\\tret = d \\\/ (d - 2.0); \\t\\treturn 0.0;\\n+\\n\\n"}
Saving patch diff at /Users/marekmazur/astor/./diffSolutions/patch_58579_228.diff
End analysis generation - Solutions found:--> (228(SOLUTION)(f=0.0), )
Variants to next generation from: 2-->IDs: (228(f=0.0)[SOL], 227(f=1.0), )
Selected to next generation: IDs2--> (227(f=1.0), )
Max Solution found 1
Time Repair Loop (s): 58.579
generationsexecuted: 114
----SUMMARY_EXECUTION---
End Repair Search: Found solution
Solution stored at: /Users/marekmazur/astor/./output_astor/AstorMain-math-95//src/
Number solutions:1
f (sol): 0.0, [Variant id: 228 (SOL) , #gens: 170, #ops: 1, parent:227]
All variants:
f 1.0, [Variant id: 229, #gens: 170, #ops: 0, parent:-]
Number suspicious:1

 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 228
 
time(sec)= 58
operation: ReplaceOp
location= org.apache.commons.math.distribution.FDistributionImpl
line= 148
lineSuspiciousness= 0,167
lineSuspiciousness= 73
original statement= return ret
buggy kind= CtReturnImpl|CtBlockImpl
fixed statement= return 0.0
Patch kind= CtReturnImpl|CtBlockImpl
generation= 114
ingredientScope= LOCAL
validation=|true|0|1303|[]|
diffpatch=--- /src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ /src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -135 +135 @@
-		return ret;
+		return 0.0;


diffpatchoriginal=--- /src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ /src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -147,2 +147,2 @@
-		ret = d / (d - 2.0);
-		return ret;
+		ret = d / (d - 2.0); 		return 0.0;
+



Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=58.579
NR_GENERATIONS=114
NR_RIGHT_COMPILATIONS=69
NR_FAILLING_COMPILATIONS=45
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND
FAULT_LOCALIZATION=flacoco

Patch stats:

Patch 1
VARIANT_ID=228
TIME=58
VALIDATION=|true|0|1303|[]|
GENERATION=114
FOLDER_SOLUTION_CODE=/Users/marekmazur/astor/./output_astor/AstorMain-math-95//src//variant-228
--Patch Hunk #1
OPERATOR=ReplaceOp

LOCATION=org.apache.commons.math.distribution.FDistributionImpl

PATH=/Users/marekmazur/astor/defects4j/math-95/src/java/org/apache/commons/math/distribution/FDistributionImpl.java

MODIFIED_FILE_PATH=/Users/marekmazur/astor/./output_astor/AstorMain-math-95//src//variant-228/org/apache/commons/math/distribution/FDistributionImpl.java

LINE=148

SUSPICIOUNESS=0,167

MP_RANKING=73

ORIGINAL_CODE=return ret

BUGGY_CODE_TYPE=CtReturnImpl|CtBlockImpl

PATCH_HUNK_CODE=return 0.0

PATCH_HUNK_TYPE=CtReturnImpl|CtBlockImpl

INGREDIENT_SCOPE=LOCAL

INGREDIENT_PARENT=return 0.0

PATCH_DIFF_ORIG=--- /src/java/org/apache/commons/math/distribution/FDistributionImpl.java
+++ /src/java/org/apache/commons/math/distribution/FDistributionImpl.java
@@ -147,2 +147,2 @@
-		ret = d / (d - 2.0);
-		return ret;
+		ret = d / (d - 2.0); 		return 0.0;
+



Storing ing JSON at /Users/marekmazur/astor/./output_astor/AstorMain-math-95//astor_output.json
astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":69,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","FAULT_LOCALIZATION":"flacoco","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":45,"NR_GENERATIONS":114,"TOTAL_TIME":58.579,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"228","VALIDATION":"|true|0|1303|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.distribution.FDistributionImpl","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-95\\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0,167","INGREDIENT_PARENT":"return 0.0","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"return ret","BUGGY_CODE_TYPE":"CtReturnImpl|CtBlockImpl","OPERATOR":"ReplaceOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-95\\\/\\\/src\\\/\\\/variant-228\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java","LINE":"148","MP_RANKING":"73","PATCH_HUNK_CODE":"return 0.0"}],"TIME":"58","GENERATION":"114","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-95\\\/\\\/src\\\/\\\/variant-228","PATCH_DIFF_ORIG":"--- \\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n+++ \\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/distribution\\\/FDistributionImpl.java\\n@@ -147,2 +147,2 @@\\n-\\t\\tret = d \\\/ (d - 2.0);\\n-\\t\\treturn ret;\\n+\\t\\tret = d \\\/ (d - 2.0); \\t\\treturn 0.0;\\n+\\n\\n"}]}
Time Total(s): 116.778
