[0] INFO ProjectConfiguration - Version of the JVM used: 1.8.0_202
[1] INFO main - Java version of the JDK used to run tests: 1.8.0_202
[1] INFO main - The compliance of the JVM is:  8
[2] INFO main - command line arguments: [-location  /Users/marekmazur/astor/defects4j/math-40  -mode  jgenprog  -package  org.apache.commons  -jvm4testexecution  /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin  -failing  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -stopfirst  true  -dependencies  /Users/marekmazur/astor/examples/libs/junit-4.4.jar  -maxgen  1000000  -seed  10  -maxtime  60  -scope  local  -stopfirst  true  -flthreshold  0  -population  1  -faultlocalization  flacoco]
[7] INFO AstorMain - Running Astor on a JDK at /Users/marekmazur/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre
Source folders: [/Users/marekmazur/astor/defects4j/math-40/src/main/java]
Source Test folders: [/Users/marekmazur/astor/defects4j/math-40/src/test]
---- Creating spoon model
Creating model,  Code location from working folder: /Users/marekmazur/astor/defects4j/math-40/src/main/java
building model: /Users/marekmazur/astor/defects4j/math-40/src/main/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/Users/marekmazur/astor/examples/libs/junit-4.4.jar]
Spoon Model built from location: /Users/marekmazur/astor/defects4j/math-40/src/main/java
Number of CtTypes created: 578
Running chosen test detection strategy: CLASSLOADER
Test retrieved from classes: 305
Running Flacoco...
Running spectrum-based fault localization...
FlacocoConfig{workspace='/Users/marekmazur/astor/.', projectPath='/Users/marekmazur/astor/defects4j/math-40', srcJavaDir=[/Users/marekmazur/astor/defects4j/math-40/src/main/java], srcTestDir=[/Users/marekmazur/astor/defects4j/math-40/src/test], binJavaDir=[/Users/marekmazur/astor/defects4j/math-40/target/classes], binTestDir=[/Users/marekmazur/astor/defects4j/math-40/target/test-classes], classpath='/Users/marekmazur/astor/examples/libs/junit-4.4.jar', customJUnitClasspath='null', customJacocoClasspath='null', mavenHome='/Users/marekmazur/.m2/repository/', coverTests=false, testRunnerVerbose=false, testRunnerTimeoutInMs=3600000, testRunnerJVMArgs='null', threshold=0.0, includeZeros=false, complianceLevel=8, testDetectionStrategy=CLASSLOADER, ignoredTests=[], jUnit4Tests=[org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.random.Well19937cTest#testNextZipf, org.apache.commons.math.linear.QRSolverTest#testOverdetermined, org.apache.commons.math.fraction.BigFractionTest#testPow, org.apache.commons.math.linear.ConjugateGradientTest#testNonSquareOperator, org.apache.commons.math.random.Well512aTest#testDoubleDirect, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, org.apache.commons.math.random.Well44497aTest#testNextLongDirect, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction, org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow, org.apache.commons.math.distribution.TDistributionTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, org.apache.commons.math.random.Well44497aTest#testNextWeibull, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1, org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, org.apache.commons.math.util.FastMathTestPerformance#testHypot, org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, org.apache.commons.math.util.MathUtilsTest#testSignInt, org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, org.apache.commons.math.fraction.FractionTest#testDoubleValue, org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, org.apache.commons.math.linear.EigenDecompositionTest#testAEqualVDVt, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial, org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, org.apache.commons.math.random.Well1024aTest#testNextSample, org.apache.commons.math.complex.ComplexTest#testScalarAdd, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, org.apache.commons.math.random.Well44497bTest#testNextBeta, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2, org.apache.commons.math.linear.QRDecompositionTest#testDimensions, org.apache.commons.math.linear.EigenSolverTest#testSolve, org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, org.apache.commons.math.util.BigRealTest#testConstructor, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations, org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, org.apache.commons.math.distribution.CauchyDistributionTest#testDensities, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, org.apache.commons.math.util.FastMathTest#testLogSpecialCases, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue, org.apache.commons.math.random.Well1024aTest#testNextZipf, org.apache.commons.math.random.Well44497aTest#testNextLong2, org.apache.commons.math.linear.QRDecompositionTest#testMatricesValues, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, org.apache.commons.math.genetics.RandomKeyTest#testIsSame, org.apache.commons.math.util.FastMathTest#testAtanAccuracy, org.apache.commons.math.fraction.FractionTest#testCompareTo, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519, org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.util.MathArraysTest#testSortInPlaceFailures, org.apache.commons.math.distribution.ZipfDistributionTest#testMoments, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid, org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointOperator, org.apache.commons.math.optimization.BatteryNISTTest#misra1aTest, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, org.apache.commons.math.dfp.DfpTest#testPower10K, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry, org.apache.commons.math.distribution.NormalDistributionTest#testDensities, org.apache.commons.math.linear.CholeskyDecompositionTest#testMath274, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, org.apache.commons.math.random.Well19937aTest#testDoubleDirect, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, org.apache.commons.math.analysis.function.GaussianTest#testParametricValue, org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, org.apache.commons.math.util.FastMathTest#testCosAccuracy, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, org.apache.commons.math.linear.PivotingQRDecompositionTest#testAEqualQR, org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient, org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse, org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples, org.apache.commons.math.random.Well512aTest#testNexBoolean2, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide, org.apache.commons.math.util.IncrementorTest#testAccessor, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.distribution.BetaDistributionTest#testDensity, org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, org.apache.commons.math.util.MathArraysTest#testCopyOfDouble2, org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchSolution, org.apache.commons.math.util.MathArraysTest#testCopyOfDouble3, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues, org.apache.commons.math.random.Well44497bTest#testFloatDirect, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoIntercept_noint1, org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock, org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance, org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, org.apache.commons.math.complex.ComplexTest#testTanhCritical, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast, org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, org.apache.commons.math.random.Well1024aTest#testNextFloatDirect, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5, org.apache.commons.math.fraction.FractionFieldTest#testSerial, org.apache.commons.math.linear.SparseRealVectorTest#testMisc, org.apache.commons.math.complex.ComplexTest#testCosInf, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, org.apache.commons.math.linear.RealVectorTest#testClone, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues1, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, org.apache.commons.math.random.Well512aTest#testNextSample, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, org.apache.commons.math.util.PairTest#testAccessor, org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues2, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2, org.apache.commons.math.distribution.GammaDistributionTest#testValues, org.apache.commons.math.random.Well19937aTest#testNextLong, org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedDelta, org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.distribution.BetaDistributionTest#testMoments, org.apache.commons.math.distribution.PoissonDistributionTest#testNegativeMean, org.apache.commons.math.util.PrecisionTest#testCompareToEpsilon, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, org.apache.commons.math.random.RandomDataTest#testNextPoisson, org.apache.commons.math.random.ValueServerTest#testFixedSeed, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, org.apache.commons.math.random.Well1024aTest#testFloatDirect, org.apache.commons.math.linear.FieldLUSolverTest#testSingular, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, org.apache.commons.math.fraction.BigFractionTest#testNegate, org.apache.commons.math.complex.ComplexTest#testExpInf, org.apache.commons.math.random.Well44497aTest#testNextBeta, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.genetics.RandomKeyTest#testDecode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere, org.apache.commons.math.random.Well512aTest#testNextUniform, org.apache.commons.math.util.TransformerMapTest#testTransformers, org.apache.commons.math.util.FastMathTest#testPowSpecialCases, org.apache.commons.math.util.OpenIntToFieldTest#testIterator, org.apache.commons.math.util.MathUtilsTest#testReduce, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron, org.apache.commons.math.random.Well44497bTest#testNextHypergeometric, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference, org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect, org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase, org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl, org.apache.commons.math.util.FastMathTest#testAcosAccuracy, org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, org.apache.commons.math.random.Well19937aTest#testNextFloatDirect, org.apache.commons.math.util.FastMathTestPerformance#testPow, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, org.apache.commons.math.random.MersenneTwisterTest#testNextHex, org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, org.apache.commons.math.util.BigRealTest#testNegate, org.apache.commons.math.complex.ComplexTest#testEqualsNull, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, org.apache.commons.math.random.Well19937aTest#testNextInt2, org.apache.commons.math.linear.FieldLUDecompositionTest#testSingular, org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx03, org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx02, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, org.apache.commons.math.util.TransformerMapTest#testClear, org.apache.commons.math.complex.ComplexTest#testSqrtPolar, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideVarianceWithMathClass, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, org.apache.commons.math.util.MathArraysTest#testNormalizeArray, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteOrthogonality, org.apache.commons.math.util.MathUtilsTest#testCopySignByte2, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency, org.apache.commons.math.random.Well19937aTest#testNextInt, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testStartSimplexOutsideRange, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideGeoMeanWithMathClass, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, org.apache.commons.math.util.TransformerMapTest#testPutTransformer, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable, org.apache.commons.math.util.ArithmeticUtilsTest#testPow, org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, org.apache.commons.math.stat.StatUtilsTest#testPercentile, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, org.apache.commons.math.random.Well19937aTest#testNextPascal, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, org.apache.commons.math.util.FastMathTest#testConstants, org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, org.apache.commons.math.complex.ComplexTest#testSubtractInf, org.apache.commons.math.complex.ComplexTest#testSqrt1z, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, org.apache.commons.math.linear.EigenDecompositionTest#testMath308, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal, org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2, org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.util.TransformerMapTest#testContainsClass, org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, org.apache.commons.math.linear.PivotingQRSolverTest#testSolve, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry, org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testOptimumOutsideRange, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ, org.apache.commons.math.analysis.function.LogitTest#testPreconditions2, org.apache.commons.math.analysis.function.LogitTest#testPreconditions1, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX, org.apache.commons.math.random.Well19937aTest#testNextIntIAE, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse, org.apache.commons.math.random.Well1024aTest#testNextCauchy, org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix, org.apache.commons.math.complex.ComplexTest#testConjugate, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, org.apache.commons.math.random.Well512aTest#testNextLongDirect, org.apache.commons.math.fraction.BigFractionTest#testDivide, org.apache.commons.math.util.FastMathTest#testSinhAccuracy, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType, org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, org.apache.commons.math.random.Well1024aTest#testDoubleDirect, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluateArraySegment, org.apache.commons.math.random.StableRandomGeneratorTest#testAlphaRangeAboveTwo, org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate, org.apache.commons.math.complex.ComplexTest#testDivideReal, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside, org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, org.apache.commons.math.stat.StatUtilsTest#testPopulationVariance, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluateArraySegment, org.apache.commons.math.complex.ComplexTest#testDivideNaN, org.apache.commons.math.random.Well19937aTest#testNextWeibull, org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain, org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate, org.apache.commons.math.dfp.DfpTest#testRound, org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, org.apache.commons.math.fraction.FractionFormatTest#testParseProper, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, org.apache.commons.math.linear.SymmLQTest#testNonSquareOperator, org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluateArraySegment, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry, org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRegressIfaceMethod, org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside, org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, org.apache.commons.math.linear.RealVectorFormatTest#testNan, org.apache.commons.math.util.MathArraysTest#testArrayEqualsIncludingNaN, org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData, org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testLogZero, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs, org.apache.commons.math.distribution.GammaDistributionTest#testDensities, org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.random.Well44497aTest#testNextSample, org.apache.commons.math.complex.ComplexTest#testCosh, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect, org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, org.apache.commons.math.linear.PivotingQRSolverTest#testRank, org.apache.commons.math.dfp.DfpTest#testLongConstructor, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, org.apache.commons.math.random.Well44497aTest#testNexBoolean2, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions, org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.fraction.BigFractionTest#testSubtract, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, org.apache.commons.math.util.FastMathTestPerformance#testAbs, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, org.apache.commons.math.special.ErfTest#testTwoArgumentErf, org.apache.commons.math.random.Well44497bTest#testNextHex, org.apache.commons.math.random.Well512aTest#testFloatDirect, org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult, org.apache.commons.math.distribution.GammaDistributionTest#testDensity, org.apache.commons.math.util.ArithmeticUtilsTest#testFactorial, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.random.Well1024aTest#testNextIntIAE, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, org.apache.commons.math.util.FastMathTestPerformance#testExpm1, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal, org.apache.commons.math.linear.FieldMatrixImplTest#testToString, org.apache.commons.math.distribution.PoissonDistributionTest#testSampling, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave, org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testUnbounded, org.apache.commons.math.util.MathArraysTest#testIsMonotonicComparable, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, org.apache.commons.math.linear.SparseRealMatrixTest#testToString, org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, org.apache.commons.math.MathExceptionTest#testSerialization, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid, org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, org.apache.commons.math.random.Well19937cTest#testNextGaussian, org.apache.commons.math.linear.LUDecompositionTest#testUUpperTriangular, org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.analysis.function.LogisticTest#testSomeValues, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluateArraySegment, org.apache.commons.math.linear.QRDecompositionTest#testQOrthogonal, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluateArraySegment, org.apache.commons.math.analysis.function.SqrtTest#testComparison, org.apache.commons.math.random.Well44497bTest#testNextGaussian, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, org.apache.commons.math.linear.SymmLQTest#testNonSquarePreconditioner, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, org.apache.commons.math.linear.LUDecompositionTest#testNonSquare, org.apache.commons.math.analysis.function.SincTest#testDerivativeZero, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg, org.apache.commons.math.linear.LUSolverTest#testDeterminant, org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.linear.FieldLUDecompositionTest#testPAEqualLU, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType, org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, org.apache.commons.math.util.BigRealTest#testSubtract, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, org.apache.commons.math.util.MathUtilsTest#testSignByte, org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, org.apache.commons.math.linear.LUDecompositionTest#testSingular, org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631, org.apache.commons.math.linear.SingularValueDecompositionTest#testStability2, org.apache.commons.math.linear.SingularValueDecompositionTest#testStability1, org.apache.commons.math.random.Well44497bTest#testNexBytes, org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct, org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize, org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations, org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct, org.apache.commons.math.dfp.DfpDecTest#testNextAfter, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane, org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, org.apache.commons.math.linear.SingularValueDecompositionTest#testHadamard, org.apache.commons.math.complex.ComplexTest#testConjugateNaN, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation, org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, org.apache.commons.math.linear.CholeskyDecompositionTest#testDimensions, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero, org.apache.commons.math.random.Well512aTest#testNextT, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData, org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreOrthogonality, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSummaryConsistency, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.random.Well512aTest#testNextF, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, org.apache.commons.math.complex.ComplexTest#testAtanNaN, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, org.apache.commons.math.complex.ComplexTest#testAcosInf, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, org.apache.commons.math.util.FastMathTest#testToDegrees, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst, org.apache.commons.math.complex.ComplexTest#testDivideImaginary, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, org.apache.commons.math.ode.events.ReappearingEventTest#testDormandPrince, org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, org.apache.commons.math.complex.ComplexTest#testPow, org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.FrequencyTest#testEmptyTable, org.apache.commons.math.linear.FieldMatrixImplTest#testPower, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.PivotingQRSolverTest#testOverdetermined, org.apache.commons.math.stat.StatUtilsTest#testVariance, org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters, org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, org.apache.commons.math.random.Well44497bTest#testNextUniform, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference, org.apache.commons.math.random.Well44497aTest#testNextIntIAE, org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar, org.apache.commons.math.random.Well19937aTest#testNextHypergeometric, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.complex.ComplexTest#testScalarAddNaN, org.apache.commons.math.random.Well44497aTest#testNextUniform, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10, org.apache.commons.math.util.BigRealTest#testMultiply, org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.FrequencyTest#testPcts, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull, org.apache.commons.math.random.Well44497aTest#testNextChiSquare, org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin, org.apache.commons.math.distribution.FDistributionTest#testSampling, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, org.apache.commons.math.random.Well44497bTest#testNexBoolean2, org.apache.commons.math.linear.FieldLUDecompositionTest#testPPermutation, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, org.apache.commons.math.distribution.TDistributionTest#nistData, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, org.apache.commons.math.linear.EigenDecompositionTest#testZeroDivide, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock, org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev, org.apache.commons.math.random.Well512aTest#testNextZipf, org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testSignShort, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions, org.apache.commons.math.complex.ComplexTest#testAddInf, org.apache.commons.math.random.Well19937aTest#testNextHex, org.apache.commons.math.special.ErfTest#testErf1960, org.apache.commons.math.util.MathUtilsTest#testHash, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, org.apache.commons.math.fraction.BigFractionTest#testConstructor, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, org.apache.commons.math.stat.FrequencyTest#testIntegerValues, org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, org.apache.commons.math.dfp.DfpTest#testSignPredicates, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDfAccessors, org.apache.commons.math.genetics.BinaryMutationTest#testMutate, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.random.Well19937cTest#testNextPascal, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2, org.apache.commons.math.fraction.FractionTest#testIntValue, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint, org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2, org.apache.commons.math.analysis.FunctionUtilsTest#testComposeDifferentiable, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance, org.apache.commons.math.random.StableRandomGeneratorTest#testGaussianCase, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluateArraySegment, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression, org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong, org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, org.apache.commons.math.random.MersenneTwisterTest#testNextInt, org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, org.apache.commons.math.fraction.FractionFieldTest#testOne, org.apache.commons.math.random.Well512aTest#testNextInt, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, org.apache.commons.math.random.Well44497aTest#testFloatDirect, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.optimization.BatteryNISTTest#lanczosTest, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluateArraySegment, org.apache.commons.math.complex.ComplexTest#testEqualsSame, org.apache.commons.math.random.EmpiricalDistributionTest#testNext, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen, org.apache.commons.math.random.Well512aTest#testNextIntIAE, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2, org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevOrthogonality, org.apache.commons.math.random.Well44497bTest#testNextPermutation, org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4, org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, org.apache.commons.math.dfp.DfpTest#testReciprocal, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, org.apache.commons.math.random.Well512aTest#testReferenceCode, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464, org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.fraction.FractionTest#testToString, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, org.apache.commons.math.util.FastMathStrictComparisonTest#test1, org.apache.commons.math.random.RandomDataTest#testNextExponential, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero, org.apache.commons.math.util.MathArraysTest#testSortInPlaceExample, org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testHalfBounded, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere, org.apache.commons.math.random.MersenneTwisterTest#testNextSample, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, org.apache.commons.math.util.FastMathTestPerformance#testSqrt, org.apache.commons.math.special.GammaTest#testLogGammaNegative, org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity, org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange, org.apache.commons.math.linear.SingularValueDecompositionTest#testConditionNumber, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf, org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341, org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues1, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues2, org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll, org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev, org.apache.commons.math.fraction.BigFractionTest#testPercentage, org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator, org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, org.apache.commons.math.random.Well512aTest#testNextExponential, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf, org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch, org.apache.commons.math.linear.SingularValueDecompositionTest#testInverseConditionNumber, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionTest#testDivide, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, org.apache.commons.math.complex.ComplexTest#testAbs, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, org.apache.commons.math.util.MathArraysTest#testL1DistanceDouble, org.apache.commons.math.dfp.DfpTest#testFloor, org.apache.commons.math.util.FastMathTest#testAtan2Accuracy, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons, org.apache.commons.math.random.RandomDataTest#testNextInt, org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.dfp.DfpTest#testIssue567, org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, org.apache.commons.math.stat.StatUtilsTest#testNormalize1, org.apache.commons.math.stat.StatUtilsTest#testNormalize2, org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.util.FastMathTest#testExpm1Accuracy, org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, org.apache.commons.math.util.PrecisionTest#testRepresentableDelta, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements, org.apache.commons.math.random.Well1024aTest#testNextHypergeometric, org.apache.commons.math.complex.ComplexTest#testSqrtNaN, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, org.apache.commons.math.fraction.FractionTest#testPercentage, org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial, org.apache.commons.math.linear.CholeskyDecompositionTest#testMatricesValues, org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, org.apache.commons.math.complex.ComplexTest#testCoshInf, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, org.apache.commons.math.complex.ComplexTest#testScalarSubtract, org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheck, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2, org.apache.commons.math.random.Well1024aTest#testNextBeta, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D, org.apache.commons.math.random.Well19937aTest#testNexBoolean2, org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, org.apache.commons.math.random.Well1024aTest#testNextUniform, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch, org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar, org.apache.commons.math.random.Well44497aTest#testReferenceCode, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst, org.apache.commons.math.util.BigRealFieldTest#testSerial, org.apache.commons.math.random.Well1024aTest#testNextHex, org.apache.commons.math.distribution.PoissonDistributionTest#testMean, org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1, org.apache.commons.math.complex.ComplexTest#testAdd, org.apache.commons.math.linear.FieldLUDecompositionTest#testUUpperTriangular, org.apache.commons.math.distribution.FDistributionTest#testDensities, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, org.apache.commons.math.complex.ComplexTest#testAbsInfinite, org.apache.commons.math.complex.ComplexFieldTest#testZero, org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, org.apache.commons.math.random.Well19937cTest#testNextInt, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, org.apache.commons.math.stat.inference.TTestTest#testPaired, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.random.Well44497aTest#testNextPascal, org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.analysis.function.SqrtTest#testDerivativeComparison, org.apache.commons.math.random.Well44497aTest#testNextZipf, org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases, org.apache.commons.math.dfp.DfpTest#testRint, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2, org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3, org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev, org.apache.commons.math.stat.FrequencyTest#testToString, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.analysis.FunctionUtilsTest#testSinc, org.apache.commons.math.complex.ComplexTest#testPowInf, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, org.apache.commons.math.linear.PivotingQRSolverTest#testSolveDimensionErrors, org.apache.commons.math.random.Well1024aTest#testNextExponential, org.apache.commons.math.random.Well19937cTest#testNextBeta, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02, org.apache.commons.math.random.Well19937aTest#testNextExponential, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04, org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, org.apache.commons.math.util.FastMathTest#testLog1pAccuracy, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, org.apache.commons.math.random.Well44497aTest#testNextBinomial, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide, org.apache.commons.math.util.IncrementorTest#testAboveMaxCount, org.apache.commons.math.analysis.FunctionUtilsTest#testCollector, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, org.apache.commons.math.complex.ComplexTest#testScalarDivideInf, org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments, org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate, org.apache.commons.math.random.Well44497bTest#testReferenceCode, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, org.apache.commons.math.fraction.FractionTest#testConstructor, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, org.apache.commons.math.distribution.FDistributionTest#testConsistency, org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues, org.apache.commons.math.random.Well512aTest#testNextHex, org.apache.commons.math.linear.EigenDecompositionTest#testBigMatrix, org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, org.apache.commons.math.util.BigRealTest#testDoubleValue, org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution, org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency, org.apache.commons.math.complex.ComplexTest#testConstructorNaN, org.apache.commons.math.dfp.DfpTest#testDivide, org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, org.apache.commons.math.fraction.BigFractionFieldTest#testZero, org.apache.commons.math.util.PrecisionTest#testRoundFloat, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector, org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.random.Well19937cTest#testFloatDirect, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen, org.apache.commons.math.linear.LUSolverTest#testThreshold, org.apache.commons.math.random.Well19937cTest#testNextCauchy, org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1, org.apache.commons.math.util.FastMathTestPerformance#testExp, org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, org.apache.commons.math.dfp.DfpTest#testCeil, org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, org.apache.commons.math.fraction.BigFractionTest#testAdd, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts, org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple, org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.QRSolverTest#testRank, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering, org.apache.commons.math.random.StableRandomGeneratorTest#testBetaRangeAboveOne, org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, org.apache.commons.math.fraction.BigFractionTest#testAbs, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1, org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, org.apache.commons.math.random.Well44497aTest#testNextIntDirect, org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, org.apache.commons.math.complex.ComplexTest#testLogNaN, org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, org.apache.commons.math.linear.LUDecompositionTest#testPAEqualLU, org.apache.commons.math.util.IncrementorTest#testReset, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.util.IncrementorTest#testBelowMaxCount, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, org.apache.commons.math.random.RandomDataTest#testNextLong, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert, org.apache.commons.math.random.Well44497bTest#testNextChiSquare, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, org.apache.commons.math.random.Well19937aTest#testNextBinomial, org.apache.commons.math.linear.LUSolverTest#testSingular, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, org.apache.commons.math.random.Well19937cTest#testDoubleDirect, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary, org.apache.commons.math.util.FastMathTest#testAsinAccuracy, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy, org.apache.commons.math.complex.ComplexTest#testScalarDivideZero, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, org.apache.commons.math.util.BigRealFieldTest#testZero, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testDivideInf, org.apache.commons.math.random.Well1024aTest#testNextPermutation, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross, org.apache.commons.math.fraction.BigFractionTest#testMultiply, org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaN, org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, org.apache.commons.math.distribution.TDistributionTest#testSmallDf, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform, org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.util.MathArraysTest#testArrayEquals, org.apache.commons.math.util.MathArraysTest#testL2DistanceInt, org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, org.apache.commons.math.random.Well44497aTest#testNextHypergeometric, org.apache.commons.math.random.Well512aTest#testNextWeibull, org.apache.commons.math.complex.ComplexTest#testSinInf, org.apache.commons.math.random.Well44497bTest#testNextPascal, org.apache.commons.math.dfp.DfpMathTest#testSin, org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchRightHandSide, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.random.Well44497bTest#testNextIntNeg, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection, org.apache.commons.math.random.Well44497bTest#testDoubleDirect, org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution2, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, org.apache.commons.math.dfp.DfpTest#testIsZero, org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testIssue716, org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses, org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testOptimumOutsideRange, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, org.apache.commons.math.util.ArithmeticUtilsTest#testGcd, org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testStartSimplexInsideRange, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchSolution, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev, org.apache.commons.math.random.Well44497bTest#testNextFloatDirect, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues, org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.random.MersenneTwisterTest#testNextBeta, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace, org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero, org.apache.commons.math.distribution.GammaDistributionTest#testSampling, org.apache.commons.math.random.Well1024aTest#testNextInt, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3, org.apache.commons.math.special.ErfTest#testErfcMaple, org.apache.commons.math.random.Well1024aTest#testNextPascal, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, org.apache.commons.math.stat.StatUtilsTest#testSumLog, org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, org.apache.commons.math.ode.events.EventStateTest#closeEvents, org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded, org.apache.commons.math.random.Well512aTest#testNextGamma, org.apache.commons.math.complex.ComplexTest#testPowZero, org.apache.commons.math.random.Well44497bTest#testNextT, org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, org.apache.commons.math.random.Well512aTest#testNextCauchy, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.random.Well44497aTest#testNextInt, org.apache.commons.math.util.FastMathTest#testExpSpecialCases, org.apache.commons.math.random.Well44497bTest#testNextF, org.apache.commons.math.util.FastMathTest#testCoshAccuracy, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, org.apache.commons.math.fraction.FractionTest#testFloatValue, org.apache.commons.math.random.Well1024aTest#testNextLong2, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, org.apache.commons.math.random.Well44497aTest#testNextGamma, org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, org.apache.commons.math.fraction.BigFractionTest#testFloatValue, org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, org.apache.commons.math.random.Well19937aTest#testFloatDirect, org.apache.commons.math.complex.ComplexTest#testReciprocalNaN, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType, org.apache.commons.math.util.FastMathTest#testCbrtAccuracy, org.apache.commons.math.stat.descriptive.moment.InteractionTest#testInteraction, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, org.apache.commons.math.linear.EigenDecompositionTest#testDiagonal, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.stat.StatUtilsTest#testMean, org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage, org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE, org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, org.apache.commons.math.random.Well44497aTest#testNextIntNeg, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev, org.apache.commons.math.complex.ComplexTest#testSin, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, org.apache.commons.math.random.Well19937cTest#testNextBinomial, org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag, org.apache.commons.math.fraction.BigFractionTest#testIntValue, org.apache.commons.math.random.Well19937aTest#testNextCauchy, org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, org.apache.commons.math.linear.SingularValueDecompositionTest#testUOrthogonal, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, org.apache.commons.math.linear.PivotingQRDecompositionTest#testQOrthogonal, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF, org.apache.commons.math.linear.EigenSolverTest#testInvertible, org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth, org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT, org.apache.commons.math.complex.ComplexTest#testReciprocalImaginary, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolutionWithInitialGuess, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.random.MersenneTwisterTest#testNextPascal, org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency, org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testArray, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect, org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation, org.apache.commons.math.util.PrecisionTest#testRoundDouble, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, org.apache.commons.math.random.Well1024aTest#testNextPoisson, org.apache.commons.math.random.RandomDataTest#testNextGaussian, org.apache.commons.math.util.MathArraysTest#testCopyOfInt, org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, org.apache.commons.math.MathExceptionTest#testPrintStackTrace, org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa, org.apache.commons.math.random.Well19937cTest#testNextLongDirect, org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, org.apache.commons.math.util.FastMathTest#testNextAfter, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, org.apache.commons.math.complex.ComplexFormatTest#testNan, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639, org.apache.commons.math.util.BigRealTest#testAdd, org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide, org.apache.commons.math.linear.EigenDecompositionTest#testEigenvectors, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideVarianceWithMathClass, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX, org.apache.commons.math.util.MathUtilsTest#testArrayHash, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, org.apache.commons.math.random.Well19937cTest#testNexBoolean2, org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, org.apache.commons.math.linear.EigenDecompositionTest#testEigenvalues, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, org.apache.commons.math.complex.ComplexTest#testTanInf, org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedUlps, org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2, org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate, org.apache.commons.math.random.Well44497bTest#testNextBinomial, org.apache.commons.math.complex.ComplexTest#testTanhNaN, org.apache.commons.math.util.FastMathTest#testHyperbolicInverses, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen, org.apache.commons.math.fraction.FractionTest#testAbs, org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.random.Well512aTest#testNextInt2, org.apache.commons.math.random.Well1024aTest#testNextT, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, org.apache.commons.math.random.Well1024aTest#testNextF, org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints, org.apache.commons.math.random.RandomDataTest#testNextWeibull, org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiLegendre, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, org.apache.commons.math.random.Well512aTest#testNextLong, org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, org.apache.commons.math.util.FastMathTest#testExpAccuracy, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect, org.apache.commons.math.linear.CholeskyDecompositionTest#testLLowerTriangular, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, org.apache.commons.math.util.MathUtilsTest#testSignLong, org.apache.commons.math.random.Well512aTest#testNextHypergeometric, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine, org.apache.commons.math.random.Well1024aTest#testNextIntNeg, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle, org.apache.commons.math.complex.ComplexTest#testMultiply, org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluateArraySegment, org.apache.commons.math.random.Well512aTest#testNextBinomial, org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.fraction.FractionTest#testAdd, org.apache.commons.math.linear.RealVectorTest#testCombineToSelf, org.apache.commons.math.filter.KalmanFilterTest#testConstantAcceleration, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, org.apache.commons.math.random.Well44497bTest#testConfig, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3, org.apache.commons.math.random.Well19937aTest#testNextLong2, org.apache.commons.math.analysis.function.SincTest#testDerivativeShortcut, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1, org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckLong, org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.filter.KalmanFilterTest#testConstant, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, org.apache.commons.math.util.FastMathTestPerformance#testAtan2, org.apache.commons.math.random.Well19937cTest#testNextLong2, org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, org.apache.commons.math.stat.StatUtilsTest#testSumSq, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, org.apache.commons.math.util.DefaultTransformerTest#testSerial, org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency, org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, org.apache.commons.math.util.OpenIntToFieldTest#testCopy, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen, org.apache.commons.math.linear.SingularValueDecompositionTest#testDimensions, org.apache.commons.math.random.Well44497aTest#testConfig, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, org.apache.commons.math.distribution.CauchyDistributionTest#testSampling, org.apache.commons.math.linear.ConjugateGradientTest#testEventManagement, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreRows, org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary, org.apache.commons.math.random.Well44497aTest#testNextExponential, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.complex.ComplexTest#testScalarPowZero, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma, org.apache.commons.math.linear.PivotingQRDecompositionTest#testDimensions, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero, org.apache.commons.math.complex.ComplexTest#testReciprocalReal, org.apache.commons.math.util.FastMathTestPerformance#testSimpleBenchmark, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon, org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, org.apache.commons.math.special.ErfTest#testErfcGnu, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal, org.apache.commons.math.analysis.function.GaussianTest#testDerivative, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives, org.apache.commons.math.random.Well44497bTest#testNextZipf, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox, org.apache.commons.math.fraction.FractionTest#testConstructorDouble, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth, org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, org.apache.commons.math.random.Well19937cTest#testNexBytes, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, org.apache.commons.math.fraction.FractionTest#testSubtract, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair, org.apache.commons.math.random.Well512aTest#testNextChiSquare, org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN, org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, org.apache.commons.math.linear.SparseRealVectorTest#testSerial, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testDivideZero, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, org.apache.commons.math.special.GammaTest#testLogGammaNan, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, org.apache.commons.math.util.IncrementorTest#testCanIncrement2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, org.apache.commons.math.random.RandomDataTest#testNextHex, org.apache.commons.math.analysis.function.SincTest#testZero, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation, org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions2, org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues, org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions1, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, org.apache.commons.math.util.IncrementorTest#testCanIncrement1, org.apache.commons.math.fraction.FractionTest#testSerial, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testWrongDimension, org.apache.commons.math.random.Well44497aTest#testNexBytes, org.apache.commons.math.fraction.FractionTest#testLongValue, org.apache.commons.math.random.RandomDataTest#testNextCauchy, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.random.Well512aTest#testNextBooleanDirect, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.EigenDecompositionTest#testDimension3MultipleRoot, org.apache.commons.math.util.FastMathTestPerformance#testSinh, org.apache.commons.math.stat.data.LewTest#testCertifiedValues, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, org.apache.commons.math.util.FastMathTestPerformance#testCbrt, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, org.apache.commons.math.linear.SingularValueSolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testGoldenRatio, org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments, org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, org.apache.commons.math.random.Well19937cTest#testNextExponential, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, org.apache.commons.math.util.PrecisionTest#testFloatEqualsWithAllowedUlps, org.apache.commons.math.special.ErfTest#testErf0, org.apache.commons.math.fraction.FractionTest#testNegate, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.dfp.DfpTest#testLog10K, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, org.apache.commons.math.distribution.PascalDistributionTest#testSampling, org.apache.commons.math.optimization.BatteryNISTTest#chwirut1Test, org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, org.apache.commons.math.stat.StatUtilsTest#testStats, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, org.apache.commons.math.random.Well19937aTest#testConfig, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSummaryConsistency, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator, org.apache.commons.math.random.Well44497aTest#testNextPermutation, org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, org.apache.commons.math.complex.ComplexTest#testConstructor, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, org.apache.commons.math.random.Well19937cTest#testNextFloatDirect, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, org.apache.commons.math.random.Well19937aTest#testNexBytes, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull, org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, org.apache.commons.math.random.ValueServerTest#testReplay, org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation, org.apache.commons.math.random.Well44497bTest#testNextInt2, org.apache.commons.math.complex.ComplexTest#testMultiplyInfInf, org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation, org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK, org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric, org.apache.commons.math.stat.FrequencyTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, org.apache.commons.math.linear.PivotingQRDecompositionTest#testHTrapezoidal, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage, org.apache.commons.math.complex.ComplexTest#testTan, org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolution, org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors, org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex, org.apache.commons.math.complex.ComplexTest#testCosNaN, org.apache.commons.math.distribution.ZipfDistributionTest#testSampling, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluateArraySegment, org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoments, org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation, org.apache.commons.math.random.Well19937cTest#testNextT, org.apache.commons.math.random.RandomDataTest#testNextUniform, org.apache.commons.math.linear.SingularValueDecompositionTest#testVOrthogonal, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution, org.apache.commons.math.random.Well19937cTest#testNextF, org.apache.commons.math.complex.ComplexTest#testReciprocal, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin, org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, org.apache.commons.math.util.BigRealTest#testCompareTo, org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.random.Well19937aTest#testNextF, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, org.apache.commons.math.random.Well512aTest#testNextFloatDirect, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary, org.apache.commons.math.complex.ComplexTest#testSubtractNaN, org.apache.commons.math.random.Well19937aTest#testNextT, org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues, org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide, org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, org.apache.commons.math.complex.ComplexTest#testSinhNaN, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, org.apache.commons.math.linear.ArrayRealVectorTest#testAddToEntry, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testIllegalArguments, org.apache.commons.math.random.RandomDataTest#testNextHypergeometric, org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors, org.apache.commons.math.distribution.BinomialDistributionTest#testSampling, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, org.apache.commons.math.random.Well512aTest#testNextLong2, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDensity, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions, org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, org.apache.commons.math.linear.SymmLQTest#testNonPositiveDefinitePreconditioner, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1, org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.distribution.PoissonDistributionTest#testMoments, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testSampling, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath713NegativeVariable, org.apache.commons.math.random.RandomDataTest#testNextZipf, org.apache.commons.math.linear.SingularValueDecompositionTest#testAEqualUSVt, org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedResidual, org.apache.commons.math.random.Well512aTest#testNextInversionDeviate, org.apache.commons.math.random.Well512aTest#testNextPoisson, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, org.apache.commons.math.util.MathArraysTest#testLinearCombinationInfinite, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.exception.util.ExceptionContextTest#testContext, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, org.apache.commons.math.random.RandomDataTest#testNextChiSquare, org.apache.commons.math.util.FastMathTestPerformance#testTanh, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, org.apache.commons.math.util.FastMathTest#testHyperbolic, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, org.apache.commons.math.util.FastMathTestPerformance#testAsin, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, org.apache.commons.math.special.GammaTest#testLogGammaPositive, org.apache.commons.math.stat.StatUtilsTest#testProduct, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance, org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix, org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, org.apache.commons.math.random.Well1024aTest#testNextGaussian, org.apache.commons.math.util.FastMathTest#testPowAccuracy, org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2, org.apache.commons.math.random.Well44497bTest#testNextLong, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary, org.apache.commons.math.random.Well44497bTest#testNextSample, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency, org.apache.commons.math.stat.FrequencyTest#testAdd, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs, org.apache.commons.math.util.PrecisionTest#testMath475, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, org.apache.commons.math.linear.CholeskyDecompositionTest#testNotPositiveDefinite, org.apache.commons.math.dfp.DfpTest#testDivideInt, org.apache.commons.math.distribution.CauchyDistributionTest#testScale, org.apache.commons.math.random.Well19937cTest#testNextWeibull, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1, org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2, org.apache.commons.math.util.FastMathTest#testAtan2, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, org.apache.commons.math.linear.QRSolverTest#testSolve, org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2, org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testHalfBounded, org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, org.apache.commons.math.random.Well19937aTest#testNextBeta, org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, org.apache.commons.math.linear.PivotingQRSolverTest#testSolveRankErrors, org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl, org.apache.commons.math.complex.ComplexTest#testEqualsTrue, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, org.apache.commons.math.random.Well44497aTest#testNextLong, org.apache.commons.math.util.BigRealFieldTest#testOne, org.apache.commons.math.complex.ComplexTest#testScalarMultiply, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX, org.apache.commons.math.linear.PivotingQRSolverTest#testUnderdetermined, org.apache.commons.math.random.Well44497aTest#testNextInt2, org.apache.commons.math.util.IncrementorTest#testBulkIncrement, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance, org.apache.commons.math.random.ValueServerTest#testFill, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, org.apache.commons.math.random.StableRandomGeneratorTest#testAlphaRangeBelowZero, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolutionWithInitialGuess, org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues, org.apache.commons.math.distribution.NormalDistributionTest#testMath280, org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluateArraySegment, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, org.apache.commons.math.util.FastMathTest#testIndicatorDouble, org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckErrorMessage, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testSmallDf, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, org.apache.commons.math.linear.ConjugateGradientTest#testNonSquarePreconditioner, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments, org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheck, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect, org.apache.commons.math.random.MersenneTwisterTest#testNextUniform, org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, org.apache.commons.math.MathExceptionTest#testConstructorCause, org.apache.commons.math.complex.ComplexTest#testAbsNaN, org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, org.apache.commons.math.special.GammaTest#testLogGammaZero, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, org.apache.commons.math.util.MathArraysTest#testLInfDistanceInt, org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, org.apache.commons.math.random.Well19937aTest#testNextChiSquare, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideMeanWithMathClass, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520, org.apache.commons.math.complex.ComplexTest#testMath221, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders10, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders11, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, org.apache.commons.math.dfp.DfpTest#testToString, org.apache.commons.math.util.FastMathTestPerformance#testLog, org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders18, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders19, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders16, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders17, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders14, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders15, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders12, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders13, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset, org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, org.apache.commons.math.random.Well19937aTest#testNextGaussian, org.apache.commons.math.random.StableRandomGeneratorTest#testCauchyCase, org.apache.commons.math.util.MathUtilsTest#testCopySignByte, org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints, org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite, org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, org.apache.commons.math.filter.KalmanFilterTest#testTransitionControlMatrixMismatch, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, org.apache.commons.math.util.ArithmeticUtilsTest#testLcm, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.fraction.FractionFieldTest#testZero, org.apache.commons.math.util.DefaultTransformerTest#testTransformString, org.apache.commons.math.complex.ComplexTest#testReciprocalZero, org.apache.commons.math.random.Well19937aTest#testNextLongDirect, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders20, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull, org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, org.apache.commons.math.util.ArithmeticUtilsTest#testLcmLong, org.apache.commons.math.random.Well44497aTest#testNextPoisson, org.apache.commons.math.analysis.function.SincTest#testEuler, org.apache.commons.math.random.Well19937cTest#testNextIntDirect, org.apache.commons.math.distribution.WeibullDistributionTest#testMoments, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn, org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheckLong, org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints, org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.random.Well44497aTest#testDoubleDirect, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, org.apache.commons.math.special.GammaTest#testTrigamma, org.apache.commons.math.fraction.BigFractionTest#testSerial, org.apache.commons.math.fraction.FractionFormatTest#testParseOne2, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, org.apache.commons.math.fraction.FractionFormatTest#testParseOne1, org.apache.commons.math.random.Well512aTest#testNextGaussian, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, org.apache.commons.math.dfp.DfpTest#testCopySign, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, org.apache.commons.math.random.Well19937cTest#testNextHex, org.apache.commons.math.analysis.function.GaussianTest#testPreconditions, org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolution, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan, org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.random.StableRandomGeneratorTest#testBetaRangeBelowMinusOne, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, org.apache.commons.math.linear.ConjugateGradientTest#testMismatchedOperatorDimensions, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov, org.apache.commons.math.random.Well44497bTest#testNextIntIAE, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, org.apache.commons.math.random.Well1024aTest#testNexBytes, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, org.apache.commons.math.util.FastMathTest#testSignumDouble, org.apache.commons.math.complex.ComplexTest#testNegateNaN, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheckLong, org.apache.commons.math.random.Well19937aTest#testNextIntNeg, org.apache.commons.math.util.FastMathTestPerformance#testAcos, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent, org.apache.commons.math.complex.ComplexTest#testSinNaN, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgainstStackOverflow, org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, org.apache.commons.math.util.MathArraysTest#testIsMonotonic, org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, org.apache.commons.math.util.FastMathTest#testAsinSpecialCases, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize, org.apache.commons.math.util.FastMathTest#testLogAccuracy, org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, org.apache.commons.math.util.PairTest#testEquals, org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, org.apache.commons.math.util.IncrementorTest#testConstructor1, org.apache.commons.math.util.IncrementorTest#testConstructor2, org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, org.apache.commons.math.complex.ComplexTest#testDivideZeroZero, org.apache.commons.math.dfp.DfpTest#testRemainder, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.fraction.FractionFormatTest#testParse, org.apache.commons.math.util.BigRealTest#testSerial, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide, org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside, org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare, org.apache.commons.math.random.Well44497bTest#testNextPoisson, org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testUnbounded, org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition, org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheck, org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, org.apache.commons.math.random.RandomDataTest#testNextBinomial, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide, org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideGeoMeanWithMathClass, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane, org.apache.commons.math.distribution.WeibullDistributionTest#testDensities, org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases, org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, org.apache.commons.math.random.Well19937aTest#testNextGamma, org.apache.commons.math.random.Well1024aTest#testNextLongDirect, org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, org.apache.commons.math.random.Well19937cTest#testNextGamma, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal, org.apache.commons.math.util.FastMathTest#testTanhAccuracy, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, org.apache.commons.math.distribution.NormalDistributionTest#testMoments, org.apache.commons.math.random.Well44497aTest#testNextT, org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, org.apache.commons.math.util.FastMathTest#testToRadians, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283, org.apache.commons.math.random.Well44497aTest#testNextF, org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, org.apache.commons.math.distribution.TDistributionTest#testMoments, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments, org.apache.commons.math.util.MathArraysTest#testCopyOfDouble, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAddToEntry, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2, org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedUlps, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, org.apache.commons.math.complex.ComplexTest#testScalarAddInf, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluateArraySegment, org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, org.apache.commons.math.complex.ComplexTest#testSinh, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast, org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell, org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientLarge, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.random.Well19937cTest#testNextPermutation, org.apache.commons.math.random.Well44497bTest#testNextLong2, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.random.MersenneTwisterTest#testNextZipf, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE, org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy, org.apache.commons.math.analysis.function.LogitTest#testSomeValues, org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, org.apache.commons.math.util.FastMathTest#testLog10Accuracy, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, org.apache.commons.math.linear.CholeskyDecompositionTest#testNotSymmetricMatrixException, org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors, org.apache.commons.math.random.Well44497bTest#testNextIntDirect, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.special.ErfTest#testErf3291, org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues, org.apache.commons.math.complex.ComplexTest#testHashCode, org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, org.apache.commons.math.random.Well1024aTest#testNextIntDirect, org.apache.commons.math.complex.ComplexTest#testAddNaN, org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, org.apache.commons.math.dfp.DfpTest#testAdd, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate, org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.analysis.FunctionUtilsTest#testAddDifferentiable, org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, org.apache.commons.math.complex.ComplexTest#testCos, org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficient, org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution2, org.apache.commons.math.distribution.TDistributionTest#testDensities, org.apache.commons.math.random.RandomDataTest#testConfig, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, org.apache.commons.math.complex.ComplexTest#testAsinInf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.random.Well1024aTest#testNextBinomial, org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName, org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType, org.apache.commons.math.dfp.DfpTest#testNextAfter, org.apache.commons.math.util.FastMathTestPerformance#testAtan, org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDensities, org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testConsistency, org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, org.apache.commons.math.random.RandomDataTest#testNextSecureInt, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry, org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount, org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluateArraySegment, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.linear.FieldLUSolverTest#testSolve, org.apache.commons.math.complex.ComplexTest#testScalarPowInf, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluateArraySegment, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo, org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation, org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.random.Well1024aTest#testNextWeibull, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, org.apache.commons.math.analysis.FunctionUtilsTest#testCombine, org.apache.commons.math.linear.EigenDecompositionTest#testVOrthogonal, org.apache.commons.math.analysis.function.SigmoidTest#testDerivative, org.apache.commons.math.util.MathArraysTest#testLInfDistanceDouble, org.apache.commons.math.random.ValueServerTest#testProperties, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.util.MathArraysTest#testL1DistanceInt, org.apache.commons.math.complex.ComplexTest#testAtanInf, org.apache.commons.math.random.Well19937cTest#testNextIntNeg, org.apache.commons.math.special.ErfTest#testErf2807, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, org.apache.commons.math.util.TransformerMapTest#testClasses, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, org.apache.commons.math.random.MersenneTwisterTest#testNextGamma, org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta, org.apache.commons.math.fraction.FractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders9, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders7, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders8, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders5, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders6, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders3, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders4, org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders1, org.apache.commons.math.linear.SymmLQTest#testSolveSaunders2, org.apache.commons.math.random.Well19937cTest#testNextHypergeometric, org.apache.commons.math.complex.ComplexTest#testAcosNaN, org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose, org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.linear.PivotingQRDecompositionTest#testRUpperTriangular, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, org.apache.commons.math.distribution.PascalDistributionTest#testMoments, org.apache.commons.math.distribution.ExponentialDistributionTest#testMoments, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection, org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, org.apache.commons.math.complex.ComplexTest#testLog, org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, org.apache.commons.math.random.Well44497aTest#testNextHex, org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian, org.apache.commons.math.util.ArithmeticUtilsTest#testGcdConsistency, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear, org.apache.commons.math.dfp.DfpTest#testMultiply, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, org.apache.commons.math.util.IncrementorTest#testAlternateException, org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testStartSimplexInsideRange, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluateArraySegment, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testMoments, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, org.apache.commons.math.distribution.FDistributionTest#testMoments, org.apache.commons.math.analysis.function.GaussianTest#testSomeValues, org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations, org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, org.apache.commons.math.linear.CholeskySolverTest#testSolve, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiEvaluationAt1, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant, org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.complex.ComplexTest#testLogInf, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.random.Well19937cTest#testReferenceCode, org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem, org.apache.commons.math.complex.ComplexTest#testCoshNaN, org.apache.commons.math.linear.LUSolverTest#testSolve, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, org.apache.commons.math.random.Well512aTest#testNexBytes, org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, org.apache.commons.math.util.FastMathTest#testIndicatorFloat, org.apache.commons.math.analysis.function.SincTest#testCrossings, org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse, org.apache.commons.math.random.Well512aTest#testNextIntDirect, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, org.apache.commons.math.linear.SymmLQTest#testEventManagement, org.apache.commons.math.fraction.BigFractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary, org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes, org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten, org.apache.commons.math.util.MathArraysTest#testL2DistanceDouble, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, org.apache.commons.math.random.Well44497aTest#testNextGaussian, org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect, org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.random.Well19937cTest#testConfig, org.apache.commons.math.fraction.FractionFormatTest#testFormat, org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage, org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithSplit, org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596, org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.linear.SingularValueDecompositionTest#testRank, org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, org.apache.commons.math.complex.ComplexTest#testGetArgument, org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointPreconditioner, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated, org.apache.commons.math.linear.LUDecompositionTest#testDimensions, org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic, org.apache.commons.math.dfp.DfpTest#testIntConstructor, org.apache.commons.math.random.MersenneTwisterTest#testConfig, org.apache.commons.math.dfp.DfpTest#testPower10, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, org.apache.commons.math.random.Well19937aTest#testNextPoisson, org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest#testAccessors, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluateArraySegment, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, org.apache.commons.math.distribution.TDistributionTest#testSampling, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither, org.apache.commons.math.analysis.function.LogitTest#testDerivative, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, org.apache.commons.math.complex.ComplexTest#testEqualsClass, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, org.apache.commons.math.util.FastMathTestPerformance#testSin, org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, org.apache.commons.math.random.Well512aTest#testConfig, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr, org.apache.commons.math.distribution.TDistributionTest#testPreconditions, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, org.apache.commons.math.util.MathArraysTest#testCheckOrder, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints, org.apache.commons.math.random.Well19937cTest#testNextSample, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters, org.apache.commons.math.complex.ComplexTest#testAsinNaN, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples, org.apache.commons.math.complex.ComplexTest#testAtanI, org.apache.commons.math.random.RandomDataTest#testNextSecureLong, org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.linear.FieldLUSolverTest#testDeterminant, org.apache.commons.math.linear.LUDecompositionTest#testPPermutation, org.apache.commons.math.linear.EigenDecompositionTest#testRepeatedEigenvalue, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial, org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, org.apache.commons.math.random.Well19937cTest#testNextLong, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero, org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary, org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, org.apache.commons.math.complex.ComplexTest#testSqrtInf, org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric, org.apache.commons.math.complex.ComplexTest#testEqualsNaN, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev, org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors, org.apache.commons.math.random.ValueServerTest#testNextDigestFail, org.apache.commons.math.optimization.BatteryNISTTest#chwirut2Test, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4, org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide, org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.StatUtilsTest#testMax, org.apache.commons.math.random.Well19937cTest#testNextInt2, org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation, org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, org.apache.commons.math.random.Well1024aTest#testNextInt2, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.EigenDecompositionTest#testDistinctEigenvalues, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev, org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedResidual, org.apache.commons.math.random.Well1024aTest#testReferenceCode, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection, org.apache.commons.math.complex.ComplexTest#testTanh, org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreColumns, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, org.apache.commons.math.random.Well19937cTest#testNextPoisson, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues, org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.Well19937aTest#testReferenceCode, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected, org.apache.commons.math.random.RandomDataTest#testNextBeta, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.complex.ComplexTest#testpowNull, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative, org.apache.commons.math.analysis.function.SincTest#testShortcut, org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, org.apache.commons.math.random.MersenneTwisterTest#testNextExponential, org.apache.commons.math.random.Well19937aTest#testNextSample, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments, org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole, org.apache.commons.math.random.Well1024aTest#testNextGamma, org.apache.commons.math.random.Well1024aTest#testNextLong, org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, org.apache.commons.math.analysis.FunctionUtilsTest#testCompose, org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, org.apache.commons.math.random.StableRandomGeneratorTest#testNextDouble, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset, org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, org.apache.commons.math.distribution.GammaDistributionTest#testMoments, org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide, org.apache.commons.math.linear.OpenMapRealMatrixTest#testMath679, org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testShift, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity, org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.complex.ComplexTest#testTanNaN, org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth, org.apache.commons.math.random.RandomDataTest#testNextSample, org.apache.commons.math.random.Well44497bTest#testNextInt, org.apache.commons.math.random.RandomDataTest#testNextGamma, org.apache.commons.math.ode.events.EventStateTest#testIssue695, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide, org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, org.apache.commons.math.util.FastMathTest#testSinAccuracy, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, org.apache.commons.math.complex.ComplexFieldTest#testOne, org.apache.commons.math.linear.FieldLUDecompositionTest#testNonSquare, org.apache.commons.math.util.MathUtilsTest#testCheckFinite, org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry, org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane, org.apache.commons.math.random.Well19937cTest#testNextChiSquare, org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, org.apache.commons.math.dfp.DfpTest#testByteConstructor, org.apache.commons.math.linear.CholeskyDecompositionTest#testNonSquare, org.apache.commons.math.distribution.NormalDistributionTest#testDensity, org.apache.commons.math.random.Well19937aTest#testNextZipf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, org.apache.commons.math.distribution.ChiSquaredDistributionTest#testCumulativeProbabilities, org.apache.commons.math.util.FastMathTest#testLog1pSpecialCases, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, org.apache.commons.math.util.FastMathTestPerformance#testLog10, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4, org.apache.commons.math.random.RandomDataTest#testNextF, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2, org.apache.commons.math.analysis.FunctionUtilsTest#testMultiplyDifferentiable, org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, org.apache.commons.math.MathExceptionTest#testConstructor, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside, org.apache.commons.math.analysis.function.LogitTest#testParametricValue, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector, org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity, org.apache.commons.math.random.Well19937aTest#testNextPermutation, org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefinitePreconditioner, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, org.apache.commons.math.util.FastMathTestPerformance#testLog1p, org.apache.commons.math.random.RandomDataTest#testNextT, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.random.RandomDataTest#testNextSecureHex, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, org.apache.commons.math.random.MersenneTwisterTest#testNextT, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, org.apache.commons.math.random.Well1024aTest#testConfig, org.apache.commons.math.util.ArithmeticUtilsTest#testFactorialFail, org.apache.commons.math.random.MersenneTwisterTest#testNextF, org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.util.TransformerMapTest#testSerial, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, org.apache.commons.math.random.RandomDataTest#testNextPascal, org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide, org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments, org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, org.apache.commons.math.linear.PivotingQRDecompositionTest#testMatricesValues, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, org.apache.commons.math.complex.ComplexFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab, org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance, org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints, org.apache.commons.math.random.Well19937cTest#testNextUniform, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluateArraySegment, org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, org.apache.commons.math.dfp.DfpTest#testLog10, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.random.Well1024aTest#testNextChiSquare, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations, org.apache.commons.math.complex.ComplexTest#testAsin, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefiniteLinearOperator, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.util.FastMathTest#testMinMaxDouble, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside, org.apache.commons.math.analysis.FunctionUtilsTest#testAdd, org.apache.commons.math.distribution.BinomialDistributionTest#testMoments, org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, org.apache.commons.math.dfp.DfpTest#testCompare, org.apache.commons.math.linear.CholeskyDecompositionTest#testAEqualLLT, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, org.apache.commons.math.util.FastMathTestPerformance#testTan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, org.apache.commons.math.util.OpenIntToFieldTest#testRemove, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.ode.events.ReappearingEventTest#testGragg, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, org.apache.commons.math.util.FastMathTest#testLogWithBase, org.apache.commons.math.linear.RealVectorTest#testCombine, org.apache.commons.math.linear.FieldLUSolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, org.apache.commons.math.random.ISAACTest#testReference, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideMeanWithMathClass, org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues, org.apache.commons.math.linear.SymmLQTest#testMismatchedOperatorDimensions, org.apache.commons.math.dfp.DfpDecTest#testRound, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreOrthogonality, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev, org.apache.commons.math.transform.FastSineTransformerTest#testParameters, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments, org.apache.commons.math.random.MersenneTwisterTest#testNextInt2, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, org.apache.commons.math.random.MersenneTwisterTest#testNextLong2, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, org.apache.commons.math.complex.ComplexTest#testDivide, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, org.apache.commons.math.complex.ComplexTest#testSubtract, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, org.apache.commons.math.util.FastMathTest#testAcosSpecialCases, org.apache.commons.math.fraction.FractionTest#testMultiply, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities, org.apache.commons.math.linear.EigenDecompositionTest#testTridiagonal, org.apache.commons.math.random.Well512aTest#testNextPascal, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, org.apache.commons.math.util.FastMathTest#testSignumFloat, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE, org.apache.commons.math.complex.ComplexTest#testAtan, org.apache.commons.math.linear.QRDecompositionTest#testAEqualQR, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide, org.apache.commons.math.linear.FieldLUSolverTest#testSolveSingularityErrors, org.apache.commons.math.random.MersenneTwisterTest#testNextLong, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation, org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, org.apache.commons.math.linear.RealVectorTest#testMap, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, org.apache.commons.math.dfp.DfpTest#testIntValue, org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli, org.apache.commons.math.fraction.FractionFormatTest#testParseZero2, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, org.apache.commons.math.fraction.FractionFormatTest#testParseZero1, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow, org.apache.commons.math.linear.RealVectorTest#testIterator, org.apache.commons.math.RetryRunnerTest#testRetryFailAlways, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN, org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testExpNaN, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection, org.apache.commons.math.linear.ArrayRealVectorTest#testCosine, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple, org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientFail, org.apache.commons.math.util.PrecisionTest#testCompareToMaxUlps, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAddToEntry, org.apache.commons.math.random.Well44497bTest#testNextLongDirect, org.apache.commons.math.dfp.DfpMathTest#testPow, org.apache.commons.math.util.BigRealTest#testBigDecimalValue, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoInterceot_noint2, org.apache.commons.math.util.MathArraysTest#testLinearCombination2, org.apache.commons.math.util.MathArraysTest#testLinearCombination1, org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1, org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2, org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert, org.apache.commons.math.linear.RealVectorTest#testSparseIterator, org.apache.commons.math.random.ValueServerTest#testNextDigest, org.apache.commons.math.random.Well44497bTest#testNextExponential, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, org.apache.commons.math.util.FastMathTest#testMinMaxFloat, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, org.apache.commons.math.distribution.FDistributionTest#testPreconditions, org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, org.apache.commons.math.util.MathArraysTest#testSortInPlace, org.apache.commons.math.random.RandomDataTest#testNextPermutation, org.apache.commons.math.complex.ComplexTest#testReciprocalInf, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch, org.apache.commons.math.util.MathArraysTest#testCopyOfInt3, org.apache.commons.math.util.MathArraysTest#testCopyOfInt2, org.apache.commons.math.special.ErfTest#testErf2576, org.apache.commons.math.util.FastMathTestPerformance#testCos, org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide, org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction, org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, org.apache.commons.math.util.BigRealTest#testReciprocal, org.apache.commons.math.special.ErfTest#testErfGnu, org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential, org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor, org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.linear.FieldLUDecompositionTest#testLLowerTriangular, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.complex.ComplexTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, org.apache.commons.math.complex.ComplexTest#testTanhInf, org.apache.commons.math.stat.FrequencyTest#testCounts, org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.linear.LUDecompositionTest#testLLowerTriangular, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluateArraySegment, org.apache.commons.math.distribution.CauchyDistributionTest#testMoments, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, org.apache.commons.math.fraction.BigFractionFormatTest#testParse, org.apache.commons.math.fraction.BigFractionTest#testCompareTo, org.apache.commons.math.util.ArithmeticUtilsTest#test0Choose0, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig, org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithoutSplit, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, org.apache.commons.math.complex.ComplexTest#testScalarPow, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate, org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval, org.apache.commons.math.linear.CholeskyDecompositionTest#testLTTransposed, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, org.apache.commons.math.random.Well44497aTest#testNextCauchy, org.apache.commons.math.filter.KalmanFilterTest#testTransitionMeasurementMatrixMismatch, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluateArraySegment, org.apache.commons.math.complex.ComplexTest#testNegate, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, org.apache.commons.math.special.ErfTest#testLargeValues, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4, org.apache.commons.math.complex.ComplexTest#testSinhInf, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, org.apache.commons.math.util.FastMathTest#testTanAccuracy, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector, org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage, org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, org.apache.commons.math.util.FastMathTestPerformance#testCosh, org.apache.commons.math.dfp.DfpTest#testSqrt, org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate, org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedDelta, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct, org.apache.commons.math.linear.QRDecompositionTest#testHTrapezoidal, org.apache.commons.math.complex.ComplexTest#testAcos, org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal, org.apache.commons.math.linear.QRDecompositionTest#testRUpperTriangular, org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions, org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiOrthogonality, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, org.apache.commons.math.distribution.PascalDistributionTest#testDensities, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy, org.apache.commons.math.linear.BlockRealMatrixTest#testToString, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, org.apache.commons.math.complex.ComplexTest#testTanCritical, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.random.Well512aTest#testNextPermutation, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide, org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, org.apache.commons.math.random.Well19937aTest#testNextIntDirect, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments, org.apache.commons.math.random.Well1024aTest#testNexBoolean2, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.complex.ComplexTest#testExp, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, org.apache.commons.math.stat.StatUtilsTest#testMin, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded, org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, org.apache.commons.math.random.Well44497bTest#testNextWeibull, org.apache.commons.math.random.Well512aTest#testNextIntNeg, org.apache.commons.math.random.Well44497bTest#testNextCauchy, org.apache.commons.math.util.BigRealTest#testDivide, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, org.apache.commons.math.complex.ComplexTest#testScalarDivide, org.apache.commons.math.complex.ComplexTest#testPowNaNBase, org.apache.commons.math.random.Well44497aTest#testNextFloatDirect, org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular, org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy, org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither, org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection, org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, org.apache.commons.math.util.ArithmeticUtilsTest#testGcdLong, org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints, org.apache.commons.math.fraction.BigFractionTest#testLongValue, org.apache.commons.math.linear.FieldLUDecompositionTest#testDimensions, org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchRightHandSide, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos, org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, org.apache.commons.math.random.ValueServerTest#testModes, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints, org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev, org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, org.apache.commons.math.linear.EigenDecompositionTest#testDimensions, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity, org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar, org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero, org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency, org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.fraction.BigFractionTest#testMath340, org.apache.commons.math.random.Well44497bTest#testNextGamma, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities, org.apache.commons.math.random.Well19937aTest#testNextUniform, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian, org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, org.apache.commons.math.fraction.BigFractionFieldTest#testOne, org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt, org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints, org.apache.commons.math.linear.EigenDecompositionTest#testDimension2, org.apache.commons.math.linear.EigenDecompositionTest#testDimension1, org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, org.apache.commons.math.linear.EigenDecompositionTest#testDimension3, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.linear.RealVectorTest#testAddToEntry, org.apache.commons.math.distribution.NormalDistributionTest#testSampling, org.apache.commons.math.random.Well512aTest#testNextBeta, org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, org.apache.commons.math.random.Well19937cTest#testNextIntIAE, org.apache.commons.math.complex.ComplexFieldTest#testSerial, org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry, org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions, org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluateArraySegmentWeighted, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, org.apache.commons.math.analysis.function.StepFunctionTest#testEndpointBehavior, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification, org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], jUnit5Tests=[], jacocoIncludes=[org.apache.commons.*], jacocoExcludes=[java.*], family=SPECTRUM_BASED, spectrumFormula=OCHIAI, computeSpoonResults=false}
Computing tests from config.
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testHypot, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtanAccuracy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceFailures, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointOperator, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#misra1aTest, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10K, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble2, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoIntercept_noint1, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testClone, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNegativeMean, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFixedSeed, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowSpecialCases, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduce, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx03, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx02, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideVarianceWithMathClass, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testNormalizeArray, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteOrthogonality, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testStartSimplexOutsideRange, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideGeoMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testConstants, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMath308, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testOptimumOutsideRange, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testAlphaRangeAboveTwo, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideReal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPopulationVariance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRound, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRegressIfaceMethod, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLongConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testTwoArgumentErf, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExpm1, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testUnbounded, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonicComparable, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testComparison, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability2, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability1, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreOrthogonality, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSummaryConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToDegrees, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.ode.events.ReappearingEventTest#testDormandPrince, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPower, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters, [Manual]TestMethod=org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddNaN, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#nistData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testZeroDivide, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInf, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSignPredicates, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testComposeDifferentiable, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testGaussianCase, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#lanczosTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevOrthogonality, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.util.FastMathStrictComparisonTest#test1, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceExample, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testHalfBounded, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSqrt, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPercentage, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testInverseConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testFloor, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2Accuracy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIssue567, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize1, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpm1Accuracy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRepresentableDelta, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testPercentage, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtract, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRint, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testSinc, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAboveMaxCount, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCollector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideInf, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExp, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCeil, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testBetaRangeAboveOne, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testReset, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBelowMaxCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinAccuracy, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideZero, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInf, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testSin, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIsZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testIssue716, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testOptimumOutsideRange, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testStartSimplexInsideRange, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcMaple, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#closeEvents, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpSpecialCases, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextF, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCoshAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalNaN, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCbrtAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalImaginary, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testArray, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideVarianceWithMathClass, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolicInverses, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiLegendre, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpAccuracy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelf, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testConstantAcceleration, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeShortcut, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowZero, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalReal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSimpleBenchmark, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcGnu, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement1, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testWrongDimension, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3MultipleRoot, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSinh, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCbrt, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testFloatEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10K, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut1Test, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSummaryConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyInfInf, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextF, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath713NegativeVariable, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombinationInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testContext, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowAccuracy, [Manual]TestMethod=org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testMath475, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivideInt, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testHalfBounded, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBulkIncrement, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testAlphaRangeBelowZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders10, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders11, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders18, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders19, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders16, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders17, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders14, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders15, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders12, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders13, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testCauchyCase, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testTransitionControlMatrixMismatch, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders20, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcmLong, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testEuler, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseOne2, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseOne1, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCopySign, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testBetaRangeBelowMinusOne, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumDouble, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAcos, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgainstStackOverflow, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonic, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testEquals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZeroZero, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRemainder, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testUnbounded, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideGeoMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToRadians, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog10Accuracy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAddDifferentiable, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCombine, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders9, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders7, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders8, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders5, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders6, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders3, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders4, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders1, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAlternateException, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testStartSimplexInsideRange, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiEvaluationAt1, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testCrossings, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testConfig, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testRank, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointPreconditioner, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntConstructor, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testConfig, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSin, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCheckOrder, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanI, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut2Test, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testShortcut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCompose, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testNextDouble, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.linear.OpenMapRealMatrixTest#testMath679, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testShift, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#testIssue695, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinAccuracy, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckFinite, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testByteConstructor, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog10, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextF, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiplyDifferentiable, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog1p, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextF, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefiniteLinearOperator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxDouble, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAdd, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCompare, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.ode.events.ReappearingEventTest#testGragg, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogWithBase, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombine, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.random.ISAACTest#testReference, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRound, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreOrthogonality, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosSpecialCases, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumFloat, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testMap, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseZero2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseZero1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailAlways, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosine, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToMaxUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testPow, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoInterceot_noint2, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination2, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination1, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxFloat, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlace, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt3, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt2, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCos, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfGnu, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPow, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testTransitionMeasurementMatrixMismatch, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanAccuracy, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCosh, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSqrt, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiOrthogonality, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMath340, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testEndpointBehavior, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@df5f5c0}
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent0Component4, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByRow, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testHypot, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection2, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombinePrecondition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtanAccuracy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testMath519, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceFailures, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareSigmoid, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointOperator, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#misra1aTest, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10K, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testUnsortedSamples, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble2, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddMultipleObs, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoIntercept_noint1, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testPointDistance, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testRotate, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent5, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIterationConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testClone, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testAccessor, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample2, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNegativeMean, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFixedSeed, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290LEQ, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowSpecialCases, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduce, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testTetrahedron, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDifference, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx03, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMathpbx02, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideVarianceWithMathClass, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testNormalizeArray, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testNavigation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteOrthogonality, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSOLSConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testStartSimplexOutsideRange, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfSameType, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideGeoMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434NegativeVariable, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testConstants, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testMath308, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testOptimumOutsideRange, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfMixedTypes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testAlphaRangeAboveTwo, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideReal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testClosest, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPopulationVariance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testMessageChain, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRound, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquareOperator, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testLeastSquareSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglyByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRegressIfaceMethod, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testParaboloid2D, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testTinyVariationsData, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testNegativeTestAddObs, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLongConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testTwoArgumentErf, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testFinalResult, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest#testLinearFunction2D, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExpm1, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testWave, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testUnbounded, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonicComparable, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testComparison, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideInside, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHasIntercept, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineToSelfPreconditionSameType, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testCompareDerivativeSigmoid, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath288, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath286, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath293, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testSingular, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMax, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testIssue631, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability2, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testStability1, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateCrossProduct, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerialize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testFloatScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankInputValidation, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreOrthogonality, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveUpperTriangularSystem, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSummaryConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToDegrees, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideImaginary, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.ode.events.ReappearingEventTest#testDormandPrince, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedMean, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPower, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.exception.MaxCountExceededExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisToManyClusters, [Manual]TestMethod=org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testEmptyDifference, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddNaN, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRoundDecimal10, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataYNull, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testCubicMin, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#nistData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testZeroDivide, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInf, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testLowAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSignPredicates, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testPoint, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testComposeDifferentiable, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testGaussianCase, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testSubsetRegression, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testSerializeUnserializable, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#lanczosTest, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiagonalRosen, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevOrthogonality, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testIssue464, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.util.FastMathStrictComparisonTest#test1, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlaceExample, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testIsometry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testHalfBounded, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testFasterThanNewton, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSphere, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSqrt, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testWave, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaOutOfRange, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMath341, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testIteratorPreconditions, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPercentage, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testInverseConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSingularPoint, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testFloor, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2Accuracy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testDisjointPolygons, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIssue567, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize1, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testNormalize2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpm1Accuracy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRepresentableDelta, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElements, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testPercentage, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtract, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNoVariance, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testSearch, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testValueWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleVar, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAccurateDotProduct, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirst, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMaximize1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testReSeed, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.function.SqrtTest#testDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2SpecialCases, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRint, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection2, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection3, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideOutside, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMinStatistics, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testSinc, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit06, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit05, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth1, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit07, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth2, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit02, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit01, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit04, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.GaussianFitterTest#testFit03, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAboveMaxCount, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCollector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideInf, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testNeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder2, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testInsufficientOrder1, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testExp, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCeil, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testGradientComponent1Component2Component3, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest#testWilcoxonSignedRankSimple, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testIntervalBoundsOrdering, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testBetaRangeAboveOne, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testReset, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBelowMaxCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinAccuracy, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConvergenceOnFunctionAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideZero, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInf, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testCross, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaN, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testSin, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434PivotRowSelection, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testNullFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest#testCumulativeDensityFunction, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIsZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testZeroVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testIssue716, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testOptimumOutsideRange, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testStartSimplexInsideRange, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testMath320B, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchSolution, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testCertainSpace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testInsufficientOrder3, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcMaple, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#closeEvents, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpSpecialCases, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextF, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCoshAccuracy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testSingularMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testHeaviside, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testParallel, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalNaN, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineSameType, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testCbrtAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testLessThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSample, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testContains, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiag, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testWeightedProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalImaginary, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testSumSinc, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testProblemDimensionTooSmall, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testArray, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testHighAccuracyExternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testAbscissa, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIssue639, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideVarianceWithMathClass, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull2, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckNotNull1, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolicInverses, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleDataXNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRosen, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoEndPoints, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigar, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiLegendre, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testExpAccuracy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testSine, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLastRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testReduceComparedWithNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testGLSEfficiency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelf, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testConstantAcceleration, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testDerivativeShortcut, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testConstrainedRosen, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowZero, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testSplinePartialDerivatives, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalReal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSimpleBenchmark, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testChoppedHexagon, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfcGnu, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantExternal, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest#testMatchingPartialDerivatives, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBox, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testStair, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testDerivativeNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testRastrigin, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSample, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGetBinUpperBounds, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testCanIncrement1, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testWrongDimension, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3MultipleRoot, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSinh, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal3, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal4, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal5, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal6, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCbrt, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testDelete1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeDoubleArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testFloatEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10K, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut1Test, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSummaryConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInvalidRepresentation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyInfInf, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testInternalDifferentiation, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testConstructorsOK, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleDoubleArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testPreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testAckley, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testMoreThanOnePeriodCoverage, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.exception.OutOfRangeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest#testBuildBox, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProductCancellation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextT, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath434UnfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextF, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testParametricGradient, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionInsideBoundary, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.exception.NotPositiveExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testMisc, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents1, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.ode.events.OverlappingEventsTest#testOverlappingEvents0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInitOutofbounds, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath713NegativeVariable, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombinationInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testContext, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testHyperbolic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testPowAccuracy, [Manual]TestMethod=org.apache.commons.math.exception.DimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testMinimize2, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testTrimOneImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testMath475, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testMultiple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testDivideInt, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnlimitedSubHyperplane, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testLowPercentile, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAtan2, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPower, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testHalfBounded, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleNullData, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testDefaultFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testBulkIncrement, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testYVariance, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testAlphaRangeBelowZero, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testUnion, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonSquarePreconditioner, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes1, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes2, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooSmallExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesRangeIntegerArguments, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testDegeneracy, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testDropPhase1Objective, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20040520, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders10, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders11, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testToString, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders18, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders19, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders16, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders17, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders14, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders15, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders12, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders13, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testOffset, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testCauchyCase, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCopySignByte, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentOptimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testOppositeHyperplanes, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInfinite, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testTransitionControlMatrixMismatch, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders20, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTablet, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testXSampleDataNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testLcmLong, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testEuler, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testTwoAxes, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testThreeRedundantColumn, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseOne2, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseOne1, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCopySign, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedSolution, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testBetaRangeBelowMinusOne, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath304, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath303, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testLonglySimpleCov, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumDouble, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAcos, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMissedEndEvent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgainstStackOverflow, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.CurveFitterTest#testMath372, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testIsMonotonic, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAsinSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testMaximize, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.util.PairTest#testEquals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideZeroZero, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testRemainder, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testTranslate, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest#testParaboloid, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testThreePoints, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest#testUnbounded, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testRepetition, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testSolutionRightSide, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombineToSelfPrecondition, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testOverrideGeoMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPlane, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleScalbSpecialCases, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOriginOffset, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testPerformClusterAnalysisDegenerate, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanhAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBothRev, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextT, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testToRadians, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeWithInverseFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextF, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivativeLargeArguments, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarAddInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLast, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testBug20041003, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testOuterProduct, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog10Accuracy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testDoubleDirect, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAddDifferentiable, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testPreconditionedSolution2, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testWeightedVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextBinomial, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testDoubleNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionMixedType, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testAtan, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testPointAt, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetEntry, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testGetUniqueCount, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#testSmallDistances, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompMeanCutoff, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPowInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testAnalyticalDifferentiation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulLast, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.exception.NumberIsTooLargeExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCombine, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncNeitherRev, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders9, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders7, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders8, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders5, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders6, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders3, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders4, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleUp, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders1, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testSolveSaunders2, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDefaultFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombinePreconditionSameType, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testTransform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testAddObsGetNClear, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedSum, [Manual]TestMethod=org.apache.commons.math.util.IncrementorTest#testAlternateException, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest#testStartSimplexInsideRange, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest#testConstructorOK, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath290GEQ, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiEvaluationAt1, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testHdiagConstant, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testSolveLowerTriangularSystem, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testCrossings, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testEllipse, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testMath296withoutWeights, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testEventManagement, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCombineMixedTypes, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.exception.util.ArgUtilsTest#testFlatten, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testVarianceDecompNonMeanCutoff, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testMulBoth, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailSometimes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testConfig, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.exception.TooManyEvaluationsExceptionTest#testMessage, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIssue596, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testRank, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testNonSelfAdjointPreconditioner, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testElliRotated, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.optimization.direct.PowellOptimizerTest#testMaximizeQuadratic, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntConstructor, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testConfig, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testPower10, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncNeither, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testSin, [Manual]TestMethod=org.apache.commons.math.ode.JacobianMatricesTest#testParameterizable, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivideNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testPCorr, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCheckOrder, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testParameters, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest#testTooFewSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanI, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadInitial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testPValueNearZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BracketFinderTest#testMinimumIsOnIntervalBoundary, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testConcentric, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulBothRev, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.optimization.BatteryNISTTest#chwirut2Test, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage2, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage5, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage4, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogisticTest#testParametricUsage6, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testNonMeanCutoffs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.analysis.function.SigmoidTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkMissingFastMathClasses, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextHypergeometric, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncFirstRev, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testUnpreconditionedResidual, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testLineIntersection, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testReferenceCode, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testSimplyConnected, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaNegative, [Manual]TestMethod=org.apache.commons.math.analysis.function.SincTest#testShortcut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testSeveralSegments, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testHole, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testCompose, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncFirst, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingGoodInit, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.StableRandomGeneratorTest#testNextDouble, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testOffset, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.analysis.function.HarmonicOscillatorTest#testDerivative, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.linear.OpenMapRealMatrixTest#testMath679, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testFloatDirect, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testShift, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#tesNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testAccessors, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testIncBoth, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.ode.events.EventStateTest#testIssue695, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionAboveSide, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSinAccuracy, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesNoData, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCheckFinite, [Manual]TestMethod=org.apache.commons.math.stat.correlation.StorelessCovarianceTest#testSwissFertilityByEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest#testPlane, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testByteConstructor, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextZipf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquaredDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLog1pSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog10, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions5, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions4, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextF, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions3, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions2, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testMultiplyDifferentiable, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testPreconditions6, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilitySpecial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.analysis.function.LogitTest#testParametricValue, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testSetSubVector, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefinitePreconditioner, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testLog1p, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testConfig, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextF, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.distribution.AbtractIntegerDistributionTest#testCumulativeProbabilitiesSingleIntegerArguments, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.PivotingQRDecompositionTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testOneRedundantColumn, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulFirstRev, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testCigTab, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.LineTest#testLineDistance, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testEndPoints, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testLog10, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadMaximumIterations, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testNonPositiveDefiniteLinearOperator, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxDouble, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testIntersectionBoundaryOutside, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testAdd, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testCompare, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#testNewSampleInvalidData, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testDefaultFormatVector3D, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testTan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.ode.events.ReappearingEventTest#testGragg, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing1, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing2, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testLogWithBase, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testCombine, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.random.ISAACTest#testReference, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testOverrideMeanWithMathClass, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testSomeValues, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testMismatchedOperatorDimensions, [Manual]TestMethod=org.apache.commons.math.dfp.DfpDecTest#testRound, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreOrthogonality, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest#testBadFunction, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testNoSegments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeitherRev, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.analysis.function.GaussianTest#testLargeArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong2, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testAcosSpecialCases, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPascal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testSignumFloat, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testBoundariesDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUInputValidation, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGeneratorConfig, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testMap, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testFilippelli, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseZero2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseZero1, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testSsDiffPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testIterator, [Manual]TestMethod=org.apache.commons.math.RetryRunnerTest#testRetryFailAlways, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarSubtractNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest#testSingleDown, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosine, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.inference.MannWhitneyUTestTest#testMannWhitneyUSimple, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testCompareToMaxUlps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextLongDirect, [Manual]TestMethod=org.apache.commons.math.dfp.DfpMathTest#testPow, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testDiffPow, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextF, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNoInterceot_noint2, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination2, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testLinearCombination1, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition1, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testCosinePrecondition3, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.PegasusSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testCrossProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest#testInsert, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testSparseIterator, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testMinMaxFloat, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testSortInPlace, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testReciprocalInf, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextT, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.optimization.direct.CMAESOptimizerTest#testInputSigmaDimensionMismatch, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt3, [Manual]TestMethod=org.apache.commons.math.util.MathArraysTest#testCopyOfInt2, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCos, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionBelowSide, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolver2Test#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErfGnu, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest#testXor, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMoments, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextBooleanDirect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionOutsideOutside, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testYSampleDataNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarPow, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest#testInterval, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.filter.KalmanFilterTest#testTransitionMeasurementMatrixMismatch, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.linear.SymmLQTest#testUnpreconditionedInPlaceSolutionWithInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testContains, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluateArraySegment, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler4, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler3, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler2, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testWampler1, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#testTanAccuracy, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetSubVector, [Manual]TestMethod=org.apache.commons.math.exception.util.ExceptionContextTest#testNoArgAddMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.util.FastMathTestPerformance#testCosh, [Manual]TestMethod=org.apache.commons.math.dfp.DfpTest#testSqrt, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextInversionDeviate, [Manual]TestMethod=org.apache.commons.math.util.PrecisionTest#testEqualsIncludingNaNWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testDotProduct, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest#testRegressAirlineConstantInternal, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.util.MultidimensionalCounterTest#testMulti2UniConversion, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testJacobiOrthogonality, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testNewSampleInsufficientData, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest#testSolutionLeftSide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.analysis.FunctionUtilsTest#testFixingArguments, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNexBoolean2, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testAllButExcluded, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testMath369, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarDivide, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.random.Well44497aTest#testNextFloatDirect, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.random.Well1024aTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextCauchy, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputTest#testMulNeither, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.LineTest#testIntersection, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.util.ArithmeticUtilsTest#testGcdLong, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.ConjugateGradientTest#testDimensionMismatchRightHandSide, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testIntersectionBoundaryBoundary, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.twod.SubLineTest#testHalfInfinitePos, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest#testIncLastRev, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.PlaneTest#testSimilar, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.SecantSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextPoissonConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMath340, [Manual]TestMethod=org.apache.commons.math.random.Well44497bTest#testNextGamma, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.random.Well19937aTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.random.BitsStreamGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.IllinoisSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest#testInitOutOfBounds, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorTest#testAddToEntry, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.random.Well512aTest#testNextBeta, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.Well19937cTest#testNextIntIAE, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest#testPreconditions, [Manual]TestMethod=org.apache.commons.math.geometry.euclidean.threed.SubLineTest#testHalfInfiniteNeg, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntDirect, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextWeibull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluateArraySegmentWeighted, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.analysis.function.StepFunctionTest#testEndpointBehavior, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@df5f5c0}
Path to runner Classes: /Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
Test [Manual]TestMethod=org.apache.commons.math.util.FastMathStrictComparisonTest#test1 result was not reported by test-runner.
Adding a line where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@296
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@296
Adding a line where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@153
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@153
Adding a line where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@283
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@211
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@213
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@232
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@233
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@245
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@246
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@247
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@248
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@275
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@283
Adding a line where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@190
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@187
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver@-@190
Adding a line where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@394
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@393
Adding a line from the block where an exception was thrown: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver@-@394
Test [Manual]TestMethod=org.apache.commons.math.util.FastMathTest#checkExtraFastMathClasses result was not reported by test-runner.
Tests found: 3121
Tests executed: 3119
Suspicious: 1 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest$1 l: 88, susp 1.0
Suspicious: 2 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest$1 l: 90, susp 1.0
Suspicious: 3 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 232, susp 1.0
Suspicious: 4 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 245, susp 1.0
Suspicious: 5 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 248, susp 1.0
Suspicious: 6 line org.apache.commons.math.exception.MathIllegalStateException l: 80, susp 0.7071067811865475
Suspicious: 7 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 393, susp 0.7071067811865475
Suspicious: 8 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 394, susp 0.7071067811865475
Suspicious: 9 line org.apache.commons.math.exception.util.ExceptionContext l: 182, susp 0.5773502691896258
Suspicious: 10 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 295, susp 0.5773502691896258
Suspicious: 11 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 296, susp 0.5773502691896258
Suspicious: 12 line org.apache.commons.math.exception.MathIllegalStateException l: 86, susp 0.5
Suspicious: 13 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 128, susp 0.5
Suspicious: 14 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 129, susp 0.5
Suspicious: 15 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 130, susp 0.5
Suspicious: 16 line org.apache.commons.math.exception.util.ExceptionContext l: 137, susp 0.5
Suspicious: 17 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 124, susp 0.4472135954999579
Suspicious: 18 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 125, susp 0.4472135954999579
Suspicious: 19 line org.apache.commons.math.exception.util.ExceptionContext l: 128, susp 0.4472135954999579
Suspicious: 20 line org.apache.commons.math.exception.util.ExceptionContext l: 147, susp 0.35355339059327373
Suspicious: 21 line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 59, susp 0.3333333333333333
Suspicious: 22 line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 60, susp 0.3333333333333333
Suspicious: 23 line org.apache.commons.math.exception.util.ExceptionContext l: 171, susp 0.3333333333333333
Suspicious: 24 line org.apache.commons.math.exception.util.ExceptionContext l: 172, susp 0.3333333333333333
Suspicious: 25 line org.apache.commons.math.exception.util.ExceptionContext l: 173, susp 0.3333333333333333
Suspicious: 26 line org.apache.commons.math.exception.util.ExceptionContext l: 174, susp 0.3333333333333333
Suspicious: 27 line org.apache.commons.math.exception.util.ExceptionContext l: 175, susp 0.3333333333333333
Suspicious: 28 line org.apache.commons.math.exception.util.ExceptionContext l: 176, susp 0.3333333333333333
Suspicious: 29 line org.apache.commons.math.exception.util.ExceptionContext l: 177, susp 0.3333333333333333
Suspicious: 30 line org.apache.commons.math.exception.util.ExceptionContext l: 179, susp 0.3333333333333333
Suspicious: 31 line org.apache.commons.math.exception.util.ExceptionContext l: 180, susp 0.3333333333333333
Suspicious: 32 line org.apache.commons.math.exception.util.ExceptionContext l: 186, susp 0.3333333333333333
Suspicious: 33 line org.apache.commons.math.exception.util.LocalizedFormats l: 373, susp 0.31622776601683794
Suspicious: 34 line org.apache.commons.math.exception.util.LocalizedFormats l: 380, susp 0.31622776601683794
Suspicious: 35 line org.apache.commons.math.exception.util.LocalizedFormats l: 386, susp 0.31622776601683794
Suspicious: 36 line org.apache.commons.math.exception.MaxCountExceededException l: 62, susp 0.2886751345948129
Suspicious: 37 line org.apache.commons.math.exception.TooManyEvaluationsException l: 37, susp 0.2773500981126146
Suspicious: 38 line org.apache.commons.math.exception.TooManyEvaluationsException l: 38, susp 0.2773500981126146
Suspicious: 39 line org.apache.commons.math.exception.TooManyEvaluationsException l: 39, susp 0.2773500981126146
Suspicious: 40 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 265, susp 0.2672612419124244
Suspicious: 41 line org.apache.commons.math.util.Incrementor$1 l: 65, susp 0.24253562503633297
Suspicious: 42 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 235, susp 0.24253562503633297
Suspicious: 43 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 294, susp 0.23570226039551587
Suspicious: 44 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 295, susp 0.23570226039551587
Suspicious: 45 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 296, susp 0.23570226039551587
Suspicious: 46 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 297, susp 0.23570226039551587
Suspicious: 47 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 260, susp 0.22941573387056174
Suspicious: 48 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 269, susp 0.22941573387056174
Suspicious: 49 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 290, susp 0.22941573387056174
Suspicious: 50 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 299, susp 0.22941573387056174
Suspicious: 51 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 316, susp 0.22941573387056174
Suspicious: 52 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 317, susp 0.22941573387056174
Suspicious: 53 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 318, susp 0.22941573387056174
Suspicious: 54 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 319, susp 0.22941573387056174
Suspicious: 55 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 320, susp 0.22941573387056174
Suspicious: 56 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 323, susp 0.22941573387056174
Suspicious: 57 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 325, susp 0.22941573387056174
Suspicious: 58 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 326, susp 0.22941573387056174
Suspicious: 59 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 327, susp 0.22941573387056174
Suspicious: 60 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 328, susp 0.22941573387056174
Suspicious: 61 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 329, susp 0.22941573387056174
Suspicious: 62 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 343, susp 0.22941573387056174
Suspicious: 63 line org.apache.commons.math.exception.MaxCountExceededException l: 42, susp 0.22360679774997896
Suspicious: 64 line org.apache.commons.math.exception.MaxCountExceededException l: 43, susp 0.22360679774997896
Suspicious: 65 line org.apache.commons.math.exception.MaxCountExceededException l: 53, susp 0.22360679774997896
Suspicious: 66 line org.apache.commons.math.exception.MaxCountExceededException l: 54, susp 0.22360679774997896
Suspicious: 67 line org.apache.commons.math.exception.MaxCountExceededException l: 55, susp 0.22360679774997896
Suspicious: 68 line org.apache.commons.math.exception.MaxCountExceededException l: 56, susp 0.22360679774997896
Suspicious: 69 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 172, susp 0.22360679774997896
Suspicious: 70 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 173, susp 0.22360679774997896
Suspicious: 71 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 195, susp 0.2
Suspicious: 72 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 198, susp 0.2
Suspicious: 73 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 199, susp 0.2
Suspicious: 74 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 200, susp 0.2
Suspicious: 75 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 201, susp 0.2
Suspicious: 76 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 202, susp 0.2
Suspicious: 77 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 203, susp 0.2
Suspicious: 78 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 204, susp 0.2
Suspicious: 79 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 205, susp 0.2
Suspicious: 80 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 211, susp 0.2
Suspicious: 81 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 212, susp 0.2
Suspicious: 82 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 213, susp 0.2
Suspicious: 83 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 233, susp 0.2
Suspicious: 84 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 236, susp 0.2
Suspicious: 85 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 241, susp 0.2
Suspicious: 86 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 246, susp 0.2
Suspicious: 87 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 247, susp 0.2
Suspicious: 88 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 251, susp 0.2
Suspicious: 89 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 252, susp 0.2
Suspicious: 90 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 254, susp 0.2
Suspicious: 91 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 273, susp 0.2
Suspicious: 92 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 275, susp 0.2
Suspicious: 93 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 283, susp 0.2
Suspicious: 94 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 284, susp 0.2
Suspicious: 95 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 365, susp 0.2
Suspicious: 96 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 366, susp 0.2
Suspicious: 97 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 367, susp 0.2
Suspicious: 98 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 368, susp 0.2
Suspicious: 99 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 373, susp 0.2
Suspicious: 100 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 374, susp 0.2
Suspicious: 101 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 375, susp 0.2
Suspicious: 102 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 378, susp 0.2
Suspicious: 103 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 146, susp 0.19245008972987526
Suspicious: 104 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 147, susp 0.19245008972987526
Suspicious: 105 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 148, susp 0.19245008972987526
Suspicious: 106 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 149, susp 0.19245008972987526
Suspicious: 107 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 150, susp 0.19245008972987526
Suspicious: 108 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 151, susp 0.19245008972987526
Suspicious: 109 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 154, susp 0.19245008972987526
Suspicious: 110 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 155, susp 0.19245008972987526
Suspicious: 111 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 161, susp 0.19245008972987526
Suspicious: 112 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 162, susp 0.19245008972987526
Suspicious: 113 line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 169, susp 0.19245008972987526
Suspicious: 114 line org.apache.commons.math.exception.MathIllegalStateException l: 74, susp 0.15075567228888181
Suspicious: 115 line org.apache.commons.math.exception.MathIllegalStateException l: 69, susp 0.14744195615489714
Suspicious: 116 line org.apache.commons.math.exception.MathIllegalStateException l: 70, susp 0.14744195615489714
Suspicious: 117 line org.apache.commons.math.analysis.solvers.BaseSecantSolverAbstractTest l: 35, susp 0.14433756729740646
Suspicious: 118 line org.apache.commons.math.exception.MathIllegalStateException l: 45, susp 0.1259881576697424
Suspicious: 119 line org.apache.commons.math.exception.MathIllegalStateException l: 46, susp 0.1259881576697424
Suspicious: 120 line org.apache.commons.math.exception.MathIllegalStateException l: 47, susp 0.1259881576697424
Suspicious: 121 line org.apache.commons.math.exception.MathIllegalStateException l: 48, susp 0.1259881576697424
Suspicious: 122 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 268, susp 0.08451542547285165
Suspicious: 123 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 269, susp 0.08451542547285165
Suspicious: 124 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 355, susp 0.08391813582966891
Suspicious: 125 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 356, susp 0.08391813582966891
Suspicious: 126 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 122, susp 0.08362420100070908
Suspicious: 127 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 354, susp 0.08362420100070908
Suspicious: 128 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 134, susp 0.07715167498104596
Suspicious: 129 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 140, susp 0.07602859212697055
Suspicious: 130 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 128, susp 0.07580980435789034
Suspicious: 131 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 190, susp 0.07559289460184544
Suspicious: 132 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 110, susp 0.07312724241271307
Suspicious: 133 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 116, susp 0.07312724241271307
Suspicious: 134 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 153, susp 0.07293249574894728
Suspicious: 135 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 154, susp 0.07293249574894728
Suspicious: 136 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 294, susp 0.07293249574894728
Suspicious: 137 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 297, susp 0.07293249574894728
Suspicious: 138 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 298, susp 0.07293249574894728
Suspicious: 139 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 173, susp 0.07273929674533079
Suspicious: 140 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 176, susp 0.07273929674533079
Suspicious: 141 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 177, susp 0.07273929674533079
Suspicious: 142 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 178, susp 0.07273929674533079
Suspicious: 143 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 179, susp 0.07273929674533079
Suspicious: 144 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 180, susp 0.07273929674533079
Suspicious: 145 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 181, susp 0.07273929674533079
Suspicious: 146 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 182, susp 0.07273929674533079
Suspicious: 147 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 187, susp 0.07273929674533079
Suspicious: 148 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 49, susp 0.07142857142857142
Suspicious: 149 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 92, susp 0.07142857142857142
Suspicious: 150 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 93, susp 0.07142857142857142
Suspicious: 151 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 94, susp 0.07142857142857142
Suspicious: 152 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 95, susp 0.07142857142857142
Suspicious: 153 line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 96, susp 0.07142857142857142
Suspicious: 154 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 340, susp 0.07071067811865475
Suspicious: 155 line org.apache.commons.math.util.Precision l: 282, susp 0.07001400420140048
Suspicious: 156 line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 336, susp 0.06984302957695782
Suspicious: 157 line org.apache.commons.math.util.FastMath l: 3539, susp 0.04885319687460315
Suspicious: 158 line org.apache.commons.math.util.Precision l: 277, susp 0.04828045495852676
Suspicious: 159 line org.apache.commons.math.util.Precision l: 278, susp 0.04828045495852676
Suspicious: 160 line org.apache.commons.math.util.Precision l: 281, susp 0.04828045495852676
Suspicious: 161 line org.apache.commons.math.util.Precision l: 284, susp 0.04828045495852676
Suspicious: 162 line org.apache.commons.math.util.Precision l: 288, susp 0.04828045495852676
Suspicious: 163 line org.apache.commons.math.util.Precision l: 290, susp 0.04828045495852676
Suspicious: 164 line org.apache.commons.math.util.FastMath l: 3005, susp 0.0481683050859088
Suspicious: 165 line org.apache.commons.math.util.FastMath l: 3542, susp 0.04503773491110449
Suspicious: 166 line org.apache.commons.math.exception.util.ArgUtils l: 46, susp 0.04485613040162566
Suspicious: 167 line org.apache.commons.math.util.Incrementor l: 153, susp 0.04389512813061471
Suspicious: 168 line org.apache.commons.math.util.Incrementor l: 150, susp 0.043852900965351466
Suspicious: 169 line org.apache.commons.math.util.Incrementor l: 159, susp 0.0430730492253948
Suspicious: 170 line org.apache.commons.math.util.Incrementor l: 160, susp 0.0430730492253948
Suspicious: 171 line org.apache.commons.math.util.Incrementor l: 91, susp 0.042409446483998546
Suspicious: 172 line org.apache.commons.math.util.Incrementor l: 92, susp 0.042409446483998546
Suspicious: 173 line org.apache.commons.math.util.FastMath l: 3541, susp 0.04218245406095978
Suspicious: 174 line org.apache.commons.math.exception.util.ArgUtils l: 45, susp 0.04214497519610896
Suspicious: 175 line org.apache.commons.math.exception.util.ArgUtils l: 50, susp 0.04214497519610896
Suspicious: 176 line org.apache.commons.math.util.Incrementor l: 52, susp 0.041959067914834454
Suspicious: 177 line org.apache.commons.math.util.Incrementor l: 53, susp 0.041959067914834454
Suspicious: 178 line org.apache.commons.math.util.Incrementor l: 61, susp 0.04184869753186872
Suspicious: 179 line org.apache.commons.math.util.Incrementor$1 l: 62, susp 0.04184869753186872
Suspicious: 180 line org.apache.commons.math.util.Incrementor l: 68, susp 0.04184869753186872
Suspicious: 181 line org.apache.commons.math.util.Incrementor l: 40, susp 0.04181210050035454
Suspicious: 182 line org.apache.commons.math.util.Incrementor l: 78, susp 0.04181210050035454
Suspicious: 183 line org.apache.commons.math.util.Incrementor l: 79, susp 0.04181210050035454
Suspicious: 184 line org.apache.commons.math.util.Incrementor l: 80, susp 0.04181210050035454
Suspicious: 185 line org.apache.commons.math.util.Incrementor l: 81, susp 0.04181210050035454
Suspicious: 186 line org.apache.commons.math.util.FastMath l: 3538, susp 0.04116934847963091
Suspicious: 187 line org.apache.commons.math.exception.util.ExceptionContext l: 87, susp 0.03892494720807615
Suspicious: 188 line org.apache.commons.math.exception.util.ExceptionContext l: 88, susp 0.03892494720807615
Suspicious: 189 line org.apache.commons.math.exception.util.ExceptionContext l: 89, susp 0.03892494720807615
Suspicious: 190 line org.apache.commons.math.exception.util.ArgUtils l: 42, susp 0.038895492079220696
Suspicious: 191 line org.apache.commons.math.exception.util.ArgUtils l: 43, susp 0.038895492079220696
Suspicious: 192 line org.apache.commons.math.exception.util.ArgUtils l: 44, susp 0.038895492079220696
Suspicious: 193 line org.apache.commons.math.exception.util.ArgUtils l: 54, susp 0.038895492079220696
Suspicious: 194 line org.apache.commons.math.exception.util.ExceptionContext l: 64, susp 0.038895492079220696
Suspicious: 195 line org.apache.commons.math.exception.util.ExceptionContext l: 65, susp 0.038895492079220696
Suspicious: 196 line org.apache.commons.math.exception.util.ExceptionContext l: 66, susp 0.038895492079220696
Suspicious: 197 line org.apache.commons.math.exception.util.ExceptionContext l: 67, susp 0.038895492079220696
Suspicious: 198 line org.apache.commons.math.exception.util.ExceptionContext l: 68, susp 0.038895492079220696
Suspicious: 199 line org.apache.commons.math.exception.util.ExceptionContext l: 69, susp 0.038895492079220696
Suspicious: 200 line org.apache.commons.math.util.MathUtils l: 260, susp 0.03826393658966905
Suspicious: 201 line org.apache.commons.math.util.MathUtils l: 257, susp 0.038124642583151166
Suspicious: 202 line org.apache.commons.math.util.FastMath l: 3023, susp 0.028513297425610054
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest l: 88, susp 1.0
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest l: 90, susp 1.0
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 232, susp 1.0
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 245, susp 1.0
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 248, susp 1.0
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 80, susp 0.7071067811865475
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 393, susp 0.7071067811865475
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 394, susp 0.7071067811865475
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 182, susp 0.5773502691896258
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 295, susp 0.5773502691896258
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 296, susp 0.5773502691896258
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 86, susp 0.5
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 128, susp 0.5
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 129, susp 0.5
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 130, susp 0.5
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 137, susp 0.5
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 124, susp 0.4472135954999579
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 125, susp 0.4472135954999579
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 128, susp 0.4472135954999579
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 147, susp 0.35355339059327373
Suspicious:  line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 59, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver l: 60, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 171, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 172, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 173, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 174, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 175, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 176, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 177, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 179, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 180, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 186, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.exception.util.LocalizedFormats l: 373, susp 0.31622776601683794
Suspicious:  line org.apache.commons.math.exception.util.LocalizedFormats l: 380, susp 0.31622776601683794
Suspicious:  line org.apache.commons.math.exception.util.LocalizedFormats l: 386, susp 0.31622776601683794
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 62, susp 0.2886751345948129
Suspicious:  line org.apache.commons.math.exception.TooManyEvaluationsException l: 37, susp 0.2773500981126146
Suspicious:  line org.apache.commons.math.exception.TooManyEvaluationsException l: 38, susp 0.2773500981126146
Suspicious:  line org.apache.commons.math.exception.TooManyEvaluationsException l: 39, susp 0.2773500981126146
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 265, susp 0.2672612419124244
Suspicious:  line org.apache.commons.math.util.Incrementor l: 65, susp 0.24253562503633297
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 235, susp 0.24253562503633297
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 294, susp 0.23570226039551587
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 295, susp 0.23570226039551587
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 296, susp 0.23570226039551587
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 297, susp 0.23570226039551587
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 260, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 269, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 290, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 299, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 316, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 317, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 318, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 319, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 320, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 323, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 325, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 326, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 327, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 328, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 329, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 343, susp 0.22941573387056174
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 42, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 43, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 53, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 54, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 55, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.exception.MaxCountExceededException l: 56, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 172, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 173, susp 0.22360679774997896
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 195, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 198, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 199, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 200, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 201, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 202, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 203, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 204, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 205, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 211, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 212, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 213, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 233, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 236, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 241, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 246, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 247, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 251, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 252, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 254, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 273, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 275, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 283, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 284, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 365, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 366, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 367, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 368, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 373, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 374, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 375, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 378, susp 0.2
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 146, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 147, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 148, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 149, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 150, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 151, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 154, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 155, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 161, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 162, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver l: 169, susp 0.19245008972987526
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 74, susp 0.15075567228888181
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 69, susp 0.14744195615489714
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 70, susp 0.14744195615489714
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseSecantSolverAbstractTest l: 35, susp 0.14433756729740646
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 45, susp 0.1259881576697424
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 46, susp 0.1259881576697424
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 47, susp 0.1259881576697424
Suspicious:  line org.apache.commons.math.exception.MathIllegalStateException l: 48, susp 0.1259881576697424
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 268, susp 0.08451542547285165
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 269, susp 0.08451542547285165
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 355, susp 0.08391813582966891
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 356, susp 0.08391813582966891
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 122, susp 0.08362420100070908
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 354, susp 0.08362420100070908
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 134, susp 0.07715167498104596
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 140, susp 0.07602859212697055
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 128, susp 0.07580980435789034
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 190, susp 0.07559289460184544
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 110, susp 0.07312724241271307
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 116, susp 0.07312724241271307
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 153, susp 0.07293249574894728
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 154, susp 0.07293249574894728
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 294, susp 0.07293249574894728
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 297, susp 0.07293249574894728
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 298, susp 0.07293249574894728
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 173, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 176, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 177, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 178, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 179, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 180, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 181, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 182, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 187, susp 0.07273929674533079
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 49, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 92, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 93, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 94, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 95, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver l: 96, susp 0.07142857142857142
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 340, susp 0.07071067811865475
Suspicious:  line org.apache.commons.math.util.Precision l: 282, susp 0.07001400420140048
Suspicious:  line org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils l: 336, susp 0.06984302957695782
Suspicious:  line org.apache.commons.math.util.FastMath l: 3539, susp 0.04885319687460315
Suspicious:  line org.apache.commons.math.util.Precision l: 277, susp 0.04828045495852676
Suspicious:  line org.apache.commons.math.util.Precision l: 278, susp 0.04828045495852676
Suspicious:  line org.apache.commons.math.util.Precision l: 281, susp 0.04828045495852676
Suspicious:  line org.apache.commons.math.util.Precision l: 284, susp 0.04828045495852676
Suspicious:  line org.apache.commons.math.util.Precision l: 288, susp 0.04828045495852676
Suspicious:  line org.apache.commons.math.util.Precision l: 290, susp 0.04828045495852676
Suspicious:  line org.apache.commons.math.util.FastMath l: 3005, susp 0.0481683050859088
Suspicious:  line org.apache.commons.math.util.FastMath l: 3542, susp 0.04503773491110449
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 46, susp 0.04485613040162566
Suspicious:  line org.apache.commons.math.util.Incrementor l: 153, susp 0.04389512813061471
Suspicious:  line org.apache.commons.math.util.Incrementor l: 150, susp 0.043852900965351466
Suspicious:  line org.apache.commons.math.util.Incrementor l: 159, susp 0.0430730492253948
Suspicious:  line org.apache.commons.math.util.Incrementor l: 160, susp 0.0430730492253948
Suspicious:  line org.apache.commons.math.util.Incrementor l: 91, susp 0.042409446483998546
Suspicious:  line org.apache.commons.math.util.Incrementor l: 92, susp 0.042409446483998546
Suspicious:  line org.apache.commons.math.util.FastMath l: 3541, susp 0.04218245406095978
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 45, susp 0.04214497519610896
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 50, susp 0.04214497519610896
Suspicious:  line org.apache.commons.math.util.Incrementor l: 52, susp 0.041959067914834454
Suspicious:  line org.apache.commons.math.util.Incrementor l: 53, susp 0.041959067914834454
Suspicious:  line org.apache.commons.math.util.Incrementor l: 61, susp 0.04184869753186872
Suspicious:  line org.apache.commons.math.util.Incrementor l: 62, susp 0.04184869753186872
Suspicious:  line org.apache.commons.math.util.Incrementor l: 68, susp 0.04184869753186872
Suspicious:  line org.apache.commons.math.util.Incrementor l: 40, susp 0.04181210050035454
Suspicious:  line org.apache.commons.math.util.Incrementor l: 78, susp 0.04181210050035454
Suspicious:  line org.apache.commons.math.util.Incrementor l: 79, susp 0.04181210050035454
Suspicious:  line org.apache.commons.math.util.Incrementor l: 80, susp 0.04181210050035454
Suspicious:  line org.apache.commons.math.util.Incrementor l: 81, susp 0.04181210050035454
Suspicious:  line org.apache.commons.math.util.FastMath l: 3538, susp 0.04116934847963091
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 87, susp 0.03892494720807615
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 88, susp 0.03892494720807615
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 89, susp 0.03892494720807615
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 42, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 43, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 44, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ArgUtils l: 54, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 64, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 65, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 66, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 67, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 68, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.exception.util.ExceptionContext l: 69, susp 0.038895492079220696
Suspicious:  line org.apache.commons.math.util.MathUtils l: 260, susp 0.03826393658966905
Suspicious:  line org.apache.commons.math.util.MathUtils l: 257, susp 0.038124642583151166
Suspicious:  line org.apache.commons.math.util.FastMath l: 3023, susp 0.028513297425610054
Executing time Fault localization: 243 sec
Setting up the max to 2438810 milliseconds (2438 sec)
---- Initial suspicious size: 202
Creating variant 1
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest$1, methodName=null, lineNumber=88, susp=1.0]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest$1, methodName=null, lineNumber=90, susp=1.0]
--ModifPoint:CtLocalVariableImpl, suspValue 1.0, line 232, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 1.0, line 245, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtDoImpl, suspValue 1.0, line 248, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.7071067811865475, line 80, file MathIllegalStateException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.7071067811865475, line 393, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.7071067811865475, line 394, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.5773502691896258, line 182, file ExceptionContext.java
--ModifPoint:CtThrowImpl, suspValue 0.5773502691896258, line 296, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 86, file MathIllegalStateException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 128, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 129, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 137, file ExceptionContext.java
--ModifPoint:CtIfImpl, suspValue 0.4472135954999579, line 125, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.4472135954999579, line 128, file ExceptionContext.java
--ModifPoint:CtReturnImpl, suspValue 0.35355339059327373, line 147, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 171, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 172, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 173, file ExceptionContext.java
--ModifPoint:CtForImpl, suspValue 0.3333333333333333, line 174, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 175, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 176, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 177, file ExceptionContext.java
--ModifPoint:CtInvocationImpl, suspValue 0.3333333333333333, line 179, file ExceptionContext.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 180, file ExceptionContext.java
--ModifPoint:CtReturnImpl, suspValue 0.3333333333333333, line 186, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.31622776601683794, line 373, file LocalizedFormats.java
--ModifPoint:CtReturnImpl, suspValue 0.31622776601683794, line 386, file LocalizedFormats.java
--ModifPoint:CtReturnImpl, suspValue 0.2886751345948129, line 62, file MaxCountExceededException.java
--ModifPoint:CtInvocationImpl, suspValue 0.2773500981126146, line 38, file TooManyEvaluationsException.java
--ModifPoint:CtUnaryOperatorImpl, suspValue 0.2672612419124244, line 265, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtThrowImpl, suspValue 0.24253562503633297, line 65, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.24253562503633297, line 235, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.23570226039551587, line 294, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.23570226039551587, line 295, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.23570226039551587, line 296, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.23570226039551587, line 297, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.22941573387056174, line 260, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 269, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.22941573387056174, line 290, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.22941573387056174, line 299, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.22941573387056174, line 316, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 317, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.22941573387056174, line 318, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 319, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtUnaryOperatorImpl, suspValue 0.22941573387056174, line 320, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.22941573387056174, line 323, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 325, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 326, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 327, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtUnaryOperatorImpl, suspValue 0.22941573387056174, line 328, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22941573387056174, line 329, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.22360679774997896, line 42, file MaxCountExceededException.java
--ModifPoint:CtInvocationImpl, suspValue 0.22360679774997896, line 54, file MaxCountExceededException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22360679774997896, line 55, file MaxCountExceededException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22360679774997896, line 172, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.22360679774997896, line 173, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 195, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 198, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 199, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 200, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 201, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 202, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 203, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 204, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 205, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 211, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.2, line 213, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.2, line 233, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.2, line 236, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.2, line 241, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 246, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 247, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.2, line 251, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.2, line 252, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.2, line 254, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.2, line 275, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 283, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.2, line 284, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtForImpl, suspValue 0.2, line 365, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 366, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtForImpl, suspValue 0.2, line 367, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.2, line 368, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.2, line 373, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtForImpl, suspValue 0.2, line 374, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.2, line 375, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.2, line 378, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19245008972987526, line 146, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19245008972987526, line 147, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19245008972987526, line 148, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19245008972987526, line 149, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19245008972987526, line 150, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.19245008972987526, line 151, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19245008972987526, line 154, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.19245008972987526, line 155, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19245008972987526, line 161, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.19245008972987526, line 162, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtIfImpl, suspValue 0.19245008972987526, line 169, file BracketingNthOrderBrentSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.15075567228888181, line 74, file MathIllegalStateException.java
--ModifPoint:CtInvocationImpl, suspValue 0.14744195615489714, line 69, file MathIllegalStateException.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.analysis.solvers.BaseSecantSolverAbstractTest, methodName=null, lineNumber=35, susp=0.14433756729740646]
--ModifPoint:CtAssignmentImpl, suspValue 0.1259881576697424, line 46, file MathIllegalStateException.java
--ModifPoint:CtInvocationImpl, suspValue 0.1259881576697424, line 47, file MathIllegalStateException.java
--ModifPoint:CtInvocationImpl, suspValue 0.08451542547285165, line 268, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.08391813582966891, line 355, file UnivariateRealSolverUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.08362420100070908, line 122, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.08362420100070908, line 354, file UnivariateRealSolverUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.07715167498104596, line 134, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.07602859212697055, line 140, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.07580980435789034, line 128, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.07559289460184544, line 190, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.07312724241271307, line 110, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.07312724241271307, line 116, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.07293249574894728, line 153, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtReturnImpl, suspValue 0.07293249574894728, line 154, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.07293249574894728, line 294, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.07273929674533079, line 173, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07273929674533079, line 176, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07273929674533079, line 177, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07273929674533079, line 178, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07273929674533079, line 179, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.07273929674533079, line 180, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.07273929674533079, line 181, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtInvocationImpl, suspValue 0.07273929674533079, line 187, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07142857142857142, line 93, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07142857142857142, line 94, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07142857142857142, line 95, file BaseAbstractUnivariateRealSolver.java
--ModifPoint:CtAssignmentImpl, suspValue 0.07001400420140048, line 282, file Precision.java
--ModifPoint:CtIfImpl, suspValue 0.06984302957695782, line 336, file UnivariateRealSolverUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.04885319687460315, line 3539, file FastMath.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.04828045495852676, line 277, file Precision.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.04828045495852676, line 278, file Precision.java
--ModifPoint:CtIfImpl, suspValue 0.04828045495852676, line 281, file Precision.java
--ModifPoint:CtIfImpl, suspValue 0.04828045495852676, line 284, file Precision.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.04828045495852676, line 288, file Precision.java
--ModifPoint:CtReturnImpl, suspValue 0.04828045495852676, line 290, file Precision.java
--ModifPoint:CtReturnImpl, suspValue 0.0481683050859088, line 3005, file FastMath.java
--ModifPoint:CtReturnImpl, suspValue 0.04503773491110449, line 3542, file FastMath.java
--ModifPoint:CtForEachImpl, suspValue 0.04485613040162566, line 46, file ArgUtils.java
--ModifPoint:CtIfImpl, suspValue 0.043852900965351466, line 150, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.0430730492253948, line 159, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.042409446483998546, line 91, file Incrementor.java
--ModifPoint:CtIfImpl, suspValue 0.04218245406095978, line 3541, file FastMath.java
--ModifPoint:CtIfImpl, suspValue 0.04214497519610896, line 45, file ArgUtils.java
--ModifPoint:CtInvocationImpl, suspValue 0.04214497519610896, line 50, file ArgUtils.java
--ModifPoint:CtInvocationImpl, suspValue 0.041959067914834454, line 52, file Incrementor.java
--ModifPoint:CtInvocationImpl, suspValue 0.04184869753186872, line 61, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.04181210050035454, line 79, file Incrementor.java
--ModifPoint:CtAssignmentImpl, suspValue 0.04181210050035454, line 80, file Incrementor.java
--ModifPoint:CtIfImpl, suspValue 0.04116934847963091, line 3538, file FastMath.java
--ModifPoint:CtInvocationImpl, suspValue 0.03892494720807615, line 87, file ExceptionContext.java
--ModifPoint:CtInvocationImpl, suspValue 0.03892494720807615, line 88, file ExceptionContext.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.038895492079220696, line 42, file ArgUtils.java
--ModifPoint:CtIfImpl, suspValue 0.038895492079220696, line 43, file ArgUtils.java
--ModifPoint:CtForEachImpl, suspValue 0.038895492079220696, line 44, file ArgUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.038895492079220696, line 54, file ArgUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.038895492079220696, line 65, file ExceptionContext.java
--ModifPoint:CtAssignmentImpl, suspValue 0.038895492079220696, line 66, file ExceptionContext.java
--ModifPoint:CtAssignmentImpl, suspValue 0.038895492079220696, line 67, file ExceptionContext.java
--ModifPoint:CtAssignmentImpl, suspValue 0.038895492079220696, line 68, file ExceptionContext.java
--ModifPoint:CtIfImpl, suspValue 0.038124642583151166, line 257, file MathUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.028513297425610054, line 3023, file FastMath.java
Total suspicious from FL: 202,  160
Total ModPoint created: 160
Creating program variant #1, [Variant id: 1, #gens: 160, #ops: 0, parent:-]
Calculating fitness
Calculating fitness for original program variant.
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2438secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.random.ISAACTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.distribution.ChiSquaredDistributionTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.ode.events.ReappearingEventTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.InteractionTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.random.StableRandomGeneratorTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 3199] ,[]
The original fitness is : 1.0
----------------------------
---Configuration properties
p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
p:alternativecompliancelevel= 8
p:ignoredTestCases= 
p:workingDirectory= /Users/marekmazur/astor/./output_astor
p:manipulatesuper= false
p:validation= process
p:jvm4testexecution= /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:operatorspace= irr-statements
p:diffcontext= 0
p:binjavafolder= /target/classes/
p:synthesis_depth= 3
p:gzoltartestpackagetoexclude= junit.framework
p:skipfitnessinitialpopulation= false
p:evosuiteresultfolder= evosuite
p:flthreshold= 0
p:regressionforfaultlocalization= true
p:collectonlyusedmethod= false
p:folderDiff= ./diffSolutions
p:preservelinenumbers= true
p:tmax2= 2438810
p:tmax1= 10000
p:probagenmutation= false
p:nomodificationconvergence= 100
p:diff_type= relative
p:nolog= False
p:targetelementprocessor= statements
p:srctestfolder= /src/test/
p:forceExecuteRegression= false
p:clusteringfilename= clustering.csv
p:failing= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
p:logtestexecution= false
p:evo_buggy_class= true
p:numberExecutions= 1
p:maxnumbersolutions= 1000000
p:evo_affected_by_op= true
p:population= 1
p:maxCombinationVariableLimit= false
p:savesolution= true
p:javacompliancelevel= 8
p:uniqueoptogen= false
p:gzoltarpackagetonotinstrument= junit.framework
p:projectIdentifier= 
p:modificationpointnavigation= weight
p:stopfirst= true
p:multipointmodification= false
p:elementsToMutate= 10
p:jsonoutputname= astor_output
p:evoDSE= false
p:bintestfolder= /target/test-classes/
p:testbystep= false
p:version-location= ./math-version/
p:gzoltarVersion= 1.7.3
p:locationGzoltarJar= ./lib/
p:reintroduce= PARENTS:ORIGINAL
p:executorjar= ./lib/jtestex7.jar
p:maxGeneration= 1000000
p:max_synthesis_step= 10000
p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
p:maxVarCombination= 1000
p:includeZeros= false
p:maxtime= 60
p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
p:jvmversion= 1.8.0_202
p:commandTrunk= 50000
p:faultlocalization= flacoco
p:resetmodel= true
p:maxsuspcandidates= 1000
p:mode= jgenprog
p:learningdir= 
p:jvm4evosuitetestexecution= /Users/marekmazur/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:filterfaultlocalization= true
p:mutationrate= 1 
p:pathToMVNRepository= 
p:resourcesfolder= /src/main/resources:/src/test/resources:
p:timezone= America/Los_Angeles
p:runjava7code= false
p:evoRunOnBuggyClass= true
p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
p:limitbysuspicious= true
p:logsattemps= true
p:dependenciespath= /Users/marekmazur/astor/examples/libs/junit-4.4.jar
p:packageToInstrument= org.apache.commons
p:skipfaultlocalization= false
p:scope= local
p:transformingredient= false
p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
p:maxnumvariablesperingredient= 10
p:parsesourcefromoriginal= true
p:pvariantfoldername= variant-
p:savespoonmodelondisk= false
p:srcjavafolder= /src/java/
p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
p:ignoreflakyinfl= false
p:cleantemplates= true
p:applyCrossover= false
p:maxmodificationpoints= 1000
p:duplicateingredientsinspace= false
p:metid= 0
p:continuewhenmodelfail= true
p:saveall= false
p:seed= 10
p:savecompletepatched= true
p:resetoperations= false
p:keepcomments= true
p:processoutputinfile= false
p:location= /Users/marekmazur/astor/defects4j/math-40
p:probabilistictransformation= true
p:overridemaxtime= true
p:outputjsonresult= true
p:allpoints= false
p:antipattern= false
p:bugId= 280
p:evosuitetimeout= 120
p:maxtimefactor= 10
p:nrPlaceholders= 1
p:forcesubprocesskilling= false
----------------------------
----Starting Solution Search
----------Running generation: 1, population size: 1

***** Generation 1 : 0
**Parent Variant: [Variant id: 1, #gens: 160, #ops: 0, parent:-]

--Child created id: 2
--Creating new operations for variant [Variant id: 2, #gens: 160, #ops: 0, parent:1]
---analyzing modificationPoint position: 72
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [x, signChangeIndex, nbPoints]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 251, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2, #gens: 160, #ops: 1, parent:1] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 2, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(1): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1(f=1.0), 2(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1(f=1.0), )
----------Running generation: 2, population size: 1

***** Generation 2 : 0
**Parent Variant: [Variant id: 3, #gens: 160, #ops: 0, parent:-]

--Child created id: 4
--Creating new operations for variant [Variant id: 4, #gens: 160, #ops: 0, parent:3]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [nextX, end, start, x, tmpX, targetY, y, xA, xB, signChangeIndex, java.lang.Double.NaN]
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: tmpX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: targetY spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]` (spoon.support.reflect.code.CtDoImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtDoImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]` (spoon.support.reflect.code.CtDoImpl) 

--Summary Creation: for variant [Variant id: 4, #gens: 160, #ops: 1, parent:3] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 4
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-4/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(2): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]` (spoon.support.reflect.code.CtDoImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (3(f=1.0), 4(f=1.0), )
Selected to next generation: IDs2--> (3(f=1.0), )
----------Running generation: 3, population size: 1

***** Generation 3 : 0
**Parent Variant: [Variant id: 5, #gens: 160, #ops: 0, parent:-]

--Child created id: 6
--Creating new operations for variant [Variant id: 6, #gens: 160, #ops: 0, parent:5]
---analyzing modificationPoint position: 43
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [absYB, yB]
--> var from patch: absYB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: yB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java319
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 319, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 6, #gens: 160, #ops: 1, parent:5] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 6
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-6/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(3): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (5(f=1.0), 6(f=9.0), )
Selected to next generation: IDs2--> (5(f=1.0), )
----------Running generation: 4, population size: 1

***** Generation 4 : 0
**Parent Variant: [Variant id: 7, #gens: 160, #ops: 0, parent:-]

--Child created id: 8
--Creating new operations for variant [Variant id: 8, #gens: 160, #ops: 0, parent:7]
---analyzing modificationPoint position: 26
---modifPoint 0 not mutation generated in  // either the locale is not supported or the resource is unknown // don't translate and fall back to[...]
---analyzing modificationPoint position: 75
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java275
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 275, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 8, #gens: 161, #ops: 1, parent:7] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 8, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(4): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (7(f=1.0), 8(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (7(f=1.0), )
----------Running generation: 5, population size: 1

***** Generation 5 : 0
**Parent Variant: [Variant id: 9, #gens: 160, #ops: 0, parent:-]

--Child created id: 10
--Creating new operations for variant [Variant id: 10, #gens: 160, #ops: 0, parent:9]
---analyzing modificationPoint position: 75
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, start, tmpX, end]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: tmpX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java275
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 275, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 10, #gens: 161, #ops: 1, parent:9] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 10
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-10/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(5): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...] ` -topatch--> `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (9(f=1.0), 10(f=1.0), )
Selected to next generation: IDs2--> (9(f=1.0), )
----------Running generation: 6, population size: 1

***** Generation 6 : 0
**Parent Variant: [Variant id: 11, #gens: 160, #ops: 0, parent:-]

--Child created id: 12
--Creating new operations for variant [Variant id: 12, #gens: 160, #ops: 0, parent:11]
---analyzing modificationPoint position: 62
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java203
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yB = y[signChangeIndex] ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 203, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yB = y[signChangeIndex] ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 12, #gens: 161, #ops: 1, parent:11] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 12
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-12/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(6): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yB = y[signChangeIndex] ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (11(f=1.0), 12(f=1.0), )
Selected to next generation: IDs2--> (11(f=1.0), )
----------Running generation: 7, population size: 1

***** Generation 7 : 0
**Parent Variant: [Variant id: 13, #gens: 160, #ops: 0, parent:-]

--Child created id: 14
--Creating new operations for variant [Variant id: 14, #gens: 160, #ops: 0, parent:13]
---analyzing modificationPoint position: 58
---modifPoint 0 not mutation generated in  double yA = y[signChangeIndex - 1]
---analyzing modificationPoint position: 120
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  evaluations.resetCount()
---analyzing modificationPoint position: 23
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 2 not mutation generated in  if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); }
---analyzing modificationPoint position: 77
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [nextX, xA, xB, start, signChangeIndex, end]
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java284
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 284, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 14, #gens: 160, #ops: 1, parent:13] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 14, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(7): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (13(f=1.0), 14(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (13(f=1.0), )
----------Running generation: 8, population size: 1

***** Generation 8 : 0
**Parent Variant: [Variant id: 15, #gens: 160, #ops: 0, parent:-]

--Child created id: 16
--Creating new operations for variant [Variant id: 16, #gens: 160, #ops: 0, parent:15]
---analyzing modificationPoint position: 0
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [y, signChangeIndex]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 16, #gens: 160, #ops: 1, parent:15] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 16, errors: [BracketingNthOrderBrentSolver.java:230: error: variable yA is already defined in method doSolve()
			} 			double yA = y[signChangeIndex - 1];
			  			       ^, BracketingNthOrderBrentSolver.java:236: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:242: error: cannot find symbol
				targetY = 0;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(8): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (15(f=1.0), 16(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (15(f=1.0), )
----------Running generation: 9, population size: 1

***** Generation 9 : 0
**Parent Variant: [Variant id: 17, #gens: 160, #ops: 0, parent:-]

--Child created id: 18
--Creating new operations for variant [Variant id: 18, #gens: 160, #ops: 0, parent:17]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 83
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }
---analyzing modificationPoint position: 80
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java367
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `int nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 367, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `int nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 18, #gens: 161, #ops: 1, parent:17] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 18
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-18/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(9): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `int nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (17(f=1.0), 18(f=1.0), )
Selected to next generation: IDs2--> (17(f=1.0), )
----------Running generation: 10, population size: 1

***** Generation 10 : 0
**Parent Variant: [Variant id: 19, #gens: 160, #ops: 0, parent:-]

--Child created id: 20
--Creating new operations for variant [Variant id: 20, #gens: 160, #ops: 0, parent:19]
---analyzing modificationPoint position: 13
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [throwable]
--> var from patch: throwable spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java128
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.US) ` -topatch--> `return throwable` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 128, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.US) ` -topatch--> `return throwable` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 20, #gens: 160, #ops: 1, parent:19] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 20, errors: [ExceptionContext.java:128: error: incompatible types: java.lang.Throwable cannot be converted to java.lang.String
	public java.lang.String getMessage() { 		return throwable;
	                                       		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(10): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.US) ` -topatch--> `return throwable` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (19(f=1.0), 20(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (19(f=1.0), )
----------Running generation: 11, population size: 1

***** Generation 11 : 0
**Parent Variant: [Variant id: 21, #gens: 160, #ops: 0, parent:-]

--Child created id: 22
--Creating new operations for variant [Variant id: 22, #gens: 160, #ops: 0, parent:21]
---analyzing modificationPoint position: 69
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // bracketing is balanced, try to find the root itself targetY = 0
---analyzing modificationPoint position: 22
location: ExceptionContext.java179
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 22, #gens: 159, #ops: 1, parent:21] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 22
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-22/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(11): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (21(f=1.0), 22(f=1.0), )
Selected to next generation: IDs2--> (21(f=1.0), )
----------Running generation: 12, population size: 1

***** Generation 12 : 0
**Parent Variant: [Variant id: 23, #gens: 160, #ops: 0, parent:-]

--Child created id: 24
--Creating new operations for variant [Variant id: 24, #gens: 160, #ops: 0, parent:23]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, nbPoints]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 24, #gens: 161, #ops: 1, parent:23] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 24, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(12): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (23(f=1.0), 24(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (23(f=1.0), )
----------Running generation: 13, population size: 1

***** Generation 13 : 0
**Parent Variant: [Variant id: 25, #gens: 160, #ops: 0, parent:-]

--Child created id: 26
--Creating new operations for variant [Variant id: 26, #gens: 160, #ops: 0, parent:25]
---analyzing modificationPoint position: 54
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 84
Templates availables106
Attempts Base Ingredients  1 total 106
Name Conflict [xA, xB, absYA, absYB, allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE, yA, org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE, agingA, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR, yB, agingB, nbPoints, x, tmpX, y, signChangeIndex, java.lang.Double.NaN, x.length]
---modifPoint 2 not mutation generated in  x0 = x[j] + (x0 * (targetY - y[j]))
---analyzing modificationPoint position: 36
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 3 not mutation generated in  // the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...]
---analyzing modificationPoint position: 17
---modifPoint 4 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 5 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 78
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [end]
--> var from patch: end spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java365
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...] ` -topatch--> `// we have more points after sign change, drop the highest point --end` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 365, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...] ` -topatch--> `// we have more points after sign change, drop the highest point --end` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 26, #gens: 161, #ops: 1, parent:25] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 26, errors: [BracketingNthOrderBrentSolver.java:369: error: final parameter end may not be assigned
		--end; 		// compute Q Newton coefficients by divided differences
		  ^]
Ingredient counter is Zero
---Undoing: gnrtn(13): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...] ` -topatch--> `// we have more points after sign change, drop the highest point --end` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (25(f=1.0), 26(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (25(f=1.0), )
----------Running generation: 14, population size: 1

***** Generation 14 : 0
**Parent Variant: [Variant id: 27, #gens: 160, #ops: 0, parent:-]

--Child created id: 28
--Creating new operations for variant [Variant id: 28, #gens: 160, #ops: 0, parent:27]
---analyzing modificationPoint position: 48
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [targetY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR, yA]
--> var from patch: targetY spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// we keep updating the low bracket, try to compensate this targetY = (-org.apache.commons.math.anal[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// we keep updating the low bracket, try to compensate this targetY = (-org.apache.commons.math.anal[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 28, #gens: 161, #ops: 1, parent:27] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 28
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-28/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(14): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// we keep updating the low bracket, try to compensate this targetY = (-org.apache.commons.math.anal[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (27(f=1.0), 28(f=1.0), )
Selected to next generation: IDs2--> (27(f=1.0), )
----------Running generation: 15, population size: 1

***** Generation 15 : 0
**Parent Variant: [Variant id: 29, #gens: 160, #ops: 0, parent:-]

--Child created id: 30
--Creating new operations for variant [Variant id: 30, #gens: 160, #ops: 0, parent:29]
---analyzing modificationPoint position: 1
---modifPoint 0 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 99
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java46
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 46, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 30, #gens: 161, #ops: 1, parent:29] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 30, errors: [MathIllegalStateException.java:75: error: incompatible types: unexpected return value
		return context; 		context.addMessage(pattern, args);} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(15): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (29(f=1.0), 30(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (29(f=1.0), )
----------Running generation: 16, population size: 1

***** Generation 16 : 0
**Parent Variant: [Variant id: 31, #gens: 160, #ops: 0, parent:-]

--Child created id: 32
--Creating new operations for variant [Variant id: 32, #gens: 160, #ops: 0, parent:31]
---analyzing modificationPoint position: 63
---modifPoint 0 not mutation generated in  double absYB = org.apache.commons.math.util.FastMath.abs(yB)
---analyzing modificationPoint position: 8
---modifPoint 1 not mutation generated in  return context.getLocalizedMessage()
---analyzing modificationPoint position: 82
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java373
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate Q(targetY) double x0 = 0 ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 373, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate Q(targetY) double x0 = 0 ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 32, #gens: 160, #ops: 1, parent:31] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 32, errors: [BracketingNthOrderBrentSolver.java:371: error: variable start is already defined in method guessX(double,double[],double[],int,int)
		} 		int start = 0;
		  		    ^, BracketingNthOrderBrentSolver.java:376: error: cannot find symbol
			x0 = x[j] + (x0 * (targetY - y[j]));
			^
  symbol:   variable x0
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:376: error: cannot find symbol
			x0 = x[j] + (x0 * (targetY - y[j]));
			             ^
  symbol:   variable x0
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:379: error: cannot find symbol
		return x0;
		       ^
  symbol:   variable x0
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(16): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate Q(targetY) double x0 = 0 ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (31(f=1.0), 32(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (31(f=1.0), )
----------Running generation: 17, population size: 1

***** Generation 17 : 0
**Parent Variant: [Variant id: 33, #gens: 160, #ops: 0, parent:-]

--Child created id: 34
--Creating new operations for variant [Variant id: 34, #gens: 160, #ops: 0, parent:33]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 34, #gens: 161, #ops: 1, parent:33] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 34
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-34/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(17): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (33(f=1.0), 34(f=1.0), )
Selected to next generation: IDs2--> (33(f=1.0), )
----------Running generation: 18, population size: 1

***** Generation 18 : 0
**Parent Variant: [Variant id: 35, #gens: 160, #ops: 0, parent:-]

--Child created id: 36
--Creating new operations for variant [Variant id: 36, #gens: 160, #ops: 0, parent:35]
---analyzing modificationPoint position: 35
location: BracketingNthOrderBrentSolver.java297
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 36, #gens: 159, #ops: 1, parent:35] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 36
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-36/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(18): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (35(f=1.0), 36(f=3.0), )
Selected to next generation: IDs2--> (35(f=1.0), )
----------Running generation: 19, population size: 1

***** Generation 19 : 0
**Parent Variant: [Variant id: 37, #gens: 160, #ops: 0, parent:-]

--Child created id: 38
--Creating new operations for variant [Variant id: 38, #gens: 160, #ops: 0, parent:37]
---analyzing modificationPoint position: 32
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 294, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 38, #gens: 160, #ops: 1, parent:37] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 38
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-38/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(19): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (37(f=1.0), 38(f=9.0), )
Selected to next generation: IDs2--> (37(f=1.0), )
----------Running generation: 20, population size: 1

***** Generation 20 : 0
**Parent Variant: [Variant id: 39, #gens: 160, #ops: 0, parent:-]

--Child created id: 40
--Creating new operations for variant [Variant id: 40, #gens: 160, #ops: 0, parent:39]
---analyzing modificationPoint position: 94
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java161
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 161, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 40, #gens: 161, #ops: 1, parent:39] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 40
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-40/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(20): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0]) ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (39(f=1.0), 40(f=1.0), )
Selected to next generation: IDs2--> (39(f=1.0), )
----------Running generation: 21, population size: 1

***** Generation 21 : 0
**Parent Variant: [Variant id: 41, #gens: 160, #ops: 0, parent:-]

--Child created id: 42
--Creating new operations for variant [Variant id: 42, #gens: 160, #ops: 0, parent:41]
---analyzing modificationPoint position: 77
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java284
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 284, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 42, #gens: 161, #ops: 1, parent:41] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 42, errors: [BracketingNthOrderBrentSolver.java:289: error: variable y is already defined in method doSolve()
			} 			final double[] y = new double[maximalOrder + 1];
			  			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(21): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (41(f=1.0), 42(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (41(f=1.0), )
----------Running generation: 22, population size: 1

***** Generation 22 : 0
**Parent Variant: [Variant id: 43, #gens: 160, #ops: 0, parent:-]

--Child created id: 44
--Creating new operations for variant [Variant id: 44, #gens: 160, #ops: 0, parent:43]
---analyzing modificationPoint position: 59
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [yA]
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java200
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double absYA = org.apache.commons.math.util.FastMath.abs(yA) ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 200, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double absYA = org.apache.commons.math.util.FastMath.abs(yA) ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 44, #gens: 160, #ops: 1, parent:43] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 44
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-44/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(22): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double absYA = org.apache.commons.math.util.FastMath.abs(yA) ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (43(f=1.0), 44(f=1.0), )
Selected to next generation: IDs2--> (43(f=1.0), )
----------Running generation: 23, population size: 1

***** Generation 23 : 0
**Parent Variant: [Variant id: 45, #gens: 160, #ops: 0, parent:-]

--Child created id: 46
--Creating new operations for variant [Variant id: 46, #gens: 160, #ops: 0, parent:45]
---analyzing modificationPoint position: 33
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 46, #gens: 159, #ops: 1, parent:45] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 46
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-46/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(23): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (45(f=1.0), 46(f=4.0), )
Selected to next generation: IDs2--> (45(f=1.0), )
----------Running generation: 24, population size: 1

***** Generation 24 : 0
**Parent Variant: [Variant id: 47, #gens: 160, #ops: 0, parent:-]

--Child created id: 48
--Creating new operations for variant [Variant id: 48, #gens: 160, #ops: 0, parent:47]
---analyzing modificationPoint position: 83
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [start, i, end, j, x, y, delta]
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: delta spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java374
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 374, pointed element: CtForImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 48, #gens: 160, #ops: 1, parent:47] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 48
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-48/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(24): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (47(f=1.0), 48(f=4.0), )
Selected to next generation: IDs2--> (47(f=1.0), )
----------Running generation: 25, population size: 1

***** Generation 25 : 0
**Parent Variant: [Variant id: 49, #gens: 160, #ops: 0, parent:-]

--Child created id: 50
--Creating new operations for variant [Variant id: 50, #gens: 160, #ops: 0, parent:49]
---analyzing modificationPoint position: 25
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: LocalizedFormats.java373
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.LocalizedFormats line: 373, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 50, #gens: 160, #ops: 1, parent:49] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 50
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-50/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(25): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (49(f=1.0), 50(f=1.0), )
Selected to next generation: IDs2--> (49(f=1.0), )
----------Running generation: 26, population size: 1

***** Generation 26 : 0
**Parent Variant: [Variant id: 51, #gens: 160, #ops: 0, parent:-]

--Child created id: 52
--Creating new operations for variant [Variant id: 52, #gens: 160, #ops: 0, parent:51]
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 52, #gens: 160, #ops: 1, parent:51] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 52, errors: [BracketingNthOrderBrentSolver.java:243: error: variable xB is already defined in method doSolve()
			} 			double xB = x[signChangeIndex];
			  			       ^, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:270: error: cannot find symbol
					nextX = java.lang.Double.NaN;
					^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:276: error: cannot find symbol
			if (java.lang.Double.isNaN(nextX)) {
			                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:284: error: cannot find symbol
			final double nextY = computeObjectiveValue(nextX);
			                                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:288: error: cannot find symbol
				return nextX;
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:318: error: cannot find symbol
			x[signChangeIndex] = nextX;
			                     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:326: error: cannot find symbol
				xB = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:333: error: cannot find symbol
				xA = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(26): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (51(f=1.0), 52(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (51(f=1.0), )
----------Running generation: 27, population size: 1

***** Generation 27 : 0
**Parent Variant: [Variant id: 53, #gens: 160, #ops: 0, parent:-]

--Child created id: 54
--Creating new operations for variant [Variant id: 54, #gens: 160, #ops: 0, parent:53]
---analyzing modificationPoint position: 60
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  int agingA = 0
---analyzing modificationPoint position: 154
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgArguments]
--> var from patch: msgArguments spoon.support.reflect.code.CtFieldWriteImpl
location: ExceptionContext.java65
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.throwable = throwable ` -topatch--> `msgArguments = new java.util.ArrayList<java.lang.Object[]>()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 65, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.throwable = throwable ` -topatch--> `msgArguments = new java.util.ArrayList<java.lang.Object[]>()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 54, #gens: 161, #ops: 1, parent:53] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 54
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-54/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(27): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.throwable = throwable ` -topatch--> `msgArguments = new java.util.ArrayList<java.lang.Object[]>()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (53(f=1.0), 54(f=1.0), )
Selected to next generation: IDs2--> (53(f=1.0), )
----------Running generation: 28, population size: 1

***** Generation 28 : 0
**Parent Variant: [Variant id: 55, #gens: 160, #ops: 0, parent:-]

--Child created id: 56
--Creating new operations for variant [Variant id: 56, #gens: 160, #ops: 0, parent:55]
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 56, #gens: 160, #ops: 1, parent:55] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 56, errors: [BracketingNthOrderBrentSolver.java:243: error: variable agingA is already defined in method doSolve()
			} 			int agingA = 0;
			  			    ^, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:270: error: cannot find symbol
					nextX = java.lang.Double.NaN;
					^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:276: error: cannot find symbol
			if (java.lang.Double.isNaN(nextX)) {
			                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:284: error: cannot find symbol
			final double nextY = computeObjectiveValue(nextX);
			                                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:288: error: cannot find symbol
				return nextX;
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:318: error: cannot find symbol
			x[signChangeIndex] = nextX;
			                     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:326: error: cannot find symbol
				xB = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:333: error: cannot find symbol
				xA = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(28): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (55(f=1.0), 56(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (55(f=1.0), )
----------Running generation: 29, population size: 1

***** Generation 29 : 0
**Parent Variant: [Variant id: 57, #gens: 160, #ops: 0, parent:-]

--Child created id: 58
--Creating new operations for variant [Variant id: 58, #gens: 160, #ops: 0, parent:57]
---analyzing modificationPoint position: 8
---modifPoint 0 not mutation generated in  return context.getLocalizedMessage()
---analyzing modificationPoint position: 4
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 155
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 2 not mutation generated in  msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>()
---analyzing modificationPoint position: 98
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 3 not mutation generated in  this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)
---analyzing modificationPoint position: 10
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 4 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 68
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 5 not mutation generated in  if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 44
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java320
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++nbPoints ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 320, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++nbPoints ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 58, #gens: 161, #ops: 1, parent:57] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 58, errors: [BracketingNthOrderBrentSolver.java:321: error: variable xB is already defined in method doSolve()
			++nbPoints; 			double xB = x[signChangeIndex];
			            			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(29): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++nbPoints ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (57(f=1.0), 58(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (57(f=1.0), )
----------Running generation: 30, population size: 1

***** Generation 30 : 0
**Parent Variant: [Variant id: 59, #gens: 160, #ops: 0, parent:-]

--Child created id: 60
--Creating new operations for variant [Variant id: 60, #gens: 160, #ops: 0, parent:59]
---analyzing modificationPoint position: 13
---modifPoint 0 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 64
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, y]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java205
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2])` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 205, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2])` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 60, #gens: 161, #ops: 1, parent:59] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 60, errors: [BracketingNthOrderBrentSolver.java:206: error: unreachable statement
		int agingB = 0;
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(30): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2])` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (59(f=1.0), 60(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (59(f=1.0), )
----------Running generation: 31, population size: 1

***** Generation 31 : 0
**Parent Variant: [Variant id: 61, #gens: 160, #ops: 0, parent:-]

--Child created id: 62
--Creating new operations for variant [Variant id: 62, #gens: 160, #ops: 0, parent:61]
---analyzing modificationPoint position: 81
location: BracketingNthOrderBrentSolver.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 62, #gens: 159, #ops: 1, parent:61] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 62
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-62/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(31): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (61(f=1.0), 62(f=9.0), )
Selected to next generation: IDs2--> (61(f=1.0), )
----------Running generation: 32, population size: 1

***** Generation 32 : 0
**Parent Variant: [Variant id: 63, #gens: 160, #ops: 0, parent:-]

--Child created id: 64
--Creating new operations for variant [Variant id: 64, #gens: 160, #ops: 0, parent:63]
---analyzing modificationPoint position: 48
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `signChangeIndex = 1` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `signChangeIndex = 1` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 64, #gens: 160, #ops: 1, parent:63] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 64
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-64/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(32): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `signChangeIndex = 1` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (63(f=1.0), 64(f=3.0), )
Selected to next generation: IDs2--> (63(f=1.0), )
----------Running generation: 33, population size: 1

***** Generation 33 : 0
**Parent Variant: [Variant id: 65, #gens: 160, #ops: 0, parent:-]

--Child created id: 66
--Creating new operations for variant [Variant id: 66, #gens: 160, #ops: 0, parent:65]
---analyzing modificationPoint position: 39
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java299
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 299, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 66, #gens: 161, #ops: 1, parent:65] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 66, errors: [BracketingNthOrderBrentSolver.java:313: error: variable signChangeIndex is already defined in method doSolve()
				} 				int signChangeIndex;}
				  				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(33): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (65(f=1.0), 66(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (65(f=1.0), )
----------Running generation: 34, population size: 1

***** Generation 34 : 0
**Parent Variant: [Variant id: 67, #gens: 160, #ops: 0, parent:-]

--Child created id: 68
--Creating new operations for variant [Variant id: 68, #gens: 160, #ops: 0, parent:67]
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 68, #gens: 160, #ops: 1, parent:67] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 68, errors: [BracketingNthOrderBrentSolver.java:247: error: variable start is already defined in method doSolve()
			int start = 0; 			int start = 0;
			               			    ^, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:270: error: cannot find symbol
					nextX = java.lang.Double.NaN;
					^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:276: error: cannot find symbol
			if (java.lang.Double.isNaN(nextX)) {
			                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:284: error: cannot find symbol
			final double nextY = computeObjectiveValue(nextX);
			                                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:288: error: cannot find symbol
				return nextX;
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:318: error: cannot find symbol
			x[signChangeIndex] = nextX;
			                     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:326: error: cannot find symbol
				xB = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:333: error: cannot find symbol
				xA = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(34): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (67(f=1.0), 68(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (67(f=1.0), )
----------Running generation: 35, population size: 1

***** Generation 35 : 0
**Parent Variant: [Variant id: 69, #gens: 160, #ops: 0, parent:-]

--Child created id: 70
--Creating new operations for variant [Variant id: 70, #gens: 160, #ops: 0, parent:69]
---analyzing modificationPoint position: 84
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x0 = x[j] + (x0 * (targetY - y[j]))
---analyzing modificationPoint position: 88
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  x[0] = getMin()
---analyzing modificationPoint position: 39
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [this.allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE]
--> var from patch: this.allowed spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java299
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 299, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 70, #gens: 161, #ops: 1, parent:69] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 70
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-70/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 6, was successful: false, cases executed: 15] ,[]
-Valid?: |false|6|15|[]|, fitness 6.0
Ingredient counter is Zero
---Undoing: gnrtn(35): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (69(f=1.0), 70(f=6.0), )
Selected to next generation: IDs2--> (69(f=1.0), )
----------Running generation: 36, population size: 1

***** Generation 36 : 0
**Parent Variant: [Variant id: 71, #gens: 160, #ops: 0, parent:-]

--Child created id: 72
--Creating new operations for variant [Variant id: 72, #gens: 160, #ops: 0, parent:71]
---analyzing modificationPoint position: 57
---modifPoint 0 not mutation generated in  // current tightest bracketing of the root double xA = x[signChangeIndex - 1]
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 1 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 2 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 33
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 72, #gens: 159, #ops: 1, parent:71] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 72
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-72/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(36): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (71(f=1.0), 72(f=4.0), )
Selected to next generation: IDs2--> (71(f=1.0), )
----------Running generation: 37, population size: 1

***** Generation 37 : 0
**Parent Variant: [Variant id: 73, #gens: 160, #ops: 0, parent:-]

--Child created id: 74
--Creating new operations for variant [Variant id: 74, #gens: 160, #ops: 0, parent:73]
---analyzing modificationPoint position: 69
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java241
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `return maximalOrder` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 241, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `return maximalOrder` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 74, #gens: 161, #ops: 1, parent:73] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 74
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-74/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 7, was successful: false, cases executed: 15] ,[]
-Valid?: |false|7|15|[]|, fitness 7.0
Ingredient counter is Zero
---Undoing: gnrtn(37): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `return maximalOrder` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (73(f=1.0), 74(f=7.0), )
Selected to next generation: IDs2--> (73(f=1.0), )
----------Running generation: 38, population size: 1

***** Generation 38 : 0
**Parent Variant: [Variant id: 75, #gens: 160, #ops: 0, parent:-]

--Child created id: 76
--Creating new operations for variant [Variant id: 76, #gens: 160, #ops: 0, parent:75]
---analyzing modificationPoint position: 21
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...]
---analyzing modificationPoint position: 71
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  int end = nbPoints
---analyzing modificationPoint position: 27
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtFieldReadImpl
location: MaxCountExceededException.java62
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return max ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 62, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return max ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 76, #gens: 160, #ops: 1, parent:75] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 76
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-76/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(38): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return max ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (75(f=1.0), 76(f=1.0), )
Selected to next generation: IDs2--> (75(f=1.0), )
----------Running generation: 39, population size: 1

***** Generation 39 : 0
**Parent Variant: [Variant id: 77, #gens: 160, #ops: 0, parent:-]

--Child created id: 78
--Creating new operations for variant [Variant id: 78, #gens: 160, #ops: 0, parent:77]
---analyzing modificationPoint position: 90
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  x[2] = getMax()
---analyzing modificationPoint position: 58
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java199
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 199, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 78, #gens: 160, #ops: 1, parent:77] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 78, errors: [BracketingNthOrderBrentSolver.java:201: error: cannot find symbol
		double absYA = org.apache.commons.math.util.FastMath.abs(yA);
		                                                         ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:223: error: cannot find symbol
						return yA <= 0 ? xA : xB;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:225: error: cannot find symbol
						return yA < 0 ? xB : xA;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				                                                                                                       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:324: error: cannot find symbol
			if ((nextY * yA) <= 0) {
			             ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:334: error: cannot find symbol
				yA = nextY;
				^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:335: error: cannot find symbol
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				                                                  ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(39): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (77(f=1.0), 78(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (77(f=1.0), )
----------Running generation: 40, population size: 1

***** Generation 40 : 0
**Parent Variant: [Variant id: 79, #gens: 160, #ops: 0, parent:-]

--Child created id: 80
--Creating new operations for variant [Variant id: 80, #gens: 160, #ops: 0, parent:79]
---analyzing modificationPoint position: 102
location: UnivariateRealSolverUtils.java355
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(initial, upper) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 80, #gens: 159, #ops: 1, parent:79] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 80
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-80/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(40): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(initial, upper) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (79(f=1.0), 80(f=1.0), )
Selected to next generation: IDs2--> (79(f=1.0), )
----------Running generation: 41, population size: 1

***** Generation 41 : 0
**Parent Variant: [Variant id: 81, #gens: 160, #ops: 0, parent:-]

--Child created id: 82
--Creating new operations for variant [Variant id: 82, #gens: 160, #ops: 0, parent:81]
---analyzing modificationPoint position: 96
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]
---analyzing modificationPoint position: 15
---modifPoint 1 not mutation generated in  final java.lang.StringBuilder sb = new java.lang.StringBuilder()
---analyzing modificationPoint position: 52
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [this.max]
--> var from patch: this.max spoon.support.reflect.code.CtFieldWriteImpl
SameName: java.lang.Number max
SameName: java.lang.Number max
Transforming shadowed variable in max = max
location: MaxCountExceededException.java54
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 54, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 82, #gens: 161, #ops: 1, parent:81] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 82
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-82/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(41): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (81(f=1.0), 82(f=1.0), )
Selected to next generation: IDs2--> (81(f=1.0), )
----------Running generation: 42, population size: 1

***** Generation 42 : 0
**Parent Variant: [Variant id: 83, #gens: 160, #ops: 0, parent:-]

--Child created id: 84
--Creating new operations for variant [Variant id: 84, #gens: 160, #ops: 0, parent:83]
---analyzing modificationPoint position: 9
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 103
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 2 not mutation generated in  return searchStart
---analyzing modificationPoint position: 42
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 3 not mutation generated in  java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex)
---analyzing modificationPoint position: 68
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 4 not mutation generated in  if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 10
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 5 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 84, #gens: 160, #ops: 1, parent:83] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 84, errors: [BracketingNthOrderBrentSolver.java:243: error: variable y is already defined in method doSolve()
			} 			final double[] y = new double[maximalOrder + 1];
			  			               ^, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:270: error: cannot find symbol
					nextX = java.lang.Double.NaN;
					^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:276: error: cannot find symbol
			if (java.lang.Double.isNaN(nextX)) {
			                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:284: error: cannot find symbol
			final double nextY = computeObjectiveValue(nextX);
			                                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:288: error: cannot find symbol
				return nextX;
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:318: error: cannot find symbol
			x[signChangeIndex] = nextX;
			                     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:326: error: cannot find symbol
				xB = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:333: error: cannot find symbol
				xA = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(42): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (83(f=1.0), 84(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (83(f=1.0), )
----------Running generation: 43, population size: 1

***** Generation 43 : 0
**Parent Variant: [Variant id: 85, #gens: 160, #ops: 0, parent:-]

--Child created id: 86
--Creating new operations for variant [Variant id: 86, #gens: 160, #ops: 0, parent:85]
---analyzing modificationPoint position: 66
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]
---analyzing modificationPoint position: 74
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [nextX, xA, xB, start, signChangeIndex, end]
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java254
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 254, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 86, #gens: 160, #ops: 1, parent:85] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 86, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(43): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (85(f=1.0), 86(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (85(f=1.0), )
----------Running generation: 44, population size: 1

***** Generation 44 : 0
**Parent Variant: [Variant id: 87, #gens: 160, #ops: 0, parent:-]

--Child created id: 88
--Creating new operations for variant [Variant id: 88, #gens: 160, #ops: 0, parent:87]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 88, #gens: 161, #ops: 1, parent:87] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 88, errors: [BracketingNthOrderBrentSolver.java:381: error: illegal start of expression
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	 ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	        ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	             ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                      ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                               ^, BracketingNthOrderBrentSolver.java:381: error: illegal start of type
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                ^, BracketingNthOrderBrentSolver.java:381: error: illegal start of expression
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                 ^, BracketingNthOrderBrentSolver.java:381: error: not a statement
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                    ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                           ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                                              ^, BracketingNthOrderBrentSolver.java:381: error: <identifier> expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                                                             ^, BracketingNthOrderBrentSolver.java:383: error: illegal start of expression
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	 ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	      ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	              ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                         ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                       ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                    ^, BracketingNthOrderBrentSolver.java:383: error: not a statement
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                     ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                      ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                                             ^, BracketingNthOrderBrentSolver.java:384: error: not a statement
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	 ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	     ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                ^, BracketingNthOrderBrentSolver.java:384: error: not a statement
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                 ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                     ^, BracketingNthOrderBrentSolver.java:384: error: '(' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                         ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                        ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                         ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                              ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                                        ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                                             ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	             ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	                  ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	                                   ^, BracketingNthOrderBrentSolver.java:386: error: illegal start of expression
	 * </p>
	 ^, BracketingNthOrderBrentSolver.java:386: error: illegal start of expression
	 * </p>
	    ^, BracketingNthOrderBrentSolver.java:387: error: illegal start of expression
	 *
	 ^, BracketingNthOrderBrentSolver.java:388: error: illegal start of expression
	 * @param targetY
	 ^, BracketingNthOrderBrentSolver.java:388: error: illegal start of expression
	 * @param targetY
	   ^, BracketingNthOrderBrentSolver.java:386: error: not a statement
	 * </p>
	      ^, BracketingNthOrderBrentSolver.java:389: error: ';' expected
	 * 		target value for y
	   		      ^, BracketingNthOrderBrentSolver.java:389: error: not a statement
	 * 		target value for y
	   		       ^, BracketingNthOrderBrentSolver.java:389: error: ';' expected
	 * 		target value for y
	   		            ^, BracketingNthOrderBrentSolver.java:389: error: '(' expected
	 * 		target value for y
	   		                ^, BracketingNthOrderBrentSolver.java:390: error: illegal start of expression
	 * @param x
	   ^, BracketingNthOrderBrentSolver.java:391: error: not a statement
	 * 		reference points abscissas for interpolation,
	 ^, BracketingNthOrderBrentSolver.java:391: error: ';' expected
	 * 		reference points abscissas for interpolation,
	   		         ^, BracketingNthOrderBrentSolver.java:391: error: ';' expected
	 * 		reference points abscissas for interpolation,
	   		                ^, BracketingNthOrderBrentSolver.java:391: error: not a statement
	 * 		reference points abscissas for interpolation,
	   		                 ^, BracketingNthOrderBrentSolver.java:391: error: ')' expected
	 * 		reference points abscissas for interpolation,
	   		                          ^, BracketingNthOrderBrentSolver.java:391: error: '(' expected
	 * 		reference points abscissas for interpolation,
	   		                              ^, BracketingNthOrderBrentSolver.java:391: error: not a statement
	 * 		reference points abscissas for interpolation,
	   		                               ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 * 		note that this array <em>is</em> modified during computation
	 ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		    ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		         ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 * 		note that this array <em>is</em> modified during computation
	   		          ^, BracketingNthOrderBrentSolver.java:392: error: ')' expected
	 * 		note that this array <em>is</em> modified during computation
	   		              ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		                           ^, BracketingNthOrderBrentSolver.java:392: error: variable declaration not allowed here
	 * 		note that this array <em>is</em> modified during computation
	   		                         ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of type
	 * 		note that this array <em>is</em> modified during computation
	   		                            ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 * 		note that this array <em>is</em> modified during computation
	   		                             ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 * 		note that this array <em>is</em> modified during computation
	   		                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		                                         ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		                                                            ^, BracketingNthOrderBrentSolver.java:393: error: <identifier> expected
	 * @param y
	           ^, BracketingNthOrderBrentSolver.java:394: error: ';' expected
	 * 		reference points ordinates for interpolation
	   		                ^, BracketingNthOrderBrentSolver.java:394: error: not a statement
	 * 		reference points ordinates for interpolation
	   		                 ^, BracketingNthOrderBrentSolver.java:394: error: ';' expected
	 * 		reference points ordinates for interpolation
	   		                          ^, BracketingNthOrderBrentSolver.java:394: error: '(' expected
	 * 		reference points ordinates for interpolation
	   		                              ^, BracketingNthOrderBrentSolver.java:395: error: illegal start of expression
	 * @param start
	   ^, BracketingNthOrderBrentSolver.java:396: error: not a statement
	 * 		start index of the points to consider (inclusive)
	 ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		     ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		           ^, BracketingNthOrderBrentSolver.java:396: error: not a statement
	 * 		start index of the points to consider (inclusive)
	   		            ^, BracketingNthOrderBrentSolver.java:396: error: ')' expected
	 * 		start index of the points to consider (inclusive)
	   		              ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		                         ^, BracketingNthOrderBrentSolver.java:396: error: variable declaration not allowed here
	 * 		start index of the points to consider (inclusive)
	   		                   ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		                                     ^, BracketingNthOrderBrentSolver.java:396: error: not a statement
	 * 		start index of the points to consider (inclusive)
	   		                                       ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		                                                ^, BracketingNthOrderBrentSolver.java:397: error: <identifier> expected
	 * @param end
	             ^, BracketingNthOrderBrentSolver.java:398: error: ';' expected
	 * 		end index of the points to consider (exclusive)
	   		         ^, BracketingNthOrderBrentSolver.java:398: error: ';' expected
	 * 		end index of the points to consider (exclusive)
	   		                ^, BracketingNthOrderBrentSolver.java:398: error: ';' expected
	 * 		end index of the points to consider (exclusive)
	   		                          ^, BracketingNthOrderBrentSolver.java:399: error: <identifier> expected
	 * @return guessed root (will be a NaN if two points share the same y)
	    ^, BracketingNthOrderBrentSolver.java:399: error: not a statement
	 * @return guessed root (will be a NaN if two points share the same y)
	 ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                  ^, BracketingNthOrderBrentSolver.java:399: error: ')' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                ^, BracketingNthOrderBrentSolver.java:399: error: not a statement
	 * @return guessed root (will be a NaN if two points share the same y)
	                        ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                      ^, BracketingNthOrderBrentSolver.java:399: error: '(' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                         ^, BracketingNthOrderBrentSolver.java:399: error: ')' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                             ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                          ^, BracketingNthOrderBrentSolver.java:399: error: variable declaration not allowed here
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                     ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                                   ^, BracketingNthOrderBrentSolver.java:399: error: not a statement
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                                    ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                                     ^, BracketingNthOrderBrentSolver.java:400: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(44): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (87(f=1.0), 88(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (87(f=1.0), )
----------Running generation: 45, population size: 1

***** Generation 45 : 0
**Parent Variant: [Variant id: 89, #gens: 160, #ops: 0, parent:-]

--Child created id: 90
--Creating new operations for variant [Variant id: 90, #gens: 160, #ops: 0, parent:89]
---analyzing modificationPoint position: 23
location: ExceptionContext.java180
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 90, #gens: 159, #ops: 1, parent:89] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 90
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-90/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(45): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (89(f=1.0), 90(f=1.0), )
Selected to next generation: IDs2--> (89(f=1.0), )
----------Running generation: 46, population size: 1

***** Generation 46 : 0
**Parent Variant: [Variant id: 91, #gens: 160, #ops: 0, parent:-]

--Child created id: 92
--Creating new operations for variant [Variant id: 92, #gens: 160, #ops: 0, parent:91]
---analyzing modificationPoint position: 150
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch []
location: ArgUtils.java42
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>() ` -topatch--> `final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ArgUtils line: 42, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>() ` -topatch--> `final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 92, #gens: 160, #ops: 1, parent:91] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 92
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-92/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(46): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>() ` -topatch--> `final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (91(f=1.0), 92(f=1.0), )
Selected to next generation: IDs2--> (91(f=1.0), )
----------Running generation: 47, population size: 1

***** Generation 47 : 0
**Parent Variant: [Variant id: 93, #gens: 160, #ops: 0, parent:-]

--Child created id: 94
--Creating new operations for variant [Variant id: 94, #gens: 160, #ops: 0, parent:93]
---analyzing modificationPoint position: 157
location: ExceptionContext.java68
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new java.util.HashMap<java.lang.String, java.lang.Object>() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 94, #gens: 159, #ops: 1, parent:93] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 94
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-94/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(47): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new java.util.HashMap<java.lang.String, java.lang.Object>() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (93(f=1.0), 94(f=1.0), )
Selected to next generation: IDs2--> (93(f=1.0), )
----------Running generation: 48, population size: 1

***** Generation 48 : 0
**Parent Variant: [Variant id: 95, #gens: 160, #ops: 0, parent:-]

--Child created id: 96
--Creating new operations for variant [Variant id: 96, #gens: 160, #ops: 0, parent:95]
---analyzing modificationPoint position: 58
---modifPoint 0 not mutation generated in  double yA = y[signChangeIndex - 1]
---analyzing modificationPoint position: 51
location: MaxCountExceededException.java42
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 96, #gens: 159, #ops: 1, parent:95] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 96, errors: [MaxCountExceededException.java:44: error: variable max might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(48): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (95(f=1.0), 96(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (95(f=1.0), )
----------Running generation: 49, population size: 1

***** Generation 49 : 0
**Parent Variant: [Variant id: 97, #gens: 160, #ops: 0, parent:-]

--Child created id: 98
--Creating new operations for variant [Variant id: 98, #gens: 160, #ops: 0, parent:97]
---analyzing modificationPoint position: 21
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...]
---analyzing modificationPoint position: 88
location: BracketingNthOrderBrentSolver.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[0] = getMin() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 98, #gens: 159, #ops: 1, parent:97] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 98
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-98/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 10, was successful: false, cases executed: 15] ,[]
-Valid?: |false|10|15|[]|, fitness 10.0
Ingredient counter is Zero
---Undoing: gnrtn(49): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[0] = getMin() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (97(f=1.0), 98(f=10.0), )
Selected to next generation: IDs2--> (97(f=1.0), )
----------Running generation: 50, population size: 1

***** Generation 50 : 0
**Parent Variant: [Variant id: 99, #gens: 160, #ops: 0, parent:-]

--Child created id: 100
--Creating new operations for variant [Variant id: 100, #gens: 160, #ops: 0, parent:99]
---analyzing modificationPoint position: 43
location: BracketingNthOrderBrentSolver.java319
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 100, #gens: 159, #ops: 1, parent:99] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 100
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-100/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(50): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (99(f=1.0), 100(f=4.0), )
Selected to next generation: IDs2--> (99(f=1.0), )
----------Running generation: 51, population size: 1

***** Generation 51 : 0
**Parent Variant: [Variant id: 101, #gens: 160, #ops: 0, parent:-]

--Child created id: 102
--Creating new operations for variant [Variant id: 102, #gens: 160, #ops: 0, parent:101]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return buildMessage(locale, ": ")
---analyzing modificationPoint position: 4
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 32
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [absYA, yA]
--> var from patch: absYA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 294, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 102, #gens: 161, #ops: 1, parent:101] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 102, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(51): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (101(f=1.0), 102(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (101(f=1.0), )
----------Running generation: 52, population size: 1

***** Generation 52 : 0
**Parent Variant: [Variant id: 103, #gens: 160, #ops: 0, parent:-]

--Child created id: 104
--Creating new operations for variant [Variant id: 104, #gens: 160, #ops: 0, parent:103]
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java176
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 176, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 104, #gens: 161, #ops: 1, parent:103] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 104, errors: [ExceptionContext.java:227: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:227: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:230: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:231: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:232: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:232: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:233: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:249: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:251: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:252: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:253: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:254: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:255: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:256: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:256: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:257: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:258: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:258: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	  ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	        ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                             ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                             ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                         ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                    ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                                           ^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	        ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                             ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                            ^, ExceptionContext.java:286: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                            ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(52): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (103(f=1.0), 104(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (103(f=1.0), )
----------Running generation: 53, population size: 1

***** Generation 53 : 0
**Parent Variant: [Variant id: 105, #gens: 160, #ops: 0, parent:-]

--Child created id: 106
--Creating new operations for variant [Variant id: 106, #gens: 160, #ops: 0, parent:105]
---analyzing modificationPoint position: 9
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 104
location: UnivariateRealSolverUtils.java354
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, initial) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 106, #gens: 159, #ops: 1, parent:105] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 106
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-106/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(53): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifyInterval(lower, initial) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (105(f=1.0), 106(f=1.0), )
Selected to next generation: IDs2--> (105(f=1.0), )
----------Running generation: 54, population size: 1

***** Generation 54 : 0
**Parent Variant: [Variant id: 107, #gens: 160, #ops: 0, parent:-]

--Child created id: 108
--Creating new operations for variant [Variant id: 108, #gens: 160, #ops: 0, parent:107]
---analyzing modificationPoint position: 18
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java174
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	final org.apache.commons.math.exception.util.Localizable pat = msgP[...] ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 174, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	final org.apache.commons.math.exception.util.Localizable pat = msgP[...] ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 108, #gens: 161, #ops: 1, parent:107] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 108, errors: [ExceptionContext.java:227: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:227: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:230: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:231: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:232: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:232: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:233: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:249: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:251: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:252: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:253: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:254: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:255: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:256: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:256: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:257: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:258: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:258: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	  ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	        ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                             ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                             ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                         ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                    ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                                           ^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	        ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                             ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                            ^, ExceptionContext.java:286: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                            ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(54): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < len; i++) { 	final org.apache.commons.math.exception.util.Localizable pat = msgP[...] ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (107(f=1.0), 108(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (107(f=1.0), )
----------Running generation: 55, population size: 1

***** Generation 55 : 0
**Parent Variant: [Variant id: 109, #gens: 160, #ops: 0, parent:-]

--Child created id: 110
--Creating new operations for variant [Variant id: 110, #gens: 160, #ops: 0, parent:109]
---analyzing modificationPoint position: 6
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  // Add a separator if there are other messages. sb.append(separator)
---analyzing modificationPoint position: 31
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java235
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `x[0] = getMin()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 235, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `x[0] = getMin()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 110, #gens: 161, #ops: 1, parent:109] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 110
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-110/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(55): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `x[0] = getMin()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (109(f=1.0), 110(f=1.0), )
Selected to next generation: IDs2--> (109(f=1.0), )
----------Running generation: 56, population size: 1

***** Generation 56 : 0
**Parent Variant: [Variant id: 111, #gens: 160, #ops: 0, parent:-]

--Child created id: 112
--Creating new operations for variant [Variant id: 112, #gens: 160, #ops: 0, parent:111]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [agingB]
--> var from patch: agingB spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `++agingB` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `++agingB` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 112, #gens: 161, #ops: 1, parent:111] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 112, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(56): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `++agingB` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (111(f=1.0), 112(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (111(f=1.0), )
----------Running generation: 57, population size: 1

***** Generation 57 : 0
**Parent Variant: [Variant id: 113, #gens: 160, #ops: 0, parent:-]

--Child created id: 114
--Creating new operations for variant [Variant id: 114, #gens: 160, #ops: 0, parent:113]
---analyzing modificationPoint position: 92
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java154
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 114, #gens: 161, #ops: 1, parent:113] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 114, errors: [BracketingNthOrderBrentSolver.java:204: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			^, BracketingNthOrderBrentSolver.java:204: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			      ^, BracketingNthOrderBrentSolver.java:204: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			        ^, BracketingNthOrderBrentSolver.java:204: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			         ^, BracketingNthOrderBrentSolver.java:204: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			          ^, BracketingNthOrderBrentSolver.java:204: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		^, BracketingNthOrderBrentSolver.java:204: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		^, BracketingNthOrderBrentSolver.java:204: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		^, BracketingNthOrderBrentSolver.java:205: error: class, interface, or enum expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB);
				            ^, BracketingNthOrderBrentSolver.java:209: error: class, interface, or enum expected
		while (true) {
		^, BracketingNthOrderBrentSolver.java:212: error: class, interface, or enum expected
			final double xTol = getAbsoluteAccuracy() + 
			      ^, BracketingNthOrderBrentSolver.java:214: error: class, interface, or enum expected
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			^, BracketingNthOrderBrentSolver.java:218: error: class, interface, or enum expected
					case LEFT_SIDE :
					^, BracketingNthOrderBrentSolver.java:220: error: class, interface, or enum expected
					case RIGHT_SIDE :
					^, BracketingNthOrderBrentSolver.java:222: error: class, interface, or enum expected
					case BELOW_SIDE :
					^, BracketingNthOrderBrentSolver.java:224: error: class, interface, or enum expected
					case ABOVE_SIDE :
					^, BracketingNthOrderBrentSolver.java:226: error: class, interface, or enum expected
					default :
					        ^, BracketingNthOrderBrentSolver.java:228: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}
						                                                                    ^, BracketingNthOrderBrentSolver.java:234: error: class, interface, or enum expected
			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(57): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (113(f=1.0), 114(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (113(f=1.0), )
----------Running generation: 58, population size: 1

***** Generation 58 : 0
**Parent Variant: [Variant id: 115, #gens: 160, #ops: 0, parent:-]

--Child created id: 116
--Creating new operations for variant [Variant id: 116, #gens: 160, #ops: 0, parent:115]
---analyzing modificationPoint position: 115
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [searchStart, startValue]
--> var from patch: searchStart spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: startValue spoon.support.reflect.code.CtVariableReadImpl
location: BaseAbstractUnivariateRealSolver.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// Reset. searchMin = min ` -topatch--> `searchStart = startValue` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// Reset. searchMin = min ` -topatch--> `searchStart = startValue` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 116, #gens: 160, #ops: 1, parent:115] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 116
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-116/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 10, was successful: false, cases executed: 15] ,[]
-Valid?: |false|10|15|[]|, fitness 10.0
Ingredient counter is Zero
---Undoing: gnrtn(58): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// Reset. searchMin = min ` -topatch--> `searchStart = startValue` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (115(f=1.0), 116(f=10.0), )
Selected to next generation: IDs2--> (115(f=1.0), )
----------Running generation: 59, population size: 1

***** Generation 59 : 0
**Parent Variant: [Variant id: 117, #gens: 160, #ops: 0, parent:-]

--Child created id: 118
--Creating new operations for variant [Variant id: 118, #gens: 160, #ops: 0, parent:117]
---analyzing modificationPoint position: 72
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 251, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 118, #gens: 161, #ops: 1, parent:117] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 118
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-118/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(59): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (117(f=1.0), 118(f=1.0), )
Selected to next generation: IDs2--> (117(f=1.0), )
----------Running generation: 60, population size: 1

***** Generation 60 : 0
**Parent Variant: [Variant id: 119, #gens: 160, #ops: 0, parent:-]

--Child created id: 120
--Creating new operations for variant [Variant id: 120, #gens: 160, #ops: 0, parent:119]
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java176
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 176, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 120, #gens: 161, #ops: 1, parent:119] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 120, errors: [ExceptionContext.java:227: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:227: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:230: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:231: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:232: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:232: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:233: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:249: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:251: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:252: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:253: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:254: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:255: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:256: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:256: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:257: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:258: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:258: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	  ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	        ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                             ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                             ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                         ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                    ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                                           ^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	        ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                             ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                            ^, ExceptionContext.java:286: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                            ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(60): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (119(f=1.0), 120(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (119(f=1.0), )
----------Running generation: 61, population size: 1

***** Generation 61 : 0
**Parent Variant: [Variant id: 121, #gens: 160, #ops: 0, parent:-]

--Child created id: 122
--Creating new operations for variant [Variant id: 122, #gens: 160, #ops: 0, parent:121]
---analyzing modificationPoint position: 87
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  final double[] y = new double[maximalOrder + 1]
---analyzing modificationPoint position: 47
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [yB]
--> var from patch: yB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java326
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `double absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 326, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `double absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 122, #gens: 161, #ops: 1, parent:121] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 122, errors: [BracketingNthOrderBrentSolver.java:327: error: variable absYB is already defined in method doSolve()
				yB = nextY; 				double absYB = org.apache.commons.math.util.FastMath.abs(yB);
				            				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(61): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `double absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (121(f=1.0), 122(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (121(f=1.0), )
----------Running generation: 62, population size: 1

***** Generation 62 : 0
**Parent Variant: [Variant id: 123, #gens: 160, #ops: 0, parent:-]

--Child created id: 124
--Creating new operations for variant [Variant id: 124, #gens: 160, #ops: 0, parent:123]
---analyzing modificationPoint position: 66
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java213
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 213, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 124, #gens: 160, #ops: 1, parent:123] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 124
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-124/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(62): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (123(f=1.0), 124(f=4.0), )
Selected to next generation: IDs2--> (123(f=1.0), )
----------Running generation: 63, population size: 1

***** Generation 63 : 0
**Parent Variant: [Variant id: 125, #gens: 160, #ops: 0, parent:-]

--Child created id: 126
--Creating new operations for variant [Variant id: 126, #gens: 160, #ops: 0, parent:125]
---analyzing modificationPoint position: 100
location: MathIllegalStateException.java47
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 126, #gens: 159, #ops: 1, parent:125] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 126
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-126/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(63): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (125(f=1.0), 126(f=1.0), )
Selected to next generation: IDs2--> (125(f=1.0), )
----------Running generation: 64, population size: 1

***** Generation 64 : 0
**Parent Variant: [Variant id: 127, #gens: 160, #ops: 0, parent:-]

--Child created id: 128
--Creating new operations for variant [Variant id: 128, #gens: 160, #ops: 0, parent:127]
---analyzing modificationPoint position: 98
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)
---analyzing modificationPoint position: 35
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  signChangeIndex -= start
---analyzing modificationPoint position: 146
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 2 not mutation generated in  maxCountCallback = cb
---analyzing modificationPoint position: 81
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java368
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 368, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 128, #gens: 161, #ops: 1, parent:127] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 128
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-128/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(64): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (127(f=1.0), 128(f=4.0), )
Selected to next generation: IDs2--> (127(f=1.0), )
----------Running generation: 65, population size: 1

***** Generation 65 : 0
**Parent Variant: [Variant id: 129, #gens: 160, #ops: 0, parent:-]

--Child created id: 130
--Creating new operations for variant [Variant id: 130, #gens: 160, #ops: 0, parent:129]
---analyzing modificationPoint position: 133
---modifPoint 0 not mutation generated in  return (isEqual && (!java.lang.Double.isNaN(x))) && (!java.lang.Double.isNaN(y))
---analyzing modificationPoint position: 60
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  int agingA = 0
---analyzing modificationPoint position: 13
---modifPoint 2 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 12
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 3 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 53
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtFieldReadImpl
SameName: java.lang.Number max
SameName: java.lang.Number max
Transforming shadowed variable in return max
location: MaxCountExceededException.java55
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 55, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 130, #gens: 161, #ops: 1, parent:129] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 130, errors: [MaxCountExceededException.java:63: error: incompatible types: unexpected return value
		return max;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(65): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (129(f=1.0), 130(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (129(f=1.0), )
----------Running generation: 66, population size: 1

***** Generation 66 : 0
**Parent Variant: [Variant id: 131, #gens: 160, #ops: 0, parent:-]

--Child created id: 132
--Creating new operations for variant [Variant id: 132, #gens: 160, #ops: 0, parent:131]
---analyzing modificationPoint position: 37
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  // we need to do one more attempt nextX = java.lang.Double.NaN
---analyzing modificationPoint position: 92
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // evaluate initial guess y[1] = computeObjectiveValue(x[1])
---analyzing modificationPoint position: 36
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [nextX, xA, xB, start, signChangeIndex, end]
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java260
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 260, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 132, #gens: 160, #ops: 1, parent:131] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 132, errors: [BracketingNthOrderBrentSolver.java:346: error: while expected
	}
	 ^, BracketingNthOrderBrentSolver.java:368: error: '.class' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	               ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(66): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (131(f=1.0), 132(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (131(f=1.0), )
----------Running generation: 67, population size: 1

***** Generation 67 : 0
**Parent Variant: [Variant id: 133, #gens: 160, #ops: 0, parent:-]

--Child created id: 134
--Creating new operations for variant [Variant id: 134, #gens: 160, #ops: 0, parent:133]
---analyzing modificationPoint position: 76
---modifPoint 0 not mutation generated in  // evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX)
---analyzing modificationPoint position: 88
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  x[0] = getMin()
---analyzing modificationPoint position: 8
---modifPoint 2 not mutation generated in  return context.getLocalizedMessage()
---analyzing modificationPoint position: 34
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER]
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java296
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 296, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 134, #gens: 160, #ops: 1, parent:133] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 134, errors: [BracketingNthOrderBrentSolver.java:296: error: call to this must be first statement in constructor
				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER);
				                                                      				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(67): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (133(f=1.0), 134(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (133(f=1.0), )
----------Running generation: 68, population size: 1

***** Generation 68 : 0
**Parent Variant: [Variant id: 135, #gens: 160, #ops: 0, parent:-]

--Child created id: 136
--Creating new operations for variant [Variant id: 136, #gens: 160, #ops: 0, parent:135]
---analyzing modificationPoint position: 53
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java55
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 55, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 136, #gens: 160, #ops: 1, parent:135] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 136, errors: [MaxCountExceededException.java:57: error: variable max might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(68): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (135(f=1.0), 136(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (135(f=1.0), )
----------Running generation: 69, population size: 1

***** Generation 69 : 0
**Parent Variant: [Variant id: 137, #gens: 160, #ops: 0, parent:-]

--Child created id: 138
--Creating new operations for variant [Variant id: 138, #gens: 160, #ops: 0, parent:137]
---analyzing modificationPoint position: 51
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java42
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 42, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 138, #gens: 161, #ops: 1, parent:137] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 138, errors: [MaxCountExceededException.java:43: error: call to this must be first statement in constructor
		this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max); 		this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max);
		                                                                                       		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(69): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (137(f=1.0), 138(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (137(f=1.0), )
----------Running generation: 70, population size: 1

***** Generation 70 : 0
**Parent Variant: [Variant id: 139, #gens: 160, #ops: 0, parent:-]

--Child created id: 140
--Creating new operations for variant [Variant id: 140, #gens: 160, #ops: 0, parent:139]
---analyzing modificationPoint position: 58
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  double yA = y[signChangeIndex - 1]
---analyzing modificationPoint position: 53
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 1
---modifPoint 1 not mutation generated in  this.max = max
---analyzing modificationPoint position: 38
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 140, #gens: 159, #ops: 1, parent:139] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 140
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-140/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(70): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (139(f=1.0), 140(f=9.0), )
Selected to next generation: IDs2--> (139(f=1.0), )
----------Running generation: 71, population size: 1

***** Generation 71 : 0
**Parent Variant: [Variant id: 141, #gens: 160, #ops: 0, parent:-]

--Child created id: 142
--Creating new operations for variant [Variant id: 142, #gens: 160, #ops: 0, parent:141]
---analyzing modificationPoint position: 58
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java199
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 199, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 142, #gens: 160, #ops: 1, parent:141] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 142, errors: [BracketingNthOrderBrentSolver.java:203: error: cannot find symbol
		double xB = x[signChangeIndex]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex];
		                                		                                                         ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:203: error: variable xB is already defined in method doSolve()
		double xB = x[signChangeIndex]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex];
		                                		                                                              		                		       ^, BracketingNthOrderBrentSolver.java:223: error: cannot find symbol
						return yA <= 0 ? xA : xB;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:225: error: cannot find symbol
						return yA < 0 ? xB : xA;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				                                                                                                       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:324: error: cannot find symbol
			if ((nextY * yA) <= 0) {
			             ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:334: error: cannot find symbol
				yA = nextY;
				^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:335: error: cannot find symbol
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				                                                  ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(71): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (141(f=1.0), 142(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (141(f=1.0), )
----------Running generation: 72, population size: 1

***** Generation 72 : 0
**Parent Variant: [Variant id: 143, #gens: 160, #ops: 0, parent:-]

--Child created id: 144
--Creating new operations for variant [Variant id: 144, #gens: 160, #ops: 0, parent:143]
---analyzing modificationPoint position: 86
---modifPoint 0 not mutation generated in  // prepare arrays with the first points final double[] x = new double[maximalOrder + 1]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 81
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 2 not mutation generated in  x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta])
---analyzing modificationPoint position: 55
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 3 not mutation generated in  signChangeIndex = 1
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 4 not mutation generated in  throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax())
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 144, #gens: 161, #ops: 1, parent:143] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 144
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-144/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(72): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (143(f=1.0), 144(f=1.0), )
Selected to next generation: IDs2--> (143(f=1.0), )
----------Running generation: 73, population size: 1

***** Generation 73 : 0
**Parent Variant: [Variant id: 145, #gens: 160, #ops: 0, parent:-]

--Child created id: 146
--Creating new operations for variant [Variant id: 146, #gens: 160, #ops: 0, parent:145]
---analyzing modificationPoint position: 110
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 0 not mutation generated in  return searchMax
---analyzing modificationPoint position: 49
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 146, #gens: 159, #ops: 1, parent:145] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 146
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-146/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(73): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (145(f=1.0), 146(f=3.0), )
Selected to next generation: IDs2--> (145(f=1.0), )
----------Running generation: 74, population size: 1

***** Generation 74 : 0
**Parent Variant: [Variant id: 147, #gens: 160, #ops: 0, parent:-]

--Child created id: 148
--Creating new operations for variant [Variant id: 148, #gens: 160, #ops: 0, parent:147]
---analyzing modificationPoint position: 32
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [targetY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR, yB]
--> var from patch: targetY spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 294, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 148, #gens: 160, #ops: 1, parent:147] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 148
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-148/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(74): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (147(f=1.0), 148(f=9.0), )
Selected to next generation: IDs2--> (147(f=1.0), )
----------Running generation: 75, population size: 1

***** Generation 75 : 0
**Parent Variant: [Variant id: 149, #gens: 160, #ops: 0, parent:-]

--Child created id: 150
--Creating new operations for variant [Variant id: 150, #gens: 160, #ops: 0, parent:149]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 150, #gens: 161, #ops: 1, parent:149] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 150, errors: [BracketingNthOrderBrentSolver.java:243: error: variable signChangeIndex is already defined in method doSolve()
			} 			int signChangeIndex;
			  			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(75): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int signChangeIndex` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (149(f=1.0), 150(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (149(f=1.0), )
----------Running generation: 76, population size: 1

***** Generation 76 : 0
**Parent Variant: [Variant id: 151, #gens: 160, #ops: 0, parent:-]

--Child created id: 152
--Creating new operations for variant [Variant id: 152, #gens: 160, #ops: 0, parent:151]
---analyzing modificationPoint position: 24
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java186
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return sb.toString() ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 186, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return sb.toString() ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 152, #gens: 160, #ops: 1, parent:151] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 152, errors: [ExceptionContext.java:185: error: incompatible types: java.util.Set<java.lang.String> cannot be converted to java.lang.String
		} 		return context.keySet();
		  		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(76): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return sb.toString() ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (151(f=1.0), 152(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (151(f=1.0), )
----------Running generation: 77, population size: 1

***** Generation 77 : 0
**Parent Variant: [Variant id: 153, #gens: 160, #ops: 0, parent:-]

--Child created id: 154
--Creating new operations for variant [Variant id: 154, #gens: 160, #ops: 0, parent:153]
---analyzing modificationPoint position: 7
location: BaseAbstractUnivariateRealSolver.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 154, #gens: 159, #ops: 1, parent:153] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 154
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-154/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58576
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58576
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(77): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (153(f=1.0), 154(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (153(f=1.0), )
----------Running generation: 78, population size: 1

***** Generation 78 : 0
**Parent Variant: [Variant id: 155, #gens: 160, #ops: 0, parent:-]

--Child created id: 156
--Creating new operations for variant [Variant id: 156, #gens: 160, #ops: 0, parent:155]
---analyzing modificationPoint position: 38
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [end, signChangeIndex]
--> var from patch: end spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `end = signChangeIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 290, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `end = signChangeIndex` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 156, #gens: 161, #ops: 1, parent:155] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 156
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-156/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(78): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `end = signChangeIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (155(f=1.0), 156(f=1.0), )
Selected to next generation: IDs2--> (155(f=1.0), )
----------Running generation: 79, population size: 1

***** Generation 79 : 0
**Parent Variant: [Variant id: 157, #gens: 160, #ops: 0, parent:-]

--Child created id: 158
--Creating new operations for variant [Variant id: 158, #gens: 160, #ops: 0, parent:157]
---analyzing modificationPoint position: 33
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [yB, nextY]
--> var from patch: yB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: nextY spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `yB = nextY` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 295, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `yB = nextY` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 158, #gens: 161, #ops: 1, parent:157] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 158, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(79): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `yB = nextY` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (157(f=1.0), 158(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (157(f=1.0), )
----------Running generation: 80, population size: 1

***** Generation 80 : 0
**Parent Variant: [Variant id: 159, #gens: 160, #ops: 0, parent:-]

--Child created id: 160
--Creating new operations for variant [Variant id: 160, #gens: 160, #ops: 0, parent:159]
---analyzing modificationPoint position: 45
location: BracketingNthOrderBrentSolver.java323
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 160, #gens: 159, #ops: 1, parent:159] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 160
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-160/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(80): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (159(f=1.0), 160(f=9.0), )
Selected to next generation: IDs2--> (159(f=1.0), )
----------Running generation: 81, population size: 1

***** Generation 81 : 0
**Parent Variant: [Variant id: 161, #gens: 160, #ops: 0, parent:-]

--Child created id: 162
--Creating new operations for variant [Variant id: 162, #gens: 160, #ops: 0, parent:161]
---analyzing modificationPoint position: 84
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x0 = x[j] + (x0 * (targetY - y[j]))
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 39
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java299
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `int agingB = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 299, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `int agingB = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 162, #gens: 161, #ops: 1, parent:161] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 162, errors: [BracketingNthOrderBrentSolver.java:313: error: variable agingB is already defined in method doSolve()
				} 				int agingB = 0;}
				  				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(81): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `int agingB = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (161(f=1.0), 162(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (161(f=1.0), )
----------Running generation: 82, population size: 1

***** Generation 82 : 0
**Parent Variant: [Variant id: 163, #gens: 160, #ops: 0, parent:-]

--Child created id: 164
--Creating new operations for variant [Variant id: 164, #gens: 160, #ops: 0, parent:163]
---analyzing modificationPoint position: 5
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 15
---modifPoint 1 not mutation generated in  final java.lang.StringBuilder sb = new java.lang.StringBuilder()
---analyzing modificationPoint position: 23
location: ExceptionContext.java180
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 164, #gens: 159, #ops: 1, parent:163] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 164
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-164/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(82): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (163(f=1.0), 164(f=1.0), )
Selected to next generation: IDs2--> (163(f=1.0), )
----------Running generation: 83, population size: 1

***** Generation 83 : 0
**Parent Variant: [Variant id: 165, #gens: 160, #ops: 0, parent:-]

--Child created id: 166
--Creating new operations for variant [Variant id: 166, #gens: 160, #ops: 0, parent:165]
---analyzing modificationPoint position: 83
location: BracketingNthOrderBrentSolver.java374
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 166, #gens: 159, #ops: 1, parent:165] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 166
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-166/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(83): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (165(f=1.0), 166(f=4.0), )
Selected to next generation: IDs2--> (165(f=1.0), )
----------Running generation: 84, population size: 1

***** Generation 84 : 0
**Parent Variant: [Variant id: 167, #gens: 160, #ops: 0, parent:-]

--Child created id: 168
--Creating new operations for variant [Variant id: 168, #gens: 160, #ops: 0, parent:167]
---analyzing modificationPoint position: 9
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 99
location: MathIllegalStateException.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 168, #gens: 159, #ops: 1, parent:167] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 168, errors: [MathIllegalStateException.java:48: error: variable context might not have been initialized
		context.addMessage(pattern, args);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(84): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (167(f=1.0), 168(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (167(f=1.0), )
----------Running generation: 85, population size: 1

***** Generation 85 : 0
**Parent Variant: [Variant id: 169, #gens: 160, #ops: 0, parent:-]

--Child created id: 170
--Creating new operations for variant [Variant id: 170, #gens: 160, #ops: 0, parent:169]
---analyzing modificationPoint position: 144
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [maximalCount]
--> var from patch: maximalCount spoon.support.reflect.code.CtFieldReadImpl
location: Incrementor.java61
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...] ` -topatch--> `return maximalCount` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.Incrementor line: 61, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...] ` -topatch--> `return maximalCount` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 170, #gens: 161, #ops: 1, parent:169] gen mutated: 1 , gen not mut: 0, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(max, 
new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() {
	/**
	 * {@inheritDoc }
	 */ 	public void trigger(int max) { 		throw new org.apache.commons.math.exception.MaxCountExceededException(max);
	}
})
-The child compiles: id 170
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-170/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(85): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...] ` -topatch--> `return maximalCount` (spoon.support.reflect.code.CtReturnImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(max, 
new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() {
	/**
	 * {@inheritDoc }
	 */ 	public void trigger(int max) { 		throw new org.apache.commons.math.exception.MaxCountExceededException(max);
	}
})
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (169(f=1.0), 170(f=1.0), )
Selected to next generation: IDs2--> (169(f=1.0), )
----------Running generation: 86, population size: 1

***** Generation 86 : 0
**Parent Variant: [Variant id: 171, #gens: 160, #ops: 0, parent:-]

--Child created id: 172
--Creating new operations for variant [Variant id: 172, #gens: 160, #ops: 0, parent:171]
---analyzing modificationPoint position: 20
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 1 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 3
---modifPoint 2 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 107
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [absoluteAccuracy]
--> var from patch: absoluteAccuracy spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java128
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return absoluteAccuracy ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 128, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return absoluteAccuracy ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 172, #gens: 160, #ops: 1, parent:171] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 172
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-172/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(86): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return absoluteAccuracy ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (171(f=1.0), 172(f=1.0), )
Selected to next generation: IDs2--> (171(f=1.0), )
----------Running generation: 87, population size: 1

***** Generation 87 : 0
**Parent Variant: [Variant id: 173, #gens: 160, #ops: 0, parent:-]

--Child created id: 174
--Creating new operations for variant [Variant id: 174, #gens: 160, #ops: 0, parent:173]
---analyzing modificationPoint position: 35
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java297
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 297, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 174, #gens: 161, #ops: 1, parent:173] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 174
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-174/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 8, was successful: false, cases executed: 15] ,[]
-Valid?: |false|8|15|[]|, fitness 8.0
Ingredient counter is Zero
---Undoing: gnrtn(87): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (173(f=1.0), 174(f=8.0), )
Selected to next generation: IDs2--> (173(f=1.0), )
----------Running generation: 88, population size: 1

***** Generation 88 : 0
**Parent Variant: [Variant id: 175, #gens: 160, #ops: 0, parent:-]

--Child created id: 176
--Creating new operations for variant [Variant id: 176, #gens: 160, #ops: 0, parent:175]
---analyzing modificationPoint position: 49
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 176, #gens: 159, #ops: 1, parent:175] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 176
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-176/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(88): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (175(f=1.0), 176(f=3.0), )
Selected to next generation: IDs2--> (175(f=1.0), )
----------Running generation: 89, population size: 1

***** Generation 89 : 0
**Parent Variant: [Variant id: 177, #gens: 160, #ops: 0, parent:-]

--Child created id: 178
--Creating new operations for variant [Variant id: 178, #gens: 160, #ops: 0, parent:177]
---analyzing modificationPoint position: 65
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]
---analyzing modificationPoint position: 17
---modifPoint 1 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 21
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java177
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 177, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 178, #gens: 161, #ops: 1, parent:177] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 178, errors: [ExceptionContext.java:177: error: variable len is already defined in method buildMessage(java.util.Locale,java.lang.String)
			final java.lang.Object[] args = msgArguments.get(i); 			final int len = msgPatterns.size();
			                                                     			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(89): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (177(f=1.0), 178(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (177(f=1.0), )
----------Running generation: 90, population size: 1

***** Generation 90 : 0
**Parent Variant: [Variant id: 179, #gens: 160, #ops: 0, parent:-]

--Child created id: 180
--Creating new operations for variant [Variant id: 180, #gens: 160, #ops: 0, parent:179]
---analyzing modificationPoint position: 34
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java296
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `// return the initial guess if it is a perfect root. return x[1]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 296, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `// return the initial guess if it is a perfect root. return x[1]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 180, #gens: 161, #ops: 1, parent:179] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 180, errors: [BracketingNthOrderBrentSolver.java:298: error: unreachable statement
				return x[1]; 				signChangeIndex -= start;
				             				^]
Ingredient counter is Zero
---Undoing: gnrtn(90): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `// return the initial guess if it is a perfect root. return x[1]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (179(f=1.0), 180(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (179(f=1.0), )
----------Running generation: 91, population size: 1

***** Generation 91 : 0
**Parent Variant: [Variant id: 181, #gens: 160, #ops: 0, parent:-]

--Child created id: 182
--Creating new operations for variant [Variant id: 182, #gens: 160, #ops: 0, parent:181]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 182, #gens: 161, #ops: 1, parent:181] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 182, errors: [BracketingNthOrderBrentSolver.java:247: error: variable start is already defined in method doSolve()
			int start = 0; 			int start = 0;
			               			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(91): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (181(f=1.0), 182(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (181(f=1.0), )
----------Running generation: 92, population size: 1

***** Generation 92 : 0
**Parent Variant: [Variant id: 183, #gens: 160, #ops: 0, parent:-]

--Child created id: 184
--Creating new operations for variant [Variant id: 184, #gens: 160, #ops: 0, parent:183]
---analyzing modificationPoint position: 5
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 184, #gens: 161, #ops: 1, parent:183] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 184, errors: [BracketingNthOrderBrentSolver.java:233: error: variable agingA is already defined in method doSolve()
			double targetY; 			int agingA = 0;
			                			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(92): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (183(f=1.0), 184(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (183(f=1.0), )
----------Running generation: 93, population size: 1

***** Generation 93 : 0
**Parent Variant: [Variant id: 185, #gens: 160, #ops: 0, parent:-]

--Child created id: 186
--Creating new operations for variant [Variant id: 186, #gens: 160, #ops: 0, parent:185]
---analyzing modificationPoint position: 7
Templates availables1
Attempts Base Ingredients  1 total 1
---modifPoint 0 not mutation generated in  throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax())
---analyzing modificationPoint position: 123
location: BaseAbstractUnivariateRealSolver.java94
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeAccuracy = relativeAccuracy ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 186, #gens: 159, #ops: 1, parent:185] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 186, errors: [BaseAbstractUnivariateRealSolver.java:97: error: variable relativeAccuracy might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(93): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeAccuracy = relativeAccuracy ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (185(f=1.0), 186(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (185(f=1.0), )
----------Running generation: 94, population size: 1

***** Generation 94 : 0
**Parent Variant: [Variant id: 187, #gens: 160, #ops: 0, parent:-]

--Child created id: 188
--Creating new operations for variant [Variant id: 188, #gens: 160, #ops: 0, parent:187]
---analyzing modificationPoint position: 96
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java169
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 169, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 188, #gens: 161, #ops: 1, parent:187] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 188, errors: [BracketingNthOrderBrentSolver.java:196: error: unreachable statement
		final double[] tmpX = new double[x.length];
		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(94): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `// return the first endpoint if it is a perfect root. return x[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (187(f=1.0), 188(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (187(f=1.0), )
----------Running generation: 95, population size: 1

***** Generation 95 : 0
**Parent Variant: [Variant id: 189, #gens: 160, #ops: 0, parent:-]

--Child created id: 190
--Creating new operations for variant [Variant id: 190, #gens: 160, #ops: 0, parent:189]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return buildMessage(locale, ": ")
---analyzing modificationPoint position: 9
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 8
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldWriteImpl
location: MathIllegalStateException.java86
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `context = new org.apache.commons.math.exception.util.ExceptionContext(this)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 86, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `context = new org.apache.commons.math.exception.util.ExceptionContext(this)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 190, #gens: 161, #ops: 1, parent:189] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 190, errors: [MathIllegalStateException.java:86: error: cannot assign a value to final variable context
	 */ 	@java.lang.Override 	public java.lang.String getLocalizedMessage() { 		context = new org.apache.commons.math.exception.util.ExceptionContext(this);
	    	                    	                                                		^]
Ingredient counter is Zero
---Undoing: gnrtn(95): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `context = new org.apache.commons.math.exception.util.ExceptionContext(this)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (189(f=1.0), 190(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (189(f=1.0), )
----------Running generation: 96, population size: 1

***** Generation 96 : 0
**Parent Variant: [Variant id: 191, #gens: 160, #ops: 0, parent:-]

--Child created id: 192
--Creating new operations for variant [Variant id: 192, #gens: 160, #ops: 0, parent:191]
---analyzing modificationPoint position: 31
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java235
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `signChangeIndex = 2` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 235, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `signChangeIndex = 2` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 192, #gens: 160, #ops: 1, parent:191] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 192, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(96): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `signChangeIndex = 2` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (191(f=1.0), 192(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (191(f=1.0), )
----------Running generation: 97, population size: 1

***** Generation 97 : 0
**Parent Variant: [Variant id: 193, #gens: 160, #ops: 0, parent:-]

--Child created id: 194
--Creating new operations for variant [Variant id: 194, #gens: 160, #ops: 0, parent:193]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, nbPoints, signChangeIndex, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 194, #gens: 161, #ops: 1, parent:193] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 194, errors: [BracketingNthOrderBrentSolver.java:274: error: variable nextX might not have been initialized
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^]
Ingredient counter is Zero
---Undoing: gnrtn(97): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (193(f=1.0), 194(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (193(f=1.0), )
----------Running generation: 98, population size: 1

***** Generation 98 : 0
**Parent Variant: [Variant id: 195, #gens: 160, #ops: 0, parent:-]

--Child created id: 196
--Creating new operations for variant [Variant id: 196, #gens: 160, #ops: 0, parent:195]
---analyzing modificationPoint position: 3
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java80
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 80, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 196, #gens: 160, #ops: 1, parent:195] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 196, errors: [MathIllegalStateException.java:80: error: incompatible types: org.apache.commons.math.exception.util.ExceptionContext cannot be converted to java.lang.String
	 */ 	@java.lang.Override 	public java.lang.String getMessage() { 		return context;
	    	                    	                                       		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(98): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (195(f=1.0), 196(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (195(f=1.0), )
----------Running generation: 99, population size: 1

***** Generation 99 : 0
**Parent Variant: [Variant id: 197, #gens: 160, #ops: 0, parent:-]

--Child created id: 198
--Creating new operations for variant [Variant id: 198, #gens: 160, #ops: 0, parent:197]
---analyzing modificationPoint position: 122
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  this.absoluteAccuracy = absoluteAccuracy
---analyzing modificationPoint position: 85
---modifPoint 1 not mutation generated in  return x0
---analyzing modificationPoint position: 128
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 2 not mutation generated in  long xInt = java.lang.Double.doubleToLongBits(x)
---analyzing modificationPoint position: 107
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java128
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return absoluteAccuracy ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 128, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return absoluteAccuracy ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 198, #gens: 160, #ops: 1, parent:197] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 198
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-198/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(99): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return absoluteAccuracy ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (197(f=1.0), 198(f=4.0), )
Selected to next generation: IDs2--> (197(f=1.0), )
----------Running generation: 100, population size: 1

***** Generation 100 : 0
**Parent Variant: [Variant id: 199, #gens: 160, #ops: 0, parent:-]

--Child created id: 200
--Creating new operations for variant [Variant id: 200, #gens: 160, #ops: 0, parent:199]
---analyzing modificationPoint position: 53
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java55
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 55, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 200, #gens: 161, #ops: 1, parent:199] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 200, errors: [MaxCountExceededException.java:56: error: call to this must be first statement in constructor
		this.max = max; 		this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max);
		                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(100): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (199(f=1.0), 200(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (199(f=1.0), )
----------Running generation: 101, population size: 1

***** Generation 101 : 0
**Parent Variant: [Variant id: 201, #gens: 160, #ops: 0, parent:-]

--Child created id: 202
--Creating new operations for variant [Variant id: 202, #gens: 160, #ops: 0, parent:201]
---analyzing modificationPoint position: 69
location: BracketingNthOrderBrentSolver.java241
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 202, #gens: 159, #ops: 1, parent:201] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 202, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(101): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (201(f=1.0), 202(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (201(f=1.0), )
----------Running generation: 102, population size: 1

***** Generation 102 : 0
**Parent Variant: [Variant id: 203, #gens: 160, #ops: 0, parent:-]

--Child created id: 204
--Creating new operations for variant [Variant id: 204, #gens: 160, #ops: 0, parent:203]
---analyzing modificationPoint position: 36
location: BracketingNthOrderBrentSolver.java260
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 204, #gens: 159, #ops: 1, parent:203] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 204
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-204/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58597
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58597
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(102): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (203(f=1.0), 204(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (203(f=1.0), )
----------Running generation: 103, population size: 1

***** Generation 103 : 0
**Parent Variant: [Variant id: 205, #gens: 160, #ops: 0, parent:-]

--Child created id: 206
--Creating new operations for variant [Variant id: 206, #gens: 160, #ops: 0, parent:205]
---analyzing modificationPoint position: 74
location: BracketingNthOrderBrentSolver.java254
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 206, #gens: 159, #ops: 1, parent:205] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 206
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-206/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58600
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58600
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(103): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (205(f=1.0), 206(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (205(f=1.0), )
----------Running generation: 104, population size: 1

***** Generation 104 : 0
**Parent Variant: [Variant id: 207, #gens: 160, #ops: 0, parent:-]

--Child created id: 208
--Creating new operations for variant [Variant id: 208, #gens: 160, #ops: 0, parent:207]
---analyzing modificationPoint position: 84
location: BracketingNthOrderBrentSolver.java375
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x0 = x[j] + (x0 * (targetY - y[j])) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 208, #gens: 159, #ops: 1, parent:207] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 208
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-208/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(104): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x0 = x[j] + (x0 * (targetY - y[j])) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (207(f=1.0), 208(f=4.0), )
Selected to next generation: IDs2--> (207(f=1.0), )
----------Running generation: 105, population size: 1

***** Generation 105 : 0
**Parent Variant: [Variant id: 209, #gens: 160, #ops: 0, parent:-]

--Child created id: 210
--Creating new operations for variant [Variant id: 210, #gens: 160, #ops: 0, parent:209]
---analyzing modificationPoint position: 19
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [java.util.Locale.US]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java175
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 175, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 210, #gens: 161, #ops: 1, parent:209] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 210, errors: [ExceptionContext.java:176: error: unreachable statement
			final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i);
			                                                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(105): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (209(f=1.0), 210(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (209(f=1.0), )
----------Running generation: 106, population size: 1

***** Generation 106 : 0
**Parent Variant: [Variant id: 211, #gens: 160, #ops: 0, parent:-]

--Child created id: 212
--Creating new operations for variant [Variant id: 212, #gens: 160, #ops: 0, parent:211]
---analyzing modificationPoint position: 10
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 158
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [o]
--> var from patch: o spoon.support.reflect.code.CtVariableReadImpl
location: MathUtils.java257
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); } ` -topatch--> `if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 257, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); } ` -topatch--> `if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 212, #gens: 160, #ops: 1, parent:211] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 212
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-212/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(106): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); } ` -topatch--> `if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (211(f=1.0), 212(f=1.0), )
Selected to next generation: IDs2--> (211(f=1.0), )
----------Running generation: 107, population size: 1

***** Generation 107 : 0
**Parent Variant: [Variant id: 213, #gens: 160, #ops: 0, parent:-]

--Child created id: 214
--Creating new operations for variant [Variant id: 214, #gens: 160, #ops: 0, parent:213]
---analyzing modificationPoint position: 95
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]
---analyzing modificationPoint position: 4
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 214, #gens: 159, #ops: 1, parent:213] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 214
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-214/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(107): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (213(f=1.0), 214(f=2.0), )
Selected to next generation: IDs2--> (213(f=1.0), )
----------Running generation: 108, population size: 1

***** Generation 108 : 0
**Parent Variant: [Variant id: 215, #gens: 160, #ops: 0, parent:-]

--Child created id: 216
--Creating new operations for variant [Variant id: 216, #gens: 160, #ops: 0, parent:215]
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [this.throwable]
--> var from patch: this.throwable spoon.support.reflect.code.CtFieldWriteImpl
location: ExceptionContext.java176
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 216, #gens: 161, #ops: 1, parent:215] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 216
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-216/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(108): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (215(f=1.0), 216(f=1.0), )
Selected to next generation: IDs2--> (215(f=1.0), )
----------Running generation: 109, population size: 1

***** Generation 109 : 0
**Parent Variant: [Variant id: 217, #gens: 160, #ops: 0, parent:-]

--Child created id: 218
--Creating new operations for variant [Variant id: 218, #gens: 160, #ops: 0, parent:217]
---analyzing modificationPoint position: 106
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  return functionValueAccuracy
---analyzing modificationPoint position: 4
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 6
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 2 not mutation generated in  // Add a separator if there are other messages. sb.append(separator)
---analyzing modificationPoint position: 81
location: BracketingNthOrderBrentSolver.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 218, #gens: 159, #ops: 1, parent:217] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 218
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-218/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(109): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (217(f=1.0), 218(f=9.0), )
Selected to next generation: IDs2--> (217(f=1.0), )
----------Running generation: 110, population size: 1

***** Generation 110 : 0
**Parent Variant: [Variant id: 219, #gens: 160, #ops: 0, parent:-]

--Child created id: 220
--Creating new operations for variant [Variant id: 220, #gens: 160, #ops: 0, parent:219]
---analyzing modificationPoint position: 107
---modifPoint 0 not mutation generated in  return absoluteAccuracy
---analyzing modificationPoint position: 148
location: ExceptionContext.java87
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `msgPatterns.add(pattern) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 220, #gens: 159, #ops: 1, parent:219] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 220
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-220/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(110): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `msgPatterns.add(pattern) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (219(f=1.0), 220(f=1.0), )
Selected to next generation: IDs2--> (219(f=1.0), )
----------Running generation: 111, population size: 1

***** Generation 111 : 0
**Parent Variant: [Variant id: 221, #gens: 160, #ops: 0, parent:-]

--Child created id: 222
--Creating new operations for variant [Variant id: 222, #gens: 160, #ops: 0, parent:221]
---analyzing modificationPoint position: 90
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x[2] = getMax()
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 101
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [relativeAccuracy]
--> var from patch: relativeAccuracy spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java268
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...] ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 268, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...] ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 222, #gens: 161, #ops: 1, parent:221] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 222, errors: [BaseAbstractUnivariateRealSolver.java:268: error: incompatible types: unexpected return value
	 */ 	protected void verifySequence(final double lower, final double initial, final double upper) { 		return relativeAccuracy;
	    	                                                                                              		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(111): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...] ` -topatch--> `return relativeAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (221(f=1.0), 222(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (221(f=1.0), )
----------Running generation: 112, population size: 1

***** Generation 112 : 0
**Parent Variant: [Variant id: 223, #gens: 160, #ops: 0, parent:-]

--Child created id: 224
--Creating new operations for variant [Variant id: 224, #gens: 160, #ops: 0, parent:223]
---analyzing modificationPoint position: 22
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch []
location: ExceptionContext.java179
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 179, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 224, #gens: 161, #ops: 1, parent:223] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 224, errors: [ExceptionContext.java:179: error: variable count is already defined in method buildMessage(java.util.Locale,java.lang.String)
			locale); 			int count = 0;
			         			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(112): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (223(f=1.0), 224(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (223(f=1.0), )
----------Running generation: 113, population size: 1

***** Generation 113 : 0
**Parent Variant: [Variant id: 225, #gens: 160, #ops: 0, parent:-]

--Child created id: 226
--Creating new operations for variant [Variant id: 226, #gens: 160, #ops: 0, parent:225]
---analyzing modificationPoint position: 100
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java47
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 47, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 226, #gens: 161, #ops: 1, parent:225] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 226, errors: [MathIllegalStateException.java:87: error: incompatible types: unexpected return value
		return context.getLocalizedMessage();} 	/**
		                                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(113): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (225(f=1.0), 226(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (225(f=1.0), )
----------Running generation: 114, population size: 1

***** Generation 114 : 0
**Parent Variant: [Variant id: 227, #gens: 160, #ops: 0, parent:-]

--Child created id: 228
--Creating new operations for variant [Variant id: 228, #gens: 160, #ops: 0, parent:227]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [this.maximalOrder]
--> var from patch: this.maximalOrder spoon.support.reflect.code.CtFieldWriteImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 228, #gens: 161, #ops: 1, parent:227] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 228, errors: [BracketingNthOrderBrentSolver.java:233: error: cannot assign a value to final variable maximalOrder
			double targetY; 			this.maximalOrder = maximalOrder;
			                			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(114): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (227(f=1.0), 228(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (227(f=1.0), )
----------Running generation: 115, population size: 1

***** Generation 115 : 0
**Parent Variant: [Variant id: 229, #gens: 160, #ops: 0, parent:-]

--Child created id: 230
--Creating new operations for variant [Variant id: 230, #gens: 160, #ops: 0, parent:229]
---analyzing modificationPoint position: 144
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [count]
--> var from patch: count spoon.support.reflect.code.CtFieldReadImpl
location: Incrementor.java61
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...] ` -topatch--> `return count` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.util.Incrementor line: 61, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...] ` -topatch--> `return count` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 230, #gens: 161, #ops: 1, parent:229] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 230, errors: [Incrementor.java:110: error: incompatible types: unexpected return value
		return count;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(115): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...] ` -topatch--> `return count` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (229(f=1.0), 230(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (229(f=1.0), )
----------Running generation: 116, population size: 1

***** Generation 116 : 0
**Parent Variant: [Variant id: 231, #gens: 160, #ops: 0, parent:-]

--Child created id: 232
--Creating new operations for variant [Variant id: 232, #gens: 160, #ops: 0, parent:231]
---analyzing modificationPoint position: 6
location: ExceptionContext.java182
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 232, #gens: 159, #ops: 1, parent:231] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 232
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-232/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(116): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (231(f=1.0), 232(f=1.0), )
Selected to next generation: IDs2--> (231(f=1.0), )
----------Running generation: 117, population size: 1

***** Generation 117 : 0
**Parent Variant: [Variant id: 233, #gens: 160, #ops: 0, parent:-]

--Child created id: 234
--Creating new operations for variant [Variant id: 234, #gens: 160, #ops: 0, parent:233]
---analyzing modificationPoint position: 46
location: BracketingNthOrderBrentSolver.java325
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 234, #gens: 159, #ops: 1, parent:233] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 234
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-234/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 15] ,[]
-Valid?: |false|5|15|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(117): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (233(f=1.0), 234(f=5.0), )
Selected to next generation: IDs2--> (233(f=1.0), )
----------Running generation: 118, population size: 1

***** Generation 118 : 0
**Parent Variant: [Variant id: 235, #gens: 160, #ops: 0, parent:-]

--Child created id: 236
--Creating new operations for variant [Variant id: 236, #gens: 160, #ops: 0, parent:235]
---analyzing modificationPoint position: 56
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java195
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 195, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 236, #gens: 161, #ops: 1, parent:235] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 236, errors: [BracketingNthOrderBrentSolver.java:213: error: cannot find symbol
			(getRelativeAccuracy() * org.apache.commons.math.util.FastMath.max(org.apache.commons.math.util.FastMath.abs(xA), org.apache.commons.math.util.FastMath.abs(xB)));
			                                                                                                             ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:214: error: cannot find symbol
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			           ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:214: error: cannot find symbol
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			                                                                      ^
  symbol:   variable absYA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:217: error: cannot find symbol
						return absYA < absYB ? xA : xB;
						       ^
  symbol:   variable absYA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:217: error: cannot find symbol
						return absYA < absYB ? xA : xB;
						                       ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:219: error: cannot find symbol
						return xA;
						       ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:223: error: cannot find symbol
						return yA <= 0 ? xA : xB;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:223: error: cannot find symbol
						return yA <= 0 ? xA : xB;
						                 ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:225: error: cannot find symbol
						return yA < 0 ? xB : xA;
						       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:225: error: cannot find symbol
						return yA < 0 ? xB : xA;
						                     ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:234: error: cannot find symbol
			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			    ^
  symbol:   variable agingA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				                                                                                                       ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				               ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				        ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				                          ^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:324: error: cannot find symbol
			if ((nextY * yA) <= 0) {
			             ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:329: error: cannot find symbol
				++agingA;
				  ^
  symbol:   variable agingA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:333: error: cannot find symbol
				xA = nextX;
				^
  symbol:   variable xA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:334: error: cannot find symbol
				yA = nextY;
				^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:335: error: cannot find symbol
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^
  symbol:   variable absYA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:335: error: cannot find symbol
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				                                                  ^
  symbol:   variable yA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:336: error: cannot find symbol
				agingA = 0;
				^
  symbol:   variable agingA
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(118): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (235(f=1.0), 236(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (235(f=1.0), )
----------Running generation: 119, population size: 1

***** Generation 119 : 0
**Parent Variant: [Variant id: 237, #gens: 160, #ops: 0, parent:-]

--Child created id: 238
--Creating new operations for variant [Variant id: 238, #gens: 160, #ops: 0, parent:237]
---analyzing modificationPoint position: 20
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 62
---modifPoint 1 not mutation generated in  double yB = y[signChangeIndex]
---analyzing modificationPoint position: 6
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: ExceptionContext.java182
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `return buildMessage(locale, ": ")` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 182, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `return buildMessage(locale, ": ")` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 238, #gens: 161, #ops: 1, parent:237] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 238
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-238/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
Error reading the validation process
 output: 
America/Los_Angeles

**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(119): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `return buildMessage(locale, ": ")` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (237(f=1.0), 238(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (237(f=1.0), )
----------Running generation: 120, population size: 1

***** Generation 120 : 0
**Parent Variant: [Variant id: 239, #gens: 160, #ops: 0, parent:-]

--Child created id: 240
--Creating new operations for variant [Variant id: 240, #gens: 160, #ops: 0, parent:239]
---analyzing modificationPoint position: 49
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 240, #gens: 159, #ops: 1, parent:239] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 240
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-240/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(120): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (239(f=1.0), 240(f=3.0), )
Selected to next generation: IDs2--> (239(f=1.0), )
----------Running generation: 121, population size: 1

***** Generation 121 : 0
**Parent Variant: [Variant id: 241, #gens: 160, #ops: 0, parent:-]

--Child created id: 242
--Creating new operations for variant [Variant id: 242, #gens: 160, #ops: 0, parent:241]
---analyzing modificationPoint position: 131
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  if (yInt < 0) { 	yInt = org.apache.commons.math.util.Precision.SGN_MASK - yInt; }
---analyzing modificationPoint position: 35
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nextX, targetY, tmpX, y, start, end]
--> var from patch: nextX spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: targetY spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: tmpX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java297
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `nextX = guessX(targetY, tmpX, y, start, end)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 297, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `nextX = guessX(targetY, tmpX, y, start, end)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 242, #gens: 161, #ops: 1, parent:241] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 242
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-242/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 6, was successful: false, cases executed: 15] ,[]
-Valid?: |false|6|15|[]|, fitness 6.0
Ingredient counter is Zero
---Undoing: gnrtn(121): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `nextX = guessX(targetY, tmpX, y, start, end)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (241(f=1.0), 242(f=6.0), )
Selected to next generation: IDs2--> (241(f=1.0), )
----------Running generation: 122, population size: 1

***** Generation 122 : 0
**Parent Variant: [Variant id: 243, #gens: 160, #ops: 0, parent:-]

--Child created id: 244
--Creating new operations for variant [Variant id: 244, #gens: 160, #ops: 0, parent:243]
---analyzing modificationPoint position: 4
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 244, #gens: 159, #ops: 1, parent:243] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 244
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-244/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(122): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (243(f=1.0), 244(f=2.0), )
Selected to next generation: IDs2--> (243(f=1.0), )
----------Running generation: 123, population size: 1

***** Generation 123 : 0
**Parent Variant: [Variant id: 245, #gens: 160, #ops: 0, parent:-]

--Child created id: 246
--Creating new operations for variant [Variant id: 246, #gens: 160, #ops: 0, parent:245]
---analyzing modificationPoint position: 109
---modifPoint 0 not mutation generated in  return searchMin
---analyzing modificationPoint position: 26
---modifPoint 1 not mutation generated in  // either the locale is not supported or the resource is unknown // don't translate and fall back to[...]
---analyzing modificationPoint position: 10
location: BracketingNthOrderBrentSolver.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 246, #gens: 159, #ops: 1, parent:245] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 246
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-246/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(123): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (245(f=1.0), 246(f=2.0), )
Selected to next generation: IDs2--> (245(f=1.0), )
----------Running generation: 124, population size: 1

***** Generation 124 : 0
**Parent Variant: [Variant id: 247, #gens: 160, #ops: 0, parent:-]

--Child created id: 248
--Creating new operations for variant [Variant id: 248, #gens: 160, #ops: 0, parent:247]
---analyzing modificationPoint position: 131
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 0 not mutation generated in  if (yInt < 0) { 	yInt = org.apache.commons.math.util.Precision.SGN_MASK - yInt; }
---analyzing modificationPoint position: 86
---modifPoint 1 not mutation generated in  // prepare arrays with the first points final double[] x = new double[maximalOrder + 1]
---analyzing modificationPoint position: 60
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java201
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 201, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 248, #gens: 160, #ops: 1, parent:247] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 248, errors: [BracketingNthOrderBrentSolver.java:377: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					^, BracketingNthOrderBrentSolver.java:377: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					    ^, BracketingNthOrderBrentSolver.java:377: error: ')' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					     ^, BracketingNthOrderBrentSolver.java:377: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                    ^, BracketingNthOrderBrentSolver.java:377: error: <identifier> expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                            ^, BracketingNthOrderBrentSolver.java:377: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                              ^, BracketingNthOrderBrentSolver.java:377: error: <identifier> expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                ^, BracketingNthOrderBrentSolver.java:377: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                  ^, BracketingNthOrderBrentSolver.java:377: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                      ^, BracketingNthOrderBrentSolver.java:377: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                                       ^, BracketingNthOrderBrentSolver.java:378: error: illegal start of type
						++start;} else { 						// we have more points after sign change, drop the highest point
						          ^, BracketingNthOrderBrentSolver.java:378: error: ';' expected
						++start;} else { 						// we have more points after sign change, drop the highest point
						              ^, BracketingNthOrderBrentSolver.java:379: error: illegal start of type
						--end;} 					// we need to do one more attempt 					nextX = java.lang.Double.NaN;}} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) ); 			if (java.lang.Double.isNaN(nextX)) { 				// fall back to bisection 				nextX = xA + (0.5 * (xB - xA)); 				start = signChangeIndex - 1; 				end = signChangeIndex;} 			// evaluate the function at the guessed root 			final double nextY = computeObjectiveValue(nextX); 			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 				// we have found an exact root, since it is not an approximation 				// we don't need to bother about the allowed solutions setting
						^, BracketingNthOrderBrentSolver.java:380: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				^, BracketingNthOrderBrentSolver.java:380: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				             ^, BracketingNthOrderBrentSolver.java:390: error: class, interface, or enum expected
	 * @param targetY
	          ^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 * @param x
	          ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
	 * @param y
	          ^, BracketingNthOrderBrentSolver.java:397: error: class, interface, or enum expected
	 * @param start
	          ^, BracketingNthOrderBrentSolver.java:399: error: class, interface, or enum expected
	 * @param end
	          ^, BracketingNthOrderBrentSolver.java:401: error: <identifier> expected
	 * @return guessed root (will be a NaN if two points share the same y)
	    ^, BracketingNthOrderBrentSolver.java:401: error: class, interface, or enum expected
	 * @return guessed root (will be a NaN if two points share the same y)
	           ^, BracketingNthOrderBrentSolver.java:402: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:402: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:402: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:402: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:402: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                    ^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                   ^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			      ^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:403: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			                                    				                                                 ^, BracketingNthOrderBrentSolver.java:404: error: class, interface, or enum expected
	 * {@inheritDoc }
	                ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max);} 	/**
	    	       ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max);} 	/**
	    	                                                                                                                                                                                            		                                		^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max);} 	/**
	    	                                                                                                                                                                                            		                                		                                         ^, BracketingNthOrderBrentSolver.java:407: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max, startValue);}}
	    	       ^, BracketingNthOrderBrentSolver.java:407: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max, startValue);}}
	    	                                                                                                                                                                                                               		                                		^, BracketingNthOrderBrentSolver.java:407: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max, startValue);}}
	    	                                                                                                                                                                                                               		                                		                                                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(124): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (247(f=1.0), 248(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (247(f=1.0), )
----------Running generation: 125, population size: 1

***** Generation 125 : 0
**Parent Variant: [Variant id: 249, #gens: 160, #ops: 0, parent:-]

--Child created id: 250
--Creating new operations for variant [Variant id: 250, #gens: 160, #ops: 0, parent:249]
---analyzing modificationPoint position: 118
location: BaseAbstractUnivariateRealSolver.java179
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `function = f ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 250, #gens: 159, #ops: 1, parent:249] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 250
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-250/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 11, was successful: false, cases executed: 15] ,[]
-Valid?: |false|11|15|[]|, fitness 11.0
Ingredient counter is Zero
---Undoing: gnrtn(125): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `function = f ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (249(f=1.0), 250(f=11.0), )
Selected to next generation: IDs2--> (249(f=1.0), )
----------Running generation: 126, population size: 1

***** Generation 126 : 0
**Parent Variant: [Variant id: 251, #gens: 160, #ops: 0, parent:-]

--Child created id: 252
--Creating new operations for variant [Variant id: 252, #gens: 160, #ops: 0, parent:251]
---analyzing modificationPoint position: 80
Templates availables3
Attempts Base Ingredients  1 total 3
Name Conflict [start, end, x, y]
---modifPoint 0 not mutation generated in  for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); }
---analyzing modificationPoint position: 13
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 1 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 2 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 95
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java162
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 162, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 252, #gens: 160, #ops: 1, parent:251] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 252, errors: [BracketingNthOrderBrentSolver.java:209: error: illegal start of type
		while (true) {
		^, BracketingNthOrderBrentSolver.java:209: error: illegal start of type
		while (true) {
		       ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	        ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(126): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (251(f=1.0), 252(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (251(f=1.0), )
----------Running generation: 127, population size: 1

***** Generation 127 : 0
**Parent Variant: [Variant id: 253, #gens: 160, #ops: 0, parent:-]

--Child created id: 254
--Creating new operations for variant [Variant id: 254, #gens: 160, #ops: 0, parent:253]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// evaluate second endpoint y[2] = computeObjectiveValue(x[2])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// evaluate second endpoint y[2] = computeObjectiveValue(x[2])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 254, #gens: 161, #ops: 1, parent:253] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 254
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-254/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(127): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// evaluate second endpoint y[2] = computeObjectiveValue(x[2])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (253(f=1.0), 254(f=1.0), )
Selected to next generation: IDs2--> (253(f=1.0), )
----------Running generation: 128, population size: 1

***** Generation 128 : 0
**Parent Variant: [Variant id: 255, #gens: 160, #ops: 0, parent:-]

--Child created id: 256
--Creating new operations for variant [Variant id: 256, #gens: 160, #ops: 0, parent:255]
---analyzing modificationPoint position: 67
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [targetY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR, yA]
--> var from patch: targetY spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `// we keep updating the low bracket, try to compensate this targetY = (-org.apache.commons.math.anal[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 233, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `// we keep updating the low bracket, try to compensate this targetY = (-org.apache.commons.math.anal[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 256, #gens: 161, #ops: 1, parent:255] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 256
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-256/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(128): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `// we keep updating the low bracket, try to compensate this targetY = (-org.apache.commons.math.anal[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (255(f=1.0), 256(f=2.0), )
Selected to next generation: IDs2--> (255(f=1.0), )
----------Running generation: 129, population size: 1

***** Generation 129 : 0
**Parent Variant: [Variant id: 257, #gens: 160, #ops: 0, parent:-]

--Child created id: 258
--Creating new operations for variant [Variant id: 258, #gens: 160, #ops: 0, parent:257]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 3
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java80
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 80, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 258, #gens: 160, #ops: 1, parent:257] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 258
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-258/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(129): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (257(f=1.0), 258(f=1.0), )
Selected to next generation: IDs2--> (257(f=1.0), )
----------Running generation: 130, population size: 1

***** Generation 130 : 0
**Parent Variant: [Variant id: 259, #gens: 160, #ops: 0, parent:-]

--Child created id: 260
--Creating new operations for variant [Variant id: 260, #gens: 160, #ops: 0, parent:259]
---analyzing modificationPoint position: 50
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, signChangeIndex, nextX]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java329
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `x[signChangeIndex] = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 329, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `x[signChangeIndex] = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 260, #gens: 161, #ops: 1, parent:259] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 260
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-260/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(130): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `x[signChangeIndex] = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (259(f=1.0), 260(f=1.0), )
Selected to next generation: IDs2--> (259(f=1.0), )
----------Running generation: 131, population size: 1

***** Generation 131 : 0
**Parent Variant: [Variant id: 261, #gens: 160, #ops: 0, parent:-]

--Child created id: 262
--Creating new operations for variant [Variant id: 262, #gens: 160, #ops: 0, parent:261]
---analyzing modificationPoint position: 8
---modifPoint 0 not mutation generated in  return context.getLocalizedMessage()
---analyzing modificationPoint position: 10
location: BracketingNthOrderBrentSolver.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 262, #gens: 159, #ops: 1, parent:261] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 262
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-262/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(131): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (261(f=1.0), 262(f=2.0), )
Selected to next generation: IDs2--> (261(f=1.0), )
----------Running generation: 132, population size: 1

***** Generation 132 : 0
**Parent Variant: [Variant id: 263, #gens: 160, #ops: 0, parent:-]

--Child created id: 264
--Creating new operations for variant [Variant id: 264, #gens: 160, #ops: 0, parent:263]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax())
---analyzing modificationPoint position: 21
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java177
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 177, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 264, #gens: 160, #ops: 1, parent:263] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 264, errors: [ExceptionContext.java:227: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:227: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:230: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:231: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:232: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:232: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:233: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:249: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:251: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:252: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:253: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:254: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:255: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:256: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:256: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:257: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:258: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:258: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	  ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	        ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                             ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                             ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                         ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                    ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                                           ^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	        ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                             ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                            ^, ExceptionContext.java:286: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                            ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(132): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (263(f=1.0), 264(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (263(f=1.0), )
----------Running generation: 133, population size: 1

***** Generation 133 : 0
**Parent Variant: [Variant id: 265, #gens: 160, #ops: 0, parent:-]

--Child created id: 266
--Creating new operations for variant [Variant id: 266, #gens: 160, #ops: 0, parent:265]
---analyzing modificationPoint position: 27
---modifPoint 0 not mutation generated in  return max
---analyzing modificationPoint position: 26
---modifPoint 1 not mutation generated in  // either the locale is not supported or the resource is unknown // don't translate and fall back to[...]
---analyzing modificationPoint position: 98
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 69, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 266, #gens: 161, #ops: 1, parent:265] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 266, errors: [MathIllegalStateException.java:70: error: call to this must be first statement in constructor
		this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE); 		this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE);
		                                                                             		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(133): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (265(f=1.0), 266(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (265(f=1.0), )
----------Running generation: 134, population size: 1

***** Generation 134 : 0
**Parent Variant: [Variant id: 267, #gens: 160, #ops: 0, parent:-]

--Child created id: 268
--Creating new operations for variant [Variant id: 268, #gens: 160, #ops: 0, parent:267]
---analyzing modificationPoint position: 16
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: ExceptionContext.java172
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int count = 0 ` -topatch--> `final java.lang.StringBuilder sb = new java.lang.StringBuilder()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 172, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int count = 0 ` -topatch--> `final java.lang.StringBuilder sb = new java.lang.StringBuilder()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 268, #gens: 160, #ops: 1, parent:267] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 268, errors: [ExceptionContext.java:172: error: variable sb is already defined in method buildMessage(java.util.Locale,java.lang.String)
		final java.lang.StringBuilder sb = new java.lang.StringBuilder(); 		final java.lang.StringBuilder sb = new java.lang.StringBuilder();
		                                                                  		                              ^, ExceptionContext.java:181: error: cannot find symbol
			if ((++count) < len) {
			       ^
  symbol:   variable count
  location: class org.apache.commons.math.exception.util.ExceptionContext]
Ingredient counter is Zero
---Undoing: gnrtn(134): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int count = 0 ` -topatch--> `final java.lang.StringBuilder sb = new java.lang.StringBuilder()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (267(f=1.0), 268(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (267(f=1.0), )
----------Running generation: 135, population size: 1

***** Generation 135 : 0
**Parent Variant: [Variant id: 269, #gens: 160, #ops: 0, parent:-]

--Child created id: 270
--Creating new operations for variant [Variant id: 270, #gens: 160, #ops: 0, parent:269]
---analyzing modificationPoint position: 7
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax())
---analyzing modificationPoint position: 4
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 270, #gens: 159, #ops: 1, parent:269] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 270
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-270/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(135): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (269(f=1.0), 270(f=2.0), )
Selected to next generation: IDs2--> (269(f=1.0), )
----------Running generation: 136, population size: 1

***** Generation 136 : 0
**Parent Variant: [Variant id: 271, #gens: 160, #ops: 0, parent:-]

--Child created id: 272
--Creating new operations for variant [Variant id: 272, #gens: 160, #ops: 0, parent:271]
---analyzing modificationPoint position: 93
location: BracketingNthOrderBrentSolver.java155
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 272, #gens: 159, #ops: 1, parent:271] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 272
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-272/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(136): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (271(f=1.0), 272(f=3.0), )
Selected to next generation: IDs2--> (271(f=1.0), )
----------Running generation: 137, population size: 1

***** Generation 137 : 0
**Parent Variant: [Variant id: 273, #gens: 160, #ops: 0, parent:-]

--Child created id: 274
--Creating new operations for variant [Variant id: 274, #gens: 160, #ops: 0, parent:273]
---analyzing modificationPoint position: 29
location: BracketingNthOrderBrentSolver.java265
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 274, #gens: 159, #ops: 1, parent:273] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 274
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-274/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58644
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58644
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(137): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (273(f=1.0), 274(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (273(f=1.0), )
----------Running generation: 138, population size: 1

***** Generation 138 : 0
**Parent Variant: [Variant id: 275, #gens: 160, #ops: 0, parent:-]

--Child created id: 276
--Creating new operations for variant [Variant id: 276, #gens: 160, #ops: 0, parent:275]
---analyzing modificationPoint position: 46
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [agingA]
--> var from patch: agingA spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java325
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `agingA = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 325, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `agingA = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 276, #gens: 161, #ops: 1, parent:275] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 276
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-276/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(138): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `agingA = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (275(f=1.0), 276(f=9.0), )
Selected to next generation: IDs2--> (275(f=1.0), )
----------Running generation: 139, population size: 1

***** Generation 139 : 0
**Parent Variant: [Variant id: 277, #gens: 160, #ops: 0, parent:-]

--Child created id: 278
--Creating new operations for variant [Variant id: 278, #gens: 160, #ops: 0, parent:277]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 26
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [sourceFormat]
--> var from patch: sourceFormat spoon.support.reflect.code.CtFieldReadImpl
location: LocalizedFormats.java386
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `return sourceFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.LocalizedFormats line: 386, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `return sourceFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 278, #gens: 161, #ops: 1, parent:277] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 278, errors: [LocalizedFormats.java:387: error: unreachable statement
		return sourceFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(139): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `return sourceFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (277(f=1.0), 278(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (277(f=1.0), )
----------Running generation: 140, population size: 1

***** Generation 140 : 0
**Parent Variant: [Variant id: 279, #gens: 160, #ops: 0, parent:-]

--Child created id: 280
--Creating new operations for variant [Variant id: 280, #gens: 160, #ops: 0, parent:279]
---analyzing modificationPoint position: 4
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 17
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 1 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 124
location: BaseAbstractUnivariateRealSolver.java95
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 280, #gens: 159, #ops: 1, parent:279] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 280, errors: [BaseAbstractUnivariateRealSolver.java:97: error: variable functionValueAccuracy might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(140): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (279(f=1.0), 280(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (279(f=1.0), )
----------Running generation: 141, population size: 1

***** Generation 141 : 0
**Parent Variant: [Variant id: 281, #gens: 160, #ops: 0, parent:-]

--Child created id: 282
--Creating new operations for variant [Variant id: 282, #gens: 160, #ops: 0, parent:281]
---analyzing modificationPoint position: 96
location: BracketingNthOrderBrentSolver.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 282, #gens: 159, #ops: 1, parent:281] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 282, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex might not have been initialized
		double xA = x[signChangeIndex - 1];
		              ^, BracketingNthOrderBrentSolver.java:248: error: variable nbPoints might not have been initialized
			int end = nbPoints;
			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(141): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (281(f=1.0), 282(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (281(f=1.0), )
----------Running generation: 142, population size: 1

***** Generation 142 : 0
**Parent Variant: [Variant id: 283, #gens: 160, #ops: 0, parent:-]

--Child created id: 284
--Creating new operations for variant [Variant id: 284, #gens: 160, #ops: 0, parent:283]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 1 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 14
---modifPoint 2 not mutation generated in  return buildMessage(locale, ": ")
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 3 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 67
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, nbPoints, signChangeIndex, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java233
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if ((y[1] * y[2]) < 0) { 	// use all computed point as a start sampling array for solving 	nbPoints [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 233, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if ((y[1] * y[2]) < 0) { 	// use all computed point as a start sampling array for solving 	nbPoints [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 284, #gens: 160, #ops: 1, parent:283] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 284, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(142): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `if ((y[1] * y[2]) < 0) { 	// use all computed point as a start sampling array for solving 	nbPoints [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (283(f=1.0), 284(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (283(f=1.0), )
----------Running generation: 143, population size: 1

***** Generation 143 : 0
**Parent Variant: [Variant id: 285, #gens: 160, #ops: 0, parent:-]

--Child created id: 286
--Creating new operations for variant [Variant id: 286, #gens: 160, #ops: 0, parent:285]
---analyzing modificationPoint position: 96
location: BracketingNthOrderBrentSolver.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 286, #gens: 159, #ops: 1, parent:285] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 286, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex might not have been initialized
		double xA = x[signChangeIndex - 1];
		              ^, BracketingNthOrderBrentSolver.java:248: error: variable nbPoints might not have been initialized
			int end = nbPoints;
			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(143): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (285(f=1.0), 286(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (285(f=1.0), )
----------Running generation: 144, population size: 1

***** Generation 144 : 0
**Parent Variant: [Variant id: 287, #gens: 160, #ops: 0, parent:-]

--Child created id: 288
--Creating new operations for variant [Variant id: 288, #gens: 160, #ops: 0, parent:287]
---analyzing modificationPoint position: 97
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldWriteImpl
location: MathIllegalStateException.java74
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context ` -topatch--> `context = new org.apache.commons.math.exception.util.ExceptionContext(this)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 74, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context ` -topatch--> `context = new org.apache.commons.math.exception.util.ExceptionContext(this)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 288, #gens: 161, #ops: 1, parent:287] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 288, errors: [MathIllegalStateException.java:75: error: cannot assign a value to final variable context
	 */ 	public org.apache.commons.math.exception.util.ExceptionContext getContext() { 		context = new org.apache.commons.math.exception.util.ExceptionContext(this); 		return context;
	    	                                                                              		^]
Ingredient counter is Zero
---Undoing: gnrtn(144): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context ` -topatch--> `context = new org.apache.commons.math.exception.util.ExceptionContext(this)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (287(f=1.0), 288(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (287(f=1.0), )
----------Running generation: 145, population size: 1

***** Generation 145 : 0
**Parent Variant: [Variant id: 289, #gens: 160, #ops: 0, parent:-]

--Child created id: 290
--Creating new operations for variant [Variant id: 290, #gens: 160, #ops: 0, parent:289]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 91
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  verifySequence(x[0], x[1], x[2])
---analyzing modificationPoint position: 60
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java201
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 201, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 290, #gens: 160, #ops: 1, parent:289] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 290, errors: [BracketingNthOrderBrentSolver.java:236: error: <identifier> expected
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;
				       ^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			  ^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(145): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingA = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (289(f=1.0), 290(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (289(f=1.0), )
----------Running generation: 146, population size: 1

***** Generation 146 : 0
**Parent Variant: [Variant id: 291, #gens: 160, #ops: 0, parent:-]

--Child created id: 292
--Creating new operations for variant [Variant id: 292, #gens: 160, #ops: 0, parent:291]
---analyzing modificationPoint position: 19
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i)
---analyzing modificationPoint position: 53
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java55
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 55, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 292, #gens: 161, #ops: 1, parent:291] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 292
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-292/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(146): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (291(f=1.0), 292(f=1.0), )
Selected to next generation: IDs2--> (291(f=1.0), )
----------Running generation: 147, population size: 1

***** Generation 147 : 0
**Parent Variant: [Variant id: 293, #gens: 160, #ops: 0, parent:-]

--Child created id: 294
--Creating new operations for variant [Variant id: 294, #gens: 160, #ops: 0, parent:293]
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 28
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS spoon.support.reflect.code.CtFieldReadImpl
location: TooManyEvaluationsException.java38
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.TooManyEvaluationsException line: 38, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 294, #gens: 160, #ops: 1, parent:293] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 294
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-294/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(147): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (293(f=1.0), 294(f=1.0), )
Selected to next generation: IDs2--> (293(f=1.0), )
----------Running generation: 148, population size: 1

***** Generation 148 : 0
**Parent Variant: [Variant id: 295, #gens: 160, #ops: 0, parent:-]

--Child created id: 296
--Creating new operations for variant [Variant id: 296, #gens: 160, #ops: 0, parent:295]
---analyzing modificationPoint position: 71
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, nbPoints, signChangeIndex, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java247
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 247, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 296, #gens: 161, #ops: 1, parent:295] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 296, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(148): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int end = nbPoints ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (295(f=1.0), 296(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (295(f=1.0), )
----------Running generation: 149, population size: 1

***** Generation 149 : 0
**Parent Variant: [Variant id: 297, #gens: 160, #ops: 0, parent:-]

--Child created id: 298
--Creating new operations for variant [Variant id: 298, #gens: 160, #ops: 0, parent:297]
---analyzing modificationPoint position: 90
location: BracketingNthOrderBrentSolver.java150
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 298, #gens: 159, #ops: 1, parent:297] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 298
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-298/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 11, was successful: false, cases executed: 15] ,[]
-Valid?: |false|11|15|[]|, fitness 11.0
Ingredient counter is Zero
---Undoing: gnrtn(149): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (297(f=1.0), 298(f=11.0), )
Selected to next generation: IDs2--> (297(f=1.0), )
----------Running generation: 150, population size: 1

***** Generation 150 : 0
**Parent Variant: [Variant id: 299, #gens: 160, #ops: 0, parent:-]

--Child created id: 300
--Creating new operations for variant [Variant id: 300, #gens: 160, #ops: 0, parent:299]
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax())
---analyzing modificationPoint position: 152
location: ArgUtils.java44
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object o : array) { 	if (o instanceof java.lang.Object[]) { 		for (java.lang.Object o[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 300, #gens: 159, #ops: 1, parent:299] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 300
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-300/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(150): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object o : array) { 	if (o instanceof java.lang.Object[]) { 		for (java.lang.Object o[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (299(f=1.0), 300(f=1.0), )
Selected to next generation: IDs2--> (299(f=1.0), )
----------Running generation: 151, population size: 1

***** Generation 151 : 0
**Parent Variant: [Variant id: 301, #gens: 160, #ops: 0, parent:-]

--Child created id: 302
--Creating new operations for variant [Variant id: 302, #gens: 160, #ops: 0, parent:301]
---analyzing modificationPoint position: 39
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 302, #gens: 161, #ops: 1, parent:301] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 302, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(151): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (301(f=1.0), 302(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (301(f=1.0), )
----------Running generation: 152, population size: 1

***** Generation 152 : 0
**Parent Variant: [Variant id: 303, #gens: 160, #ops: 0, parent:-]

--Child created id: 304
--Creating new operations for variant [Variant id: 304, #gens: 160, #ops: 0, parent:303]
---analyzing modificationPoint position: 33
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [y, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 295, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 304, #gens: 160, #ops: 1, parent:303] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 304
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-304/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 8, was successful: false, cases executed: 15] ,[]
-Valid?: |false|8|15|[]|, fitness 8.0
Ingredient counter is Zero
---Undoing: gnrtn(152): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (303(f=1.0), 304(f=8.0), )
Selected to next generation: IDs2--> (303(f=1.0), )
----------Running generation: 153, population size: 1

***** Generation 153 : 0
**Parent Variant: [Variant id: 305, #gens: 160, #ops: 0, parent:-]

--Child created id: 306
--Creating new operations for variant [Variant id: 306, #gens: 160, #ops: 0, parent:305]
---analyzing modificationPoint position: 44
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xA, nextX]
--> var from patch: xA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java320
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++nbPoints ` -topatch--> `// the sign change occurs after the inserted point xA = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 320, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++nbPoints ` -topatch--> `// the sign change occurs after the inserted point xA = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 306, #gens: 161, #ops: 1, parent:305] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 306
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-306/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 7, was successful: false, cases executed: 15] ,[]
-Valid?: |false|7|15|[]|, fitness 7.0
Ingredient counter is Zero
---Undoing: gnrtn(153): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++nbPoints ` -topatch--> `// the sign change occurs after the inserted point xA = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (305(f=1.0), 306(f=7.0), )
Selected to next generation: IDs2--> (305(f=1.0), )
----------Running generation: 154, population size: 1

***** Generation 154 : 0
**Parent Variant: [Variant id: 307, #gens: 160, #ops: 0, parent:-]

--Child created id: 308
--Creating new operations for variant [Variant id: 308, #gens: 160, #ops: 0, parent:307]
---analyzing modificationPoint position: 52
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java54
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 54, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 308, #gens: 161, #ops: 1, parent:307] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 308, errors: [MaxCountExceededException.java:55: error: call to this must be first statement in constructor
		getContext().addMessage(specific, max, args); 		this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max);
		                                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(154): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (307(f=1.0), 308(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (307(f=1.0), )
----------Running generation: 155, population size: 1

***** Generation 155 : 0
**Parent Variant: [Variant id: 309, #gens: 160, #ops: 0, parent:-]

--Child created id: 310
--Creating new operations for variant [Variant id: 310, #gens: 160, #ops: 0, parent:309]
---analyzing modificationPoint position: 15
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java171
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 171, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 310, #gens: 160, #ops: 1, parent:309] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 310, errors: [ExceptionContext.java:227: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:227: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:230: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:231: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:232: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:232: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:233: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:249: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:251: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:252: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:253: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:254: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:255: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:256: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:256: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:257: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:258: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:258: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	  ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	        ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                             ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                             ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                         ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                    ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                                           ^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	        ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                             ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                            ^, ExceptionContext.java:286: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                            ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(155): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (309(f=1.0), 310(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (309(f=1.0), )
----------Running generation: 156, population size: 1

***** Generation 156 : 0
**Parent Variant: [Variant id: 311, #gens: 160, #ops: 0, parent:-]

--Child created id: 312
--Creating new operations for variant [Variant id: 312, #gens: 160, #ops: 0, parent:311]
---analyzing modificationPoint position: 25
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@addf3083, search space size: 1
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 32
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 312, #gens: 159, #ops: 1, parent:311] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 312
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-312/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(156): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (311(f=1.0), 312(f=9.0), )
Selected to next generation: IDs2--> (311(f=1.0), )
----------Running generation: 157, population size: 1

***** Generation 157 : 0
**Parent Variant: [Variant id: 313, #gens: 160, #ops: 0, parent:-]

--Child created id: 314
--Creating new operations for variant [Variant id: 314, #gens: 160, #ops: 0, parent:313]
---analyzing modificationPoint position: 47
location: BracketingNthOrderBrentSolver.java326
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 314, #gens: 159, #ops: 1, parent:313] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 314
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-314/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(157): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (313(f=1.0), 314(f=4.0), )
Selected to next generation: IDs2--> (313(f=1.0), )
----------Running generation: 158, population size: 1

***** Generation 158 : 0
**Parent Variant: [Variant id: 315, #gens: 160, #ops: 0, parent:-]

--Child created id: 316
--Creating new operations for variant [Variant id: 316, #gens: 160, #ops: 0, parent:315]
---analyzing modificationPoint position: 140
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (a < b) { 	return b; }
---analyzing modificationPoint position: 47
location: BracketingNthOrderBrentSolver.java326
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 316, #gens: 159, #ops: 1, parent:315] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 316
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-316/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(158): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `yB = nextY ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (315(f=1.0), 316(f=4.0), )
Selected to next generation: IDs2--> (315(f=1.0), )
----------Running generation: 159, population size: 1

***** Generation 159 : 0
**Parent Variant: [Variant id: 317, #gens: 160, #ops: 0, parent:-]

--Child created id: 318
--Creating new operations for variant [Variant id: 318, #gens: 160, #ops: 0, parent:317]
---analyzing modificationPoint position: 72
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
Attempts Base Ingredients  2 total 106
Attempts Base Ingredients  3 total 106
vars from patch [org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER]
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 318, #gens: 161, #ops: 1, parent:317] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 318, errors: [BracketingNthOrderBrentSolver.java:248: error: call to this must be first statement in constructor
			int end = nbPoints; 			this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER);
			                    			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(159): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (317(f=1.0), 318(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (317(f=1.0), )
----------Running generation: 160, population size: 1

***** Generation 160 : 0
**Parent Variant: [Variant id: 319, #gens: 160, #ops: 0, parent:-]

--Child created id: 320
--Creating new operations for variant [Variant id: 320, #gens: 160, #ops: 0, parent:319]
---analyzing modificationPoint position: 72
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 320, #gens: 159, #ops: 1, parent:319] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 320
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-320/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(160): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (319(f=1.0), 320(f=4.0), )
Selected to next generation: IDs2--> (319(f=1.0), )
----------Running generation: 161, population size: 1

***** Generation 161 : 0
**Parent Variant: [Variant id: 321, #gens: 160, #ops: 0, parent:-]

--Child created id: 322
--Creating new operations for variant [Variant id: 322, #gens: 160, #ops: 0, parent:321]
---analyzing modificationPoint position: 51
location: MaxCountExceededException.java42
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 322, #gens: 159, #ops: 1, parent:321] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 322, errors: [MaxCountExceededException.java:44: error: variable max might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(161): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (321(f=1.0), 322(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (321(f=1.0), )
----------Running generation: 162, population size: 1

***** Generation 162 : 0
**Parent Variant: [Variant id: 323, #gens: 160, #ops: 0, parent:-]

--Child created id: 324
--Creating new operations for variant [Variant id: 324, #gens: 160, #ops: 0, parent:323]
---analyzing modificationPoint position: 38
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [nextY, yA, xB, nextX, yB, absYB, agingA, agingB, xA, absYA, signChangeIndex]
--> var from patch: nextY spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: absYB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: agingA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: agingB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: absYA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 290, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 324, #gens: 160, #ops: 1, parent:323] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 324, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(162): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (323(f=1.0), 324(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (323(f=1.0), )
----------Running generation: 163, population size: 1

***** Generation 163 : 0
**Parent Variant: [Variant id: 325, #gens: 160, #ops: 0, parent:-]

--Child created id: 326
--Creating new operations for variant [Variant id: 326, #gens: 160, #ops: 0, parent:325]
---analyzing modificationPoint position: 48
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [end, signChangeIndex]
--> var from patch: end spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `end = signChangeIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `end = signChangeIndex` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 326, #gens: 160, #ops: 1, parent:325] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 326
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-326/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(163): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `end = signChangeIndex` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (325(f=1.0), 326(f=2.0), )
Selected to next generation: IDs2--> (325(f=1.0), )
----------Running generation: 164, population size: 1

***** Generation 164 : 0
**Parent Variant: [Variant id: 327, #gens: 160, #ops: 0, parent:-]

--Child created id: 328
--Creating new operations for variant [Variant id: 328, #gens: 160, #ops: 0, parent:327]
---analyzing modificationPoint position: 15
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final java.lang.StringBuilder sb = new java.lang.StringBuilder()
---analyzing modificationPoint position: 48
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 328, #gens: 159, #ops: 1, parent:327] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 328
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-328/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(164): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (327(f=1.0), 328(f=2.0), )
Selected to next generation: IDs2--> (327(f=1.0), )
----------Running generation: 165, population size: 1

***** Generation 165 : 0
**Parent Variant: [Variant id: 329, #gens: 160, #ops: 0, parent:-]

--Child created id: 330
--Creating new operations for variant [Variant id: 330, #gens: 160, #ops: 0, parent:329]
---analyzing modificationPoint position: 20
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = context.keySet().size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 176, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = context.keySet().size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 330, #gens: 160, #ops: 1, parent:329] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 330, errors: [ExceptionContext.java:289: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:289: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:289: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:289: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:289: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:291: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:291: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:292: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:293: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:294: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:294: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:294: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:294: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:295: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:295: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:295: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:295: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:295: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:295: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:295: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:304: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:304: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:304: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:304: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:311: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:311: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:311: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:311: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:311: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:311: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:313: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:313: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:313: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:313: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:313: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:313: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:313: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:313: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:314: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:315: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:316: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:317: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:318: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:318: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:318: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:318: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:319: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:320: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:320: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:320: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:320: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:321: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	  ^, ExceptionContext.java:321: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	^, ExceptionContext.java:321: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	        ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:321: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:321: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                    ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                                           ^, ExceptionContext.java:323: error: illegal start of expression
	 * Serialize {@link #context}.
	 ^, ExceptionContext.java:323: error: ';' expected
	 * Serialize {@link #context}.
	            ^, ExceptionContext.java:323: error: illegal character: '#'
	 * Serialize {@link #context}.
	                    ^, ExceptionContext.java:323: error: illegal start of type
	 * Serialize {@link #context}.
	                            ^, ExceptionContext.java:323: error: ';' expected
	 * Serialize {@link #context}.
	                             ^, ExceptionContext.java:324: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:325: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:326: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:327: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:328: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:328: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:328: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:328: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:329: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	  ^, ExceptionContext.java:329: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	^, ExceptionContext.java:329: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	        ^, ExceptionContext.java:329: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                             ^, ExceptionContext.java:329: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                            ^, ExceptionContext.java:329: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                            ^, ExceptionContext.java:329: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                                        ^, ExceptionContext.java:330: error: illegal start of expression
	 * Deserialize {@link #context}.
	 ^, ExceptionContext.java:330: error: ';' expected
	 * Deserialize {@link #context}.
	              ^, ExceptionContext.java:330: error: illegal character: '#'
	 * Deserialize {@link #context}.
	                      ^, ExceptionContext.java:330: error: illegal start of type
	 * Deserialize {@link #context}.
	                              ^, ExceptionContext.java:330: error: ';' expected
	 * Deserialize {@link #context}.
	                               ^, ExceptionContext.java:331: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:332: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:333: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:334: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:335: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:335: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:335: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:335: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:336: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:337: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:337: error: ';' expected
	 * 		This should never happen.
	   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(165): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `// Step 1. final int len = context.keySet().size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (329(f=1.0), 330(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (329(f=1.0), )
----------Running generation: 166, population size: 1

***** Generation 166 : 0
**Parent Variant: [Variant id: 331, #gens: 160, #ops: 0, parent:-]

--Child created id: 332
--Creating new operations for variant [Variant id: 332, #gens: 160, #ops: 0, parent:331]
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 59
---modifPoint 1 not mutation generated in  double absYA = org.apache.commons.math.util.FastMath.abs(yA)
---analyzing modificationPoint position: 13
---modifPoint 2 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 4
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 3 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 38
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [xB, xA, xTol, absYA, absYB, allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE, yA, org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE]
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTol spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: allowed spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 290, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 332, #gens: 160, #ops: 1, parent:331] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 332
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-332/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(166): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (331(f=1.0), 332(f=9.0), )
Selected to next generation: IDs2--> (331(f=1.0), )
----------Running generation: 167, population size: 1

***** Generation 167 : 0
**Parent Variant: [Variant id: 333, #gens: 160, #ops: 0, parent:-]

--Child created id: 334
--Creating new operations for variant [Variant id: 334, #gens: 160, #ops: 0, parent:333]
---analyzing modificationPoint position: 53
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 0 not mutation generated in  this.max = max
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 334, #gens: 160, #ops: 1, parent:333] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 334, errors: [BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:255: error: cannot find symbol
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:270: error: cannot find symbol
					nextX = java.lang.Double.NaN;
					^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:274: error: cannot find symbol
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:276: error: cannot find symbol
			if (java.lang.Double.isNaN(nextX)) {
			                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:278: error: cannot find symbol
				nextX = xA + (0.5 * (xB - xA));
				^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:284: error: cannot find symbol
			final double nextY = computeObjectiveValue(nextX);
			                                           ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:288: error: cannot find symbol
				return nextX;
				       ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:318: error: cannot find symbol
			x[signChangeIndex] = nextX;
			                     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:326: error: cannot find symbol
				xB = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:333: error: cannot find symbol
				xA = nextX;
				     ^
  symbol:   variable nextX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(167): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// current tightest bracketing of the root double xA = x[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (333(f=1.0), 334(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (333(f=1.0), )
----------Running generation: 168, population size: 1

***** Generation 168 : 0
**Parent Variant: [Variant id: 335, #gens: 160, #ops: 0, parent:-]

--Child created id: 336
--Creating new operations for variant [Variant id: 336, #gens: 160, #ops: 0, parent:335]
---analyzing modificationPoint position: 0
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 336, #gens: 160, #ops: 1, parent:335] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 336, errors: [BracketingNthOrderBrentSolver.java:230: error: variable agingA is already defined in method doSolve()
			} 			int agingA = 0;
			  			    ^, BracketingNthOrderBrentSolver.java:236: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:242: error: cannot find symbol
				targetY = 0;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(168): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (335(f=1.0), 336(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (335(f=1.0), )
----------Running generation: 169, population size: 1

***** Generation 169 : 0
**Parent Variant: [Variant id: 337, #gens: 160, #ops: 0, parent:-]

--Child created id: 338
--Creating new operations for variant [Variant id: 338, #gens: 160, #ops: 0, parent:337]
---analyzing modificationPoint position: 67
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xA, xB]
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 233, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 338, #gens: 161, #ops: 1, parent:337] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 338
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-338/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(169): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (337(f=1.0), 338(f=1.0), )
Selected to next generation: IDs2--> (337(f=1.0), )
----------Running generation: 170, population size: 1

***** Generation 170 : 0
**Parent Variant: [Variant id: 339, #gens: 160, #ops: 0, parent:-]

--Child created id: 340
--Creating new operations for variant [Variant id: 340, #gens: 160, #ops: 0, parent:339]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 128
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 2 not mutation generated in  long xInt = java.lang.Double.doubleToLongBits(x)
---analyzing modificationPoint position: 11
---modifPoint 3 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 109
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMin ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMin ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 340, #gens: 160, #ops: 1, parent:339] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 340
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-340/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 10, was successful: false, cases executed: 15] ,[]
-Valid?: |false|10|15|[]|, fitness 10.0
Ingredient counter is Zero
---Undoing: gnrtn(170): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMin ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (339(f=1.0), 340(f=10.0), )
Selected to next generation: IDs2--> (339(f=1.0), )
----------Running generation: 171, population size: 1

***** Generation 171 : 0
**Parent Variant: [Variant id: 341, #gens: 160, #ops: 0, parent:-]

--Child created id: 342
--Creating new operations for variant [Variant id: 342, #gens: 160, #ops: 0, parent:341]
---analyzing modificationPoint position: 67
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 17
---modifPoint 1 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 22
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgPatterns, len]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: len spoon.support.reflect.code.CtVariableReadImpl
location: ExceptionContext.java179
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 179, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 342, #gens: 161, #ops: 1, parent:341] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 342, errors: [ExceptionContext.java:262: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:262: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:262: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:262: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:262: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:264: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:264: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:265: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:266: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:267: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:267: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:267: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:267: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:268: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:268: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:268: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:268: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:268: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:268: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:268: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:277: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:277: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:277: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:277: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:277: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:277: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:277: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:277: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:284: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:284: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:284: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:284: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:284: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:284: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:286: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:286: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:286: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:286: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:286: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:286: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:286: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:286: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:287: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:288: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:289: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:290: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:291: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:291: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:291: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:291: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:292: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:293: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:293: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:293: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:293: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:294: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	  ^, ExceptionContext.java:294: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	^, ExceptionContext.java:294: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	        ^, ExceptionContext.java:294: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                ^, ExceptionContext.java:294: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:294: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:294: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:294: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                    ^, ExceptionContext.java:294: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                                           ^, ExceptionContext.java:296: error: illegal start of expression
	 * Serialize {@link #context}.
	 ^, ExceptionContext.java:296: error: ';' expected
	 * Serialize {@link #context}.
	            ^, ExceptionContext.java:296: error: illegal character: '#'
	 * Serialize {@link #context}.
	                    ^, ExceptionContext.java:296: error: illegal start of type
	 * Serialize {@link #context}.
	                            ^, ExceptionContext.java:296: error: ';' expected
	 * Serialize {@link #context}.
	                             ^, ExceptionContext.java:297: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:298: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:299: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:300: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:301: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:301: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:301: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:301: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:302: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	  ^, ExceptionContext.java:302: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	    	^, ExceptionContext.java:302: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	    	        ^, ExceptionContext.java:302: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	    	                             ^, ExceptionContext.java:302: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	    	                                                            ^, ExceptionContext.java:302: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	    	                                                                            ^, ExceptionContext.java:302: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}}
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(171): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (341(f=1.0), 342(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (341(f=1.0), )
----------Running generation: 172, population size: 1

***** Generation 172 : 0
**Parent Variant: [Variant id: 343, #gens: 160, #ops: 0, parent:-]

--Child created id: 344
--Creating new operations for variant [Variant id: 344, #gens: 160, #ops: 0, parent:343]
---analyzing modificationPoint position: 129
---modifPoint 0 not mutation generated in  long yInt = java.lang.Double.doubleToLongBits(y)
---analyzing modificationPoint position: 133
---modifPoint 1 not mutation generated in  return (isEqual && (!java.lang.Double.isNaN(x))) && (!java.lang.Double.isNaN(y))
---analyzing modificationPoint position: 18
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 2 not mutation generated in  for (int i = 0; i < len; i++) { 	final org.apache.commons.math.exception.util.Localizable pat = msgP[...]
---analyzing modificationPoint position: 3
---modifPoint 3 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 108
---modifPoint 4 not mutation generated in  // Perform computation. return doSolve()
---analyzing modificationPoint position: 92
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 5 not mutation generated in  // evaluate initial guess y[1] = computeObjectiveValue(x[1])
---analyzing modificationPoint position: 0
---modifPoint 6 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 27
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 1
---modifPoint 7 not mutation generated in  return max
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java296
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 296, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 344, #gens: 161, #ops: 1, parent:343] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child does NOT compile: 344, errors: [BaseAbstractUnivariateRealSolver.java:297: error: unreachable statement
			throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()); 			evaluations.incrementCount();
			                                                                                     			^]
Ingredient counter is Zero
---Undoing: gnrtn(172): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (343(f=1.0), 344(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (343(f=1.0), )
----------Running generation: 173, population size: 1

***** Generation 173 : 0
**Parent Variant: [Variant id: 345, #gens: 160, #ops: 0, parent:-]

--Child created id: 346
--Creating new operations for variant [Variant id: 346, #gens: 160, #ops: 0, parent:345]
---analyzing modificationPoint position: 6
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [msgPatterns, pat]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pat spoon.support.reflect.code.CtVariableReadImpl
location: ExceptionContext.java182
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `msgPatterns.add(pat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 182, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `msgPatterns.add(pat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 346, #gens: 160, #ops: 1, parent:345] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 346, errors: [ExceptionContext.java:292: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:292: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:292: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:292: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:292: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:292: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:292: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:292: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:293: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:294: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:295: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:296: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:297: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:297: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:297: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:297: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:298: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:299: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:299: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:299: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:299: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:300: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	  ^, ExceptionContext.java:300: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	^, ExceptionContext.java:300: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	        ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:300: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:300: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                    ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                                           ^, ExceptionContext.java:302: error: illegal start of expression
	 * Serialize {@link #context}.
	 ^, ExceptionContext.java:302: error: ';' expected
	 * Serialize {@link #context}.
	            ^, ExceptionContext.java:302: error: illegal character: '#'
	 * Serialize {@link #context}.
	                    ^, ExceptionContext.java:302: error: illegal start of type
	 * Serialize {@link #context}.
	                            ^, ExceptionContext.java:302: error: ';' expected
	 * Serialize {@link #context}.
	                             ^, ExceptionContext.java:303: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:304: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:305: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:306: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:307: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:307: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:307: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:307: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:308: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	  ^, ExceptionContext.java:308: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	^, ExceptionContext.java:308: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	        ^, ExceptionContext.java:308: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                             ^, ExceptionContext.java:308: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                            ^, ExceptionContext.java:308: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                            ^, ExceptionContext.java:308: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                                        ^, ExceptionContext.java:309: error: illegal start of expression
	 * Deserialize {@link #context}.
	 ^, ExceptionContext.java:309: error: ';' expected
	 * Deserialize {@link #context}.
	              ^, ExceptionContext.java:309: error: illegal character: '#'
	 * Deserialize {@link #context}.
	                      ^, ExceptionContext.java:309: error: illegal start of type
	 * Deserialize {@link #context}.
	                              ^, ExceptionContext.java:309: error: ';' expected
	 * Deserialize {@link #context}.
	                               ^, ExceptionContext.java:310: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:311: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:312: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:313: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:314: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:314: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:314: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:314: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:315: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:316: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:316: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:316: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:316: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:317: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	  ^, ExceptionContext.java:317: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	^, ExceptionContext.java:317: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	        ^, ExceptionContext.java:317: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	                               ^, ExceptionContext.java:317: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	                                                            ^, ExceptionContext.java:317: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	                                                                            ^, ExceptionContext.java:317: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	                                                                                        ^, ExceptionContext.java:317: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	                                                                                                   ^, ExceptionContext.java:317: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		context = new java.util.HashMap<java.lang.String, java.lang.Object>(); 		for (int i = 0; i < len; i++) {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(173): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `msgPatterns.add(pat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (345(f=1.0), 346(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (345(f=1.0), )
----------Running generation: 174, population size: 1

***** Generation 174 : 0
**Parent Variant: [Variant id: 347, #gens: 160, #ops: 0, parent:-]

--Child created id: 348
--Creating new operations for variant [Variant id: 348, #gens: 160, #ops: 0, parent:347]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 348, #gens: 161, #ops: 1, parent:347] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 348
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-348/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(174): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (347(f=1.0), 348(f=1.0), )
Selected to next generation: IDs2--> (347(f=1.0), )
----------Running generation: 175, population size: 1

***** Generation 175 : 0
**Parent Variant: [Variant id: 349, #gens: 160, #ops: 0, parent:-]

--Child created id: 350
--Creating new operations for variant [Variant id: 350, #gens: 160, #ops: 0, parent:349]
---analyzing modificationPoint position: 9
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 58
---modifPoint 1 not mutation generated in  double yA = y[signChangeIndex - 1]
---analyzing modificationPoint position: 71
---modifPoint 2 not mutation generated in  int end = nbPoints
---analyzing modificationPoint position: 26
---modifPoint 3 not mutation generated in  // either the locale is not supported or the resource is unknown // don't translate and fall back to[...]
---analyzing modificationPoint position: 35
location: BracketingNthOrderBrentSolver.java297
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 350, #gens: 159, #ops: 1, parent:349] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 350
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-350/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(175): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (349(f=1.0), 350(f=3.0), )
Selected to next generation: IDs2--> (349(f=1.0), )
----------Running generation: 176, population size: 1

***** Generation 176 : 0
**Parent Variant: [Variant id: 351, #gens: 160, #ops: 0, parent:-]

--Child created id: 352
--Creating new operations for variant [Variant id: 352, #gens: 160, #ops: 0, parent:351]
---analyzing modificationPoint position: 68
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 10
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 96
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java169
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 169, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 352, #gens: 161, #ops: 1, parent:351] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 352, errors: [BracketingNthOrderBrentSolver.java:274: error: illegal start of type
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			  ^, BracketingNthOrderBrentSolver.java:274: error: <identifier> expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                               ^, BracketingNthOrderBrentSolver.java:274: error: ';' expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                ^, BracketingNthOrderBrentSolver.java:274: error: illegal start of type
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                     ^, BracketingNthOrderBrentSolver.java:274: error: <identifier> expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                      ^, BracketingNthOrderBrentSolver.java:274: error: illegal start of type
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                           ^, BracketingNthOrderBrentSolver.java:274: error: ')' expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                            ^, BracketingNthOrderBrentSolver.java:274: error: ';' expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                               ^, BracketingNthOrderBrentSolver.java:274: error: <identifier> expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                       ^, BracketingNthOrderBrentSolver.java:274: error: illegal start of type
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                         ^, BracketingNthOrderBrentSolver.java:274: error: <identifier> expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                          ^, BracketingNthOrderBrentSolver.java:274: error: ';' expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                            ^, BracketingNthOrderBrentSolver.java:274: error: illegal start of type
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                              ^, BracketingNthOrderBrentSolver.java:274: error: <identifier> expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                               ^, BracketingNthOrderBrentSolver.java:274: error: ';' expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			                                                                ^, BracketingNthOrderBrentSolver.java:276: error: illegal start of type
			if (java.lang.Double.isNaN(nextX)) {
			   ^, BracketingNthOrderBrentSolver.java:276: error: ';' expected
			if (java.lang.Double.isNaN(nextX)) {
			        ^, BracketingNthOrderBrentSolver.java:276: error: <identifier> expected
			if (java.lang.Double.isNaN(nextX)) {
			                          ^, BracketingNthOrderBrentSolver.java:276: error: <identifier> expected
			if (java.lang.Double.isNaN(nextX)) {
			                                ^, BracketingNthOrderBrentSolver.java:276: error: ';' expected
			if (java.lang.Double.isNaN(nextX)) {
			                                 ^, BracketingNthOrderBrentSolver.java:285: error: illegal start of type
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:285: error: <identifier> expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                 ^, BracketingNthOrderBrentSolver.java:285: error: ';' expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                  ^, BracketingNthOrderBrentSolver.java:285: error: illegal start of type
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                       ^, BracketingNthOrderBrentSolver.java:285: error: <identifier> expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                        ^, BracketingNthOrderBrentSolver.java:285: error: <identifier> expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                             ^, BracketingNthOrderBrentSolver.java:285: error: illegal start of type
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                               ^, BracketingNthOrderBrentSolver.java:285: error: <identifier> expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                                ^, BracketingNthOrderBrentSolver.java:285: error: ';' expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			                                                                 ^, BracketingNthOrderBrentSolver.java:288: error: illegal start of type
				return nextX;
				^, BracketingNthOrderBrentSolver.java:291: error: class, interface, or enum expected
			if ((nbPoints > 2) && ((end - start) != nbPoints)) {
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(176): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (351(f=1.0), 352(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (351(f=1.0), )
----------Running generation: 177, population size: 1

***** Generation 177 : 0
**Parent Variant: [Variant id: 353, #gens: 160, #ops: 0, parent:-]

--Child created id: 354
--Creating new operations for variant [Variant id: 354, #gens: 160, #ops: 0, parent:353]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 10
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 12
location: BracketingNthOrderBrentSolver.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 354, #gens: 159, #ops: 1, parent:353] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 354
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-354/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(177): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (353(f=1.0), 354(f=2.0), )
Selected to next generation: IDs2--> (353(f=1.0), )
----------Running generation: 178, population size: 1

***** Generation 178 : 0
**Parent Variant: [Variant id: 355, #gens: 160, #ops: 0, parent:-]

--Child created id: 356
--Creating new operations for variant [Variant id: 356, #gens: 160, #ops: 0, parent:355]
---analyzing modificationPoint position: 53
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  this.max = max
---analyzing modificationPoint position: 109
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMin ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMin ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 356, #gens: 161, #ops: 1, parent:355] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 356, errors: [BaseAbstractUnivariateRealSolver.java:111: error: unreachable statement
	 */ 	public double getMin() { 		return evaluations.getCount(); 		return searchMin;
	    	                         		                               		^]
Ingredient counter is Zero
---Undoing: gnrtn(178): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return searchMin ` -topatch--> `return evaluations.getCount()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (355(f=1.0), 356(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (355(f=1.0), )
----------Running generation: 179, population size: 1

***** Generation 179 : 0
**Parent Variant: [Variant id: 357, #gens: 160, #ops: 0, parent:-]

--Child created id: 358
--Creating new operations for variant [Variant id: 358, #gens: 160, #ops: 0, parent:357]
---analyzing modificationPoint position: 30
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: Incrementor.java65
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.MaxCountExceededException(max) ` -topatch--> `throw new org.apache.commons.math.exception.MaxCountExceededException(max)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.util.Incrementor line: 65, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.MaxCountExceededException(max) ` -topatch--> `throw new org.apache.commons.math.exception.MaxCountExceededException(max)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 358, #gens: 160, #ops: 1, parent:357] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 358
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-358/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(179): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.MaxCountExceededException(max) ` -topatch--> `throw new org.apache.commons.math.exception.MaxCountExceededException(max)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (357(f=1.0), 358(f=1.0), )
Selected to next generation: IDs2--> (357(f=1.0), )
----------Running generation: 180, population size: 1

***** Generation 180 : 0
**Parent Variant: [Variant id: 359, #gens: 160, #ops: 0, parent:-]

--Child created id: 360
--Creating new operations for variant [Variant id: 360, #gens: 160, #ops: 0, parent:359]
---analyzing modificationPoint position: 13
---modifPoint 0 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 12
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 67
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 90
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java150
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 150, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 360, #gens: 160, #ops: 1, parent:359] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 360, errors: [BracketingNthOrderBrentSolver.java:165: error: illegal start of type
			return x[0];
			^, BracketingNthOrderBrentSolver.java:165: error: ';' expected
			return x[0];
			      ^, BracketingNthOrderBrentSolver.java:165: error: illegal start of type
			return x[0];
			        ^, BracketingNthOrderBrentSolver.java:165: error: <identifier> expected
			return x[0];
			         ^, BracketingNthOrderBrentSolver.java:165: error: ';' expected
			return x[0];
			          ^, BracketingNthOrderBrentSolver.java:168: error: class, interface, or enum expected
		int nbPoints;
		^, BracketingNthOrderBrentSolver.java:169: error: class, interface, or enum expected
		int signChangeIndex;
		^, BracketingNthOrderBrentSolver.java:170: error: class, interface, or enum expected
		if ((y[0] * y[1]) < 0) {
		^, BracketingNthOrderBrentSolver.java:174: error: class, interface, or enum expected
			signChangeIndex = 1;
			^, BracketingNthOrderBrentSolver.java:176: error: class, interface, or enum expected
		} else {
		^, BracketingNthOrderBrentSolver.java:180: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:183: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:188: error: class, interface, or enum expected
				signChangeIndex = 2;
				^, BracketingNthOrderBrentSolver.java:189: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:191: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:196: error: class, interface, or enum expected
		final double[] tmpX = new double[x.length];
		      ^, BracketingNthOrderBrentSolver.java:199: error: class, interface, or enum expected
		double xA = x[signChangeIndex - 1];
		^, BracketingNthOrderBrentSolver.java:200: error: class, interface, or enum expected
		double yA = y[signChangeIndex - 1];
		^, BracketingNthOrderBrentSolver.java:201: error: class, interface, or enum expected
		double absYA = org.apache.commons.math.util.FastMath.abs(yA);
		^, BracketingNthOrderBrentSolver.java:202: error: class, interface, or enum expected
		int agingA = 0;
		^, BracketingNthOrderBrentSolver.java:203: error: class, interface, or enum expected
		double xB = x[signChangeIndex];
		^, BracketingNthOrderBrentSolver.java:204: error: class, interface, or enum expected
		double yB = y[signChangeIndex];
		^, BracketingNthOrderBrentSolver.java:205: error: class, interface, or enum expected
		double absYB = org.apache.commons.math.util.FastMath.abs(yB);
		^, BracketingNthOrderBrentSolver.java:206: error: class, interface, or enum expected
		int agingB = 0;
		^, BracketingNthOrderBrentSolver.java:209: error: class, interface, or enum expected
		while (true) {
		^, BracketingNthOrderBrentSolver.java:212: error: class, interface, or enum expected
			final double xTol = getAbsoluteAccuracy() + 
			      ^, BracketingNthOrderBrentSolver.java:214: error: class, interface, or enum expected
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			^, BracketingNthOrderBrentSolver.java:218: error: class, interface, or enum expected
					case LEFT_SIDE :
					^, BracketingNthOrderBrentSolver.java:220: error: class, interface, or enum expected
					case RIGHT_SIDE :
					^, BracketingNthOrderBrentSolver.java:222: error: class, interface, or enum expected
					case BELOW_SIDE :
					^, BracketingNthOrderBrentSolver.java:224: error: class, interface, or enum expected
					case ABOVE_SIDE :
					^, BracketingNthOrderBrentSolver.java:226: error: class, interface, or enum expected
					default :
					        ^, BracketingNthOrderBrentSolver.java:228: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}
						                                                                    ^, BracketingNthOrderBrentSolver.java:234: error: class, interface, or enum expected
			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(180): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[2] = getMax() ` -topatch--> `// evaluate first  endpoint y[0] = computeObjectiveValue(x[0])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (359(f=1.0), 360(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (359(f=1.0), )
----------Running generation: 181, population size: 1

***** Generation 181 : 0
**Parent Variant: [Variant id: 361, #gens: 160, #ops: 0, parent:-]

--Child created id: 362
--Creating new operations for variant [Variant id: 362, #gens: 160, #ops: 0, parent:361]
---analyzing modificationPoint position: 10
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 54
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 68
location: BracketingNthOrderBrentSolver.java236
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 362, #gens: 159, #ops: 1, parent:361] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 362, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(181): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (361(f=1.0), 362(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (361(f=1.0), )
----------Running generation: 182, population size: 1

***** Generation 182 : 0
**Parent Variant: [Variant id: 363, #gens: 160, #ops: 0, parent:-]

--Child created id: 364
--Creating new operations for variant [Variant id: 364, #gens: 160, #ops: 0, parent:363]
---analyzing modificationPoint position: 29
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // we have more points after sign change, drop the highest point --end
---analyzing modificationPoint position: 37
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java269
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we need to do one more attempt nextX = java.lang.Double.NaN ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 269, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we need to do one more attempt nextX = java.lang.Double.NaN ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 364, #gens: 161, #ops: 1, parent:363] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 364, errors: [BracketingNthOrderBrentSolver.java:320: error: cannot find symbol
			y[signChangeIndex] = nextY;
			                     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:324: error: cannot find symbol
			if ((nextY * yA) <= 0) {
			     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:327: error: cannot find symbol
				yB = nextY;
				     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:334: error: cannot find symbol
				yA = nextY;
				     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(182): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we need to do one more attempt nextX = java.lang.Double.NaN ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (363(f=1.0), 364(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (363(f=1.0), )
----------Running generation: 183, population size: 1

***** Generation 183 : 0
**Parent Variant: [Variant id: 365, #gens: 160, #ops: 0, parent:-]

--Child created id: 366
--Creating new operations for variant [Variant id: 366, #gens: 160, #ops: 0, parent:365]
---analyzing modificationPoint position: 4
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 18
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 1 not mutation generated in  for (int i = 0; i < len; i++) { 	final org.apache.commons.math.exception.util.Localizable pat = msgP[...]
---analyzing modificationPoint position: 20
---modifPoint 2 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 54
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 3 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 0
---modifPoint 4 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 72
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 251, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 366, #gens: 161, #ops: 1, parent:365] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 366
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-366/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(183): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (365(f=1.0), 366(f=1.0), )
Selected to next generation: IDs2--> (365(f=1.0), )
----------Running generation: 184, population size: 1

***** Generation 184 : 0
**Parent Variant: [Variant id: 367, #gens: 160, #ops: 0, parent:-]

--Child created id: 368
--Creating new operations for variant [Variant id: 368, #gens: 160, #ops: 0, parent:367]
---analyzing modificationPoint position: 5
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 15
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java171
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `// Step 1. final int len = context.keySet().size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 171, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `// Step 1. final int len = context.keySet().size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 368, #gens: 160, #ops: 1, parent:367] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 368, errors: [ExceptionContext.java:289: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:289: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:289: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:289: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:289: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:291: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:291: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:292: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:293: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:294: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:294: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:294: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:294: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:295: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:295: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:295: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:295: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:295: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:295: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:295: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:304: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:304: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:304: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:304: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:304: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:311: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:311: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:311: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:311: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:311: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:311: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:313: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:313: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:313: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:313: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:313: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:313: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:313: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:313: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:314: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:315: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:316: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:317: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:318: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:318: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:318: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:318: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:319: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:320: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:320: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:320: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:320: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:321: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	  ^, ExceptionContext.java:321: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	^, ExceptionContext.java:321: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	        ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:321: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:321: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                    ^, ExceptionContext.java:321: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                                           ^, ExceptionContext.java:323: error: illegal start of expression
	 * Serialize {@link #context}.
	 ^, ExceptionContext.java:323: error: ';' expected
	 * Serialize {@link #context}.
	            ^, ExceptionContext.java:323: error: illegal character: '#'
	 * Serialize {@link #context}.
	                    ^, ExceptionContext.java:323: error: illegal start of type
	 * Serialize {@link #context}.
	                            ^, ExceptionContext.java:323: error: ';' expected
	 * Serialize {@link #context}.
	                             ^, ExceptionContext.java:324: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:325: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:326: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:327: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:328: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:328: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:328: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:328: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:329: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	  ^, ExceptionContext.java:329: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	^, ExceptionContext.java:329: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	        ^, ExceptionContext.java:329: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                             ^, ExceptionContext.java:329: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                            ^, ExceptionContext.java:329: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                            ^, ExceptionContext.java:329: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                                        ^, ExceptionContext.java:330: error: illegal start of expression
	 * Deserialize {@link #context}.
	 ^, ExceptionContext.java:330: error: ';' expected
	 * Deserialize {@link #context}.
	              ^, ExceptionContext.java:330: error: illegal character: '#'
	 * Deserialize {@link #context}.
	                      ^, ExceptionContext.java:330: error: illegal start of type
	 * Deserialize {@link #context}.
	                              ^, ExceptionContext.java:330: error: ';' expected
	 * Deserialize {@link #context}.
	                               ^, ExceptionContext.java:331: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:332: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:333: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:334: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:335: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:335: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:335: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:335: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:336: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:337: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:337: error: ';' expected
	 * 		This should never happen.
	   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(184): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `// Step 1. final int len = context.keySet().size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (367(f=1.0), 368(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (367(f=1.0), )
----------Running generation: 185, population size: 1

***** Generation 185 : 0
**Parent Variant: [Variant id: 369, #gens: 160, #ops: 0, parent:-]

--Child created id: 370
--Creating new operations for variant [Variant id: 370, #gens: 160, #ops: 0, parent:369]
---analyzing modificationPoint position: 23
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 0 not mutation generated in  if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); }
---analyzing modificationPoint position: 98
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 69, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 370, #gens: 161, #ops: 1, parent:369] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 370, errors: [MathIllegalStateException.java:75: error: incompatible types: unexpected return value
		return context;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(185): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (369(f=1.0), 370(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (369(f=1.0), )
----------Running generation: 186, population size: 1

***** Generation 186 : 0
**Parent Variant: [Variant id: 371, #gens: 160, #ops: 0, parent:-]

--Child created id: 372
--Creating new operations for variant [Variant id: 372, #gens: 160, #ops: 0, parent:371]
---analyzing modificationPoint position: 74
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, nbPoints]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java254
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 254, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 372, #gens: 161, #ops: 1, parent:371] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 372, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(186): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...] ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (371(f=1.0), 372(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (371(f=1.0), )
----------Running generation: 187, population size: 1

***** Generation 187 : 0
**Parent Variant: [Variant id: 373, #gens: 160, #ops: 0, parent:-]

--Child created id: 374
--Creating new operations for variant [Variant id: 374, #gens: 160, #ops: 0, parent:373]
---analyzing modificationPoint position: 0
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// prepare arrays with the first points final double[] x = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// prepare arrays with the first points final double[] x = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 374, #gens: 160, #ops: 1, parent:373] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 374, errors: [BracketingNthOrderBrentSolver.java:236: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:239: error: cannot find symbol
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:242: error: cannot find symbol
				targetY = 0;
				^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^
  symbol:   variable targetY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(187): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// prepare arrays with the first points final double[] x = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (373(f=1.0), 374(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (373(f=1.0), )
----------Running generation: 188, population size: 1

***** Generation 188 : 0
**Parent Variant: [Variant id: 375, #gens: 160, #ops: 0, parent:-]

--Child created id: 376
--Creating new operations for variant [Variant id: 376, #gens: 160, #ops: 0, parent:375]
---analyzing modificationPoint position: 17
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 66
location: BracketingNthOrderBrentSolver.java213
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 376, #gens: 159, #ops: 1, parent:375] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 376
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-376/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(188): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (375(f=1.0), 376(f=4.0), )
Selected to next generation: IDs2--> (375(f=1.0), )
----------Running generation: 189, population size: 1

***** Generation 189 : 0
**Parent Variant: [Variant id: 377, #gens: 160, #ops: 0, parent:-]

--Child created id: 378
--Creating new operations for variant [Variant id: 378, #gens: 160, #ops: 0, parent:377]
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 125, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 378, #gens: 161, #ops: 1, parent:377] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 378, errors: [BracketingNthOrderBrentSolver.java:210: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			^, BracketingNthOrderBrentSolver.java:210: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			      ^, BracketingNthOrderBrentSolver.java:210: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			        ^, BracketingNthOrderBrentSolver.java:210: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			         ^, BracketingNthOrderBrentSolver.java:210: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			          ^, BracketingNthOrderBrentSolver.java:210: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		^, BracketingNthOrderBrentSolver.java:210: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		^, BracketingNthOrderBrentSolver.java:210: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		^, BracketingNthOrderBrentSolver.java:211: error: class, interface, or enum expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				            ^, BracketingNthOrderBrentSolver.java:214: error: class, interface, or enum expected
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			^, BracketingNthOrderBrentSolver.java:218: error: class, interface, or enum expected
					case LEFT_SIDE :
					^, BracketingNthOrderBrentSolver.java:220: error: class, interface, or enum expected
					case RIGHT_SIDE :
					^, BracketingNthOrderBrentSolver.java:222: error: class, interface, or enum expected
					case BELOW_SIDE :
					^, BracketingNthOrderBrentSolver.java:224: error: class, interface, or enum expected
					case ABOVE_SIDE :
					^, BracketingNthOrderBrentSolver.java:226: error: class, interface, or enum expected
					default :
					        ^, BracketingNthOrderBrentSolver.java:228: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}
						                                                                    ^, BracketingNthOrderBrentSolver.java:234: error: class, interface, or enum expected
			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(189): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `int agingA = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (377(f=1.0), 378(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (377(f=1.0), )
----------Running generation: 190, population size: 1

***** Generation 190 : 0
**Parent Variant: [Variant id: 379, #gens: 160, #ops: 0, parent:-]

--Child created id: 380
--Creating new operations for variant [Variant id: 380, #gens: 160, #ops: 0, parent:379]
---analyzing modificationPoint position: 89
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x[1] = getStartValue()
---analyzing modificationPoint position: 79
Templates availables21
Attempts Base Ingredients  1 total 21
---modifPoint 1 not mutation generated in  final int delta = (i + 1) - start
---analyzing modificationPoint position: 17
---modifPoint 2 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 11
---modifPoint 3 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 58
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java199
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `// update the sign change index signChangeIndex++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 199, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `// update the sign change index signChangeIndex++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 380, #gens: 161, #ops: 1, parent:379] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 380, errors: [BracketingNthOrderBrentSolver.java:343: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					^, BracketingNthOrderBrentSolver.java:343: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					    ^, BracketingNthOrderBrentSolver.java:343: error: ')' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					     ^, BracketingNthOrderBrentSolver.java:343: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                    ^, BracketingNthOrderBrentSolver.java:343: error: <identifier> expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                            ^, BracketingNthOrderBrentSolver.java:343: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                              ^, BracketingNthOrderBrentSolver.java:343: error: <identifier> expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                ^, BracketingNthOrderBrentSolver.java:343: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                  ^, BracketingNthOrderBrentSolver.java:343: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                      ^, BracketingNthOrderBrentSolver.java:343: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                                       ^, BracketingNthOrderBrentSolver.java:344: error: illegal start of type
						++start;} else { 						// we have more points after sign change, drop the highest point
						          ^, BracketingNthOrderBrentSolver.java:344: error: ';' expected
						++start;} else { 						// we have more points after sign change, drop the highest point
						              ^, BracketingNthOrderBrentSolver.java:345: error: illegal start of type
						--end;} 					// we need to do one more attempt 					nextX = java.lang.Double.NaN;}} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) ); 			if (java.lang.Double.isNaN(nextX)) { 				// fall back to bisection 				nextX = xA + (0.5 * (xB - xA)); 				start = signChangeIndex - 1; 				end = signChangeIndex;} 			// evaluate the function at the guessed root 			final double nextY = computeObjectiveValue(nextX); 			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 				// we have found an exact root, since it is not an approximation 				// we don't need to bother about the allowed solutions setting
						^, BracketingNthOrderBrentSolver.java:346: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				^, BracketingNthOrderBrentSolver.java:346: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				             ^, BracketingNthOrderBrentSolver.java:356: error: class, interface, or enum expected
	 * @param targetY
	          ^, BracketingNthOrderBrentSolver.java:358: error: class, interface, or enum expected
	 * @param x
	          ^, BracketingNthOrderBrentSolver.java:361: error: class, interface, or enum expected
	 * @param y
	          ^, BracketingNthOrderBrentSolver.java:363: error: class, interface, or enum expected
	 * @param start
	          ^, BracketingNthOrderBrentSolver.java:365: error: class, interface, or enum expected
	 * @param end
	          ^, BracketingNthOrderBrentSolver.java:367: error: <identifier> expected
	 * @return guessed root (will be a NaN if two points share the same y)
	    ^, BracketingNthOrderBrentSolver.java:367: error: class, interface, or enum expected
	 * @return guessed root (will be a NaN if two points share the same y)
	           ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(190): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double yA = y[signChangeIndex - 1] ` -topatch--> `// update the sign change index signChangeIndex++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (379(f=1.0), 380(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (379(f=1.0), )
----------Running generation: 191, population size: 1

***** Generation 191 : 0
**Parent Variant: [Variant id: 381, #gens: 160, #ops: 0, parent:-]

--Child created id: 382
--Creating new operations for variant [Variant id: 382, #gens: 160, #ops: 0, parent:381]
---analyzing modificationPoint position: 4
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 97
---modifPoint 1 not mutation generated in  return context
---analyzing modificationPoint position: 5
---modifPoint 2 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 42
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [y, start, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java318
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `java.lang.System.arraycopy(y, start, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 318, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `java.lang.System.arraycopy(y, start, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 382, #gens: 160, #ops: 1, parent:381] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 382
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-382/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(191): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `java.lang.System.arraycopy(y, start, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (381(f=1.0), 382(f=4.0), )
Selected to next generation: IDs2--> (381(f=1.0), )
----------Running generation: 192, population size: 1

***** Generation 192 : 0
**Parent Variant: [Variant id: 383, #gens: 160, #ops: 0, parent:-]

--Child created id: 384
--Creating new operations for variant [Variant id: 384, #gens: 160, #ops: 0, parent:383]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// update the sign change index signChangeIndex++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// update the sign change index signChangeIndex++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 384, #gens: 161, #ops: 1, parent:383] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 384, errors: [BracketingNthOrderBrentSolver.java:344: error: while expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				              ^, BracketingNthOrderBrentSolver.java:344: error: ')' expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				               			                                                  ^, BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(192): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// update the sign change index signChangeIndex++` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (383(f=1.0), 384(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (383(f=1.0), )
----------Running generation: 193, population size: 1

***** Generation 193 : 0
**Parent Variant: [Variant id: 385, #gens: 160, #ops: 0, parent:-]

--Child created id: 386
--Creating new operations for variant [Variant id: 386, #gens: 160, #ops: 0, parent:385]
---analyzing modificationPoint position: 20
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 77
location: BracketingNthOrderBrentSolver.java284
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 386, #gens: 159, #ops: 1, parent:385] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 386
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-386/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(193): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (385(f=1.0), 386(f=2.0), )
Selected to next generation: IDs2--> (385(f=1.0), )
----------Running generation: 194, population size: 1

***** Generation 194 : 0
**Parent Variant: [Variant id: 387, #gens: 160, #ops: 0, parent:-]

--Child created id: 388
--Creating new operations for variant [Variant id: 388, #gens: 160, #ops: 0, parent:387]
---analyzing modificationPoint position: 72
Templates availables9
Attempts Base Ingredients  1 total 9
Attempts Base Ingredients  2 total 9
vars from patch [org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER]
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 251, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 388, #gens: 160, #ops: 1, parent:387] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 388, errors: [BracketingNthOrderBrentSolver.java:249: error: call to this must be first statement in constructor
			do { 				this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER);
			     				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(194): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (387(f=1.0), 388(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (387(f=1.0), )
----------Running generation: 195, population size: 1

***** Generation 195 : 0
**Parent Variant: [Variant id: 389, #gens: 160, #ops: 0, parent:-]

--Child created id: 390
--Creating new operations for variant [Variant id: 390, #gens: 160, #ops: 0, parent:389]
---analyzing modificationPoint position: 6
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [this.throwable]
--> var from patch: this.throwable spoon.support.reflect.code.CtFieldWriteImpl
location: ExceptionContext.java182
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 182, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 390, #gens: 161, #ops: 1, parent:389] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 390
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-390/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(195): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (389(f=1.0), 390(f=1.0), )
Selected to next generation: IDs2--> (389(f=1.0), )
----------Running generation: 196, population size: 1

***** Generation 196 : 0
**Parent Variant: [Variant id: 391, #gens: 160, #ops: 0, parent:-]

--Child created id: 392
--Creating new operations for variant [Variant id: 392, #gens: 160, #ops: 0, parent:391]
---analyzing modificationPoint position: 81
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [start]
--> var from patch: start spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java368
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `// we have more points before the sign change, drop the lowest point ++start` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 368, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `// we have more points before the sign change, drop the lowest point ++start` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 392, #gens: 161, #ops: 1, parent:391] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 392, errors: [BracketingNthOrderBrentSolver.java:370: error: final parameter start may not be assigned
				++start;}
				  ^]
Ingredient counter is Zero
---Undoing: gnrtn(196): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]) ` -topatch--> `// we have more points before the sign change, drop the lowest point ++start` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (391(f=1.0), 392(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (391(f=1.0), )
----------Running generation: 197, population size: 1

***** Generation 197 : 0
**Parent Variant: [Variant id: 393, #gens: 160, #ops: 0, parent:-]

--Child created id: 394
--Creating new operations for variant [Variant id: 394, #gens: 160, #ops: 0, parent:393]
---analyzing modificationPoint position: 89
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x[1] = getStartValue()
---analyzing modificationPoint position: 12
location: BracketingNthOrderBrentSolver.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 394, #gens: 159, #ops: 1, parent:393] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 394
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-394/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(197): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (393(f=1.0), 394(f=2.0), )
Selected to next generation: IDs2--> (393(f=1.0), )
----------Running generation: 198, population size: 1

***** Generation 198 : 0
**Parent Variant: [Variant id: 395, #gens: 160, #ops: 0, parent:-]

--Child created id: 396
--Creating new operations for variant [Variant id: 396, #gens: 160, #ops: 0, parent:395]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 0
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 396, #gens: 160, #ops: 1, parent:395] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 396, errors: [BracketingNthOrderBrentSolver.java:381: error: illegal start of expression
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	 ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	        ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	             ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                      ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                               ^, BracketingNthOrderBrentSolver.java:381: error: illegal start of type
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                ^, BracketingNthOrderBrentSolver.java:381: error: illegal start of expression
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                 ^, BracketingNthOrderBrentSolver.java:381: error: not a statement
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                    ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                           ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                                              ^, BracketingNthOrderBrentSolver.java:381: error: <identifier> expected
	 * Guess an x value by n<sup>th</sup> order inverse polynomial interpolation.
	                                                                             ^, BracketingNthOrderBrentSolver.java:383: error: illegal start of expression
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	 ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	      ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	              ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                         ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                       ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                    ^, BracketingNthOrderBrentSolver.java:383: error: not a statement
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                     ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                      ^, BracketingNthOrderBrentSolver.java:383: error: ';' expected
	 * The x value is guessed by evaluating polynomial Q(y) at y = targetY, where Q
	                                                                             ^, BracketingNthOrderBrentSolver.java:384: error: not a statement
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	 ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	     ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                ^, BracketingNthOrderBrentSolver.java:384: error: not a statement
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                 ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                     ^, BracketingNthOrderBrentSolver.java:384: error: '(' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                         ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                        ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                         ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                              ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                                        ^, BracketingNthOrderBrentSolver.java:384: error: illegal start of expression
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                                             ^, BracketingNthOrderBrentSolver.java:384: error: ';' expected
	 * is built such that for all considered points (x<sub>i</sub>, y<sub>i</sub>),
	                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	             ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	                  ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 * Q(y<sub>i</sub>) = x<sub>i</sub>.
	                                   ^, BracketingNthOrderBrentSolver.java:386: error: illegal start of expression
	 * </p>
	 ^, BracketingNthOrderBrentSolver.java:386: error: illegal start of expression
	 * </p>
	    ^, BracketingNthOrderBrentSolver.java:387: error: illegal start of expression
	 *
	 ^, BracketingNthOrderBrentSolver.java:388: error: illegal start of expression
	 * @param targetY
	 ^, BracketingNthOrderBrentSolver.java:388: error: illegal start of expression
	 * @param targetY
	   ^, BracketingNthOrderBrentSolver.java:386: error: not a statement
	 * </p>
	      ^, BracketingNthOrderBrentSolver.java:389: error: ';' expected
	 * 		target value for y
	   		      ^, BracketingNthOrderBrentSolver.java:389: error: not a statement
	 * 		target value for y
	   		       ^, BracketingNthOrderBrentSolver.java:389: error: ';' expected
	 * 		target value for y
	   		            ^, BracketingNthOrderBrentSolver.java:389: error: '(' expected
	 * 		target value for y
	   		                ^, BracketingNthOrderBrentSolver.java:390: error: illegal start of expression
	 * @param x
	   ^, BracketingNthOrderBrentSolver.java:391: error: not a statement
	 * 		reference points abscissas for interpolation,
	 ^, BracketingNthOrderBrentSolver.java:391: error: ';' expected
	 * 		reference points abscissas for interpolation,
	   		         ^, BracketingNthOrderBrentSolver.java:391: error: ';' expected
	 * 		reference points abscissas for interpolation,
	   		                ^, BracketingNthOrderBrentSolver.java:391: error: not a statement
	 * 		reference points abscissas for interpolation,
	   		                 ^, BracketingNthOrderBrentSolver.java:391: error: ')' expected
	 * 		reference points abscissas for interpolation,
	   		                          ^, BracketingNthOrderBrentSolver.java:391: error: '(' expected
	 * 		reference points abscissas for interpolation,
	   		                              ^, BracketingNthOrderBrentSolver.java:391: error: not a statement
	 * 		reference points abscissas for interpolation,
	   		                               ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 * 		note that this array <em>is</em> modified during computation
	 ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		    ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		         ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 * 		note that this array <em>is</em> modified during computation
	   		          ^, BracketingNthOrderBrentSolver.java:392: error: ')' expected
	 * 		note that this array <em>is</em> modified during computation
	   		              ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		                           ^, BracketingNthOrderBrentSolver.java:392: error: variable declaration not allowed here
	 * 		note that this array <em>is</em> modified during computation
	   		                         ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of type
	 * 		note that this array <em>is</em> modified during computation
	   		                            ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 * 		note that this array <em>is</em> modified during computation
	   		                             ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 * 		note that this array <em>is</em> modified during computation
	   		                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		                                         ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 * 		note that this array <em>is</em> modified during computation
	   		                                                            ^, BracketingNthOrderBrentSolver.java:393: error: <identifier> expected
	 * @param y
	           ^, BracketingNthOrderBrentSolver.java:394: error: ';' expected
	 * 		reference points ordinates for interpolation
	   		                ^, BracketingNthOrderBrentSolver.java:394: error: not a statement
	 * 		reference points ordinates for interpolation
	   		                 ^, BracketingNthOrderBrentSolver.java:394: error: ';' expected
	 * 		reference points ordinates for interpolation
	   		                          ^, BracketingNthOrderBrentSolver.java:394: error: '(' expected
	 * 		reference points ordinates for interpolation
	   		                              ^, BracketingNthOrderBrentSolver.java:395: error: illegal start of expression
	 * @param start
	   ^, BracketingNthOrderBrentSolver.java:396: error: not a statement
	 * 		start index of the points to consider (inclusive)
	 ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		     ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		           ^, BracketingNthOrderBrentSolver.java:396: error: not a statement
	 * 		start index of the points to consider (inclusive)
	   		            ^, BracketingNthOrderBrentSolver.java:396: error: ')' expected
	 * 		start index of the points to consider (inclusive)
	   		              ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		                         ^, BracketingNthOrderBrentSolver.java:396: error: variable declaration not allowed here
	 * 		start index of the points to consider (inclusive)
	   		                   ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		                                     ^, BracketingNthOrderBrentSolver.java:396: error: not a statement
	 * 		start index of the points to consider (inclusive)
	   		                                       ^, BracketingNthOrderBrentSolver.java:396: error: ';' expected
	 * 		start index of the points to consider (inclusive)
	   		                                                ^, BracketingNthOrderBrentSolver.java:397: error: <identifier> expected
	 * @param end
	             ^, BracketingNthOrderBrentSolver.java:398: error: ';' expected
	 * 		end index of the points to consider (exclusive)
	   		         ^, BracketingNthOrderBrentSolver.java:398: error: ';' expected
	 * 		end index of the points to consider (exclusive)
	   		                ^, BracketingNthOrderBrentSolver.java:398: error: ';' expected
	 * 		end index of the points to consider (exclusive)
	   		                          ^, BracketingNthOrderBrentSolver.java:399: error: <identifier> expected
	 * @return guessed root (will be a NaN if two points share the same y)
	    ^, BracketingNthOrderBrentSolver.java:399: error: not a statement
	 * @return guessed root (will be a NaN if two points share the same y)
	 ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                  ^, BracketingNthOrderBrentSolver.java:399: error: ')' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                ^, BracketingNthOrderBrentSolver.java:399: error: not a statement
	 * @return guessed root (will be a NaN if two points share the same y)
	                        ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                      ^, BracketingNthOrderBrentSolver.java:399: error: '(' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                         ^, BracketingNthOrderBrentSolver.java:399: error: ')' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                             ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                          ^, BracketingNthOrderBrentSolver.java:399: error: variable declaration not allowed here
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                     ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                                   ^, BracketingNthOrderBrentSolver.java:399: error: not a statement
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                                    ^, BracketingNthOrderBrentSolver.java:399: error: ';' expected
	 * @return guessed root (will be a NaN if two points share the same y)
	                                                                     ^, BracketingNthOrderBrentSolver.java:400: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(198): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (395(f=1.0), 396(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (395(f=1.0), )
----------Running generation: 199, population size: 1

***** Generation 199 : 0
**Parent Variant: [Variant id: 397, #gens: 160, #ops: 0, parent:-]

--Child created id: 398
--Creating new operations for variant [Variant id: 398, #gens: 160, #ops: 0, parent:397]
---analyzing modificationPoint position: 10
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 54
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 32
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [signChangeIndex, start]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `signChangeIndex -= start` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 294, pointed element: CtOperatorAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `signChangeIndex -= start` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 

--Summary Creation: for variant [Variant id: 398, #gens: 161, #ops: 1, parent:397] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 398
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-398/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(199): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `signChangeIndex -= start` (spoon.support.reflect.code.CtOperatorAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (397(f=1.0), 398(f=2.0), )
Selected to next generation: IDs2--> (397(f=1.0), )
----------Running generation: 200, population size: 1

***** Generation 200 : 0
**Parent Variant: [Variant id: 399, #gens: 160, #ops: 0, parent:-]

--Child created id: 400
--Creating new operations for variant [Variant id: 400, #gens: 160, #ops: 0, parent:399]
---analyzing modificationPoint position: 22
location: ExceptionContext.java179
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 400, #gens: 159, #ops: 1, parent:399] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 400
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-400/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(200): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (399(f=1.0), 400(f=1.0), )
Selected to next generation: IDs2--> (399(f=1.0), )
----------Running generation: 201, population size: 1

***** Generation 201 : 0
**Parent Variant: [Variant id: 401, #gens: 160, #ops: 0, parent:-]

--Child created id: 402
--Creating new operations for variant [Variant id: 402, #gens: 160, #ops: 0, parent:401]
---analyzing modificationPoint position: 24
---modifPoint 0 not mutation generated in  return sb.toString()
---analyzing modificationPoint position: 80
location: BracketingNthOrderBrentSolver.java367
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 402, #gens: 159, #ops: 1, parent:401] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 402, errors: [BracketingNthOrderBrentSolver.java:369: error: variable declaration not allowed here
		for (int i = start; i < (end - 1); ++i) 			final int delta = (i + 1) - start;
		                                        			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(201): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (401(f=1.0), 402(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (401(f=1.0), )
----------Running generation: 202, population size: 1

***** Generation 202 : 0
**Parent Variant: [Variant id: 403, #gens: 160, #ops: 0, parent:-]

--Child created id: 404
--Creating new operations for variant [Variant id: 404, #gens: 160, #ops: 0, parent:403]
---analyzing modificationPoint position: 16
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  int count = 0
---analyzing modificationPoint position: 4
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 41
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, y]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java317
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[signChangeIndex] = nextX ` -topatch--> `throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2])` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 317, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[signChangeIndex] = nextX ` -topatch--> `throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2])` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 404, #gens: 161, #ops: 1, parent:403] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 404, errors: [BracketingNthOrderBrentSolver.java:319: error: unreachable statement
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^]
Ingredient counter is Zero
---Undoing: gnrtn(202): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[signChangeIndex] = nextX ` -topatch--> `throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2])` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (403(f=1.0), 404(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (403(f=1.0), )
----------Running generation: 203, population size: 1

***** Generation 203 : 0
**Parent Variant: [Variant id: 405, #gens: 160, #ops: 0, parent:-]

--Child created id: 406
--Creating new operations for variant [Variant id: 406, #gens: 160, #ops: 0, parent:405]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return buildMessage(locale, ": ")
---analyzing modificationPoint position: 16
---modifPoint 1 not mutation generated in  int count = 0
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 406, #gens: 161, #ops: 1, parent:405] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 406, errors: [BracketingNthOrderBrentSolver.java:274: error: variable y is already defined in method doSolve()
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) ); 			final double[] y = new double[maximalOrder + 1];
			                                                                 			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(203): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (405(f=1.0), 406(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (405(f=1.0), )
----------Running generation: 204, population size: 1

***** Generation 204 : 0
**Parent Variant: [Variant id: 407, #gens: 160, #ops: 0, parent:-]

--Child created id: 408
--Creating new operations for variant [Variant id: 408, #gens: 160, #ops: 0, parent:407]
---analyzing modificationPoint position: 8
---modifPoint 0 not mutation generated in  return context.getLocalizedMessage()
---analyzing modificationPoint position: 10
location: BracketingNthOrderBrentSolver.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 408, #gens: 159, #ops: 1, parent:407] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 408
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-408/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(204): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (407(f=1.0), 408(f=2.0), )
Selected to next generation: IDs2--> (407(f=1.0), )
----------Running generation: 205, population size: 1

***** Generation 205 : 0
**Parent Variant: [Variant id: 409, #gens: 160, #ops: 0, parent:-]

--Child created id: 410
--Creating new operations for variant [Variant id: 410, #gens: 160, #ops: 0, parent:409]
---analyzing modificationPoint position: 38
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [signChangeIndex, start, end]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: end spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 290, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 410, #gens: 161, #ops: 1, parent:409] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 410
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-410/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(205): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (409(f=1.0), 410(f=1.0), )
Selected to next generation: IDs2--> (409(f=1.0), )
----------Running generation: 206, population size: 1

***** Generation 206 : 0
**Parent Variant: [Variant id: 411, #gens: 160, #ops: 0, parent:-]

--Child created id: 412
--Creating new operations for variant [Variant id: 412, #gens: 160, #ops: 0, parent:411]
---analyzing modificationPoint position: 45
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java323
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 323, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 412, #gens: 160, #ops: 1, parent:411] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 412
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-412/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(206): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (411(f=1.0), 412(f=9.0), )
Selected to next generation: IDs2--> (411(f=1.0), )
----------Running generation: 207, population size: 1

***** Generation 207 : 0
**Parent Variant: [Variant id: 413, #gens: 160, #ops: 0, parent:-]

--Child created id: 414
--Creating new operations for variant [Variant id: 414, #gens: 160, #ops: 0, parent:413]
---analyzing modificationPoint position: 129
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  long yInt = java.lang.Double.doubleToLongBits(y)
---analyzing modificationPoint position: 81
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta])
---analyzing modificationPoint position: 40
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [x, start, nbPoints]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java316
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `java.lang.System.arraycopy(x, start, x, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 316, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `java.lang.System.arraycopy(x, start, x, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 414, #gens: 160, #ops: 1, parent:413] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 414
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-414/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(207): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `java.lang.System.arraycopy(x, start, x, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (413(f=1.0), 414(f=4.0), )
Selected to next generation: IDs2--> (413(f=1.0), )
----------Running generation: 208, population size: 1

***** Generation 208 : 0
**Parent Variant: [Variant id: 415, #gens: 160, #ops: 0, parent:-]

--Child created id: 416
--Creating new operations for variant [Variant id: 416, #gens: 160, #ops: 0, parent:415]
---analyzing modificationPoint position: 80
location: BracketingNthOrderBrentSolver.java367
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 416, #gens: 159, #ops: 1, parent:415] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 416, errors: [BracketingNthOrderBrentSolver.java:369: error: variable declaration not allowed here
		for (int i = start; i < (end - 1); ++i) 			final int delta = (i + 1) - start;
		                                        			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(208): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (415(f=1.0), 416(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (415(f=1.0), )
----------Running generation: 209, population size: 1

***** Generation 209 : 0
**Parent Variant: [Variant id: 417, #gens: 160, #ops: 0, parent:-]

--Child created id: 418
--Creating new operations for variant [Variant id: 418, #gens: 160, #ops: 0, parent:417]
---analyzing modificationPoint position: 65
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [y, signChangeIndex]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java211
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 211, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 418, #gens: 160, #ops: 1, parent:417] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 418, errors: [BracketingNthOrderBrentSolver.java:209: error: variable yA is already defined in method doSolve()
		while (true) { 			double yA = y[signChangeIndex - 1];
		               			       ^, BracketingNthOrderBrentSolver.java:214: error: cannot find symbol
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			                  ^
  symbol:   variable xTol
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(209): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (417(f=1.0), 418(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (417(f=1.0), )
----------Running generation: 210, population size: 1

***** Generation 210 : 0
**Parent Variant: [Variant id: 419, #gens: 160, #ops: 0, parent:-]

--Child created id: 420
--Creating new operations for variant [Variant id: 420, #gens: 160, #ops: 0, parent:419]
---analyzing modificationPoint position: 6
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  // Add a separator if there are other messages. sb.append(separator)
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x, signChangeIndex]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 420, #gens: 161, #ops: 1, parent:419] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 420, errors: [BracketingNthOrderBrentSolver.java:246: error: variable xB is already defined in method doSolve()
			double nextX; 			double xB = x[signChangeIndex];
			              			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(210): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `double xB = x[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (419(f=1.0), 420(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (419(f=1.0), )
----------Running generation: 211, population size: 1

***** Generation 211 : 0
**Parent Variant: [Variant id: 421, #gens: 160, #ops: 0, parent:-]

--Child created id: 422
--Creating new operations for variant [Variant id: 422, #gens: 160, #ops: 0, parent:421]
---analyzing modificationPoint position: 20
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 150
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  final java.util.List<java.lang.Object> list = new java.util.ArrayList<java.lang.Object>()
---analyzing modificationPoint position: 12
location: BracketingNthOrderBrentSolver.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 422, #gens: 159, #ops: 1, parent:421] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 422
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-422/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(211): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (421(f=1.0), 422(f=2.0), )
Selected to next generation: IDs2--> (421(f=1.0), )
----------Running generation: 212, population size: 1

***** Generation 212 : 0
**Parent Variant: [Variant id: 423, #gens: 160, #ops: 0, parent:-]

--Child created id: 424
--Creating new operations for variant [Variant id: 424, #gens: 160, #ops: 0, parent:423]
---analyzing modificationPoint position: 89
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x[1] = getStartValue()
---analyzing modificationPoint position: 80
location: BracketingNthOrderBrentSolver.java367
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 424, #gens: 159, #ops: 1, parent:423] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 424, errors: [BracketingNthOrderBrentSolver.java:369: error: variable declaration not allowed here
		for (int i = start; i < (end - 1); ++i) 			final int delta = (i + 1) - start;
		                                        			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(212): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (423(f=1.0), 424(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (423(f=1.0), )
----------Running generation: 213, population size: 1

***** Generation 213 : 0
**Parent Variant: [Variant id: 425, #gens: 160, #ops: 0, parent:-]

--Child created id: 426
--Creating new operations for variant [Variant id: 426, #gens: 160, #ops: 0, parent:425]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 49
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 328, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 426, #gens: 160, #ops: 1, parent:425] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 426
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-426/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(213): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (425(f=1.0), 426(f=3.0), )
Selected to next generation: IDs2--> (425(f=1.0), )
----------Running generation: 214, population size: 1

***** Generation 214 : 0
**Parent Variant: [Variant id: 427, #gens: 160, #ops: 0, parent:-]

--Child created id: 428
--Creating new operations for variant [Variant id: 428, #gens: 160, #ops: 0, parent:427]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 1
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch []
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// make a few attempts to guess a root, double nextX` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// make a few attempts to guess a root, double nextX` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 428, #gens: 160, #ops: 1, parent:427] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 428
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-428/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(214): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// make a few attempts to guess a root, double nextX` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (427(f=1.0), 428(f=1.0), )
Selected to next generation: IDs2--> (427(f=1.0), )
----------Running generation: 215, population size: 1

***** Generation 215 : 0
**Parent Variant: [Variant id: 429, #gens: 160, #ops: 0, parent:-]

--Child created id: 430
--Creating new operations for variant [Variant id: 430, #gens: 160, #ops: 0, parent:429]
---analyzing modificationPoint position: 97
---modifPoint 0 not mutation generated in  return context
---analyzing modificationPoint position: 95
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java162
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...] ` -topatch--> `throw new org.apache.commons.math.exception.NumberIsTooSmallException(maximalOrder, 2, true)` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 162, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...] ` -topatch--> `throw new org.apache.commons.math.exception.NumberIsTooSmallException(maximalOrder, 2, true)` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 430, #gens: 161, #ops: 1, parent:429] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 430, errors: [BracketingNthOrderBrentSolver.java:168: error: unreachable statement
		int nbPoints;
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(215): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...] ` -topatch--> `throw new org.apache.commons.math.exception.NumberIsTooSmallException(maximalOrder, 2, true)` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (429(f=1.0), 430(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (429(f=1.0), )
----------Running generation: 216, population size: 1

***** Generation 216 : 0
**Parent Variant: [Variant id: 431, #gens: 160, #ops: 0, parent:-]

--Child created id: 432
--Creating new operations for variant [Variant id: 432, #gens: 160, #ops: 0, parent:431]
---analyzing modificationPoint position: 26
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: LocalizedFormats.java386
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.LocalizedFormats line: 386, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 432, #gens: 161, #ops: 1, parent:431] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 432
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-432/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(216): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (431(f=1.0), 432(f=1.0), )
Selected to next generation: IDs2--> (431(f=1.0), )
----------Running generation: 217, population size: 1

***** Generation 217 : 0
**Parent Variant: [Variant id: 433, #gens: 160, #ops: 0, parent:-]

--Child created id: 434
--Creating new operations for variant [Variant id: 434, #gens: 160, #ops: 0, parent:433]
---analyzing modificationPoint position: 49
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, signChangeIndex]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `double yB = y[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 328, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `double yB = y[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 434, #gens: 161, #ops: 1, parent:433] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 434, errors: [BracketingNthOrderBrentSolver.java:329: error: variable yB is already defined in method doSolve()
				++agingA; 				double yB = y[signChangeIndex];
				          				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(217): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `double yB = y[signChangeIndex]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (433(f=1.0), 434(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (433(f=1.0), )
----------Running generation: 218, population size: 1

***** Generation 218 : 0
**Parent Variant: [Variant id: 435, #gens: 160, #ops: 0, parent:-]

--Child created id: 436
--Creating new operations for variant [Variant id: 436, #gens: 160, #ops: 0, parent:435]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 436, #gens: 161, #ops: 1, parent:435] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 436
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-436/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 6, was successful: false, cases executed: 15] ,[]
-Valid?: |false|6|15|[]|, fitness 6.0
Ingredient counter is Zero
---Undoing: gnrtn(218): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 	// return the second endpoint if[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (435(f=1.0), 436(f=6.0), )
Selected to next generation: IDs2--> (435(f=1.0), )
----------Running generation: 219, population size: 1

***** Generation 219 : 0
**Parent Variant: [Variant id: 437, #gens: 160, #ops: 0, parent:-]

--Child created id: 438
--Creating new operations for variant [Variant id: 438, #gens: 160, #ops: 0, parent:437]
---analyzing modificationPoint position: 156
location: ExceptionContext.java67
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `msgArguments = new java.util.ArrayList<java.lang.Object[]>() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 438, #gens: 159, #ops: 1, parent:437] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 438
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-438/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 15] ,[]
-Valid?: |false|5|15|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(219): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `msgArguments = new java.util.ArrayList<java.lang.Object[]>() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (437(f=1.0), 438(f=5.0), )
Selected to next generation: IDs2--> (437(f=1.0), )
----------Running generation: 220, population size: 1

***** Generation 220 : 0
**Parent Variant: [Variant id: 439, #gens: 160, #ops: 0, parent:-]

--Child created id: 440
--Creating new operations for variant [Variant id: 440, #gens: 160, #ops: 0, parent:439]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
Attempts Base Ingredients  2 total 34
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 7
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtThrowImpl@1, search space size: 1
---modifPoint 1 not mutation generated in  throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax())
---analyzing modificationPoint position: 90
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  x[2] = getMax()
---analyzing modificationPoint position: 25
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [sourceFormat]
--> var from patch: sourceFormat spoon.support.reflect.code.CtFieldReadImpl
location: LocalizedFormats.java373
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.LocalizedFormats line: 373, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 440, #gens: 161, #ops: 1, parent:439] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 440, errors: [LocalizedFormats.java:389: error: reached end of file while parsing
		return sourceFormat;}}
		                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(220): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (439(f=1.0), 440(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (439(f=1.0), )
----------Running generation: 221, population size: 1

***** Generation 221 : 0
**Parent Variant: [Variant id: 441, #gens: 160, #ops: 0, parent:-]

--Child created id: 442
--Creating new operations for variant [Variant id: 442, #gens: 160, #ops: 0, parent:441]
---analyzing modificationPoint position: 85
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  return x0
---analyzing modificationPoint position: 158
Templates availables28
Attempts Base Ingredients  1 total 28
---modifPoint 1 not mutation generated in  if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }
---analyzing modificationPoint position: 55
location: BracketingNthOrderBrentSolver.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 442, #gens: 159, #ops: 1, parent:441] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 442, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex might not have been initialized
		double xA = x[signChangeIndex - 1];
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(221): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (441(f=1.0), 442(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (441(f=1.0), )
----------Running generation: 222, population size: 1

***** Generation 222 : 0
**Parent Variant: [Variant id: 443, #gens: 160, #ops: 0, parent:-]

--Child created id: 444
--Creating new operations for variant [Variant id: 444, #gens: 160, #ops: 0, parent:443]
---analyzing modificationPoint position: 25
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@addf3083, search space size: 1
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]
---analyzing modificationPoint position: 14
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java147
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return buildMessage(locale, ": ") ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 147, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return buildMessage(locale, ": ") ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 444, #gens: 160, #ops: 1, parent:443] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 444, errors: [ExceptionContext.java:147: error: incompatible types: java.util.Set<java.lang.String> cannot be converted to java.lang.String
	 */ 	public java.lang.String getMessage(final java.util.Locale locale) { 		return context.keySet();
	    	                                                                    		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(222): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return buildMessage(locale, ": ") ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (443(f=1.0), 444(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (443(f=1.0), )
----------Running generation: 223, population size: 1

***** Generation 223 : 0
**Parent Variant: [Variant id: 445, #gens: 160, #ops: 0, parent:-]

--Child created id: 446
--Creating new operations for variant [Variant id: 446, #gens: 160, #ops: 0, parent:445]
---analyzing modificationPoint position: 19
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java175
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 175, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 446, #gens: 160, #ops: 1, parent:445] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 446, errors: [ExceptionContext.java:175: error: variable len is already defined in method buildMessage(java.util.Locale,java.lang.String)
		for (int i = 0; i < len; i++) { 			final int len = msgPatterns.size();
		                                			          ^, ExceptionContext.java:178: error: cannot find symbol
			final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale), 
			                                                                ^
  symbol:   variable pat
  location: class org.apache.commons.math.exception.util.ExceptionContext]
Ingredient counter is Zero
---Undoing: gnrtn(223): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (445(f=1.0), 446(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (445(f=1.0), )
----------Running generation: 224, population size: 1

***** Generation 224 : 0
**Parent Variant: [Variant id: 447, #gens: 160, #ops: 0, parent:-]

--Child created id: 448
--Creating new operations for variant [Variant id: 448, #gens: 160, #ops: 0, parent:447]
---analyzing modificationPoint position: 25
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]
---analyzing modificationPoint position: 45
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xB, xA, xTol, absYA, absYB, allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE, yA, org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE]
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTol spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: allowed spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java323
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 323, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 448, #gens: 161, #ops: 1, parent:447] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 448
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-448/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(224): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `// update the bracketing interval if ((nextY * yA) <= 0) { 	// the sign change occurs before the ins[...] ` -topatch--> `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (447(f=1.0), 448(f=1.0), )
Selected to next generation: IDs2--> (447(f=1.0), )
----------Running generation: 225, population size: 1

***** Generation 225 : 0
**Parent Variant: [Variant id: 449, #gens: 160, #ops: 0, parent:-]

--Child created id: 450
--Creating new operations for variant [Variant id: 450, #gens: 160, #ops: 0, parent:449]
---analyzing modificationPoint position: 22
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [msgPatterns, pat]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: pat spoon.support.reflect.code.CtVariableReadImpl
location: ExceptionContext.java179
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `msgPatterns.add(pat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 179, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `msgPatterns.add(pat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 450, #gens: 161, #ops: 1, parent:449] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 450, errors: [ExceptionContext.java:268: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:268: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:268: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:268: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:268: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:270: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:270: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:271: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:272: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:273: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:273: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:273: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:273: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:274: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:274: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:274: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:274: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:274: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:274: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:274: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:283: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:283: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:283: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:283: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:283: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:283: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:283: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:283: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:290: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:290: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:290: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:290: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:290: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:290: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:292: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:292: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:292: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:292: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:292: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:292: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:292: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:292: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:293: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:294: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:295: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:296: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:297: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:297: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:297: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:297: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:298: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:299: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:299: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:299: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:299: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:300: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	  ^, ExceptionContext.java:300: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	^, ExceptionContext.java:300: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	        ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:300: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:300: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                    ^, ExceptionContext.java:300: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1. 		final int len = in.readInt(); 		msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>(len); 		msgArguments = new java.util.ArrayList<java.lang.Object[]>(len); 		// Step 2.
	    	                                                                                                                           ^, ExceptionContext.java:302: error: illegal start of expression
	 * Serialize {@link #context}.
	 ^, ExceptionContext.java:302: error: ';' expected
	 * Serialize {@link #context}.
	            ^, ExceptionContext.java:302: error: illegal character: '#'
	 * Serialize {@link #context}.
	                    ^, ExceptionContext.java:302: error: illegal start of type
	 * Serialize {@link #context}.
	                            ^, ExceptionContext.java:302: error: ';' expected
	 * Serialize {@link #context}.
	                             ^, ExceptionContext.java:303: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:304: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:305: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:306: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:307: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:307: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:307: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:307: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:308: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	  ^, ExceptionContext.java:308: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	^, ExceptionContext.java:308: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	        ^, ExceptionContext.java:308: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                             ^, ExceptionContext.java:308: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                            ^, ExceptionContext.java:308: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                            ^, ExceptionContext.java:308: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = context.keySet().size(); 		out.writeInt(len); 		for (java.lang.String key : context.keySet()) { 			// Step 2. 			out.writeObject(key); 			final java.lang.Object value = context.get(key); 			if (value instanceof java.io.Serializable) { 				// Step 3a. 				out.writeObject(value);} else { 				// Step 3b. 				out.writeObject(nonSerializableReplacement(value));}}} 	/**
	    	                                                                                        ^, ExceptionContext.java:309: error: illegal start of expression
	 * Deserialize {@link #context}.
	 ^, ExceptionContext.java:309: error: ';' expected
	 * Deserialize {@link #context}.
	              ^, ExceptionContext.java:309: error: illegal character: '#'
	 * Deserialize {@link #context}.
	                      ^, ExceptionContext.java:309: error: illegal start of type
	 * Deserialize {@link #context}.
	                              ^, ExceptionContext.java:309: error: ';' expected
	 * Deserialize {@link #context}.
	                               ^, ExceptionContext.java:310: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:311: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:312: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:313: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:314: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:314: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:314: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:314: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:315: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:316: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:316: error: ';' expected
	 * 		This should never happen.
	   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(225): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(fmt.format(args)) ` -topatch--> `msgPatterns.add(pat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (449(f=1.0), 450(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (449(f=1.0), )
----------Running generation: 226, population size: 1

***** Generation 226 : 0
**Parent Variant: [Variant id: 451, #gens: 160, #ops: 0, parent:-]

--Child created id: 452
--Creating new operations for variant [Variant id: 452, #gens: 160, #ops: 0, parent:451]
---analyzing modificationPoint position: 31
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java235
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 235, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 452, #gens: 161, #ops: 1, parent:451] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 452
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-452/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(226): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (451(f=1.0), 452(f=1.0), )
Selected to next generation: IDs2--> (451(f=1.0), )
----------Running generation: 227, population size: 1

***** Generation 227 : 0
**Parent Variant: [Variant id: 453, #gens: 160, #ops: 0, parent:-]

--Child created id: 454
--Creating new operations for variant [Variant id: 454, #gens: 160, #ops: 0, parent:453]
---analyzing modificationPoint position: 17
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 25
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch []
location: LocalizedFormats.java373
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `// do nothing here` (spoon.support.reflect.code.CtCommentImpl) 
---MP=org.apache.commons.math.exception.util.LocalizedFormats line: 373, pointed element: CtCommentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `// do nothing here` (spoon.support.reflect.code.CtCommentImpl) 

--Summary Creation: for variant [Variant id: 454, #gens: 161, #ops: 1, parent:453] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 454, errors: [LocalizedFormats.java:373: error: 'try' without 'catch', 'finally' or resource declarations
	 */ 	public java.lang.String getLocalizedString(final java.util.Locale locale) { 		try {
	    	                                                                            		^, LocalizedFormats.java:383: error: illegal start of type
				return bundle.getString(toString());}} catch (java.util.MissingResourceException mre) { 			// do nothing here}
				                                       ^]
Ingredient counter is Zero
---Undoing: gnrtn(227): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...] ` -topatch--> `// do nothing here` (spoon.support.reflect.code.CtCommentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (453(f=1.0), 454(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (453(f=1.0), )
----------Running generation: 228, population size: 1

***** Generation 228 : 0
**Parent Variant: [Variant id: 455, #gens: 160, #ops: 0, parent:-]

--Child created id: 456
--Creating new operations for variant [Variant id: 456, #gens: 160, #ops: 0, parent:455]
---analyzing modificationPoint position: 75
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]
---analyzing modificationPoint position: 89
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  x[1] = getStartValue()
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 28
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS spoon.support.reflect.code.CtFieldReadImpl
location: TooManyEvaluationsException.java38
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.TooManyEvaluationsException line: 38, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 456, #gens: 161, #ops: 1, parent:455] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 456
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-456/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(228): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (455(f=1.0), 456(f=1.0), )
Selected to next generation: IDs2--> (455(f=1.0), )
----------Running generation: 229, population size: 1

***** Generation 229 : 0
**Parent Variant: [Variant id: 457, #gens: 160, #ops: 0, parent:-]

--Child created id: 458
--Creating new operations for variant [Variant id: 458, #gens: 160, #ops: 0, parent:457]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 90
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  x[2] = getMax()
---analyzing modificationPoint position: 65
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  // check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java232
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 232, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 458, #gens: 161, #ops: 1, parent:457] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 458
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-458/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(229): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// target for the next evaluation point double targetY ` -topatch--> `x[1] = getStartValue()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (457(f=1.0), 458(f=3.0), )
Selected to next generation: IDs2--> (457(f=1.0), )
----------Running generation: 230, population size: 1

***** Generation 230 : 0
**Parent Variant: [Variant id: 459, #gens: 160, #ops: 0, parent:-]

--Child created id: 460
--Creating new operations for variant [Variant id: 460, #gens: 160, #ops: 0, parent:459]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 33
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 460, #gens: 159, #ops: 1, parent:459] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 460
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-460/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(230): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (459(f=1.0), 460(f=4.0), )
Selected to next generation: IDs2--> (459(f=1.0), )
----------Running generation: 231, population size: 1

***** Generation 231 : 0
**Parent Variant: [Variant id: 461, #gens: 160, #ops: 0, parent:-]

--Child created id: 462
--Creating new operations for variant [Variant id: 462, #gens: 160, #ops: 0, parent:461]
---analyzing modificationPoint position: 87
---modifPoint 0 not mutation generated in  final double[] y = new double[maximalOrder + 1]
---analyzing modificationPoint position: 88
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  x[0] = getMin()
---analyzing modificationPoint position: 98
location: MathIllegalStateException.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 462, #gens: 159, #ops: 1, parent:461] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 462, errors: [MathIllegalStateException.java:71: error: variable context might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(231): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (461(f=1.0), 462(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (461(f=1.0), )
----------Running generation: 232, population size: 1

***** Generation 232 : 0
**Parent Variant: [Variant id: 463, #gens: 160, #ops: 0, parent:-]

--Child created id: 464
--Creating new operations for variant [Variant id: 464, #gens: 160, #ops: 0, parent:463]
---analyzing modificationPoint position: 3
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java80
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getMessage()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 80, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getMessage()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 464, #gens: 160, #ops: 1, parent:463] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 464
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-464/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(232): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getMessage()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (463(f=1.0), 464(f=1.0), )
Selected to next generation: IDs2--> (463(f=1.0), )
----------Running generation: 233, population size: 1

***** Generation 233 : 0
**Parent Variant: [Variant id: 465, #gens: 160, #ops: 0, parent:-]

--Child created id: 466
--Creating new operations for variant [Variant id: 466, #gens: 160, #ops: 0, parent:465]
---analyzing modificationPoint position: 64
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java205
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 205, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 466, #gens: 161, #ops: 1, parent:465] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 466, errors: [BracketingNthOrderBrentSolver.java:236: error: <identifier> expected
				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;
				       ^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			  ^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(233): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (465(f=1.0), 466(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (465(f=1.0), )
----------Running generation: 234, population size: 1

***** Generation 234 : 0
**Parent Variant: [Variant id: 467, #gens: 160, #ops: 0, parent:-]

--Child created id: 468
--Creating new operations for variant [Variant id: 468, #gens: 160, #ops: 0, parent:467]
---analyzing modificationPoint position: 92
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  // evaluate initial guess y[1] = computeObjectiveValue(x[1])
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 31
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 3 not mutation generated in  // we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]
---analyzing modificationPoint position: 17
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 4 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 7
location: BaseAbstractUnivariateRealSolver.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 468, #gens: 159, #ops: 1, parent:467] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 468
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-468/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58735
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58735
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(234): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (467(f=1.0), 468(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (467(f=1.0), )
----------Running generation: 235, population size: 1

***** Generation 235 : 0
**Parent Variant: [Variant id: 469, #gens: 160, #ops: 0, parent:-]

--Child created id: 470
--Creating new operations for variant [Variant id: 470, #gens: 160, #ops: 0, parent:469]
---analyzing modificationPoint position: 105
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [searchMax]
--> var from patch: searchMax spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java134
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return relativeAccuracy ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 134, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return relativeAccuracy ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 470, #gens: 160, #ops: 1, parent:469] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 470
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-470/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 15] ,[]
-Valid?: |false|5|15|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(235): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return relativeAccuracy ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (469(f=1.0), 470(f=5.0), )
Selected to next generation: IDs2--> (469(f=1.0), )
----------Running generation: 236, population size: 1

***** Generation 236 : 0
**Parent Variant: [Variant id: 471, #gens: 160, #ops: 0, parent:-]

--Child created id: 472
--Creating new operations for variant [Variant id: 472, #gens: 160, #ops: 0, parent:471]
---analyzing modificationPoint position: 5
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return getMessage(java.util.Locale.getDefault())
---analyzing modificationPoint position: 152
location: ArgUtils.java44
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object o : array) { 	if (o instanceof java.lang.Object[]) { 		for (java.lang.Object o[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 472, #gens: 159, #ops: 1, parent:471] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 472
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-472/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(236): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object o : array) { 	if (o instanceof java.lang.Object[]) { 		for (java.lang.Object o[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (471(f=1.0), 472(f=1.0), )
Selected to next generation: IDs2--> (471(f=1.0), )
----------Running generation: 237, population size: 1

***** Generation 237 : 0
**Parent Variant: [Variant id: 473, #gens: 160, #ops: 0, parent:-]

--Child created id: 474
--Creating new operations for variant [Variant id: 474, #gens: 160, #ops: 0, parent:473]
---analyzing modificationPoint position: 3
---modifPoint 0 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 8
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java86
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `return context.getMessage()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 86, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `return context.getMessage()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 474, #gens: 161, #ops: 1, parent:473] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 474, errors: [MathIllegalStateException.java:87: error: unreachable statement
		return context.getLocalizedMessage();
		^]
Ingredient counter is Zero
---Undoing: gnrtn(237): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `return context.getMessage()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (473(f=1.0), 474(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (473(f=1.0), )
----------Running generation: 238, population size: 1

***** Generation 238 : 0
**Parent Variant: [Variant id: 475, #gens: 160, #ops: 0, parent:-]

--Child created id: 476
--Creating new operations for variant [Variant id: 476, #gens: 160, #ops: 0, parent:475]
---analyzing modificationPoint position: 75
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (java.lang.Double.isNaN(nextX)) { 	// fall back to bisection 	nextX = xA + (0.5 * (xB - xA)); 	st[...]
---analyzing modificationPoint position: 42
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [y, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java318
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 318, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 476, #gens: 160, #ops: 1, parent:475] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 476
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-476/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 7, was successful: false, cases executed: 15] ,[]
-Valid?: |false|7|15|[]|, fitness 7.0
Ingredient counter is Zero
---Undoing: gnrtn(238): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (475(f=1.0), 476(f=7.0), )
Selected to next generation: IDs2--> (475(f=1.0), )
----------Running generation: 239, population size: 1

***** Generation 239 : 0
**Parent Variant: [Variant id: 477, #gens: 160, #ops: 0, parent:-]

--Child created id: 478
--Creating new operations for variant [Variant id: 478, #gens: 160, #ops: 0, parent:477]
---analyzing modificationPoint position: 55
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  signChangeIndex = 1
---analyzing modificationPoint position: 43
location: BracketingNthOrderBrentSolver.java319
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 478, #gens: 159, #ops: 1, parent:477] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 478
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-478/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(239): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `y[signChangeIndex] = nextY ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (477(f=1.0), 478(f=4.0), )
Selected to next generation: IDs2--> (477(f=1.0), )
----------Running generation: 240, population size: 1

***** Generation 240 : 0
**Parent Variant: [Variant id: 479, #gens: 160, #ops: 0, parent:-]

--Child created id: 480
--Creating new operations for variant [Variant id: 480, #gens: 160, #ops: 0, parent:479]
---analyzing modificationPoint position: 60
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  int agingA = 0
---analyzing modificationPoint position: 92
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java154
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 480, #gens: 161, #ops: 1, parent:479] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 480, errors: [BracketingNthOrderBrentSolver.java:376: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			^, BracketingNthOrderBrentSolver.java:376: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			      ^, BracketingNthOrderBrentSolver.java:376: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			        ^, BracketingNthOrderBrentSolver.java:376: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			         ^, BracketingNthOrderBrentSolver.java:376: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			          ^, BracketingNthOrderBrentSolver.java:376: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		^, BracketingNthOrderBrentSolver.java:376: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		^, BracketingNthOrderBrentSolver.java:376: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				            ^, BracketingNthOrderBrentSolver.java:379: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}} 			// target for the next evaluation point 			double targetY; 			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the high bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the low bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;} else { 				// bracketing is balanced, try to find the root itself 				targetY = 0;} 			// make a few attempts to guess a root, 			double nextX; 			int start = 0; 			int end = nbPoints; 			do { 				// guess a value for current target, using inverse polynomial interpolation 				java.lang.System.arraycopy(x, start, tmpX, start, end - start); 				nextX = guessX(targetY, tmpX, y, start, end); 				if (!((nextX > xA) && (nextX < xB))) { 					// the guessed root is not strictly inside of the tightest bracketing interval 					// the guessed root is either not strictly inside the interval or it 					// is a NaN (which occurs when some sampling points share the same y) 					// we try again with a lower interpolation order
						                                                                    ^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
						++start;} else { 						// we have more points after sign change, drop the highest point
						        ^, BracketingNthOrderBrentSolver.java:382: error: class, interface, or enum expected
						--end;} 					// we need to do one more attempt 					nextX = java.lang.Double.NaN;}} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) ); 			if (java.lang.Double.isNaN(nextX)) { 				// fall back to bisection 				nextX = xA + (0.5 * (xB - xA)); 				start = signChangeIndex - 1; 				end = signChangeIndex;} 			// evaluate the function at the guessed root 			final double nextY = computeObjectiveValue(nextX); 			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 				// we have found an exact root, since it is not an approximation 				// we don't need to bother about the allowed solutions setting
						      ^, BracketingNthOrderBrentSolver.java:383: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				             ^, BracketingNthOrderBrentSolver.java:393: error: class, interface, or enum expected
	 * @param targetY
	          ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
	 * @param x
	          ^, BracketingNthOrderBrentSolver.java:398: error: class, interface, or enum expected
	 * @param y
	          ^, BracketingNthOrderBrentSolver.java:400: error: class, interface, or enum expected
	 * @param start
	          ^, BracketingNthOrderBrentSolver.java:402: error: class, interface, or enum expected
	 * @param end
	          ^, BracketingNthOrderBrentSolver.java:404: error: <identifier> expected
	 * @return guessed root (will be a NaN if two points share the same y)
	    ^, BracketingNthOrderBrentSolver.java:404: error: class, interface, or enum expected
	 * @return guessed root (will be a NaN if two points share the same y)
	           ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:405: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                    ^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                   ^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			      ^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:406: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);}} 		// evaluate Q(targetY) 		double x0 = 0; 		for (int j = end - 1; j >= start; --j) { 			x0 = x[j] + (x0 * (targetY - y[j]));} 		return x0;} 	/**
		                                          			                                   			                                    				                                                 ^, BracketingNthOrderBrentSolver.java:407: error: class, interface, or enum expected
	 * {@inheritDoc }
	                ^, BracketingNthOrderBrentSolver.java:408: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max);} 	/**
	    	       ^, BracketingNthOrderBrentSolver.java:408: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max);} 	/**
	    	                                                                                                                                                                                            		                                		^, BracketingNthOrderBrentSolver.java:408: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max);} 	/**
	    	                                                                                                                                                                                            		                                		                                         ^, BracketingNthOrderBrentSolver.java:410: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max, startValue);}}
	    	       ^, BracketingNthOrderBrentSolver.java:410: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max, startValue);}}
	    	                                                                                                                                                                                                               		                                		^, BracketingNthOrderBrentSolver.java:410: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) { 		this.allowed = allowedSolution; 		return super.solve(maxEval, f, min, max, startValue);}}
	    	                                                                                                                                                                                                               		                                		                                                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(240): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `// evaluate Q(targetY) double x0 = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (479(f=1.0), 480(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (479(f=1.0), )
----------Running generation: 241, population size: 1

***** Generation 241 : 0
**Parent Variant: [Variant id: 481, #gens: 160, #ops: 0, parent:-]

--Child created id: 482
--Creating new operations for variant [Variant id: 482, #gens: 160, #ops: 0, parent:481]
---analyzing modificationPoint position: 19
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch [msgPatterns]
--> var from patch: msgPatterns spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java175
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 175, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 482, #gens: 160, #ops: 1, parent:481] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 482, errors: [ExceptionContext.java:227: error: illegal start of expression
	 * Serialize this object to the given stream.
	 ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	            ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                           ^, ExceptionContext.java:227: error: ';' expected
	 * Serialize this object to the given stream.
	                                     ^, ExceptionContext.java:227: error: <identifier> expected
	 * Serialize this object to the given stream.
	                                             ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	 ^, ExceptionContext.java:229: error: illegal start of expression
	 * @param out
	   ^, ExceptionContext.java:230: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:231: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:232: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:232: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:232: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	  ^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	^, ExceptionContext.java:233: error: illegal start of expression
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                        ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                       ^, ExceptionContext.java:233: error: not a statement
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                       ^, ExceptionContext.java:233: error: ';' expected
	 */ 	private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException { 		out.writeObject(throwable); 		serializeMessages(out); 		serializeContext(out);} 	/**
	    	                                                                                   ^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	^, ExceptionContext.java:242: error: illegal start of expression
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	        ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                       ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                    ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                    ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                ^, ExceptionContext.java:242: error: not a statement
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                           ^, ExceptionContext.java:242: error: ';' expected
	 */ 	private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		throwable = ((java.lang.Throwable) (in.readObject())); 		deSerializeMessages(in); 		deSerializeContext(in);} 	/**
	    	                                                                                                                  ^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	^, ExceptionContext.java:249: error: illegal start of expression
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	        ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                              ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                             ^, ExceptionContext.java:249: error: not a statement
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                             ^, ExceptionContext.java:249: error: ';' expected
	 */ 	private void serializeMessages(java.io.ObjectOutputStream out) throws java.io.IOException { 		// Step 1. 		final int len = msgPatterns.size(); 		out.writeInt(len); 		// Step 2.
	    	                                                                                         ^, ExceptionContext.java:251: error: illegal start of expression
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	 ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	              ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                      ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                  ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                   ^, ExceptionContext.java:251: error: illegal character: '#'
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                               ^, ExceptionContext.java:251: error: illegal start of type
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                            ^, ExceptionContext.java:251: error: ';' expected
	 * Deserialize {@link #msgPatterns} and {@link #msgArguments}.
	                                                             ^, ExceptionContext.java:252: error: illegal start of expression
	 *
	 ^, ExceptionContext.java:253: error: illegal start of expression
	 * @param in
	   ^, ExceptionContext.java:254: error: <identifier> expected
	 * 		Stream.
	   		       ^, ExceptionContext.java:255: error: <identifier> expected
	 * @throws IOException
	    ^, ExceptionContext.java:256: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:256: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:256: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:257: error: <identifier> expected
	 * @throws ClassNotFoundException
	    ^, ExceptionContext.java:258: error: not a statement
	 * 		This should never happen.
	 ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		    ^, ExceptionContext.java:258: error: ';' expected
	 * 		This should never happen.
	   		                 ^, ExceptionContext.java:258: error: <identifier> expected
	 * 		This should never happen.
	   		                         ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	  ^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	^, ExceptionContext.java:259: error: illegal start of expression
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	        ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                             ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                             ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                         ^, ExceptionContext.java:259: error: not a statement
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                    ^, ExceptionContext.java:259: error: ';' expected
	 */ 	private void deSerializeMessages(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException { 		// Step 1.
	    	                                                                                                                           ^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	^, ExceptionContext.java:286: error: illegal start of expression
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	        ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                             ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                            ^, ExceptionContext.java:286: error: not a statement
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                            ^, ExceptionContext.java:286: error: ';' expected
	 */ 	private void serializeContext(java.io.ObjectOutputStream out) throws java.io.IOException {
	    	                                                                                        ^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	^, ExceptionContext.java:313: error: illegal start of expression
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	        ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                               ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                            ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                            ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                        ^, ExceptionContext.java:313: error: not a statement
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                   ^, ExceptionContext.java:313: error: ';' expected
	 */ 	private void deSerializeContext(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
	    	                                                                                                                          ^, ExceptionContext.java:333: error: illegal start of expression
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                   ^, ExceptionContext.java:333: error: ';' expected
	 */ 	private java.lang.String nonSerializableReplacement(java.lang.Object obj) {
	    	                                                                        ^, ExceptionContext.java:336: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(241): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i) ` -topatch--> `// Step 1. final int len = msgPatterns.size()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (481(f=1.0), 482(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (481(f=1.0), )
----------Running generation: 242, population size: 1

***** Generation 242 : 0
**Parent Variant: [Variant id: 483, #gens: 160, #ops: 0, parent:-]

--Child created id: 484
--Creating new operations for variant [Variant id: 484, #gens: 160, #ops: 0, parent:483]
---analyzing modificationPoint position: 16
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  int count = 0
---analyzing modificationPoint position: 83
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }
---analyzing modificationPoint position: 48
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [nextX, java.lang.Double.NaN]
--> var from patch: nextX spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// we need to do one more attempt nextX = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// we need to do one more attempt nextX = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 484, #gens: 160, #ops: 1, parent:483] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 484
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-484/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(242): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// we need to do one more attempt nextX = java.lang.Double.NaN` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (483(f=1.0), 484(f=2.0), )
Selected to next generation: IDs2--> (483(f=1.0), )
----------Running generation: 243, population size: 1

***** Generation 243 : 0
**Parent Variant: [Variant id: 485, #gens: 160, #ops: 0, parent:-]

--Child created id: 486
--Creating new operations for variant [Variant id: 486, #gens: 160, #ops: 0, parent:485]
---analyzing modificationPoint position: 86
---modifPoint 0 not mutation generated in  // prepare arrays with the first points final double[] x = new double[maximalOrder + 1]
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java296
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 296, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 486, #gens: 161, #ops: 1, parent:485] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 486
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-486/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(243): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `evaluations.incrementCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (485(f=1.0), 486(f=1.0), )
Selected to next generation: IDs2--> (485(f=1.0), )
----------Running generation: 244, population size: 1

***** Generation 244 : 0
**Parent Variant: [Variant id: 487, #gens: 160, #ops: 0, parent:-]

--Child created id: 488
--Creating new operations for variant [Variant id: 488, #gens: 160, #ops: 0, parent:487]
---analyzing modificationPoint position: 106
---modifPoint 0 not mutation generated in  return functionValueAccuracy
---analyzing modificationPoint position: 10
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 127
Templates availables117
Attempts Base Ingredients  1 total 117
---modifPoint 2 not mutation generated in  return a
---analyzing modificationPoint position: 89
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [this.maximalOrder]
--> var from patch: this.maximalOrder spoon.support.reflect.code.CtFieldWriteImpl
location: BracketingNthOrderBrentSolver.java149
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[1] = getStartValue() ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 149, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[1] = getStartValue() ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 488, #gens: 160, #ops: 1, parent:487] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 488, errors: [BracketingNthOrderBrentSolver.java:149: error: cannot assign a value to final variable maximalOrder
		x[0] = getMin(); 		this.maximalOrder = maximalOrder;
		                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(244): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `x[1] = getStartValue() ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (487(f=1.0), 488(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (487(f=1.0), )
----------Running generation: 245, population size: 1

***** Generation 245 : 0
**Parent Variant: [Variant id: 489, #gens: 160, #ops: 0, parent:-]

--Child created id: 490
--Creating new operations for variant [Variant id: 490, #gens: 160, #ops: 0, parent:489]
---analyzing modificationPoint position: 51
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 0 not mutation generated in  this(org.apache.commons.math.exception.util.LocalizedFormats.MAX_COUNT_EXCEEDED, max)
---analyzing modificationPoint position: 25
---modifPoint 1 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]
---analyzing modificationPoint position: 13
---modifPoint 2 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 103
---modifPoint 3 not mutation generated in  return searchStart
---analyzing modificationPoint position: 62
---modifPoint 4 not mutation generated in  double yB = y[signChangeIndex]
---analyzing modificationPoint position: 124
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [absoluteAccuracy]
--> var from patch: absoluteAccuracy spoon.support.reflect.code.CtFieldReadImpl
SameName: final 

























































































double absoluteAccuracy
SameName: final 

























































































double absoluteAccuracy
Transforming shadowed variable in return absoluteAccuracy
location: BaseAbstractUnivariateRealSolver.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 95, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 490, #gens: 161, #ops: 1, parent:489] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 490, errors: [BaseAbstractUnivariateRealSolver.java:129: error: incompatible types: unexpected return value
		return absoluteAccuracy; 		this.functionValueAccuracy = functionValueAccuracy;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(245): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.functionValueAccuracy = functionValueAccuracy ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (489(f=1.0), 490(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (489(f=1.0), )
----------Running generation: 246, population size: 1

***** Generation 246 : 0
**Parent Variant: [Variant id: 491, #gens: 160, #ops: 0, parent:-]

--Child created id: 492
--Creating new operations for variant [Variant id: 492, #gens: 160, #ops: 0, parent:491]
---analyzing modificationPoint position: 13
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java128
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.US) ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 128, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.US) ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 492, #gens: 160, #ops: 1, parent:491] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 492, errors: [ExceptionContext.java:128: error: incompatible types: java.util.Set<java.lang.String> cannot be converted to java.lang.String
	public java.lang.String getMessage() { 		return context.keySet();
	                                       		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(246): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.US) ` -topatch--> `return context.keySet()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (491(f=1.0), 492(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (491(f=1.0), )
----------Running generation: 247, population size: 1

***** Generation 247 : 0
**Parent Variant: [Variant id: 493, #gens: 160, #ops: 0, parent:-]

--Child created id: 494
--Creating new operations for variant [Variant id: 494, #gens: 160, #ops: 0, parent:493]
---analyzing modificationPoint position: 96
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, signChangeIndex]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java169
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 169, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 494, #gens: 161, #ops: 1, parent:493] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 494, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(247): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (493(f=1.0), 494(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (493(f=1.0), )
----------Running generation: 248, population size: 1

***** Generation 248 : 0
**Parent Variant: [Variant id: 495, #gens: 160, #ops: 0, parent:-]

--Child created id: 496
--Creating new operations for variant [Variant id: 496, #gens: 160, #ops: 0, parent:495]
---analyzing modificationPoint position: 41
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  x[signChangeIndex] = nextX
---analyzing modificationPoint position: 80
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); }
---analyzing modificationPoint position: 6
location: ExceptionContext.java182
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 496, #gens: 159, #ops: 1, parent:495] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 496
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-496/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(248): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Add a separator if there are other messages. sb.append(separator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (495(f=1.0), 496(f=1.0), )
Selected to next generation: IDs2--> (495(f=1.0), )
----------Running generation: 249, population size: 1

***** Generation 249 : 0
**Parent Variant: [Variant id: 497, #gens: 160, #ops: 0, parent:-]

--Child created id: 498
--Creating new operations for variant [Variant id: 498, #gens: 160, #ops: 0, parent:497]
---analyzing modificationPoint position: 79
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  final int delta = (i + 1) - start
---analyzing modificationPoint position: 70
---modifPoint 1 not mutation generated in  int start = 0
---analyzing modificationPoint position: 10
location: BracketingNthOrderBrentSolver.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 498, #gens: 159, #ops: 1, parent:497] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 498
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-498/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(249): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (497(f=1.0), 498(f=2.0), )
Selected to next generation: IDs2--> (497(f=1.0), )
----------Running generation: 250, population size: 1

***** Generation 250 : 0
**Parent Variant: [Variant id: 499, #gens: 160, #ops: 0, parent:-]

--Child created id: 500
--Creating new operations for variant [Variant id: 500, #gens: 160, #ops: 0, parent:499]
---analyzing modificationPoint position: 139
location: Incrementor.java91
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `maximalCount = max ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 500, #gens: 159, #ops: 1, parent:499] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 500
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-500/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 11, was successful: false, cases executed: 15] ,[]
-Valid?: |false|11|15|[]|, fitness 11.0
Ingredient counter is Zero
---Undoing: gnrtn(250): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `maximalCount = max ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (499(f=1.0), 500(f=11.0), )
Selected to next generation: IDs2--> (499(f=1.0), )
----------Running generation: 251, population size: 1

***** Generation 251 : 0
**Parent Variant: [Variant id: 501, #gens: 160, #ops: 0, parent:-]

--Child created id: 502
--Creating new operations for variant [Variant id: 502, #gens: 160, #ops: 0, parent:501]
---analyzing modificationPoint position: 32
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 502, #gens: 159, #ops: 1, parent:501] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 502
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-502/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(251): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (501(f=1.0), 502(f=9.0), )
Selected to next generation: IDs2--> (501(f=1.0), )
----------Running generation: 252, population size: 1

***** Generation 252 : 0
**Parent Variant: [Variant id: 503, #gens: 160, #ops: 0, parent:-]

--Child created id: 504
--Creating new operations for variant [Variant id: 504, #gens: 160, #ops: 0, parent:503]
---analyzing modificationPoint position: 64
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [yA]
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java205
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 205, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 504, #gens: 160, #ops: 1, parent:503] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 504, errors: [BracketingNthOrderBrentSolver.java:205: error: variable absYA is already defined in method doSolve()
		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		double absYA = org.apache.commons.math.util.FastMath.abs(yA);
		                                                              		       ^, BracketingNthOrderBrentSolver.java:237: error: cannot find symbol
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			           ^
  symbol:   variable agingB
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:330: error: cannot find symbol
				agingB = 0;
				^
  symbol:   variable agingB
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:337: error: cannot find symbol
				++agingB;
				  ^
  symbol:   variable agingB
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(252): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (503(f=1.0), 504(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (503(f=1.0), )
----------Running generation: 253, population size: 1

***** Generation 253 : 0
**Parent Variant: [Variant id: 505, #gens: 160, #ops: 0, parent:-]

--Child created id: 506
--Creating new operations for variant [Variant id: 506, #gens: 160, #ops: 0, parent:505]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 2
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 506, #gens: 159, #ops: 1, parent:505] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 506, errors: [BracketingNthOrderBrentSolver.java:276: error: variable nextX might not have been initialized
			if (java.lang.Double.isNaN(nextX)) {
			                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(253): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (505(f=1.0), 506(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (505(f=1.0), )
----------Running generation: 254, population size: 1

***** Generation 254 : 0
**Parent Variant: [Variant id: 507, #gens: 160, #ops: 0, parent:-]

--Child created id: 508
--Creating new operations for variant [Variant id: 508, #gens: 160, #ops: 0, parent:507]
---analyzing modificationPoint position: 5
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 59
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  double absYA = org.apache.commons.math.util.FastMath.abs(yA)
---analyzing modificationPoint position: 129
---modifPoint 2 not mutation generated in  long yInt = java.lang.Double.doubleToLongBits(y)
---analyzing modificationPoint position: 14
---modifPoint 3 not mutation generated in  return buildMessage(locale, ": ")
---analyzing modificationPoint position: 111
location: BaseAbstractUnivariateRealSolver.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementEvaluationCount() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 508, #gens: 159, #ops: 1, parent:507] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 508
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-508/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 15] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2438secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-508/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.random.ISAACTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.distribution.ChiSquaredDistributionTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.ode.events.ReappearingEventTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.InteractionTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.random.StableRandomGeneratorTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 3199] ,[]
-Valid?: |false|4|3199|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(254): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementEvaluationCount() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (507(f=1.0), 508(f=4.0), )
Selected to next generation: IDs2--> (507(f=1.0), )
----------Running generation: 255, population size: 1

***** Generation 255 : 0
**Parent Variant: [Variant id: 509, #gens: 160, #ops: 0, parent:-]

--Child created id: 510
--Creating new operations for variant [Variant id: 510, #gens: 160, #ops: 0, parent:509]
---analyzing modificationPoint position: 26
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [this.sourceFormat]
--> var from patch: this.sourceFormat spoon.support.reflect.code.CtFieldWriteImpl
location: LocalizedFormats.java386
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `this.sourceFormat = sourceFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.util.LocalizedFormats line: 386, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `this.sourceFormat = sourceFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 510, #gens: 161, #ops: 1, parent:509] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 510, errors: [LocalizedFormats.java:383: error: cannot assign a value to final variable sourceFormat
		} 		this.sourceFormat = sourceFormat;
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(255): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// either the locale is not supported or the resource is unknown // don't translate and fall back to[...] ` -topatch--> `this.sourceFormat = sourceFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (509(f=1.0), 510(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (509(f=1.0), )
----------Running generation: 256, population size: 1

***** Generation 256 : 0
**Parent Variant: [Variant id: 511, #gens: 160, #ops: 0, parent:-]

--Child created id: 512
--Creating new operations for variant [Variant id: 512, #gens: 160, #ops: 0, parent:511]
---analyzing modificationPoint position: 8
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java86
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 86, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 512, #gens: 161, #ops: 1, parent:511] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 512, errors: [MathIllegalStateException.java:86: error: call to this must be first statement in constructor
	 */ 	@java.lang.Override 	public java.lang.String getLocalizedMessage() { 		this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE);
	    	                    	                                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(256): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (511(f=1.0), 512(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (511(f=1.0), )
----------Running generation: 257, population size: 1

***** Generation 257 : 0
**Parent Variant: [Variant id: 513, #gens: 160, #ops: 0, parent:-]

--Child created id: 514
--Creating new operations for variant [Variant id: 514, #gens: 160, #ops: 0, parent:513]
---analyzing modificationPoint position: 36
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xA, xB]
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java260
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 260, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 514, #gens: 161, #ops: 1, parent:513] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 514
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-514/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(257): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (513(f=1.0), 514(f=1.0), )
Selected to next generation: IDs2--> (513(f=1.0), )
----------Running generation: 258, population size: 1

***** Generation 258 : 0
**Parent Variant: [Variant id: 515, #gens: 160, #ops: 0, parent:-]

--Child created id: 516
--Creating new operations for variant [Variant id: 516, #gens: 160, #ops: 0, parent:515]
---analyzing modificationPoint position: 100
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java47
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 47, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 516, #gens: 160, #ops: 1, parent:515] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 516, errors: [MathIllegalStateException.java:70: error: call to this must be first statement in constructor
		this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE);} 	/**
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(258): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (515(f=1.0), 516(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (515(f=1.0), )
----------Running generation: 259, population size: 1

***** Generation 259 : 0
**Parent Variant: [Variant id: 517, #gens: 160, #ops: 0, parent:-]

--Child created id: 518
--Creating new operations for variant [Variant id: 518, #gens: 160, #ops: 0, parent:517]
---analyzing modificationPoint position: 20
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 103
Templates availables14
Attempts Base Ingredients  1 total 14
vars from patch [searchMax]
--> var from patch: searchMax spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 122, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 518, #gens: 160, #ops: 1, parent:517] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 518
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-518/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 11, was successful: false, cases executed: 15] ,[]
-Valid?: |false|11|15|[]|, fitness 11.0
Ingredient counter is Zero
---Undoing: gnrtn(259): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return searchStart ` -topatch--> `return searchMax` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (517(f=1.0), 518(f=11.0), )
Selected to next generation: IDs2--> (517(f=1.0), )
----------Running generation: 260, population size: 1

***** Generation 260 : 0
**Parent Variant: [Variant id: 519, #gens: 160, #ops: 0, parent:-]

--Child created id: 520
--Creating new operations for variant [Variant id: 520, #gens: 160, #ops: 0, parent:519]
---analyzing modificationPoint position: 22
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  sb.append(fmt.format(args))
---analyzing modificationPoint position: 118
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch [absoluteAccuracy]
--> var from patch: absoluteAccuracy spoon.support.reflect.code.CtVariableReadImpl
location: BaseAbstractUnivariateRealSolver.java179
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `function = f ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 179, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `function = f ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 520, #gens: 161, #ops: 1, parent:519] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 520, errors: [BaseAbstractUnivariateRealSolver.java:180: error: incompatible types: unexpected return value
		function = f; 		return absoluteAccuracy;
		              		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(260): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `function = f ` -topatch--> `return absoluteAccuracy` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (519(f=1.0), 520(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (519(f=1.0), )
----------Running generation: 261, population size: 1

***** Generation 261 : 0
**Parent Variant: [Variant id: 521, #gens: 160, #ops: 0, parent:-]

--Child created id: 522
--Creating new operations for variant [Variant id: 522, #gens: 160, #ops: 0, parent:521]
---analyzing modificationPoint position: 130
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 0 not mutation generated in  // Make lexicographically ordered as a two's-complement integer. if (xInt < 0) { 	xInt = org.apache.[...]
---analyzing modificationPoint position: 80
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 1 not mutation generated in  for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); }
---analyzing modificationPoint position: 56
---modifPoint 2 not mutation generated in  // prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...]
---analyzing modificationPoint position: 93
location: BracketingNthOrderBrentSolver.java155
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 522, #gens: 159, #ops: 1, parent:521] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 522
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-522/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(261): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (521(f=1.0), 522(f=3.0), )
Selected to next generation: IDs2--> (521(f=1.0), )
----------Running generation: 262, population size: 1

***** Generation 262 : 0
**Parent Variant: [Variant id: 523, #gens: 160, #ops: 0, parent:-]

--Child created id: 524
--Creating new operations for variant [Variant id: 524, #gens: 160, #ops: 0, parent:523]
---analyzing modificationPoint position: 94
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // evaluate first  endpoint y[0] = computeObjectiveValue(x[0])
---analyzing modificationPoint position: 66
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [absYB, yB]
--> var from patch: absYB spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: yB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java213
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 213, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 524, #gens: 161, #ops: 1, parent:523] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 524, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(262): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionVal[...] ` -topatch--> `absYB = org.apache.commons.math.util.FastMath.abs(yB)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (523(f=1.0), 524(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (523(f=1.0), )
----------Running generation: 263, population size: 1

***** Generation 263 : 0
**Parent Variant: [Variant id: 525, #gens: 160, #ops: 0, parent:-]

--Child created id: 526
--Creating new operations for variant [Variant id: 526, #gens: 160, #ops: 0, parent:525]
---analyzing modificationPoint position: 74
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...]
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  double xB = x[signChangeIndex]
---analyzing modificationPoint position: 101
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: BaseAbstractUnivariateRealSolver.java268
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...] ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 268, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...] ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 526, #gens: 160, #ops: 1, parent:525] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 526
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-526/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(263): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...] ` -topatch--> `evaluations.resetCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (525(f=1.0), 526(f=2.0), )
Selected to next generation: IDs2--> (525(f=1.0), )
----------Running generation: 264, population size: 1

***** Generation 264 : 0
**Parent Variant: [Variant id: 527, #gens: 160, #ops: 0, parent:-]

--Child created id: 528
--Creating new operations for variant [Variant id: 528, #gens: 160, #ops: 0, parent:527]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i)
---analyzing modificationPoint position: 50
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [x, signChangeIndex, nextX]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java329
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `x[signChangeIndex] = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 329, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `x[signChangeIndex] = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 528, #gens: 160, #ops: 1, parent:527] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 528
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-528/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(264): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `x[signChangeIndex] = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (527(f=1.0), 528(f=3.0), )
Selected to next generation: IDs2--> (527(f=1.0), )
----------Running generation: 265, population size: 1

***** Generation 265 : 0
**Parent Variant: [Variant id: 529, #gens: 160, #ops: 0, parent:-]

--Child created id: 530
--Creating new operations for variant [Variant id: 530, #gens: 160, #ops: 0, parent:529]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i)
---analyzing modificationPoint position: 10
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, signChangeIndex]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 530, #gens: 161, #ops: 1, parent:529] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 530, errors: [BracketingNthOrderBrentSolver.java:274: error: variable yA is already defined in method doSolve()
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) ); 			double yA = y[signChangeIndex - 1];
			                                                                 			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(265): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `double yA = y[signChangeIndex - 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (529(f=1.0), 530(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (529(f=1.0), )
----------Running generation: 266, population size: 1

***** Generation 266 : 0
**Parent Variant: [Variant id: 531, #gens: 160, #ops: 0, parent:-]

--Child created id: 532
--Creating new operations for variant [Variant id: 532, #gens: 160, #ops: 0, parent:531]
---analyzing modificationPoint position: 99
location: MathIllegalStateException.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 532, #gens: 159, #ops: 1, parent:531] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 532, errors: [MathIllegalStateException.java:48: error: variable context might not have been initialized
		context.addMessage(pattern, args);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(266): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `context = new org.apache.commons.math.exception.util.ExceptionContext(this) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (531(f=1.0), 532(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (531(f=1.0), )
----------Running generation: 267, population size: 1

***** Generation 267 : 0
**Parent Variant: [Variant id: 533, #gens: 160, #ops: 0, parent:-]

--Child created id: 534
--Creating new operations for variant [Variant id: 534, #gens: 160, #ops: 0, parent:533]
---analyzing modificationPoint position: 95
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]
---analyzing modificationPoint position: 46
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [agingA]
--> var from patch: agingA spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java325
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `agingA = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 325, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `agingA = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 534, #gens: 161, #ops: 1, parent:533] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 534
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-534/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(267): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// the sign change occurs before the inserted point xB = nextX ` -topatch--> `agingA = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (533(f=1.0), 534(f=9.0), )
Selected to next generation: IDs2--> (533(f=1.0), )
----------Running generation: 268, population size: 1

***** Generation 268 : 0
**Parent Variant: [Variant id: 535, #gens: 160, #ops: 0, parent:-]

--Child created id: 536
--Creating new operations for variant [Variant id: 536, #gens: 160, #ops: 0, parent:535]
---analyzing modificationPoint position: 76
---modifPoint 0 not mutation generated in  // evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX)
---analyzing modificationPoint position: 3
---modifPoint 1 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 80
location: BracketingNthOrderBrentSolver.java367
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 536, #gens: 159, #ops: 1, parent:535] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 536, errors: [BracketingNthOrderBrentSolver.java:369: error: variable declaration not allowed here
		for (int i = start; i < (end - 1); ++i) 			final int delta = (i + 1) - start;
		                                        			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(268): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = end - 1; j > i; --j) { 	x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]); } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (535(f=1.0), 536(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (535(f=1.0), )
----------Running generation: 269, population size: 1

***** Generation 269 : 0
**Parent Variant: [Variant id: 537, #gens: 160, #ops: 0, parent:-]

--Child created id: 538
--Creating new operations for variant [Variant id: 538, #gens: 160, #ops: 0, parent:537]
---analyzing modificationPoint position: 16
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  int count = 0
---analyzing modificationPoint position: 147
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 1 not mutation generated in  if (a > b) { 	return a; }
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
Name Conflict [len, in, msgPatterns, msgArguments]
---modifPoint 2 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 24
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 3 not mutation generated in  return sb.toString()
---analyzing modificationPoint position: 7
Templates availables33
Attempts Base Ingredients  1 total 33
vars from patch []
location: BaseAbstractUnivariateRealSolver.java296
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `incrementEvaluationCount()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver line: 296, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `incrementEvaluationCount()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 538, #gens: 161, #ops: 1, parent:537] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 538
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-538/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(269): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `incrementEvaluationCount()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (537(f=1.0), 538(f=1.0), )
Selected to next generation: IDs2--> (537(f=1.0), )
----------Running generation: 270, population size: 1

***** Generation 270 : 0
**Parent Variant: [Variant id: 539, #gens: 160, #ops: 0, parent:-]

--Child created id: 540
--Creating new operations for variant [Variant id: 540, #gens: 160, #ops: 0, parent:539]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java80
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 80, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 540, #gens: 161, #ops: 1, parent:539] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 540, errors: [MathIllegalStateException.java:87: error: unreachable statement
		return context.getLocalizedMessage(); 		return context.getMessage();} 	/**
		                                      		^]
Ingredient counter is Zero
---Undoing: gnrtn(270): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getMessage() ` -topatch--> `return context.getLocalizedMessage()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (539(f=1.0), 540(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (539(f=1.0), )
----------Running generation: 271, population size: 1

***** Generation 271 : 0
**Parent Variant: [Variant id: 541, #gens: 160, #ops: 0, parent:-]

--Child created id: 542
--Creating new operations for variant [Variant id: 542, #gens: 160, #ops: 0, parent:541]
---analyzing modificationPoint position: 132
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: Precision.java288
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean isEqual = org.apache.commons.math.util.FastMath.abs(xInt - yInt) <= maxUlps ` -topatch--> `long xInt = java.lang.Double.doubleToLongBits(x)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.Precision line: 288, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean isEqual = org.apache.commons.math.util.FastMath.abs(xInt - yInt) <= maxUlps ` -topatch--> `long xInt = java.lang.Double.doubleToLongBits(x)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 542, #gens: 160, #ops: 1, parent:541] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 542, errors: [Precision.java:287: error: variable xInt is already defined in method equals(double,double,int)
		} 		long xInt = java.lang.Double.doubleToLongBits(x);
		  		     ^, Precision.java:291: error: cannot find symbol
		return (isEqual && (!java.lang.Double.isNaN(x))) && (!java.lang.Double.isNaN(y));
		        ^
  symbol:   variable isEqual
  location: class org.apache.commons.math.util.Precision]
Ingredient counter is Zero
---Undoing: gnrtn(271): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean isEqual = org.apache.commons.math.util.FastMath.abs(xInt - yInt) <= maxUlps ` -topatch--> `long xInt = java.lang.Double.doubleToLongBits(x)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (541(f=1.0), 542(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (541(f=1.0), )
----------Running generation: 272, population size: 1

***** Generation 272 : 0
**Parent Variant: [Variant id: 543, #gens: 160, #ops: 0, parent:-]

--Child created id: 544
--Creating new operations for variant [Variant id: 544, #gens: 160, #ops: 0, parent:543]
---analyzing modificationPoint position: 13
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  return getMessage(java.util.Locale.US)
---analyzing modificationPoint position: 100
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE]
--> var from patch: org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java47
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 47, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 544, #gens: 161, #ops: 1, parent:543] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 544, errors: [MathIllegalStateException.java:70: error: call to this must be first statement in constructor
		this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE); 		context.addMessage(pattern, args);} 	/**
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(272): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `context.addMessage(pattern, args) ` -topatch--> `this(org.apache.commons.math.exception.util.LocalizedFormats.ILLEGAL_STATE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (543(f=1.0), 544(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (543(f=1.0), )
----------Running generation: 273, population size: 1

***** Generation 273 : 0
**Parent Variant: [Variant id: 545, #gens: 160, #ops: 0, parent:-]

--Child created id: 546
--Creating new operations for variant [Variant id: 546, #gens: 160, #ops: 0, parent:545]
---analyzing modificationPoint position: 24
---modifPoint 0 not mutation generated in  return sb.toString()
---analyzing modificationPoint position: 42
location: BracketingNthOrderBrentSolver.java318
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 546, #gens: 159, #ops: 1, parent:545] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 546
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-546/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(273): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (545(f=1.0), 546(f=4.0), )
Selected to next generation: IDs2--> (545(f=1.0), )
----------Running generation: 274, population size: 1

***** Generation 274 : 0
**Parent Variant: [Variant id: 547, #gens: 160, #ops: 0, parent:-]

--Child created id: 548
--Creating new operations for variant [Variant id: 548, #gens: 160, #ops: 0, parent:547]
---analyzing modificationPoint position: 21
Templates availables16
Attempts Base Ingredients  1 total 16
vars from patch []
location: ExceptionContext.java177
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 177, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 548, #gens: 160, #ops: 1, parent:547] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 548, errors: [ExceptionContext.java:177: error: variable count is already defined in method buildMessage(java.util.Locale,java.lang.String)
			final java.lang.Object[] args = msgArguments.get(i); 			int count = 0;
			                                                     			    ^, ExceptionContext.java:180: error: cannot find symbol
			sb.append(fmt.format(args));
			          ^
  symbol:   variable fmt
  location: class org.apache.commons.math.exception.util.ExceptionContext]
Ingredient counter is Zero
---Undoing: gnrtn(274): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...] ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (547(f=1.0), 548(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (547(f=1.0), )
----------Running generation: 275, population size: 1

***** Generation 275 : 0
**Parent Variant: [Variant id: 549, #gens: 160, #ops: 0, parent:-]

--Child created id: 550
--Creating new operations for variant [Variant id: 550, #gens: 160, #ops: 0, parent:549]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 12
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 131
Templates availables55
Attempts Base Ingredients  1 total 55
---modifPoint 2 not mutation generated in  if (yInt < 0) { 	yInt = org.apache.commons.math.util.Precision.SGN_MASK - yInt; }
---analyzing modificationPoint position: 6
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 3 not mutation generated in  // Add a separator if there are other messages. sb.append(separator)
---analyzing modificationPoint position: 96
location: BracketingNthOrderBrentSolver.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 550, #gens: 159, #ops: 1, parent:549] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 550, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex might not have been initialized
		double xA = x[signChangeIndex - 1];
		              ^, BracketingNthOrderBrentSolver.java:248: error: variable nbPoints might not have been initialized
			int end = nbPoints;
			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(275): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (549(f=1.0), 550(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (549(f=1.0), )
----------Running generation: 276, population size: 1

***** Generation 276 : 0
**Parent Variant: [Variant id: 551, #gens: 160, #ops: 0, parent:-]

--Child created id: 552
--Creating new operations for variant [Variant id: 552, #gens: 160, #ops: 0, parent:551]
---analyzing modificationPoint position: 40
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java316
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 316, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 552, #gens: 161, #ops: 1, parent:551] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 552
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-552/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(276): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (551(f=1.0), 552(f=1.0), )
Selected to next generation: IDs2--> (551(f=1.0), )
----------Running generation: 277, population size: 1

***** Generation 277 : 0
**Parent Variant: [Variant id: 553, #gens: 160, #ops: 0, parent:-]

--Child created id: 554
--Creating new operations for variant [Variant id: 554, #gens: 160, #ops: 0, parent:553]
---analyzing modificationPoint position: 17
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  final int len = msgPatterns.size()
---analyzing modificationPoint position: 67
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]
---analyzing modificationPoint position: 79
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  final int delta = (i + 1) - start
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 554, #gens: 161, #ops: 1, parent:553] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 554
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-554/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(277): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (553(f=1.0), 554(f=1.0), )
Selected to next generation: IDs2--> (553(f=1.0), )
----------Running generation: 278, population size: 1

***** Generation 278 : 0
**Parent Variant: [Variant id: 555, #gens: 160, #ops: 0, parent:-]

--Child created id: 556
--Creating new operations for variant [Variant id: 556, #gens: 160, #ops: 0, parent:555]
---analyzing modificationPoint position: 49
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 556, #gens: 159, #ops: 1, parent:555] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 556
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-556/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(278): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (555(f=1.0), 556(f=3.0), )
Selected to next generation: IDs2--> (555(f=1.0), )
----------Running generation: 279, population size: 1

***** Generation 279 : 0
**Parent Variant: [Variant id: 557, #gens: 160, #ops: 0, parent:-]

--Child created id: 558
--Creating new operations for variant [Variant id: 558, #gens: 160, #ops: 0, parent:557]
---analyzing modificationPoint position: 26
---modifPoint 0 not mutation generated in  // either the locale is not supported or the resource is unknown // don't translate and fall back to[...]
---analyzing modificationPoint position: 15
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 1 not mutation generated in  final java.lang.StringBuilder sb = new java.lang.StringBuilder()
---analyzing modificationPoint position: 79
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java366
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int delta = (i + 1) - start ` -topatch--> `// prepare arrays with the first points final double[] x = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 366, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int delta = (i + 1) - start ` -topatch--> `// prepare arrays with the first points final double[] x = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 558, #gens: 160, #ops: 1, parent:557] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 558, errors: [BracketingNthOrderBrentSolver.java:375: error: illegal start of type
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: ')' expected
		for (int j = end - 1; j >= start; --j) {
		          ^, BracketingNthOrderBrentSolver.java:375: error: <identifier> expected
		for (int j = end - 1; j >= start; --j) {
		                ^, BracketingNthOrderBrentSolver.java:375: error: illegal start of type
		for (int j = end - 1; j >= start; --j) {
		                   ^, BracketingNthOrderBrentSolver.java:375: error: <identifier> expected
		for (int j = end - 1; j >= start; --j) {
		                    ^, BracketingNthOrderBrentSolver.java:375: error: ';' expected
		for (int j = end - 1; j >= start; --j) {
		                     ^, BracketingNthOrderBrentSolver.java:375: error: illegal start of type
		for (int j = end - 1; j >= start; --j) {
		                        ^, BracketingNthOrderBrentSolver.java:375: error: illegal start of type
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:375: error: ';' expected
		for (int j = end - 1; j >= start; --j) {
		                                    ^, BracketingNthOrderBrentSolver.java:375: error: illegal start of type
		for (int j = end - 1; j >= start; --j) {
		                                     ^, BracketingNthOrderBrentSolver.java:375: error: <identifier> expected
		for (int j = end - 1; j >= start; --j) {
		                                      ^, BracketingNthOrderBrentSolver.java:375: error: ';' expected
		for (int j = end - 1; j >= start; --j) {
		                                        ^, BracketingNthOrderBrentSolver.java:376: error: illegal start of type
			x0 = x[j] + (x0 * (targetY - y[j]));
			   ^, BracketingNthOrderBrentSolver.java:376: error: ']' expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			       ^, BracketingNthOrderBrentSolver.java:376: error: illegal start of type
			x0 = x[j] + (x0 * (targetY - y[j]));
			        ^, BracketingNthOrderBrentSolver.java:376: error: <identifier> expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			         ^, BracketingNthOrderBrentSolver.java:376: error: <identifier> expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			               ^, BracketingNthOrderBrentSolver.java:376: error: ';' expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			                 ^, BracketingNthOrderBrentSolver.java:376: error: <identifier> expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			                          ^, BracketingNthOrderBrentSolver.java:376: error: ']' expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			                               ^, BracketingNthOrderBrentSolver.java:376: error: ';' expected
			x0 = x[j] + (x0 * (targetY - y[j]));
			                                ^, BracketingNthOrderBrentSolver.java:379: error: class, interface, or enum expected
		return x0;
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(279): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int delta = (i + 1) - start ` -topatch--> `// prepare arrays with the first points final double[] x = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (557(f=1.0), 558(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (557(f=1.0), )
----------Running generation: 280, population size: 1

***** Generation 280 : 0
**Parent Variant: [Variant id: 559, #gens: 160, #ops: 0, parent:-]

--Child created id: 560
--Creating new operations for variant [Variant id: 560, #gens: 160, #ops: 0, parent:559]
---analyzing modificationPoint position: 56
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java195
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `int end = nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 195, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `int end = nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 560, #gens: 160, #ops: 1, parent:559] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 560, errors: [BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                          ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                            ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                   ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                         ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                     ^, BracketingNthOrderBrentSolver.java:252: error: ';' expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                       ^, BracketingNthOrderBrentSolver.java:252: error: illegal start of type
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                             ^, BracketingNthOrderBrentSolver.java:252: error: <identifier> expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                              ^, BracketingNthOrderBrentSolver.java:252: error: ';' expected
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                                               ^, BracketingNthOrderBrentSolver.java:253: error: illegal start of type
				nextX = guessX(targetY, tmpX, y, start, end);
				      ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                      ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                            ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                               ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                                      ^, BracketingNthOrderBrentSolver.java:253: error: <identifier> expected
				nextX = guessX(targetY, tmpX, y, start, end);
				                                           ^, BracketingNthOrderBrentSolver.java:255: error: illegal start of type
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:255: error: illegal start of type
				if (!((nextX > xA) && (nextX < xB))) {
				    ^, BracketingNthOrderBrentSolver.java:255: error: ')' expected
				if (!((nextX > xA) && (nextX < xB))) {
				     ^, BracketingNthOrderBrentSolver.java:255: error: ';' expected
				if (!((nextX > xA) && (nextX < xB))) {
				      ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				            ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				                 ^, BracketingNthOrderBrentSolver.java:255: error: illegal start of type
				if (!((nextX > xA) && (nextX < xB))) {
				                   ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				                     ^, BracketingNthOrderBrentSolver.java:255: error: ';' expected
				if (!((nextX > xA) && (nextX < xB))) {
				                       ^, BracketingNthOrderBrentSolver.java:255: error: > expected
				if (!((nextX > xA) && (nextX < xB))) {
				                                 ^, BracketingNthOrderBrentSolver.java:255: error: <identifier> expected
				if (!((nextX > xA) && (nextX < xB))) {
				                                  ^, BracketingNthOrderBrentSolver.java:255: error: '(' expected
				if (!((nextX > xA) && (nextX < xB))) {
				                                   ^, BracketingNthOrderBrentSolver.java:274: error: class, interface, or enum expected
			} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) );
			  ^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(280): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `int end = nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (559(f=1.0), 560(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (559(f=1.0), )
----------Running generation: 281, population size: 1

***** Generation 281 : 0
**Parent Variant: [Variant id: 561, #gens: 160, #ops: 0, parent:-]

--Child created id: 562
--Creating new operations for variant [Variant id: 562, #gens: 160, #ops: 0, parent:561]
---analyzing modificationPoint position: 54
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 1 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java125
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `int nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 125, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `int nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 562, #gens: 161, #ops: 1, parent:561] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 562, errors: [BracketingNthOrderBrentSolver.java:176: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			^, BracketingNthOrderBrentSolver.java:176: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			      ^, BracketingNthOrderBrentSolver.java:176: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			        ^, BracketingNthOrderBrentSolver.java:176: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			         ^, BracketingNthOrderBrentSolver.java:176: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			          ^, BracketingNthOrderBrentSolver.java:176: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			              		^, BracketingNthOrderBrentSolver.java:176: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			              		              		^, BracketingNthOrderBrentSolver.java:176: error: class, interface, or enum expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else {
			              		              		                     		^, BracketingNthOrderBrentSolver.java:180: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:183: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:188: error: class, interface, or enum expected
				signChangeIndex = 2;
				^, BracketingNthOrderBrentSolver.java:189: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:191: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:196: error: class, interface, or enum expected
		final double[] tmpX = new double[x.length];
		      ^, BracketingNthOrderBrentSolver.java:199: error: class, interface, or enum expected
		double xA = x[signChangeIndex - 1];
		^, BracketingNthOrderBrentSolver.java:200: error: class, interface, or enum expected
		double yA = y[signChangeIndex - 1];
		^, BracketingNthOrderBrentSolver.java:201: error: class, interface, or enum expected
		double absYA = org.apache.commons.math.util.FastMath.abs(yA);
		^, BracketingNthOrderBrentSolver.java:202: error: class, interface, or enum expected
		int agingA = 0;
		^, BracketingNthOrderBrentSolver.java:203: error: class, interface, or enum expected
		double xB = x[signChangeIndex];
		^, BracketingNthOrderBrentSolver.java:204: error: class, interface, or enum expected
		double yB = y[signChangeIndex];
		^, BracketingNthOrderBrentSolver.java:205: error: class, interface, or enum expected
		double absYB = org.apache.commons.math.util.FastMath.abs(yB);
		^, BracketingNthOrderBrentSolver.java:206: error: class, interface, or enum expected
		int agingB = 0;
		^, BracketingNthOrderBrentSolver.java:209: error: class, interface, or enum expected
		while (true) {
		^, BracketingNthOrderBrentSolver.java:212: error: class, interface, or enum expected
			final double xTol = getAbsoluteAccuracy() + 
			      ^, BracketingNthOrderBrentSolver.java:214: error: class, interface, or enum expected
			if (((xB - xA) <= xTol) || (org.apache.commons.math.util.FastMath.max(absYA, absYB) < getFunctionValueAccuracy())) {
			^, BracketingNthOrderBrentSolver.java:218: error: class, interface, or enum expected
					case LEFT_SIDE :
					^, BracketingNthOrderBrentSolver.java:220: error: class, interface, or enum expected
					case RIGHT_SIDE :
					^, BracketingNthOrderBrentSolver.java:222: error: class, interface, or enum expected
					case BELOW_SIDE :
					^, BracketingNthOrderBrentSolver.java:224: error: class, interface, or enum expected
					case ABOVE_SIDE :
					^, BracketingNthOrderBrentSolver.java:226: error: class, interface, or enum expected
					default :
					        ^, BracketingNthOrderBrentSolver.java:228: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}
						                                                                    ^, BracketingNthOrderBrentSolver.java:234: error: class, interface, or enum expected
			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:237: error: class, interface, or enum expected
			} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) {
			^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(281): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...] ` -topatch--> `int nbPoints` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (561(f=1.0), 562(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (561(f=1.0), )
----------Running generation: 282, population size: 1

***** Generation 282 : 0
**Parent Variant: [Variant id: 563, #gens: 160, #ops: 0, parent:-]

--Child created id: 564
--Creating new operations for variant [Variant id: 564, #gens: 160, #ops: 0, parent:563]
---analyzing modificationPoint position: 93
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java155
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 155, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 564, #gens: 161, #ops: 1, parent:563] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 564, errors: [BracketingNthOrderBrentSolver.java:249: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		^, BracketingNthOrderBrentSolver.java:249: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		    ^, BracketingNthOrderBrentSolver.java:249: error: ')' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		     ^, BracketingNthOrderBrentSolver.java:249: error: ']' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		       ^, BracketingNthOrderBrentSolver.java:249: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		        ^, BracketingNthOrderBrentSolver.java:249: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		         ^, BracketingNthOrderBrentSolver.java:249: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		           ^, BracketingNthOrderBrentSolver.java:249: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		             ^, BracketingNthOrderBrentSolver.java:249: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		              ^, BracketingNthOrderBrentSolver.java:249: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		               ^, BracketingNthOrderBrentSolver.java:249: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                ^, BracketingNthOrderBrentSolver.java:249: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                 ^, BracketingNthOrderBrentSolver.java:249: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                   ^, BracketingNthOrderBrentSolver.java:249: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                     ^, BracketingNthOrderBrentSolver.java:249: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                      ^, BracketingNthOrderBrentSolver.java:249: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                        ^, BracketingNthOrderBrentSolver.java:250: error: ']' expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				         ^, BracketingNthOrderBrentSolver.java:250: error: ';' expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				          ^, BracketingNthOrderBrentSolver.java:250: error: class, interface, or enum expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				              			^, BracketingNthOrderBrentSolver.java:252: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}} 			// target for the next evaluation point 			double targetY; 			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the high bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the low bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;} else { 				// bracketing is balanced, try to find the root itself 				targetY = 0;} 			// make a few attempts to guess a root, 			double nextX; 			int start = 0; 			int end = nbPoints; 			do { 				// guess a value for current target, using inverse polynomial interpolation 				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
						                                                                    ^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(282): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (563(f=1.0), 564(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (563(f=1.0), )
----------Running generation: 283, population size: 1

***** Generation 283 : 0
**Parent Variant: [Variant id: 565, #gens: 160, #ops: 0, parent:-]

--Child created id: 566
--Creating new operations for variant [Variant id: 566, #gens: 160, #ops: 0, parent:565]
---analyzing modificationPoint position: 4
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 29
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [agingB]
--> var from patch: agingB spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java265
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `++agingB` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 265, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `++agingB` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 566, #gens: 160, #ops: 1, parent:565] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 566, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(283): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `++agingB` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (565(f=1.0), 566(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (565(f=1.0), )
----------Running generation: 284, population size: 1

***** Generation 284 : 0
**Parent Variant: [Variant id: 567, #gens: 160, #ops: 0, parent:-]

--Child created id: 568
--Creating new operations for variant [Variant id: 568, #gens: 160, #ops: 0, parent:567]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 40
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [y, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java316
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 316, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 568, #gens: 160, #ops: 1, parent:567] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 568
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-568/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(284): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `java.lang.System.arraycopy(y, 1, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (567(f=1.0), 568(f=3.0), )
Selected to next generation: IDs2--> (567(f=1.0), )
----------Running generation: 285, population size: 1

***** Generation 285 : 0
**Parent Variant: [Variant id: 569, #gens: 160, #ops: 0, parent:-]

--Child created id: 570
--Creating new operations for variant [Variant id: 570, #gens: 160, #ops: 0, parent:569]
---analyzing modificationPoint position: 32
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java294
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 294, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 570, #gens: 161, #ops: 1, parent:569] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 570
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-570/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(285): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we have been forced to ignore some points to keep bracketing, // they are probably too far from t[...] ` -topatch--> `// evaluate initial guess y[1] = computeObjectiveValue(x[1])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (569(f=1.0), 570(f=1.0), )
Selected to next generation: IDs2--> (569(f=1.0), )
----------Running generation: 286, population size: 1

***** Generation 286 : 0
**Parent Variant: [Variant id: 571, #gens: 160, #ops: 0, parent:-]

--Child created id: 572
--Creating new operations for variant [Variant id: 572, #gens: 160, #ops: 0, parent:571]
---analyzing modificationPoint position: 155
location: ExceptionContext.java66
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 572, #gens: 159, #ops: 1, parent:571] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 572
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-572/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 15] ,[]
-Valid?: |false|5|15|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(286): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `msgPatterns = new java.util.ArrayList<org.apache.commons.math.exception.util.Localizable>() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (571(f=1.0), 572(f=5.0), )
Selected to next generation: IDs2--> (571(f=1.0), )
----------Running generation: 287, population size: 1

***** Generation 287 : 0
**Parent Variant: [Variant id: 573, #gens: 160, #ops: 0, parent:-]

--Child created id: 574
--Creating new operations for variant [Variant id: 574, #gens: 160, #ops: 0, parent:573]
---analyzing modificationPoint position: 54
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // reduce interval if it brackets the root nbPoints = 2
---analyzing modificationPoint position: 12
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  if (maximalOrder < 2) { 	throw new org.apache.commons.math.exception.NumberIsTooSmallException(maxim[...]
---analyzing modificationPoint position: 62
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  double yB = y[signChangeIndex]
---analyzing modificationPoint position: 50
location: BracketingNthOrderBrentSolver.java329
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 574, #gens: 159, #ops: 1, parent:573] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 574
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-574/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(287): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `agingB = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (573(f=1.0), 574(f=3.0), )
Selected to next generation: IDs2--> (573(f=1.0), )
----------Running generation: 288, population size: 1

***** Generation 288 : 0
**Parent Variant: [Variant id: 575, #gens: 160, #ops: 0, parent:-]

--Child created id: 576
--Creating new operations for variant [Variant id: 576, #gens: 160, #ops: 0, parent:575]
---analyzing modificationPoint position: 62
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  double yB = y[signChangeIndex]
---analyzing modificationPoint position: 5
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 29
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java265
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `--signChangeIndex` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 265, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `--signChangeIndex` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 576, #gens: 160, #ops: 1, parent:575] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 576, errors: [BracketingNthOrderBrentSolver.java:346: error: while expected
	}
	 ^, BracketingNthOrderBrentSolver.java:368: error: '.class' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	               ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(288): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `--signChangeIndex` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (575(f=1.0), 576(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (575(f=1.0), )
----------Running generation: 289, population size: 1

***** Generation 289 : 0
**Parent Variant: [Variant id: 577, #gens: 160, #ops: 0, parent:-]

--Child created id: 578
--Creating new operations for variant [Variant id: 578, #gens: 160, #ops: 0, parent:577]
---analyzing modificationPoint position: 24
---modifPoint 0 not mutation generated in  return sb.toString()
---analyzing modificationPoint position: 4
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 578, #gens: 159, #ops: 1, parent:577] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 578
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-578/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(289): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (577(f=1.0), 578(f=2.0), )
Selected to next generation: IDs2--> (577(f=1.0), )
----------Running generation: 290, population size: 1

***** Generation 290 : 0
**Parent Variant: [Variant id: 579, #gens: 160, #ops: 0, parent:-]

--Child created id: 580
--Creating new operations for variant [Variant id: 580, #gens: 160, #ops: 0, parent:579]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 28
location: TooManyEvaluationsException.java38
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 580, #gens: 159, #ops: 1, parent:579] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 580
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-580/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(290): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (579(f=1.0), 580(f=1.0), )
Selected to next generation: IDs2--> (579(f=1.0), )
----------Running generation: 291, population size: 1

***** Generation 291 : 0
**Parent Variant: [Variant id: 581, #gens: 160, #ops: 0, parent:-]

--Child created id: 582
--Creating new operations for variant [Variant id: 582, #gens: 160, #ops: 0, parent:581]
---analyzing modificationPoint position: 70
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, nbPoints, signChangeIndex, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java246
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 246, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 582, #gens: 161, #ops: 1, parent:581] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 582, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(291): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `if ((y[0] * y[1]) < 0) {  	// reduce interval if it brackets the root 	nbPoints = 2; 	signChangeInde[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (581(f=1.0), 582(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (581(f=1.0), )
----------Running generation: 292, population size: 1

***** Generation 292 : 0
**Parent Variant: [Variant id: 583, #gens: 160, #ops: 0, parent:-]

--Child created id: 584
--Creating new operations for variant [Variant id: 584, #gens: 160, #ops: 0, parent:583]
---analyzing modificationPoint position: 48
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [start, signChangeIndex]
--> var from patch: start spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `start = signChangeIndex - 1` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `start = signChangeIndex - 1` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 584, #gens: 161, #ops: 1, parent:583] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 584
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-584/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(292): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `start = signChangeIndex - 1` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (583(f=1.0), 584(f=1.0), )
Selected to next generation: IDs2--> (583(f=1.0), )
----------Running generation: 293, population size: 1

***** Generation 293 : 0
**Parent Variant: [Variant id: 585, #gens: 160, #ops: 0, parent:-]

--Child created id: 586
--Creating new operations for variant [Variant id: 586, #gens: 160, #ops: 0, parent:585]
---analyzing modificationPoint position: 146
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
vars from patch [count]
--> var from patch: count spoon.support.reflect.code.CtFieldWriteImpl
location: Incrementor.java80
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `maxCountCallback = cb ` -topatch--> `count = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.util.Incrementor line: 80, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `maxCountCallback = cb ` -topatch--> `count = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 586, #gens: 160, #ops: 1, parent:585] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 586, errors: [Incrementor.java:160: error: variable maxCountCallback might not have been initialized
		count = 0;} 	/**
		          ^]
Ingredient counter is Zero
---Undoing: gnrtn(293): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `maxCountCallback = cb ` -topatch--> `count = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (585(f=1.0), 586(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (585(f=1.0), )
----------Running generation: 294, population size: 1

***** Generation 294 : 0
**Parent Variant: [Variant id: 587, #gens: 160, #ops: 0, parent:-]

--Child created id: 588
--Creating new operations for variant [Variant id: 588, #gens: 160, #ops: 0, parent:587]
---analyzing modificationPoint position: 61
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java202
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xB = x[signChangeIndex] ` -topatch--> `signChangeIndex = 1` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 202, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xB = x[signChangeIndex] ` -topatch--> `signChangeIndex = 1` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 588, #gens: 161, #ops: 1, parent:587] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 588
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-588/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(294): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xB = x[signChangeIndex] ` -topatch--> `signChangeIndex = 1` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (587(f=1.0), 588(f=3.0), )
Selected to next generation: IDs2--> (587(f=1.0), )
----------Running generation: 295, population size: 1

***** Generation 295 : 0
**Parent Variant: [Variant id: 589, #gens: 160, #ops: 0, parent:-]

--Child created id: 590
--Creating new operations for variant [Variant id: 590, #gens: 160, #ops: 0, parent:589]
---analyzing modificationPoint position: 10
location: BracketingNthOrderBrentSolver.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 590, #gens: 159, #ops: 1, parent:589] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 590
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-590/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(295): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (589(f=1.0), 590(f=2.0), )
Selected to next generation: IDs2--> (589(f=1.0), )
----------Running generation: 296, population size: 1

***** Generation 296 : 0
**Parent Variant: [Variant id: 591, #gens: 160, #ops: 0, parent:-]

--Child created id: 592
--Creating new operations for variant [Variant id: 592, #gens: 160, #ops: 0, parent:591]
---analyzing modificationPoint position: 10
location: BracketingNthOrderBrentSolver.java129
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 592, #gens: 159, #ops: 1, parent:591] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 592
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-592/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(296): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (591(f=1.0), 592(f=2.0), )
Selected to next generation: IDs2--> (591(f=1.0), )
----------Running generation: 297, population size: 1

***** Generation 297 : 0
**Parent Variant: [Variant id: 593, #gens: 160, #ops: 0, parent:-]

--Child created id: 594
--Creating new operations for variant [Variant id: 594, #gens: 160, #ops: 0, parent:593]
---analyzing modificationPoint position: 38
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 594, #gens: 159, #ops: 1, parent:593] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 594
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-594/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(297): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (593(f=1.0), 594(f=9.0), )
Selected to next generation: IDs2--> (593(f=1.0), )
----------Running generation: 298, population size: 1

***** Generation 298 : 0
**Parent Variant: [Variant id: 595, #gens: 160, #ops: 0, parent:-]

--Child created id: 596
--Creating new operations for variant [Variant id: 596, #gens: 160, #ops: 0, parent:595]
---analyzing modificationPoint position: 55
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  signChangeIndex = 1
---analyzing modificationPoint position: 38
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 596, #gens: 159, #ops: 1, parent:595] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 596
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-596/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(298): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (595(f=1.0), 596(f=9.0), )
Selected to next generation: IDs2--> (595(f=1.0), )
----------Running generation: 299, population size: 1

***** Generation 299 : 0
**Parent Variant: [Variant id: 597, #gens: 160, #ops: 0, parent:-]

--Child created id: 598
--Creating new operations for variant [Variant id: 598, #gens: 160, #ops: 0, parent:597]
---analyzing modificationPoint position: 52
location: MaxCountExceededException.java54
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 598, #gens: 159, #ops: 1, parent:597] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 598
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-598/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(299): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (597(f=1.0), 598(f=1.0), )
Selected to next generation: IDs2--> (597(f=1.0), )
----------Running generation: 300, population size: 1

***** Generation 300 : 0
**Parent Variant: [Variant id: 599, #gens: 160, #ops: 0, parent:-]

--Child created id: 600
--Creating new operations for variant [Variant id: 600, #gens: 160, #ops: 0, parent:599]
---analyzing modificationPoint position: 91
location: BracketingNthOrderBrentSolver.java151
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 600, #gens: 159, #ops: 1, parent:599] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 600
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-600/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(300): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `verifySequence(x[0], x[1], x[2]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (599(f=1.0), 600(f=2.0), )
Selected to next generation: IDs2--> (599(f=1.0), )
----------Running generation: 301, population size: 1

***** Generation 301 : 0
**Parent Variant: [Variant id: 601, #gens: 160, #ops: 0, parent:-]

--Child created id: 602
--Creating new operations for variant [Variant id: 602, #gens: 160, #ops: 0, parent:601]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 73
location: BracketingNthOrderBrentSolver.java252
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextX = guessX(targetY, tmpX, y, start, end) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 602, #gens: 159, #ops: 1, parent:601] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 602, errors: [BracketingNthOrderBrentSolver.java:255: error: variable nextX might not have been initialized
				if (!((nextX > xA) && (nextX < xB))) {
				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(301): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `nextX = guessX(targetY, tmpX, y, start, end) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (601(f=1.0), 602(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (601(f=1.0), )
----------Running generation: 302, population size: 1

***** Generation 302 : 0
**Parent Variant: [Variant id: 603, #gens: 160, #ops: 0, parent:-]

--Child created id: 604
--Creating new operations for variant [Variant id: 604, #gens: 160, #ops: 0, parent:603]
---analyzing modificationPoint position: 20
Templates availables16
Attempts Base Ingredients  1 total 16
---modifPoint 0 not mutation generated in  final java.lang.Object[] args = msgArguments.get(i)
---analyzing modificationPoint position: 61
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java202
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xB = x[signChangeIndex] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 202, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xB = x[signChangeIndex] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 604, #gens: 161, #ops: 1, parent:603] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 604
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-604/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(302): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `double xB = x[signChangeIndex] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (603(f=1.0), 604(f=1.0), )
Selected to next generation: IDs2--> (603(f=1.0), )
----------Running generation: 303, population size: 1

***** Generation 303 : 0
**Parent Variant: [Variant id: 605, #gens: 160, #ops: 0, parent:-]

--Child created id: 606
--Creating new operations for variant [Variant id: 606, #gens: 160, #ops: 0, parent:605]
---analyzing modificationPoint position: 112
---modifPoint 0 not mutation generated in  return function.value(point)
---analyzing modificationPoint position: 31
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  // we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...]
---analyzing modificationPoint position: 10
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 2 not mutation generated in  this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE
---analyzing modificationPoint position: 15
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch [this.throwable]
--> var from patch: this.throwable spoon.support.reflect.code.CtFieldWriteImpl
location: ExceptionContext.java171
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 171, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 606, #gens: 161, #ops: 1, parent:605] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 606
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-606/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(303): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.StringBuilder sb = new java.lang.StringBuilder() ` -topatch--> `this.throwable = throwable` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (605(f=1.0), 606(f=1.0), )
Selected to next generation: IDs2--> (605(f=1.0), )
----------Running generation: 304, population size: 1

***** Generation 304 : 0
**Parent Variant: [Variant id: 607, #gens: 160, #ops: 0, parent:-]

--Child created id: 608
--Creating new operations for variant [Variant id: 608, #gens: 160, #ops: 0, parent:607]
---analyzing modificationPoint position: 72
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [xA, nextX]
--> var from patch: xA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: nextX spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// the sign change occurs after the inserted point xA = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 251, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// the sign change occurs after the inserted point xA = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 608, #gens: 161, #ops: 1, parent:607] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 608, errors: [BracketingNthOrderBrentSolver.java:337: error: while expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				              ^, BracketingNthOrderBrentSolver.java:337: error: ')' expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				               			                                                  ^, BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(304): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `// the sign change occurs after the inserted point xA = nextX` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (607(f=1.0), 608(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (607(f=1.0), )
----------Running generation: 305, population size: 1

***** Generation 305 : 0
**Parent Variant: [Variant id: 609, #gens: 160, #ops: 0, parent:-]

--Child created id: 610
--Creating new operations for variant [Variant id: 610, #gens: 160, #ops: 0, parent:609]
---analyzing modificationPoint position: 52
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java54
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 54, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 610, #gens: 161, #ops: 1, parent:609] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 610, errors: [MaxCountExceededException.java:63: error: incompatible types: unexpected return value
		return max; 		this.max = max;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(305): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getContext().addMessage(specific, max, args) ` -topatch--> `return max` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (609(f=1.0), 610(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (609(f=1.0), )
----------Running generation: 306, population size: 1

***** Generation 306 : 0
**Parent Variant: [Variant id: 611, #gens: 160, #ops: 0, parent:-]

--Child created id: 612
--Creating new operations for variant [Variant id: 612, #gens: 160, #ops: 0, parent:611]
---analyzing modificationPoint position: 69
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java241
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `// evaluate second endpoint y[2] = computeObjectiveValue(x[2])` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 241, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `// evaluate second endpoint y[2] = computeObjectiveValue(x[2])` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 612, #gens: 160, #ops: 1, parent:611] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 612, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(306): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `// evaluate second endpoint y[2] = computeObjectiveValue(x[2])` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (611(f=1.0), 612(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (611(f=1.0), )
----------Running generation: 307, population size: 1

***** Generation 307 : 0
**Parent Variant: [Variant id: 613, #gens: 160, #ops: 0, parent:-]

--Child created id: 614
--Creating new operations for variant [Variant id: 614, #gens: 160, #ops: 0, parent:613]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 614, #gens: 161, #ops: 1, parent:613] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 614
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-614/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(307): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (613(f=1.0), 614(f=1.0), )
Selected to next generation: IDs2--> (613(f=1.0), )
----------Running generation: 308, population size: 1

***** Generation 308 : 0
**Parent Variant: [Variant id: 615, #gens: 160, #ops: 0, parent:-]

--Child created id: 616
--Creating new operations for variant [Variant id: 616, #gens: 160, #ops: 0, parent:615]
---analyzing modificationPoint position: 88
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  x[0] = getMin()
---analyzing modificationPoint position: 6
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 1 not mutation generated in  // Add a separator if there are other messages. sb.append(separator)
---analyzing modificationPoint position: 1
---modifPoint 2 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 39
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [absYA, yA]
--> var from patch: absYA spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java299
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 299, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 616, #gens: 161, #ops: 1, parent:615] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 616, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(308): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (nbPoints == x.length) {  	// we have to drop one point in order to insert the new one 	nbPoints-[...] ` -topatch--> `absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (615(f=1.0), 616(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (615(f=1.0), )
----------Running generation: 309, population size: 1

***** Generation 309 : 0
**Parent Variant: [Variant id: 617, #gens: 160, #ops: 0, parent:-]

--Child created id: 618
--Creating new operations for variant [Variant id: 618, #gens: 160, #ops: 0, parent:617]
---analyzing modificationPoint position: 25
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@addf3083, search space size: 1
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("META-INF/localization/Localiz[...]
---analyzing modificationPoint position: 84
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  x0 = x[j] + (x0 * (targetY - y[j]))
---analyzing modificationPoint position: 5
---modifPoint 2 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 20
Templates availables63
Attempts Base Ingredients  1 total 63
vars from patch []
location: ExceptionContext.java176
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 176, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 618, #gens: 161, #ops: 1, parent:617] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 618, errors: [ExceptionContext.java:176: error: variable count is already defined in method buildMessage(java.util.Locale,java.lang.String)
			final org.apache.commons.math.exception.util.Localizable pat = msgPatterns.get(i); 			int count = 0;
			                                                                                   			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(309): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.lang.Object[] args = msgArguments.get(i) ` -topatch--> `int count = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (617(f=1.0), 618(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (617(f=1.0), )
----------Running generation: 310, population size: 1

***** Generation 310 : 0
**Parent Variant: [Variant id: 619, #gens: 160, #ops: 0, parent:-]

--Child created id: 620
--Creating new operations for variant [Variant id: 620, #gens: 160, #ops: 0, parent:619]
---analyzing modificationPoint position: 53
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [max]
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: MaxCountExceededException.java55
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.exception.MaxCountExceededException line: 55, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 620, #gens: 161, #ops: 1, parent:619] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 620
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-620/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(310): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.max = max ` -topatch--> `max = max` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (619(f=1.0), 620(f=1.0), )
Selected to next generation: IDs2--> (619(f=1.0), )
----------Running generation: 311, population size: 1

***** Generation 311 : 0
**Parent Variant: [Variant id: 621, #gens: 160, #ops: 0, parent:-]

--Child created id: 622
--Creating new operations for variant [Variant id: 622, #gens: 160, #ops: 0, parent:621]
---analyzing modificationPoint position: 27
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  return max
---analyzing modificationPoint position: 4
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 622, #gens: 159, #ops: 1, parent:621] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 622
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-622/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(311): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (621(f=1.0), 622(f=2.0), )
Selected to next generation: IDs2--> (621(f=1.0), )
----------Running generation: 312, population size: 1

***** Generation 312 : 0
**Parent Variant: [Variant id: 623, #gens: 160, #ops: 0, parent:-]

--Child created id: 624
--Creating new operations for variant [Variant id: 624, #gens: 160, #ops: 0, parent:623]
---analyzing modificationPoint position: 81
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta])
---analyzing modificationPoint position: 5
---modifPoint 1 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 11
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [java.util.Locale.US]
--> var from patch: java.util.Locale.US spoon.support.reflect.code.CtFieldReadImpl
location: ExceptionContext.java137
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.getDefault()) ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.util.ExceptionContext line: 137, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.getDefault()) ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 624, #gens: 160, #ops: 1, parent:623] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 624
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-624/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(312): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.getDefault()) ` -topatch--> `return getMessage(java.util.Locale.US)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (623(f=1.0), 624(f=1.0), )
Selected to next generation: IDs2--> (623(f=1.0), )
----------Running generation: 313, population size: 1

***** Generation 313 : 0
**Parent Variant: [Variant id: 625, #gens: 160, #ops: 0, parent:-]

--Child created id: 626
--Creating new operations for variant [Variant id: 626, #gens: 160, #ops: 0, parent:625]
---analyzing modificationPoint position: 9
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [this.allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE]
--> var from patch: this.allowed spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java128
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maximalOrder = maximalOrder ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 128, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maximalOrder = maximalOrder ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 626, #gens: 160, #ops: 1, parent:625] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 626, errors: [BracketingNthOrderBrentSolver.java:131: error: variable maximalOrder might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(313): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maximalOrder = maximalOrder ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (625(f=1.0), 626(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (625(f=1.0), )
----------Running generation: 314, population size: 1

***** Generation 314 : 0
**Parent Variant: [Variant id: 627, #gens: 160, #ops: 0, parent:-]

--Child created id: 628
--Creating new operations for variant [Variant id: 628, #gens: 160, #ops: 0, parent:627]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return buildMessage(locale, ": ")
---analyzing modificationPoint position: 88
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  x[0] = getMin()
---analyzing modificationPoint position: 136
location: ArgUtils.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object oR : org.apache.commons.math.exception.util.ArgUtils.flatten(((java.lang.Objec[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 628, #gens: 159, #ops: 1, parent:627] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 628
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-628/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(314): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object oR : org.apache.commons.math.exception.util.ArgUtils.flatten(((java.lang.Objec[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (627(f=1.0), 628(f=1.0), )
Selected to next generation: IDs2--> (627(f=1.0), )
----------Running generation: 315, population size: 1

***** Generation 315 : 0
**Parent Variant: [Variant id: 629, #gens: 160, #ops: 0, parent:-]

--Child created id: 630
--Creating new operations for variant [Variant id: 630, #gens: 160, #ops: 0, parent:629]
---analyzing modificationPoint position: 133
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  return (isEqual && (!java.lang.Double.isNaN(x))) && (!java.lang.Double.isNaN(y))
---analyzing modificationPoint position: 4
Templates availables34
Attempts Base Ingredients  1 total 34
vars from patch [this.allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE]
--> var from patch: this.allowed spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 393, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 630, #gens: 160, #ops: 1, parent:629] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 630
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-630/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(315): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `this.allowed = org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (629(f=1.0), 630(f=2.0), )
Selected to next generation: IDs2--> (629(f=1.0), )
----------Running generation: 316, population size: 1

***** Generation 316 : 0
**Parent Variant: [Variant id: 631, #gens: 160, #ops: 0, parent:-]

--Child created id: 632
--Creating new operations for variant [Variant id: 632, #gens: 160, #ops: 0, parent:631]
---analyzing modificationPoint position: 35
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [this.maximalOrder]
--> var from patch: this.maximalOrder spoon.support.reflect.code.CtFieldWriteImpl
location: BracketingNthOrderBrentSolver.java297
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 297, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 632, #gens: 161, #ops: 1, parent:631] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 632, errors: [BracketingNthOrderBrentSolver.java:298: error: cannot assign a value to final variable maximalOrder
				signChangeIndex -= start; 				this.maximalOrder = maximalOrder;
				                          				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(316): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `signChangeIndex -= start ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (631(f=1.0), 632(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (631(f=1.0), )
----------Running generation: 317, population size: 1

***** Generation 317 : 0
**Parent Variant: [Variant id: 633, #gens: 160, #ops: 0, parent:-]

--Child created id: 634
--Creating new operations for variant [Variant id: 634, #gens: 160, #ops: 0, parent:633]
---analyzing modificationPoint position: 2
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtDoImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...]
---analyzing modificationPoint position: 6
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 1 not mutation generated in  // Add a separator if there are other messages. sb.append(separator)
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [maxEval, f, min, max]
--> var from patch: maxEval spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: min spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java394
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return super.solve(maxEval, f, min, max, startValue) ` -topatch--> `return super.solve(maxEval, f, min, max)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 394, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return super.solve(maxEval, f, min, max, startValue) ` -topatch--> `return super.solve(maxEval, f, min, max)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 634, #gens: 160, #ops: 1, parent:633] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 634
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-634/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(317): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return super.solve(maxEval, f, min, max, startValue) ` -topatch--> `return super.solve(maxEval, f, min, max)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (633(f=1.0), 634(f=1.0), )
Selected to next generation: IDs2--> (633(f=1.0), )
----------Running generation: 318, population size: 1

***** Generation 318 : 0
**Parent Variant: [Variant id: 635, #gens: 160, #ops: 0, parent:-]

--Child created id: 636
--Creating new operations for variant [Variant id: 636, #gens: 160, #ops: 0, parent:635]
---analyzing modificationPoint position: 144
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 0 not mutation generated in  this(max,  new org.apache.commons.math.util.Incrementor.MaxCountExceededCallback() { 	/** 	 * {@inhe[...]
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 146
location: Incrementor.java80
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `maxCountCallback = cb ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 636, #gens: 159, #ops: 1, parent:635] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 636, errors: [Incrementor.java:82: error: variable maxCountCallback might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(318): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `maxCountCallback = cb ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (635(f=1.0), 636(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (635(f=1.0), )
----------Running generation: 319, population size: 1

***** Generation 319 : 0
**Parent Variant: [Variant id: 637, #gens: 160, #ops: 0, parent:-]

--Child created id: 638
--Creating new operations for variant [Variant id: 638, #gens: 160, #ops: 0, parent:637]
---analyzing modificationPoint position: 114
location: BaseAbstractUnivariateRealSolver.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 638, #gens: 159, #ops: 1, parent:637] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 638
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-638/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(319): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (637(f=1.0), 638(f=1.0), )
Selected to next generation: IDs2--> (637(f=1.0), )
----------Running generation: 320, population size: 1

***** Generation 320 : 0
**Parent Variant: [Variant id: 639, #gens: 160, #ops: 0, parent:-]

--Child created id: 640
--Creating new operations for variant [Variant id: 640, #gens: 160, #ops: 0, parent:639]
---analyzing modificationPoint position: 65
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java211
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 211, pointed element: CtUnaryOperatorImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 

--Summary Creation: for variant [Variant id: 640, #gens: 161, #ops: 1, parent:639] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 640, errors: [BracketingNthOrderBrentSolver.java:305: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					^, BracketingNthOrderBrentSolver.java:305: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					    ^, BracketingNthOrderBrentSolver.java:305: error: ')' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					     ^, BracketingNthOrderBrentSolver.java:305: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                    ^, BracketingNthOrderBrentSolver.java:305: error: <identifier> expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                            ^, BracketingNthOrderBrentSolver.java:305: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                              ^, BracketingNthOrderBrentSolver.java:305: error: <identifier> expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                ^, BracketingNthOrderBrentSolver.java:305: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                  ^, BracketingNthOrderBrentSolver.java:305: error: illegal start of type
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                      ^, BracketingNthOrderBrentSolver.java:305: error: ';' expected
					if ((signChangeIndex - start) >= (end - signChangeIndex)) { 						// we have more points before the sign change, drop the lowest point
					                                                       ^, BracketingNthOrderBrentSolver.java:306: error: illegal start of type
						++start;} else { 						// we have more points after sign change, drop the highest point
						          ^, BracketingNthOrderBrentSolver.java:306: error: ';' expected
						++start;} else { 						// we have more points after sign change, drop the highest point
						              ^, BracketingNthOrderBrentSolver.java:307: error: illegal start of type
						--end;} 					// we need to do one more attempt 					nextX = java.lang.Double.NaN;}} while (java.lang.Double.isNaN(nextX) && ((end - start) > 1) ); 			if (java.lang.Double.isNaN(nextX)) { 				// fall back to bisection 				nextX = xA + (0.5 * (xB - xA)); 				start = signChangeIndex - 1; 				end = signChangeIndex;} 			// evaluate the function at the guessed root 			final double nextY = computeObjectiveValue(nextX); 			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 				// we have found an exact root, since it is not an approximation 				// we don't need to bother about the allowed solutions setting
						^, BracketingNthOrderBrentSolver.java:308: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				^, BracketingNthOrderBrentSolver.java:308: error: class, interface, or enum expected
				return nextX;} 			if ((nbPoints > 2) && ((end - start) != nbPoints)) { 				// we have been forced to ignore some points to keep bracketing, 				// they are probably too far from the root, drop them from now on 				nbPoints = end - start; 				java.lang.System.arraycopy(x, start, x, 0, nbPoints); 				java.lang.System.arraycopy(y, start, y, 0, nbPoints); 				signChangeIndex -= start;} else if (nbPoints == x.length) { 				// we have to drop one point in order to insert the new one 				nbPoints--; 				// keep the tightest bracketing interval as centered as possible
				             ^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(320): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// check convergence of bracketing interval final double xTol = getAbsoluteAccuracy() +  (getRelativ[...] ` -topatch--> `// we have to drop one point in order to insert the new one nbPoints--` (spoon.support.reflect.code.CtUnaryOperatorImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (639(f=1.0), 640(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (639(f=1.0), )
----------Running generation: 321, population size: 1

***** Generation 321 : 0
**Parent Variant: [Variant id: 641, #gens: 160, #ops: 0, parent:-]

--Child created id: 642
--Creating new operations for variant [Variant id: 642, #gens: 160, #ops: 0, parent:641]
---analyzing modificationPoint position: 38
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java290
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 290, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 642, #gens: 160, #ops: 1, parent:641] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 642
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-642/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(321): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if ((nbPoints > 2) && ((end - start) != nbPoints)) {  	// we have been forced to ignore some points [...] ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (641(f=1.0), 642(f=9.0), )
Selected to next generation: IDs2--> (641(f=1.0), )
----------Running generation: 322, population size: 1

***** Generation 322 : 0
**Parent Variant: [Variant id: 643, #gens: 160, #ops: 0, parent:-]

--Child created id: 644
--Creating new operations for variant [Variant id: 644, #gens: 160, #ops: 0, parent:643]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [allowed, org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE, absYA, absYB, xA, xB, org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE, org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE, yA, org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE]
--> var from patch: allowed spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ANY_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: absYA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: absYB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.LEFT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.RIGHT_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.BELOW_SIDE spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.AllowedSolution.ABOVE_SIDE spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `switch (allowed) { 	case ANY_SIDE : 		return absYA < absYB ? xA : xB; 	case LEFT_SIDE : 		return xA;[...]` (spoon.support.reflect.code.CtSwitchImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtSwitchImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `switch (allowed) { 	case ANY_SIDE : 		return absYA < absYB ? xA : xB; 	case LEFT_SIDE : 		return xA;[...]` (spoon.support.reflect.code.CtSwitchImpl) 

--Summary Creation: for variant [Variant id: 644, #gens: 161, #ops: 1, parent:643] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 644, errors: [BracketingNthOrderBrentSolver.java:246: error: unreachable statement
			double nextX;
			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(322): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `switch (allowed) { 	case ANY_SIDE : 		return absYA < absYB ? xA : xB; 	case LEFT_SIDE : 		return xA;[...]` (spoon.support.reflect.code.CtSwitchImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (643(f=1.0), 644(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (643(f=1.0), )
----------Running generation: 323, population size: 1

***** Generation 323 : 0
**Parent Variant: [Variant id: 645, #gens: 160, #ops: 0, parent:-]

--Child created id: 646
--Creating new operations for variant [Variant id: 646, #gens: 160, #ops: 0, parent:645]
---analyzing modificationPoint position: 55
location: BracketingNthOrderBrentSolver.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 646, #gens: 159, #ops: 1, parent:645] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 646, errors: [BracketingNthOrderBrentSolver.java:199: error: variable signChangeIndex might not have been initialized
		double xA = x[signChangeIndex - 1];
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(323): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (645(f=1.0), 646(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (645(f=1.0), )
----------Running generation: 324, population size: 1

***** Generation 324 : 0
**Parent Variant: [Variant id: 647, #gens: 160, #ops: 0, parent:-]

--Child created id: 648
--Creating new operations for variant [Variant id: 648, #gens: 160, #ops: 0, parent:647]
---analyzing modificationPoint position: 81
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 0 not mutation generated in  x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta])
---analyzing modificationPoint position: 70
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [agingA, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING, targetY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR, yB, agingB, yA]
--> var from patch: agingA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: targetY spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: yB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: agingB spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java246
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 246, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 648, #gens: 161, #ops: 1, parent:647] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 648, errors: [BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                           ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                             ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: <identifier> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                              ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                    ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(324): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int start = 0 ` -topatch--> `if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (647(f=1.0), 648(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (647(f=1.0), )
----------Running generation: 325, population size: 1

***** Generation 325 : 0
**Parent Variant: [Variant id: 649, #gens: 160, #ops: 0, parent:-]

--Child created id: 650
--Creating new operations for variant [Variant id: 650, #gens: 160, #ops: 0, parent:649]
---analyzing modificationPoint position: 4
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.allowed = allowedSolution
---analyzing modificationPoint position: 5
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [maxEval, f, min, max, startValue]
--> var from patch: maxEval spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: min spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: max spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: startValue spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java394
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return super.solve(maxEval, f, min, max, startValue) ` -topatch--> `return super.solve(maxEval, f, min, max, startValue)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 394, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return super.solve(maxEval, f, min, max, startValue) ` -topatch--> `return super.solve(maxEval, f, min, max, startValue)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 650, #gens: 160, #ops: 1, parent:649] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 650
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-650/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(325): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return super.solve(maxEval, f, min, max, startValue) ` -topatch--> `return super.solve(maxEval, f, min, max, startValue)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (649(f=1.0), 650(f=1.0), )
Selected to next generation: IDs2--> (649(f=1.0), )
----------Running generation: 326, population size: 1

***** Generation 326 : 0
**Parent Variant: [Variant id: 651, #gens: 160, #ops: 0, parent:-]

--Child created id: 652
--Creating new operations for variant [Variant id: 652, #gens: 160, #ops: 0, parent:651]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 64
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [nbPoints]
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java205
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 205, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 652, #gens: 161, #ops: 1, parent:651] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 652
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-652/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(326): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int agingB = 0 ` -topatch--> `// use all computed point as a start sampling array for solving nbPoints = 3` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (651(f=1.0), 652(f=1.0), )
Selected to next generation: IDs2--> (651(f=1.0), )
----------Running generation: 327, population size: 1

***** Generation 327 : 0
**Parent Variant: [Variant id: 653, #gens: 160, #ops: 0, parent:-]

--Child created id: 654
--Creating new operations for variant [Variant id: 654, #gens: 160, #ops: 0, parent:653]
---analyzing modificationPoint position: 40
location: BracketingNthOrderBrentSolver.java316
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 654, #gens: 159, #ops: 1, parent:653] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 654
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-654/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(327): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// insert the last computed point // (by construction, we know it lies inside the tightest bracketin[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (653(f=1.0), 654(f=4.0), )
Selected to next generation: IDs2--> (653(f=1.0), )
----------Running generation: 328, population size: 1

***** Generation 328 : 0
**Parent Variant: [Variant id: 655, #gens: 160, #ops: 0, parent:-]

--Child created id: 656
--Creating new operations for variant [Variant id: 656, #gens: 160, #ops: 0, parent:655]
---analyzing modificationPoint position: 0
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  // target for the next evaluation point double targetY
---analyzing modificationPoint position: 3
---modifPoint 1 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 29
location: BracketingNthOrderBrentSolver.java265
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 656, #gens: 159, #ops: 1, parent:655] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 656
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-656/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58845
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58845
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(328): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (655(f=1.0), 656(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (655(f=1.0), )
----------Running generation: 329, population size: 1

***** Generation 329 : 0
**Parent Variant: [Variant id: 657, #gens: 160, #ops: 0, parent:-]

--Child created id: 658
--Creating new operations for variant [Variant id: 658, #gens: 160, #ops: 0, parent:657]
---analyzing modificationPoint position: 93
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...]
---analyzing modificationPoint position: 21
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 1 not mutation generated in  final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...]
---analyzing modificationPoint position: 16
---modifPoint 2 not mutation generated in  int count = 0
---analyzing modificationPoint position: 95
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 3 not mutation generated in  if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]
---analyzing modificationPoint position: 36
location: BracketingNthOrderBrentSolver.java260
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 658, #gens: 159, #ops: 1, parent:657] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 658
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-658/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58848
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58848
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(329): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// the guessed root is not strictly inside of the tightest bracketing interval  // the guessed root [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (657(f=1.0), 658(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (657(f=1.0), )
----------Running generation: 330, population size: 1

***** Generation 330 : 0
**Parent Variant: [Variant id: 659, #gens: 160, #ops: 0, parent:-]

--Child created id: 660
--Creating new operations for variant [Variant id: 660, #gens: 160, #ops: 0, parent:659]
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
Attempts Base Ingredients  2 total 106
vars from patch [x, nbPoints]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 660, #gens: 161, #ops: 1, parent:659] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 660, errors: [BracketingNthOrderBrentSolver.java:320: error: cannot find symbol
			y[signChangeIndex] = nextY;
			                     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:324: error: cannot find symbol
			if ((nextY * yA) <= 0) {
			     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:327: error: cannot find symbol
				yB = nextY;
				     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:334: error: cannot find symbol
				yA = nextY;
				     ^
  symbol:   variable nextY
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(330): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (659(f=1.0), 660(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (659(f=1.0), )
----------Running generation: 331, population size: 1

***** Generation 331 : 0
**Parent Variant: [Variant id: 661, #gens: 160, #ops: 0, parent:-]

--Child created id: 662
--Creating new operations for variant [Variant id: 662, #gens: 160, #ops: 0, parent:661]
---analyzing modificationPoint position: 74
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  if (!((nextX > xA) && (nextX < xB))) { 	// the guessed root is not strictly inside of the tightest b[...]
---analyzing modificationPoint position: 92
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 1 not mutation generated in  // evaluate initial guess y[1] = computeObjectiveValue(x[1])
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 8
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [context]
--> var from patch: context spoon.support.reflect.code.CtFieldReadImpl
location: MathIllegalStateException.java86
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.exception.MathIllegalStateException line: 86, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 662, #gens: 161, #ops: 1, parent:661] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 662, errors: [MathIllegalStateException.java:86: error: incompatible types: org.apache.commons.math.exception.util.ExceptionContext cannot be converted to java.lang.String
	 */ 	@java.lang.Override 	public java.lang.String getLocalizedMessage() { 		return context;
	    	                    	                                                		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(331): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return context.getLocalizedMessage() ` -topatch--> `return context` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (661(f=1.0), 662(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (661(f=1.0), )
----------Running generation: 332, population size: 1

***** Generation 332 : 0
**Parent Variant: [Variant id: 663, #gens: 160, #ops: 0, parent:-]

--Child created id: 664
--Creating new operations for variant [Variant id: 664, #gens: 160, #ops: 0, parent:663]
---analyzing modificationPoint position: 48
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 664, #gens: 161, #ops: 1, parent:663] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 664, errors: [BracketingNthOrderBrentSolver.java:328: error: variable start is already defined in method doSolve()
				absYB = org.apache.commons.math.util.FastMath.abs(yB); 				int start = 0;
				                                                       				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(332): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (663(f=1.0), 664(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (663(f=1.0), )
----------Running generation: 333, population size: 1

***** Generation 333 : 0
**Parent Variant: [Variant id: 665, #gens: 160, #ops: 0, parent:-]

--Child created id: 666
--Creating new operations for variant [Variant id: 666, #gens: 160, #ops: 0, parent:665]
---analyzing modificationPoint position: 77
location: BracketingNthOrderBrentSolver.java284
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 666, #gens: 159, #ops: 1, parent:665] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 666
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-666/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(333): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) { 	// we have found an exact root,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (665(f=1.0), 666(f=2.0), )
Selected to next generation: IDs2--> (665(f=1.0), )
----------Running generation: 334, population size: 1

***** Generation 334 : 0
**Parent Variant: [Variant id: 667, #gens: 160, #ops: 0, parent:-]

--Child created id: 668
--Creating new operations for variant [Variant id: 668, #gens: 160, #ops: 0, parent:667]
---analyzing modificationPoint position: 4
location: BracketingNthOrderBrentSolver.java393
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 668, #gens: 159, #ops: 1, parent:667] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 668
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-668/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(334): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowed = allowedSolution ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (667(f=1.0), 668(f=2.0), )
Selected to next generation: IDs2--> (667(f=1.0), )
----------Running generation: 335, population size: 1

***** Generation 335 : 0
**Parent Variant: [Variant id: 669, #gens: 160, #ops: 0, parent:-]

--Child created id: 670
--Creating new operations for variant [Variant id: 670, #gens: 160, #ops: 0, parent:669]
---analyzing modificationPoint position: 69
location: BracketingNthOrderBrentSolver.java241
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 670, #gens: 159, #ops: 1, parent:669] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 670, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(335): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// bracketing is balanced, try to find the root itself targetY = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (669(f=1.0), 670(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (669(f=1.0), )
----------Running generation: 336, population size: 1

***** Generation 336 : 0
**Parent Variant: [Variant id: 671, #gens: 160, #ops: 0, parent:-]

--Child created id: 672
--Creating new operations for variant [Variant id: 672, #gens: 160, #ops: 0, parent:671]
---analyzing modificationPoint position: 3
---modifPoint 0 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 23
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 1 not mutation generated in  if ((++count) < len) { 	// Add a separator if there are other messages. 	sb.append(separator); }
---analyzing modificationPoint position: 26
---modifPoint 2 not mutation generated in  // either the locale is not supported or the resource is unknown // don't translate and fall back to[...]
---analyzing modificationPoint position: 81
Templates availables34
Attempts Base Ingredients  1 total 34
---modifPoint 3 not mutation generated in  x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta])
---analyzing modificationPoint position: 29
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [yA]
--> var from patch: yA spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java265
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 265, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 672, #gens: 161, #ops: 1, parent:671] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 672, errors: [BracketingNthOrderBrentSolver.java:266: error: variable absYA is already defined in method doSolve()
						--end; 						double absYA = org.apache.commons.math.util.FastMath.abs(yA);
						       						       ^]
Ingredient counter is Zero
---Undoing: gnrtn(336): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `// we have more points after sign change, drop the highest point --end ` -topatch--> `double absYA = org.apache.commons.math.util.FastMath.abs(yA)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (671(f=1.0), 672(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (671(f=1.0), )
----------Running generation: 337, population size: 1

***** Generation 337 : 0
**Parent Variant: [Variant id: 673, #gens: 160, #ops: 0, parent:-]

--Child created id: 674
--Creating new operations for variant [Variant id: 674, #gens: 160, #ops: 0, parent:673]
---analyzing modificationPoint position: 1
---modifPoint 0 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 83
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  for (int j = end - 1; j >= start; --j) { 	x0 = x[j] + (x0 * (targetY - y[j])); }
---analyzing modificationPoint position: 28
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 1
---modifPoint 2 not mutation generated in  getContext().addMessage(org.apache.commons.math.exception.util.LocalizedFormats.EVALUATIONS)
---analyzing modificationPoint position: 92
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java154
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 154, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 674, #gens: 161, #ops: 1, parent:673] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 674, errors: [BracketingNthOrderBrentSolver.java:235: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		^, BracketingNthOrderBrentSolver.java:235: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		    ^, BracketingNthOrderBrentSolver.java:235: error: ')' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		     ^, BracketingNthOrderBrentSolver.java:235: error: ']' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		       ^, BracketingNthOrderBrentSolver.java:235: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		        ^, BracketingNthOrderBrentSolver.java:235: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		         ^, BracketingNthOrderBrentSolver.java:235: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		           ^, BracketingNthOrderBrentSolver.java:235: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		             ^, BracketingNthOrderBrentSolver.java:235: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		              ^, BracketingNthOrderBrentSolver.java:235: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		               ^, BracketingNthOrderBrentSolver.java:235: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                ^, BracketingNthOrderBrentSolver.java:235: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                 ^, BracketingNthOrderBrentSolver.java:235: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                   ^, BracketingNthOrderBrentSolver.java:235: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                     ^, BracketingNthOrderBrentSolver.java:235: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                      ^, BracketingNthOrderBrentSolver.java:235: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                        ^, BracketingNthOrderBrentSolver.java:236: error: ']' expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				         ^, BracketingNthOrderBrentSolver.java:236: error: ';' expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				          ^, BracketingNthOrderBrentSolver.java:236: error: class, interface, or enum expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				              			^, BracketingNthOrderBrentSolver.java:238: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}} 			// target for the next evaluation point 			double targetY; 			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the high bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the low bracket, try to compensate this
						                                                                    ^, BracketingNthOrderBrentSolver.java:240: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:243: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:247: error: class, interface, or enum expected
			int start = 0;
			^, BracketingNthOrderBrentSolver.java:248: error: class, interface, or enum expected
			int end = nbPoints;
			^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
			do {
			^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(337): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// evaluate initial guess y[1] = computeObjectiveValue(x[1]) ` -topatch--> `// target for the next evaluation point double targetY` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (673(f=1.0), 674(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (673(f=1.0), )
----------Running generation: 338, population size: 1

***** Generation 338 : 0
**Parent Variant: [Variant id: 675, #gens: 160, #ops: 0, parent:-]

--Child created id: 676
--Creating new operations for variant [Variant id: 676, #gens: 160, #ops: 0, parent:675]
---analyzing modificationPoint position: 21
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  final java.text.MessageFormat fmt = new java.text.MessageFormat(pat.getLocalizedString(locale),  loc[...]
---analyzing modificationPoint position: 76
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [this.maximalOrder]
--> var from patch: this.maximalOrder spoon.support.reflect.code.CtFieldWriteImpl
location: BracketingNthOrderBrentSolver.java283
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX) ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 283, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX) ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 676, #gens: 161, #ops: 1, parent:675] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 676, errors: [BracketingNthOrderBrentSolver.java:284: error: cannot assign a value to final variable maximalOrder
			final double nextY = computeObjectiveValue(nextX); 			this.maximalOrder = maximalOrder;
			                                                   			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(338): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// evaluate the function at the guessed root final double nextY = computeObjectiveValue(nextX) ` -topatch--> `this.maximalOrder = maximalOrder` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (675(f=1.0), 676(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (675(f=1.0), )
----------Running generation: 339, population size: 1

***** Generation 339 : 0
**Parent Variant: [Variant id: 677, #gens: 160, #ops: 0, parent:-]

--Child created id: 678
--Creating new operations for variant [Variant id: 678, #gens: 160, #ops: 0, parent:677]
---analyzing modificationPoint position: 105
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  return relativeAccuracy
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // make a few attempts to guess a root, double nextX
---analyzing modificationPoint position: 56
Templates availables21
Attempts Base Ingredients  1 total 21
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java195
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 195, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 678, #gens: 160, #ops: 1, parent:677] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 678, errors: [BracketingNthOrderBrentSolver.java:193: error: variable y is already defined in method doSolve()
		} 		final double[] y = new double[maximalOrder + 1];
		  		               ^, BracketingNthOrderBrentSolver.java:252: error: cannot find symbol
				java.lang.System.arraycopy(x, start, tmpX, start, end - start);
				                                     ^
  symbol:   variable tmpX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver, BracketingNthOrderBrentSolver.java:253: error: cannot find symbol
				nextX = guessX(targetY, tmpX, y, start, end);
				                        ^
  symbol:   variable tmpX
  location: class org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver]
Ingredient counter is Zero
---Undoing: gnrtn(339): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// prepare a work array for inverse polynomial interpolation final double[] tmpX = new double[x.leng[...] ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (677(f=1.0), 678(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (677(f=1.0), )
----------Running generation: 340, population size: 1

***** Generation 340 : 0
**Parent Variant: [Variant id: 679, #gens: 160, #ops: 0, parent:-]

--Child created id: 680
--Creating new operations for variant [Variant id: 680, #gens: 160, #ops: 0, parent:679]
---analyzing modificationPoint position: 159
Templates availables1003
Attempts Base Ingredients  1 total 1003
vars from patch [x]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: FastMath.java3023
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return x < 0.0 ? -x : x == 0.0 ? 0.0 : x// -0.0 => +0.0  ` -topatch--> `if (x == 0.0) { 	// Matches +/- 0.0; return correct sign 	return x; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.util.FastMath line: 3023, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return x < 0.0 ? -x : x == 0.0 ? 0.0 : x// -0.0 => +0.0  ` -topatch--> `if (x == 0.0) { 	// Matches +/- 0.0; return correct sign 	return x; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 680, #gens: 161, #ops: 1, parent:679] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 680, errors: [FastMath.java:3724: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3725: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_INT_TABLE_LEN];
				                                                 ^, FastMath.java:3745: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = expInt[0];
				                                                 ^, FastMath.java:3746: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = expInt[1];
				                                                 ^, FastMath.java:3748: error: cannot assign a value to final variable EXP_INT_TABLE_A
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntA();
				                                                 ^, FastMath.java:3749: error: cannot assign a value to final variable EXP_INT_TABLE_B
				org.apache.commons.math.util.FastMath.ExpIntTable.EXP_INT_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpIntB();
				                                                 ^, FastMath.java:3768: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3769: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = new double[org.apache.commons.math.util.FastMath.EXP_FRAC_TABLE_LEN];
				                                                  ^, FastMath.java:3782: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = expFrac[0];
				                                                  ^, FastMath.java:3783: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = expFrac[1];
				                                                  ^, FastMath.java:3785: error: cannot assign a value to final variable EXP_FRAC_TABLE_A
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_A = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracA();
				                                                  ^, FastMath.java:3786: error: cannot assign a value to final variable EXP_FRAC_TABLE_B
				org.apache.commons.math.util.FastMath.ExpFracTable.EXP_FRAC_TABLE_B = org.apache.commons.math.util.FastMathLiteralArrays.loadExpFracB();
				                                                  ^, FastMath.java:3798: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = new double[org.apache.commons.math.util.FastMath.LN_MANT_LEN][];
				                                            ^, FastMath.java:3806: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathResources.loadLnMant();
				                                            ^, FastMath.java:3808: error: cannot assign a value to final variable LN_MANT
				org.apache.commons.math.util.FastMath.lnMant.LN_MANT = org.apache.commons.math.util.FastMathLiteralArrays.loadLnMant();
				                                            ^]
Ingredient counter is Zero
---Undoing: gnrtn(340): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return x < 0.0 ? -x : x == 0.0 ? 0.0 : x// -0.0 => +0.0  ` -topatch--> `if (x == 0.0) { 	// Matches +/- 0.0; return correct sign 	return x; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (679(f=1.0), 680(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (679(f=1.0), )
----------Running generation: 341, population size: 1

***** Generation 341 : 0
**Parent Variant: [Variant id: 681, #gens: 160, #ops: 0, parent:-]

--Child created id: 682
--Creating new operations for variant [Variant id: 682, #gens: 160, #ops: 0, parent:681]
---analyzing modificationPoint position: 9
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  this.maximalOrder = maximalOrder
---analyzing modificationPoint position: 72
Templates availables9
Attempts Base Ingredients  1 total 9
Attempts Base Ingredients  2 total 9
vars from patch [y, start, nbPoints]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: start spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java251
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `java.lang.System.arraycopy(y, start, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 251, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `java.lang.System.arraycopy(y, start, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 682, #gens: 160, #ops: 1, parent:681] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 682, errors: [BracketingNthOrderBrentSolver.java:344: error: while expected
		} 
		 ^, BracketingNthOrderBrentSolver.java:368: error: illegal start of expression
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	^, BracketingNthOrderBrentSolver.java:368: error: ')' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	       ^, BracketingNthOrderBrentSolver.java:368: error: ';' expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	              ^, BracketingNthOrderBrentSolver.java:368: error: -> expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:368: error: not a statement
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                     ^, BracketingNthOrderBrentSolver.java:381: error: ';' expected
	}
	 ^, BracketingNthOrderBrentSolver.java:385: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	      ^, BracketingNthOrderBrentSolver.java:385: error: '.class' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                        ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                               ^, BracketingNthOrderBrentSolver.java:385: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:385: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                   ^, BracketingNthOrderBrentSolver.java:385: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	                                                                                                                                                                                        ^, BracketingNthOrderBrentSolver.java:392: error: illegal start of expression
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                   ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                    ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                  ^, BracketingNthOrderBrentSolver.java:392: error: <identifier> expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                               ^, BracketingNthOrderBrentSolver.java:392: error: not a statement
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                       ^, BracketingNthOrderBrentSolver.java:392: error: ';' expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	                                                                                                                                 ^, BracketingNthOrderBrentSolver.java:393: error: ';' expected
	org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	                                                                        ^, BracketingNthOrderBrentSolver.java:398: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(341): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// guess a value for current target, using inverse polynomial interpolation java.lang.System.arrayco[...] ` -topatch--> `java.lang.System.arraycopy(y, start, y, 0, nbPoints)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (681(f=1.0), 682(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (681(f=1.0), )
----------Running generation: 342, population size: 1

***** Generation 342 : 0
**Parent Variant: [Variant id: 683, #gens: 160, #ops: 0, parent:-]

--Child created id: 684
--Creating new operations for variant [Variant id: 684, #gens: 160, #ops: 0, parent:683]
---analyzing modificationPoint position: 18
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  for (int i = 0; i < len; i++) { 	final org.apache.commons.math.exception.util.Localizable pat = msgP[...]
---analyzing modificationPoint position: 49
location: BracketingNthOrderBrentSolver.java328
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 684, #gens: 159, #ops: 1, parent:683] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 684
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-684/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 15] ,[]
-Valid?: |false|3|15|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(342): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtUnaryOperatorImpl) `++agingA ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (683(f=1.0), 684(f=3.0), )
Selected to next generation: IDs2--> (683(f=1.0), )
----------Running generation: 343, population size: 1

***** Generation 343 : 0
**Parent Variant: [Variant id: 685, #gens: 160, #ops: 0, parent:-]

--Child created id: 686
--Creating new operations for variant [Variant id: 686, #gens: 160, #ops: 0, parent:685]
---analyzing modificationPoint position: 100
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  context.addMessage(pattern, args)
---analyzing modificationPoint position: 108
---modifPoint 1 not mutation generated in  // Perform computation. return doSolve()
---analyzing modificationPoint position: 78
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  // compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...]
---analyzing modificationPoint position: 33
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 686, #gens: 159, #ops: 1, parent:685] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 686
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-686/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(343): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (685(f=1.0), 686(f=4.0), )
Selected to next generation: IDs2--> (685(f=1.0), )
----------Running generation: 344, population size: 1

***** Generation 344 : 0
**Parent Variant: [Variant id: 687, #gens: 160, #ops: 0, parent:-]

--Child created id: 688
--Creating new operations for variant [Variant id: 688, #gens: 160, #ops: 0, parent:687]
---analyzing modificationPoint position: 101
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 0 not mutation generated in  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils.verifySequence(lower, initial, up[...]
---analyzing modificationPoint position: 78
location: BracketingNthOrderBrentSolver.java365
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 688, #gens: 159, #ops: 1, parent:687] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 688
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-688/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 9, was successful: false, cases executed: 15] ,[]
-Valid?: |false|9|15|[]|, fitness 9.0
Ingredient counter is Zero
---Undoing: gnrtn(344): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// compute Q Newton coefficients by divided differences for (int i = start; i < (end - 1); ++i) { 	f[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (687(f=1.0), 688(f=9.0), )
Selected to next generation: IDs2--> (687(f=1.0), )
----------Running generation: 345, population size: 1

***** Generation 345 : 0
**Parent Variant: [Variant id: 689, #gens: 160, #ops: 0, parent:-]

--Child created id: 690
--Creating new operations for variant [Variant id: 690, #gens: 160, #ops: 0, parent:689]
---analyzing modificationPoint position: 140
Templates availables1003
Attempts Base Ingredients  1 total 1003
---modifPoint 0 not mutation generated in  if (a < b) { 	return b; }
---analyzing modificationPoint position: 3
---modifPoint 1 not mutation generated in  return context.getMessage()
---analyzing modificationPoint position: 2
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `return maximalOrder` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 248, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `return maximalOrder` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 690, #gens: 161, #ops: 1, parent:689] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 690, errors: [BracketingNthOrderBrentSolver.java:249: error: unreachable statement
			do {
			^]
Ingredient counter is Zero
---Undoing: gnrtn(345): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `return maximalOrder` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (689(f=1.0), 690(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (689(f=1.0), )
----------Running generation: 346, population size: 1

***** Generation 346 : 0
**Parent Variant: [Variant id: 691, #gens: 160, #ops: 0, parent:-]

--Child created id: 692
--Creating new operations for variant [Variant id: 692, #gens: 160, #ops: 0, parent:691]
---analyzing modificationPoint position: 16
Templates availables63
Attempts Base Ingredients  1 total 63
---modifPoint 0 not mutation generated in  int count = 0
---analyzing modificationPoint position: 48
Templates availables34
Attempts Base Ingredients  1 total 34
Attempts Base Ingredients  2 total 34
vars from patch [nextX, xA, xB]
--> var from patch: nextX spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: xA spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xB spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java327
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// fall back to bisection nextX = xA + (0.5 * (xB - xA))` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 327, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// fall back to bisection nextX = xA + (0.5 * (xB - xA))` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 692, #gens: 160, #ops: 1, parent:691] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 692
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-692/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 15] ,[]
-Valid?: |false|2|15|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(346): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `absYB = org.apache.commons.math.util.FastMath.abs(yB) ` -topatch--> `// fall back to bisection nextX = xA + (0.5 * (xB - xA))` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (691(f=1.0), 692(f=2.0), )
Selected to next generation: IDs2--> (691(f=1.0), )
----------Running generation: 347, population size: 1

***** Generation 347 : 0
**Parent Variant: [Variant id: 693, #gens: 160, #ops: 0, parent:-]

--Child created id: 694
--Creating new operations for variant [Variant id: 694, #gens: 160, #ops: 0, parent:693]
---analyzing modificationPoint position: 114
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  // Checks. org.apache.commons.math.util.MathUtils.checkNotNull(f)
---analyzing modificationPoint position: 60
---modifPoint 1 not mutation generated in  int agingA = 0
---analyzing modificationPoint position: 34
location: BracketingNthOrderBrentSolver.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 694, #gens: 159, #ops: 1, parent:693] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 694
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-694/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(347): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, start, y, 0, nbPoints) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (693(f=1.0), 694(f=4.0), )
Selected to next generation: IDs2--> (693(f=1.0), )
----------Running generation: 348, population size: 1

***** Generation 348 : 0
**Parent Variant: [Variant id: 695, #gens: 160, #ops: 0, parent:-]

--Child created id: 696
--Creating new operations for variant [Variant id: 696, #gens: 160, #ops: 0, parent:695]
---analyzing modificationPoint position: 93
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch []
location: BracketingNthOrderBrentSolver.java155
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 155, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 696, #gens: 161, #ops: 1, parent:695] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 696, errors: [BracketingNthOrderBrentSolver.java:248: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		^, BracketingNthOrderBrentSolver.java:248: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		    ^, BracketingNthOrderBrentSolver.java:248: error: ')' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		     ^, BracketingNthOrderBrentSolver.java:248: error: ']' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		       ^, BracketingNthOrderBrentSolver.java:248: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		        ^, BracketingNthOrderBrentSolver.java:248: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		         ^, BracketingNthOrderBrentSolver.java:248: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		           ^, BracketingNthOrderBrentSolver.java:248: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		             ^, BracketingNthOrderBrentSolver.java:248: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		              ^, BracketingNthOrderBrentSolver.java:248: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		               ^, BracketingNthOrderBrentSolver.java:248: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                ^, BracketingNthOrderBrentSolver.java:248: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                 ^, BracketingNthOrderBrentSolver.java:248: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                   ^, BracketingNthOrderBrentSolver.java:248: error: illegal start of type
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                     ^, BracketingNthOrderBrentSolver.java:248: error: <identifier> expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                      ^, BracketingNthOrderBrentSolver.java:248: error: ';' expected
			return x[0];} 		int nbPoints; 		int signChangeIndex; 		if ((y[0] * y[1]) < 0) { 			// reduce interval if it brackets the root 			nbPoints = 2; 			signChangeIndex = 1;} else { 			// evaluate second endpoint 			y[2] = computeObjectiveValue(x[2]); 			if (org.apache.commons.math.util.Precision.equals(y[2], 0.0, 1)) { 				// return the second endpoint if it is a perfect root.
			              		              		                     		                        ^, BracketingNthOrderBrentSolver.java:249: error: ']' expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				         ^, BracketingNthOrderBrentSolver.java:249: error: ';' expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				          ^, BracketingNthOrderBrentSolver.java:249: error: class, interface, or enum expected
				return x[2];} 			if ((y[1] * y[2]) < 0) { 				// use all computed point as a start sampling array for solving 				nbPoints = 3; 				signChangeIndex = 2;} else { 				throw new org.apache.commons.math.exception.NoBracketingException(x[0], x[2], y[0], y[2]);}} 		// prepare a work array for inverse polynomial interpolation 		final double[] tmpX = new double[x.length]; 		// current tightest bracketing of the root 		double xA = x[signChangeIndex - 1]; 		double yA = y[signChangeIndex - 1]; 		double absYA = org.apache.commons.math.util.FastMath.abs(yA); 		int agingA = 0; 		double xB = x[signChangeIndex]; 		double yB = y[signChangeIndex]; 		double absYB = org.apache.commons.math.util.FastMath.abs(yB); 		int agingB = 0; 		// search loop
				              			^, BracketingNthOrderBrentSolver.java:251: error: class, interface, or enum expected
						throw new org.apache.commons.math.exception.MathInternalError(null);}} 			// target for the next evaluation point 			double targetY; 			if (agingA >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the high bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yB;} else if (agingB >= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.MAXIMAL_AGING) { 				// we keep updating the low bracket, try to compensate this 				targetY = (-org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.REDUCTION_FACTOR) * yA;} else { 				// bracketing is balanced, try to find the root itself 				targetY = 0;} 			// make a few attempts to guess a root, 			double nextX; 			int start = 0; 			int end = nbPoints; 			do { 				// guess a value for current target, using inverse polynomial interpolation
						                                                                    ^, BracketingNthOrderBrentSolver.java:253: error: class, interface, or enum expected
				nextX = guessX(targetY, tmpX, y, start, end);
				^, BracketingNthOrderBrentSolver.java:255: error: class, interface, or enum expected
				if (!((nextX > xA) && (nextX < xB))) {
				^, BracketingNthOrderBrentSolver.java:264: error: class, interface, or enum expected
					} else {
					^, BracketingNthOrderBrentSolver.java:267: error: class, interface, or enum expected
					}
					^, BracketingNthOrderBrentSolver.java:272: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:276: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(nextX)) {
			^, BracketingNthOrderBrentSolver.java:279: error: class, interface, or enum expected
				start = signChangeIndex - 1;
				^, BracketingNthOrderBrentSolver.java:280: error: class, interface, or enum expected
				end = signChangeIndex;
				^, BracketingNthOrderBrentSolver.java:281: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:284: error: class, interface, or enum expected
			final double nextY = computeObjectiveValue(nextX);
			      ^, BracketingNthOrderBrentSolver.java:285: error: class, interface, or enum expected
			if (org.apache.commons.math.util.Precision.equals(nextY, 0.0, 1)) {
			^, BracketingNthOrderBrentSolver.java:289: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:296: error: class, interface, or enum expected
				java.lang.System.arraycopy(x, start, x, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:297: error: class, interface, or enum expected
				java.lang.System.arraycopy(y, start, y, 0, nbPoints);
				^, BracketingNthOrderBrentSolver.java:298: error: class, interface, or enum expected
				signChangeIndex -= start;
				^, BracketingNthOrderBrentSolver.java:300: error: class, interface, or enum expected
			} else if (nbPoints == x.length) {
			^, BracketingNthOrderBrentSolver.java:306: error: class, interface, or enum expected
				if (signChangeIndex >= ((x.length + 1) / 2)) {
				^, BracketingNthOrderBrentSolver.java:309: error: class, interface, or enum expected
					java.lang.System.arraycopy(y, 1, y, 0, nbPoints);
					^, BracketingNthOrderBrentSolver.java:310: error: class, interface, or enum expected
					--signChangeIndex;
					^, BracketingNthOrderBrentSolver.java:311: error: class, interface, or enum expected
				}
				^, BracketingNthOrderBrentSolver.java:318: error: class, interface, or enum expected
			x[signChangeIndex] = nextX;
			^, BracketingNthOrderBrentSolver.java:319: error: class, interface, or enum expected
			java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex);
			^, BracketingNthOrderBrentSolver.java:320: error: class, interface, or enum expected
			y[signChangeIndex] = nextY;
			^, BracketingNthOrderBrentSolver.java:321: error: class, interface, or enum expected
			++nbPoints;
			^, BracketingNthOrderBrentSolver.java:324: error: class, interface, or enum expected
			if ((nextY * yA) <= 0) {
			^, BracketingNthOrderBrentSolver.java:327: error: class, interface, or enum expected
				yB = nextY;
				^, BracketingNthOrderBrentSolver.java:328: error: class, interface, or enum expected
				absYB = org.apache.commons.math.util.FastMath.abs(yB);
				^, BracketingNthOrderBrentSolver.java:329: error: class, interface, or enum expected
				++agingA;
				^, BracketingNthOrderBrentSolver.java:330: error: class, interface, or enum expected
				agingB = 0;
				^, BracketingNthOrderBrentSolver.java:331: error: class, interface, or enum expected
			} else {
			^, BracketingNthOrderBrentSolver.java:334: error: class, interface, or enum expected
				yA = nextY;
				^, BracketingNthOrderBrentSolver.java:335: error: class, interface, or enum expected
				absYA = org.apache.commons.math.util.FastMath.abs(yA);
				^, BracketingNthOrderBrentSolver.java:336: error: class, interface, or enum expected
				agingA = 0;
				^, BracketingNthOrderBrentSolver.java:337: error: class, interface, or enum expected
				++agingB;
				^, BracketingNthOrderBrentSolver.java:340: error: class, interface, or enum expected
				signChangeIndex++;
				^, BracketingNthOrderBrentSolver.java:342: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                            ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                  ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                    ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                      ^, BracketingNthOrderBrentSolver.java:368: error: class, interface, or enum expected
	 */ 	private double guessX(final double targetY, final double[] x, final double[] y, final int start, final int end) { 		// compute Q Newton coefficients by divided differences
	    	                                                                                                       ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                    ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                   ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                      ^, BracketingNthOrderBrentSolver.java:369: error: class, interface, or enum expected
		for (int i = start; i < (end - 1); ++i) { 			final int delta = (i + 1) - start; 			for (int j = end - 1; j > i; --j) { 				x[j] = (x[j] - x[j - 1]) / (y[j] - y[j - delta]);
		                                          			                                   			                             ^, BracketingNthOrderBrentSolver.java:370: error: class, interface, or enum expected
			}
			^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                      ^, BracketingNthOrderBrentSolver.java:375: error: class, interface, or enum expected
		for (int j = end - 1; j >= start; --j) {
		                                  ^, BracketingNthOrderBrentSolver.java:377: error: class, interface, or enum expected
		}
		^, BracketingNthOrderBrentSolver.java:381: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:385: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution) {
	    	       ^, BracketingNthOrderBrentSolver.java:387: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max);
		^, BracketingNthOrderBrentSolver.java:388: error: class, interface, or enum expected
	}
	^, BracketingNthOrderBrentSolver.java:392: error: class, interface, or enum expected
	 */ 	public double solve(int maxEval, org.apache.commons.math.analysis.UnivariateFunction f, double min, double max, double startValue, 
	    	       ^, BracketingNthOrderBrentSolver.java:395: error: class, interface, or enum expected
		return super.solve(maxEval, f, min, max, startValue);
		^, BracketingNthOrderBrentSolver.java:396: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(348): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.math.util.Precision.equals(y[1], 0.0, 1)) { 	// return the initial guess if i[...] ` -topatch--> `int start = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (695(f=1.0), 696(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (695(f=1.0), )
----------Running generation: 349, population size: 1

***** Generation 349 : 0
**Parent Variant: [Variant id: 697, #gens: 160, #ops: 0, parent:-]

--Child created id: 698
--Creating new operations for variant [Variant id: 698, #gens: 160, #ops: 0, parent:697]
---analyzing modificationPoint position: 5
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  return super.solve(maxEval, f, min, max, startValue)
---analyzing modificationPoint position: 92
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 1 not mutation generated in  // evaluate initial guess y[1] = computeObjectiveValue(x[1])
---analyzing modificationPoint position: 55
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [y, x]
--> var from patch: y spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java173
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 173, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 698, #gens: 161, #ops: 1, parent:697] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 698
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-698/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 1, was successful: false, cases executed: 15] ,[]
-Valid?: |false|1|15|[]|, fitness 1.0
Ingredient counter is Zero
---Undoing: gnrtn(349): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `signChangeIndex = 1 ` -topatch--> `if (org.apache.commons.math.util.Precision.equals(y[0], 0.0, 1)) { 	// return the first endpoint if [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (697(f=1.0), 698(f=1.0), )
Selected to next generation: IDs2--> (697(f=1.0), )
----------Running generation: 350, population size: 1

***** Generation 350 : 0
**Parent Variant: [Variant id: 699, #gens: 160, #ops: 0, parent:-]

--Child created id: 700
--Creating new operations for variant [Variant id: 700, #gens: 160, #ops: 0, parent:699]
---analyzing modificationPoint position: 27
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  return max
---analyzing modificationPoint position: 158
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  if (o == null) { 	throw new org.apache.commons.math.exception.NullArgumentException(); }
---analyzing modificationPoint position: 50
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 2 not mutation generated in  agingB = 0
---analyzing modificationPoint position: 2
location: BracketingNthOrderBrentSolver.java248
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 700, #gens: 159, #ops: 1, parent:699] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 700, errors: [BracketingNthOrderBrentSolver.java:276: error: variable nextX might not have been initialized
			if (java.lang.Double.isNaN(nextX)) {
			                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(350): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtDoImpl) `do {  	// guess a value for current target, using inverse polynomial interpolation 	java.lang.System[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (699(f=1.0), 700(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (699(f=1.0), )
----------Running generation: 351, population size: 1

***** Generation 351 : 0
**Parent Variant: [Variant id: 701, #gens: 160, #ops: 0, parent:-]

--Child created id: 702
--Creating new operations for variant [Variant id: 702, #gens: 160, #ops: 0, parent:701]
---analyzing modificationPoint position: 58
Templates availables106
Attempts Base Ingredients  1 total 106
---modifPoint 0 not mutation generated in  double yA = y[signChangeIndex - 1]
---analyzing modificationPoint position: 122
Templates availables33
Attempts Base Ingredients  1 total 33
---modifPoint 1 not mutation generated in  this.absoluteAccuracy = absoluteAccuracy
---analyzing modificationPoint position: 31
location: BracketingNthOrderBrentSolver.java235
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 702, #gens: 159, #ops: 1, parent:701] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 702, errors: [BracketingNthOrderBrentSolver.java:253: error: variable targetY might not have been initialized
				nextX = guessX(targetY, tmpX, y, start, end);
				               ^]
Ingredient counter is Zero
---Undoing: gnrtn(351): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// we keep updating the high bracket, try to compensate this targetY = (-org.apache.commons.math.ana[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (701(f=1.0), 702(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (701(f=1.0), )
----------Running generation: 352, population size: 1

***** Generation 352 : 0
**Parent Variant: [Variant id: 703, #gens: 160, #ops: 0, parent:-]

--Child created id: 704
--Creating new operations for variant [Variant id: 704, #gens: 160, #ops: 0, parent:703]
---analyzing modificationPoint position: 84
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [maximalOrder]
--> var from patch: maximalOrder spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java375
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x0 = x[j] + (x0 * (targetY - y[j])) ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 375, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x0 = x[j] + (x0 * (targetY - y[j])) ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 704, #gens: 161, #ops: 1, parent:703] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 704, errors: [BracketingNthOrderBrentSolver.java:376: error: variable y is already defined in method guessX(double,double[],double[],int,int)
			x0 = x[j] + (x0 * (targetY - y[j])); 			final double[] y = new double[maximalOrder + 1];
			                                     			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(352): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `x0 = x[j] + (x0 * (targetY - y[j])) ` -topatch--> `final double[] y = new double[maximalOrder + 1]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (703(f=1.0), 704(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (703(f=1.0), )
----------Running generation: 353, population size: 1

***** Generation 353 : 0
**Parent Variant: [Variant id: 705, #gens: 160, #ops: 0, parent:-]

--Child created id: 706
--Creating new operations for variant [Variant id: 706, #gens: 160, #ops: 0, parent:705]
---analyzing modificationPoint position: 33
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER]
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER spoon.support.reflect.code.CtFieldReadImpl
location: BracketingNthOrderBrentSolver.java295
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 295, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 706, #gens: 160, #ops: 1, parent:705] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 706, errors: [BracketingNthOrderBrentSolver.java:295: error: call to this must be first statement in constructor
				nbPoints = end - start; 				this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURACY, org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_MAXIMAL_ORDER);
				                        				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(353): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(x, start, x, 0, nbPoints) ` -topatch--> `this(org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.DEFAULT_ABSOLUTE_ACCURAC[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (705(f=1.0), 706(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (705(f=1.0), )
----------Running generation: 354, population size: 1

***** Generation 354 : 0
**Parent Variant: [Variant id: 707, #gens: 160, #ops: 0, parent:-]

--Child created id: 708
--Creating new operations for variant [Variant id: 708, #gens: 160, #ops: 0, parent:707]
---analyzing modificationPoint position: 42
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [x, nbPoints]
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: nbPoints spoon.support.reflect.code.CtVariableReadImpl
location: BracketingNthOrderBrentSolver.java318
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 318, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 708, #gens: 160, #ops: 1, parent:707] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 708
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-708/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 15] ,[]
-Valid?: |false|4|15|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(354): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(y, signChangeIndex, y, signChangeIndex + 1, nbPoints - signChangeIndex) ` -topatch--> `// we drop the lowest point, we have to shift the arrays and the index java.lang.System.arraycopy(x,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (707(f=1.0), 708(f=4.0), )
Selected to next generation: IDs2--> (707(f=1.0), )
----------Running generation: 355, population size: 1

***** Generation 355 : 0
**Parent Variant: [Variant id: 709, #gens: 160, #ops: 0, parent:-]

--Child created id: 710
--Creating new operations for variant [Variant id: 710, #gens: 160, #ops: 0, parent:709]
---analyzing modificationPoint position: 7
location: BaseAbstractUnivariateRealSolver.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 710, #gens: 159, #ops: 1, parent:709] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 710
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-710/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
-Killed id: pid->58869
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases 58869
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(355): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.exception.TooManyEvaluationsException(e.getMax()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (709(f=1.0), 710(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (709(f=1.0), )
----------Running generation: 356, population size: 1

***** Generation 356 : 0
**Parent Variant: [Variant id: 711, #gens: 160, #ops: 0, parent:-]

--Child created id: 712
--Creating new operations for variant [Variant id: 712, #gens: 160, #ops: 0, parent:711]
---analyzing modificationPoint position: 1
Templates availables106
Attempts Base Ingredients  1 total 106
vars from patch [signChangeIndex]
--> var from patch: signChangeIndex spoon.support.reflect.code.CtVariableWriteImpl
location: BracketingNthOrderBrentSolver.java245
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `signChangeIndex = 2` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver line: 245, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `signChangeIndex = 2` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 712, #gens: 161, #ops: 1, parent:711] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 712
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-712/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 15] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout2438secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/variant-712/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-40/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.exception.MaxCountExceededExceptionTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.PegasusSolverTest  org.apache.commons.math.analysis.function.HarmonicOscillatorTest  org.apache.commons.math.linear.PivotingQRSolverTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.ode.events.OverlappingEventsTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.RetryRunnerTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.dfp.DfpTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.exception.TooManyEvaluationsExceptionTest  org.apache.commons.math.util.MultidimensionalCounterTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.analysis.solvers.SecantSolverTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.exception.OutOfRangeExceptionTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.random.ISAACTest  org.apache.commons.math.geometry.euclidean.threed.RotationTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.analysis.solvers.MullerSolver2Test  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.direct.SimplexOptimizerMultiDirectionalTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DFormatTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.ode.JacobianMatricesTest  org.apache.commons.math.util.IncrementorTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.analysis.function.SigmoidTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.linear.FieldLUDecompositionTest  org.apache.commons.math.random.Well19937cTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.linear.UnmodifiableOpenMapRealVectorTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.geometry.euclidean.threed.Vector3DTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.SingularValueDecompositionTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.distribution.ChiSquaredDistributionTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.geometry.euclidean.twod.LineTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.optimization.direct.BOBYQAOptimizerTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.optimization.direct.MultivariateFunctionMappingAdapterTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.linear.CholeskyDecompositionTest  org.apache.commons.math.optimization.univariate.BracketFinderTest  org.apache.commons.math.stat.inference.MannWhitneyUTestTest  org.apache.commons.math.stat.inference.WilcoxonSignedRankTestTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.exception.NonMonotonicSequenceExceptionTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.analysis.interpolation.UnivariateRealPeriodicInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.linear.PivotingQRDecompositionTest  org.apache.commons.math.optimization.direct.MultivariateFunctionPenaltyAdapterTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.geometry.euclidean.threed.PlaneTest  org.apache.commons.math.geometry.euclidean.threed.RotationOrderTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.stat.regression.MillerUpdatingRegressionTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.linear.QRDecompositionTest  org.apache.commons.math.optimization.fitting.CurveFitterTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.optimization.direct.CMAESOptimizerTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.ode.events.ReappearingEventTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.random.Well44497bTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputOverlapTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.exception.util.ExceptionContextTest  org.apache.commons.math.analysis.solvers.IllinoisSolverTest  org.apache.commons.math.optimization.direct.PowellOptimizerTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.ode.events.EventStateTest  org.apache.commons.math.filter.KalmanFilterTest  org.apache.commons.math.geometry.euclidean.threed.PolyhedronsSetTest  org.apache.commons.math.util.FastMathTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.stat.descriptive.moment.SemiVarianceTest  org.apache.commons.math.geometry.euclidean.oned.IntervalsSetTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.stat.correlation.StorelessCovarianceTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.exception.NotStrictlyPositiveExceptionTest  org.apache.commons.math.dfp.DfpMathTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.optimization.BatteryNISTTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.analysis.function.StepFunctionTest  org.apache.commons.math.dfp.DfpDecTest  org.apache.commons.math.linear.FieldLUSolverTest  org.apache.commons.math.analysis.function.LogitTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.interpolation.MicrosphereInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.InteractionTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.util.FastMathStrictComparisonTest  org.apache.commons.math.util.PrecisionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest  org.apache.commons.math.linear.OpenMapRealMatrixTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.geometry.euclidean.threed.LineTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.distribution.KolmogorovSmirnovDistributionTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.exception.NotPositiveExceptionTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.linear.RealVectorTest  org.apache.commons.math.analysis.function.LogisticTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatorTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.linear.ConjugateGradientTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.geometry.partitioning.utilities.AVLTreeTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.random.Well1024aTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.geometry.euclidean.threed.FrenchVector3DFormatTest  org.apache.commons.math.linear.SymmLQTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.exception.NumberIsTooSmallExceptionTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.exception.DimensionMismatchExceptionTest  org.apache.commons.math.random.Well44497aTest  org.apache.commons.math.geometry.euclidean.threed.SubLineTest  org.apache.commons.math.analysis.interpolation.LinearInterpolatorTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.geometry.euclidean.twod.SubLineTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.dfp.BracketingNthOrderBrentSolverDFPTest  org.apache.commons.math.geometry.euclidean.twod.PolygonsSetTest  org.apache.commons.math.analysis.function.SincTest  org.apache.commons.math.linear.UnmodifiableArrayRealVectorTest  org.apache.commons.math.exception.NumberIsTooLargeExceptionTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.function.GaussianTest  org.apache.commons.math.analysis.function.SqrtTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.util.ArithmeticUtilsTest  org.apache.commons.math.util.FastMathTestPerformance  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.random.Well19937aTest  org.apache.commons.math.linear.EigenDecompositionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.LUDecompositionTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.optimization.univariate.BrentOptimizerTest  org.apache.commons.math.util.PairTest  org.apache.commons.math.optimization.direct.SimplexOptimizerNelderMeadTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.distribution.AbtractIntegerDistributionTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.random.StableRandomGeneratorTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.analysis.FunctionUtilsTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.analysis.interpolation.TricubicSplineInterpolatingFunctionTest  org.apache.commons.math.ode.sampling.StepNormalizerOutputTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.analysis.interpolation.BicubicSplineInterpolatingFunctionTest  org.apache.commons.math.analysis.interpolation.SmoothingPolynomialBicubicSplineInterpolatorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.util.MathArraysTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.linear.MatrixDimensionMismatchExceptionTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.random.BitsStreamGeneratorTest  org.apache.commons.math.random.Well512aTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.exception.util.ArgUtilsTest  org.apache.commons.math.optimization.fitting.GaussianFitterTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 3199] ,[]
-Valid?: |true|0|3199|[]|, fitness 0.0
-Found Solution, child variant #712
Ingredient counter is Zero

Attempts to find patch Id 712: 0, successful 0, failing 0

-Saving child on disk variant #712 at /Users/marekmazur/astor/./output_astor/AstorMain-math-40//src//variant-712

-Saving child on disk variant #712 at /Users/marekmazur/astor/./output_astor/AstorMain-math-40//src//variant-712_f
---Undoing: gnrtn(356): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// make a few attempts to guess a root, double nextX ` -topatch--> `signChangeIndex = 2` (spoon.support.reflect.code.CtAssignmentImpl) 
/Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/default_f/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
/Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/variant-712_f/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
diff command : diff -w -b  --label=/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java --label=/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java /Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/default_f/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java /Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/variant-712_f/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java --unified=0
/Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/default/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
/Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/variant-712/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
diff command : diff -w -b  --label=/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java --label=/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java /Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/default/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java /Users/marekmazur/astor/./output_astor/AstorMain-math-40/src/variant-712/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java --unified=0
Generation 1
Generation 2
Generation 3
Generation 4
Generation 5
Generation 6
Generation 7
Generation 8
Generation 9
Generation 10
Generation 11
Generation 12
Generation 13
Generation 14
Generation 15
Generation 16
Generation 17
Generation 18
Generation 19
Generation 20
Generation 21
Generation 22
Generation 23
Generation 24
Generation 25
Generation 26
Generation 27
Generation 28
Generation 29
Generation 30
Generation 31
Generation 32
Generation 33
Generation 34
Generation 35
Generation 36
Generation 37
Generation 38
Generation 39
Generation 40
Generation 41
Generation 42
Generation 43
Generation 44
Generation 45
Generation 46
Generation 47
Generation 48
Generation 49
Generation 50
Generation 51
Generation 52
Generation 53
Generation 54
Generation 55
Generation 56
Generation 57
Generation 58
Generation 59
Generation 60
Generation 61
Generation 62
Generation 63
Generation 64
Generation 65
Generation 66
Generation 67
Generation 68
Generation 69
Generation 70
Generation 71
Generation 72
Generation 73
Generation 74
Generation 75
Generation 76
Generation 77
Generation 78
Generation 79
Generation 80
Generation 81
Generation 82
Generation 83
Generation 84
Generation 85
Generation 86
Generation 87
Generation 88
Generation 89
Generation 90
Generation 91
Generation 92
Generation 93
Generation 94
Generation 95
Generation 96
Generation 97
Generation 98
Generation 99
Generation 100
Generation 101
Generation 102
Generation 103
Generation 104
Generation 105
Generation 106
Generation 107
Generation 108
Generation 109
Generation 110
Generation 111
Generation 112
Generation 113
Generation 114
Generation 115
Generation 116
Generation 117
Generation 118
Generation 119
Generation 120
Generation 121
Generation 122
Generation 123
Generation 124
Generation 125
Generation 126
Generation 127
Generation 128
Generation 129
Generation 130
Generation 131
Generation 132
Generation 133
Generation 134
Generation 135
Generation 136
Generation 137
Generation 138
Generation 139
Generation 140
Generation 141
Generation 142
Generation 143
Generation 144
Generation 145
Generation 146
Generation 147
Generation 148
Generation 149
Generation 150
Generation 151
Generation 152
Generation 153
Generation 154
Generation 155
Generation 156
Generation 157
Generation 158
Generation 159
Generation 160
Generation 161
Generation 162
Generation 163
Generation 164
Generation 165
Generation 166
Generation 167
Generation 168
Generation 169
Generation 170
Generation 171
Generation 172
Generation 173
Generation 174
Generation 175
Generation 176
Generation 177
Generation 178
Generation 179
Generation 180
Generation 181
Generation 182
Generation 183
Generation 184
Generation 185
Generation 186
Generation 187
Generation 188
Generation 189
Generation 190
Generation 191
Generation 192
Generation 193
Generation 194
Generation 195
Generation 196
Generation 197
Generation 198
Generation 199
Generation 200
Generation 201
Generation 202
Generation 203
Generation 204
Generation 205
Generation 206
Generation 207
Generation 208
Generation 209
Generation 210
Generation 211
Generation 212
Generation 213
Generation 214
Generation 215
Generation 216
Generation 217
Generation 218
Generation 219
Generation 220
Generation 221
Generation 222
Generation 223
Generation 224
Generation 225
Generation 226
Generation 227
Generation 228
Generation 229
Generation 230
Generation 231
Generation 232
Generation 233
Generation 234
Generation 235
Generation 236
Generation 237
Generation 238
Generation 239
Generation 240
Generation 241
Generation 242
Generation 243
Generation 244
Generation 245
Generation 246
Generation 247
Generation 248
Generation 249
Generation 250
Generation 251
Generation 252
Generation 253
Generation 254
Generation 255
Generation 256
Generation 257
Generation 258
Generation 259
Generation 260
Generation 261
Generation 262
Generation 263
Generation 264
Generation 265
Generation 266
Generation 267
Generation 268
Generation 269
Generation 270
Generation 271
Generation 272
Generation 273
Generation 274
Generation 275
Generation 276
Generation 277
Generation 278
Generation 279
Generation 280
Generation 281
Generation 282
Generation 283
Generation 284
Generation 285
Generation 286
Generation 287
Generation 288
Generation 289
Generation 290
Generation 291
Generation 292
Generation 293
Generation 294
Generation 295
Generation 296
Generation 297
Generation 298
Generation 299
Generation 300
Generation 301
Generation 302
Generation 303
Generation 304
Generation 305
Generation 306
Generation 307
Generation 308
Generation 309
Generation 310
Generation 311
Generation 312
Generation 313
Generation 314
Generation 315
Generation 316
Generation 317
Generation 318
Generation 319
Generation 320
Generation 321
Generation 322
Generation 323
Generation 324
Generation 325
Generation 326
Generation 327
Generation 328
Generation 329
Generation 330
Generation 331
Generation 332
Generation 333
Generation 334
Generation 335
Generation 336
Generation 337
Generation 338
Generation 339
Generation 340
Generation 341
Generation 342
Generation 343
Generation 344
Generation 345
Generation 346
Generation 347
Generation 348
Generation 349
Generation 350
Generation 351
Generation 352
Generation 353
Generation 354
Generation 355
Generation 356
Storing ing JSON at ./diffSolutions/patchinfo_712.json
./diffSolutions/patchinfo_712.json:
{"VARIANT_ID":"712","VALIDATION":"|true|0|3199|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-40\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"signChangeIndex = 2","PATCH_HUNK_TYPE":"CtAssignmentImpl|CtBlockImpl","ORIGINAL_CODE":"\\\/\\\/ make a few attempts to guess a root,\\ndouble nextX","BUGGY_CODE_TYPE":"CtLocalVariableImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-40\\\/\\\/src\\\/\\\/variant-712\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","LINE":"245","MP_RANKING":"1","PATCH_HUNK_CODE":"signChangeIndex = 2"}],"TIME":"683","GENERATION":"356","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-40\\\/\\\/src\\\/\\\/variant-712","PATCH_DIFF_ORIG":"--- \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n+++ \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n@@ -245 +245 @@\\n-\\t\\t\\tdouble nextX;\\n+\\t\\t\\tdouble nextX; \\t\\t\\tsignChangeIndex = 2;\\n\\n"}
Saving patch info at ./diffSolutions/patchinfo_712.json
Storing ing JSON at /Users/marekmazur/astor/./diffSolutions/patch_684359_712.diff
/Users/marekmazur/astor/./diffSolutions/patch_684359_712.diff:
{"VARIANT_ID":"712","VALIDATION":"|true|0|3199|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-40\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"signChangeIndex = 2","PATCH_HUNK_TYPE":"CtAssignmentImpl|CtBlockImpl","ORIGINAL_CODE":"\\\/\\\/ make a few attempts to guess a root,\\ndouble nextX","BUGGY_CODE_TYPE":"CtLocalVariableImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-40\\\/\\\/src\\\/\\\/variant-712\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","LINE":"245","MP_RANKING":"1","PATCH_HUNK_CODE":"signChangeIndex = 2"}],"TIME":"683","GENERATION":"356","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-40\\\/\\\/src\\\/\\\/variant-712","PATCH_DIFF_ORIG":"--- \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n+++ \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n@@ -245 +245 @@\\n-\\t\\t\\tdouble nextX;\\n+\\t\\t\\tdouble nextX; \\t\\t\\tsignChangeIndex = 2;\\n\\n"}
Saving patch diff at /Users/marekmazur/astor/./diffSolutions/patch_684359_712.diff
End analysis generation - Solutions found:--> (712(SOLUTION)(f=0.0), )
Variants to next generation from: 2-->IDs: (712(f=0.0)[SOL], 711(f=1.0), )
Selected to next generation: IDs2--> (711(f=1.0), )
Max Solution found 1
Time Repair Loop (s): 684.369
generationsexecuted: 356
----SUMMARY_EXECUTION---
End Repair Search: Found solution
Solution stored at: /Users/marekmazur/astor/./output_astor/AstorMain-math-40//src/
Number solutions:1
f (sol): 0.0, [Variant id: 712 (SOL) , #gens: 161, #ops: 1, parent:711]
All variants:
f 1.0, [Variant id: 713, #gens: 160, #ops: 0, parent:-]
Number suspicious:1

 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 712
 
time(sec)= 683
operation: InsertAfterOp
location= org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver
line= 245
lineSuspiciousness= 1
lineSuspiciousness= 1
original statement= // make a few attempts to guess a root,
double nextX
buggy kind= CtLocalVariableImpl|CtBlockImpl
fixed statement= signChangeIndex = 2
Patch kind= CtAssignmentImpl|CtBlockImpl
generation= 356
ingredientScope= LOCAL
validation=|true|0|3199|[]|
diffpatch=--- /src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
+++ /src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
@@ -218,0 +219 @@
+			signChangeIndex = 2;


diffpatchoriginal=--- /src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
+++ /src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
@@ -245 +245 @@
-			double nextX;
+			double nextX; 			signChangeIndex = 2;



Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=684.369
NR_GENERATIONS=356
NR_RIGHT_COMPILATIONS=182
NR_FAILLING_COMPILATIONS=174
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND
FAULT_LOCALIZATION=flacoco

Patch stats:

Patch 1
VARIANT_ID=712
TIME=683
VALIDATION=|true|0|3199|[]|
GENERATION=356
FOLDER_SOLUTION_CODE=/Users/marekmazur/astor/./output_astor/AstorMain-math-40//src//variant-712
--Patch Hunk #1
OPERATOR=InsertAfterOp

LOCATION=org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver

PATH=/Users/marekmazur/astor/defects4j/math-40/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java

MODIFIED_FILE_PATH=/Users/marekmazur/astor/./output_astor/AstorMain-math-40//src//variant-712/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java

LINE=245

SUSPICIOUNESS=1

MP_RANKING=1

ORIGINAL_CODE=// make a few attempts to guess a root,
double nextX

BUGGY_CODE_TYPE=CtLocalVariableImpl|CtBlockImpl

PATCH_HUNK_CODE=signChangeIndex = 2

PATCH_HUNK_TYPE=CtAssignmentImpl|CtBlockImpl

INGREDIENT_SCOPE=LOCAL

INGREDIENT_PARENT=signChangeIndex = 2

PATCH_DIFF_ORIG=--- /src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
+++ /src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver.java
@@ -245 +245 @@
-			double nextX;
+			double nextX; 			signChangeIndex = 2;



Storing ing JSON at /Users/marekmazur/astor/./output_astor/AstorMain-math-40//astor_output.json
astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":182,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","FAULT_LOCALIZATION":"flacoco","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":174,"NR_GENERATIONS":356,"TOTAL_TIME":684.369,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"712","VALIDATION":"|true|0|3199|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-40\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"signChangeIndex = 2","PATCH_HUNK_TYPE":"CtAssignmentImpl|CtBlockImpl","ORIGINAL_CODE":"\\\/\\\/ make a few attempts to guess a root,\\ndouble nextX","BUGGY_CODE_TYPE":"CtLocalVariableImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-40\\\/\\\/src\\\/\\\/variant-712\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java","LINE":"245","MP_RANKING":"1","PATCH_HUNK_CODE":"signChangeIndex = 2"}],"TIME":"683","GENERATION":"356","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-40\\\/\\\/src\\\/\\\/variant-712","PATCH_DIFF_ORIG":"--- \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n+++ \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/analysis\\\/solvers\\\/BracketingNthOrderBrentSolver.java\\n@@ -245 +245 @@\\n-\\t\\t\\tdouble nextX;\\n+\\t\\t\\tdouble nextX; \\t\\t\\tsignChangeIndex = 2;\\n\\n"}]}
Time Total(s): 1663.514
