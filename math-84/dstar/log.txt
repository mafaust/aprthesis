[0] INFO ProjectConfiguration - Version of the JVM used: 1.8.0_202
[0] INFO main - Java version of the JDK used to run tests: 1.8.0_202
[0] INFO main - The compliance of the JVM is:  8
[1] INFO main - command line arguments: [-location  /Users/marekmazur/astor/defects4j/math-84  -mode  jgenprog  -package  org.apache.commons  -jvm4testexecution  /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin  -failing  org.apache.commons.math.optimization.direct.MultiDirectionalTest:org.apache.commons.math.optimization.direct.MultiDirectionalTest:  -srcjavafolder  /src/java/  -srctestfolder  /src/test/  -binjavafolder  /target/classes/  -bintestfolder  /target/test-classes/  -stopfirst  true  -dependencies  /Users/marekmazur/astor/examples/libs/junit-4.4.jar  -maxgen  1000000  -seed  10  -maxtime  60  -scope  local  -stopfirst  true  -flthreshold  0  -population  1  -faultlocalization  flacoco]
[1] INFO AstorMain - Running Astor on a JDK at /Users/marekmazur/Library/Java/JavaVirtualMachines/openjdk-19.0.1/Contents/Home
Source folders: [/Users/marekmazur/astor/defects4j/math-84/src/main/java]
Source Test folders: [/Users/marekmazur/astor/defects4j/math-84/src/test]
---- Creating spoon model
Creating model,  Code location from working folder: /Users/marekmazur/astor/defects4j/math-84/src/main/java
building model: /Users/marekmazur/astor/defects4j/math-84/src/main/java, compliance level: 8
Classpath (Dependencies) for building SpoonModel: [/Users/marekmazur/astor/examples/libs/junit-4.4.jar]
Spoon Model built from location: /Users/marekmazur/astor/defects4j/math-84/src/main/java
Number of CtTypes created: 388
Running chosen test detection strategy: CLASSLOADER
Test retrieved from classes: 224
Running Flacoco...
Running spectrum-based fault localization...
FlacocoConfig{workspace='/Users/marekmazur/astor/.', projectPath='/Users/marekmazur/astor/defects4j/math-84', srcJavaDir=[/Users/marekmazur/astor/defects4j/math-84/src/main/java], srcTestDir=[/Users/marekmazur/astor/defects4j/math-84/src/test], binJavaDir=[/Users/marekmazur/astor/defects4j/math-84/target/classes], binTestDir=[/Users/marekmazur/astor/defects4j/math-84/target/test-classes], classpath='/Users/marekmazur/astor/examples/libs/junit-4.4.jar', customJUnitClasspath='null', customJacocoClasspath='null', mavenHome='/Users/marekmazur/.m2/repository/', coverTests=false, testRunnerVerbose=false, testRunnerTimeoutInMs=3600000, testRunnerJVMArgs='null', threshold=0.0, includeZeros=false, complianceLevel=8, testDetectionStrategy=CLASSLOADER, ignoredTests=[], jUnit4Tests=[org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt, org.apache.commons.math.linear.QRSolverTest#testOverdetermined, org.apache.commons.math.linear.SingularValueSolverTest#testSolveSingularityErrors, org.apache.commons.math.fraction.BigFractionTest#testPow, org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, org.apache.commons.math.geometry.RotationTest#testCompose, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, org.apache.commons.math.linear.RealMatrixImplTest#testAdd, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.StatUtilsTest#testStats, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, org.apache.commons.math.distribution.TDistributionTest#testConsistency, org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, org.apache.commons.math.random.RandomAdaptorTest#testConfig, org.apache.commons.math.complex.ComplexTest#testConstructor, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, org.apache.commons.math.random.ValueServerTest#testReplay, org.apache.commons.math.util.MathUtilsTest#testSignInt, org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, org.apache.commons.math.fraction.FractionTest#testDoubleValue, org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, org.apache.commons.math.geometry.Vector3DTest#testAdd, org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, org.apache.commons.math.stat.FrequencyTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, org.apache.commons.math.linear.EigenSolverTest#testSolve, org.apache.commons.math.complex.ComplexTest#testTan, org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, org.apache.commons.math.util.BigRealTest#testConstructor, org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testDeprecated, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, org.apache.commons.math.geometry.Vector3DTest#testNorm, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, org.apache.commons.math.complex.ComplexTest#testCosNaN, org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, org.apache.commons.math.genetics.RandomKeyTest#testIsSame, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException, org.apache.commons.math.optimization.linear.SimplexTableauTest#testdiscardArtificialVariables, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.random.RandomDataTest#testNextUniform, org.apache.commons.math.fraction.FractionTest#testCompareTo, org.apache.commons.math.linear.RealMatrixImplTest#testSetRow, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, org.apache.commons.math.util.BigRealTest#testCompareTo, org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, org.apache.commons.math.linear.RealMatrixImplTest#testToString, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testDivideInfinite, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, org.apache.commons.math.complex.ComplexTest#testSubtractNaN, org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadParameters, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, org.apache.commons.math.stat.FrequencyTest#testAddNonComparable, org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, org.apache.commons.math.complex.ComplexTest#testSinhNaN, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnVector, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal, org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, org.apache.commons.math.geometry.RotationTest#testAngles, org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonLargeMean, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, org.apache.commons.math.distribution.BetaDistributionTest#testDensity, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.geometry.Vector3DTest#testDistanceSq, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1, org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2, org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, org.apache.commons.math.complex.ComplexTest#testTanhCritical, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, org.apache.commons.math.geometry.Vector3DTest#testSubtract, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, org.apache.commons.math.random.RandomAdaptorTest#testNextSample, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetFunctionValueAccuracy, org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionFieldTest#testSerial, org.apache.commons.math.linear.SparseRealVectorTest#testMisc, org.apache.commons.math.special.GammaTest#testLogGammaPositive, org.apache.commons.math.stat.StatUtilsTest#testProduct, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.complex.ComplexTest#testCosInf, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, org.apache.commons.math.geometry.Vector3DTest#testNormalize, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction2, org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions, org.apache.commons.math.geometry.Vector3DTest#testAngular, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, org.apache.commons.math.util.MathUtilsTest#testGcd, org.apache.commons.math.distribution.GammaDistributionTest#testValues, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, org.apache.commons.math.stat.FrequencyTest#testAdd, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, org.apache.commons.math.random.RandomDataTest#testNextPoisson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testQuinticMin, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, org.apache.commons.math.distribution.CauchyDistributionTest#testScale, org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, org.apache.commons.math.fraction.BigFractionTest#testNegate, org.apache.commons.math.complex.ComplexTest#testExpInf, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.genetics.RandomKeyTest#testDecode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadParameters, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, org.apache.commons.math.linear.RealMatrixImplTest#testTrace, org.apache.commons.math.optimization.direct.NelderMeadTest#testMinimizeMaximize, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, org.apache.commons.math.linear.QRSolverTest#testSolve, org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, org.apache.commons.math.util.TransformerMapTest#testTransformers, org.apache.commons.math.util.OpenIntToFieldTest#testIterator, org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, org.apache.commons.math.optimization.direct.NelderMeadTest#testRosenbrock, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, org.apache.commons.math.complex.ComplexTest#testEqualsTrue, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, org.apache.commons.math.complex.ComplexTest#testEqualsNull, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, org.apache.commons.math.util.BigRealFieldTest#testOne, org.apache.commons.math.complex.ComplexTest#testScalarMultiply, org.apache.commons.math.linear.RealMatrixImplTest#testGetRow, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, org.apache.commons.math.util.TransformerMapTest#testClear, org.apache.commons.math.complex.ComplexTest#testSqrtPolar, org.apache.commons.math.random.ValueServerTest#testFill, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, org.apache.commons.math.distribution.NormalDistributionTest#testMath280, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues, org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, org.apache.commons.math.ConvergenceExceptionTest#testConstructor, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, org.apache.commons.math.util.TransformerMapTest#testPutTransformer, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, org.apache.commons.math.MathExceptionTest#testConstructorCause, org.apache.commons.math.complex.ComplexTest#testAbsNaN, org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, org.apache.commons.math.special.GammaTest#testLogGammaZero, org.apache.commons.math.stat.StatUtilsTest#testPercentile, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, org.apache.commons.math.linear.RealMatrixImplTest#testOperate, org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, org.apache.commons.math.complex.ComplexTest#testMath221, org.apache.commons.math.complex.ComplexTest#testSqrt1z, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, org.apache.commons.math.geometry.RotationTest#testQuaternion, org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.util.TransformerMapTest#testContainsClass, org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, org.apache.commons.math.geometry.RotationTest#testMatrix, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetAbsoluteAccuracy, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.fraction.FractionFieldTest#testZero, org.apache.commons.math.util.MathUtilsTest#test0Choose0, org.apache.commons.math.util.DefaultTransformerTest#testTransformString, org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, org.apache.commons.math.geometry.Vector3DFormatTest#testNan, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.complex.ComplexTest#testConjugate, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetRelativeAccuracy, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, org.apache.commons.math.fraction.BigFractionTest#testDivide, org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, org.apache.commons.math.random.RandomAdaptorTest#testNextInt, org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, org.apache.commons.math.special.GammaTest#testTrigamma, org.apache.commons.math.fraction.BigFractionTest#testSerial, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetMaximalIterationCount, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, org.apache.commons.math.complex.ComplexTest#testDivideNaN, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, org.apache.commons.math.fraction.FractionFormatTest#testParseProper, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArgumentsCause, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, org.apache.commons.math.geometry.RotationTest#testVectorOnePair, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, org.apache.commons.math.complex.ComplexTest#testNegateNaN, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, org.apache.commons.math.complex.ComplexTest#testSinNaN, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes, org.apache.commons.math.linear.RealVectorFormatTest#testNan, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testLogZero, org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, org.apache.commons.math.complex.ComplexTest#testCosh, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.fraction.BigFractionTest#testSubtract, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, org.apache.commons.math.fraction.FractionFormatTest#testParse, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, org.apache.commons.math.linear.RealMatrixImplTest#testSetRowMatrix, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxIterations, org.apache.commons.math.linear.BigMatrixImplTest#testNorm, org.apache.commons.math.distribution.GammaDistributionTest#testDensity, org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnMatrix, org.apache.commons.math.linear.FieldMatrixImplTest#testToString, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, org.apache.commons.math.geometry.Vector3DTest#testDistanceInf, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, org.apache.commons.math.linear.BigMatrixImplTest#testInverse, org.apache.commons.math.linear.SparseRealMatrixTest#testToString, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, org.apache.commons.math.MathExceptionTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testCosh, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, org.apache.commons.math.util.MathUtilsTest#testScalb, org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testDeprecated, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, org.apache.commons.math.linear.BigMatrixImplTest#testToString, org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize, org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, org.apache.commons.math.complex.ComplexTest#testSinh, org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, org.apache.commons.math.linear.LUSolverTest#testDeterminant, org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal, org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, org.apache.commons.math.util.MathUtilsTest#testSignByte, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.special.ErfTest#testErf3291, org.apache.commons.math.complex.ComplexTest#testHashCode, org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, org.apache.commons.math.complex.ComplexTest#testAddNaN, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, org.apache.commons.math.complex.ComplexTest#testConjugateNaN, org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows, org.apache.commons.math.linear.BigMatrixImplTest#testMath209, org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, org.apache.commons.math.complex.ComplexTest#testCos, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testSinMin, org.apache.commons.math.random.RandomDataTest#testConfig, org.apache.commons.math.complex.ComplexTest#testAsinInf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, org.apache.commons.math.complex.ComplexTest#testAtanNaN, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, org.apache.commons.math.complex.ComplexTest#testAcosInf, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, org.apache.commons.math.complex.ComplexTest#testPow, org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, org.apache.commons.math.util.MathUtilsTest#testArrayEquals, org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, org.apache.commons.math.random.RandomDataTest#testNextSecureInt, org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, org.apache.commons.math.geometry.Vector3DTest#testDistance, org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, org.apache.commons.math.stat.FrequencyTest#testEmptyTable, org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxIterations, org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge, org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.StatUtilsTest#testVariance, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, org.apache.commons.math.geometry.Vector3DTest#testConstructors, org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, org.apache.commons.math.random.MersenneTwisterTest#testDouble, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.FrequencyTest#testPcts, org.apache.commons.math.geometry.Vector3DTest#testAngle, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, org.apache.commons.math.random.MersenneTwisterTest#testGaussian, org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction2, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, org.apache.commons.math.random.ValueServerTest#testProperties, org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, org.apache.commons.math.geometry.Vector3DTest#testNorm1, org.apache.commons.math.complex.ComplexTest#testAtanInf, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, org.apache.commons.math.special.ErfTest#testErf2807, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean, org.apache.commons.math.linear.BigMatrixImplTest#testOperate, org.apache.commons.math.util.TransformerMapTest#testClasses, org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.util.MathUtilsTest#testSignShort, org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, org.apache.commons.math.special.ErfTest#testErf1960, org.apache.commons.math.util.MathUtilsTest#testHash, org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.fraction.FractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, org.apache.commons.math.fraction.BigFractionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, org.apache.commons.math.stat.FrequencyTest#testIntegerValues, org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, org.apache.commons.math.genetics.BinaryMutationTest#testMutate, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, org.apache.commons.math.fraction.FractionTest#testIntValue, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, org.apache.commons.math.complex.ComplexTest#testAcosNaN, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, org.apache.commons.math.complex.ComplexTest#testAddInfinite, org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, org.apache.commons.math.random.MersenneTwisterTest#testNextInt, org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, org.apache.commons.math.complex.ComplexTest#testLog, org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, org.apache.commons.math.fraction.FractionFieldTest#testOne, org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, org.apache.commons.math.complex.ComplexTest#testEqualsSame, org.apache.commons.math.random.EmpiricalDistributionTest#testNext, org.apache.commons.math.util.MathUtilsTest#testRoundDouble, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.linear.CholeskySolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testToString, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, org.apache.commons.math.random.RandomDataTest#testNextExponential, org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, org.apache.commons.math.util.MathUtilsTest#testRoundFloat, org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexTest#testLogInf, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, org.apache.commons.math.complex.ComplexTest#testCoshNaN, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testSinMin, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, org.apache.commons.math.linear.LUSolverTest#testSolve, org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, org.apache.commons.math.special.GammaTest#testLogGammaNegative, org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, org.apache.commons.math.fraction.BigFractionTest#testReciprocal, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, org.apache.commons.math.estimation.EstimatedParameterTest#testBound, org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.fraction.FractionFormatTest#testFormat, org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular, org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.fraction.FractionTest#testDivide, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, org.apache.commons.math.complex.ComplexTest#testAbs, org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares3, org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, org.apache.commons.math.complex.ComplexTest#testGetArgument, org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares1, org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares2, org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, org.apache.commons.math.random.RandomDataTest#testNextInt, org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit, org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, org.apache.commons.math.complex.ComplexTest#testSqrtNaN, org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1, org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues2, org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, org.apache.commons.math.complex.ComplexTest#testEqualsClass, org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, org.apache.commons.math.complex.ComplexTest#testCoshInf, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetAbsoluteAccuracy, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, org.apache.commons.math.optimization.direct.NelderMeadTest#testPowell, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, org.apache.commons.math.util.MathUtilsTest#testNextAfter, org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, org.apache.commons.math.geometry.Vector3DTest#testCoordinates, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, org.apache.commons.math.complex.ComplexTest#testAsinNaN, org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, org.apache.commons.math.random.RandomDataTest#testNextSecureLong, org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, org.apache.commons.math.util.BigRealFieldTest#testSerial, org.apache.commons.math.random.RandomAdaptorTest#testNextLong, org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU, org.apache.commons.math.distribution.PoissonDistributionTest#testMean, org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testAdd, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, org.apache.commons.math.complex.ComplexTest#testSqrtInf, org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testAbsInfinite, org.apache.commons.math.complex.ComplexFieldTest#testZero, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, org.apache.commons.math.random.MersenneTwisterTest#testFloat, org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, org.apache.commons.math.complex.ComplexTest#testEqualsNaN, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, org.apache.commons.math.stat.inference.TTestTest#testPaired, org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, org.apache.commons.math.random.ValueServerTest#testNextDigestFail, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, org.apache.commons.math.stat.StatUtilsTest#testMax, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, org.apache.commons.math.stat.FrequencyTest#testToString, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, org.apache.commons.math.complex.ComplexTest#testPowInf, org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, org.apache.commons.math.complex.ComplexTest#testTanh, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumn, org.apache.commons.math.linear.RealMatrixImplTest#testMath209, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMax, org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal, org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, org.apache.commons.math.complex.ComplexTest#testpowNull, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, org.apache.commons.math.fraction.FractionTest#testConstructor, org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal, org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, org.apache.commons.math.distribution.FDistributionTest#testConsistency, org.apache.commons.math.analysis.solvers.BrentSolverTest#testDeprecated, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2, org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1, org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, org.apache.commons.math.util.BigRealTest#testDoubleValue, org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, org.apache.commons.math.linear.RealMatrixImplTest#testGetSubMatrix, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetMaximalIterationCount, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, org.apache.commons.math.complex.ComplexTest#testConstructorNaN, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, org.apache.commons.math.fraction.BigFractionFieldTest#testZero, org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.util.MathUtilsTest#testSignFloat, org.apache.commons.math.util.MathUtilsTest#testSignDouble, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, org.apache.commons.math.linear.LUSolverTest#testThreshold, org.apache.commons.math.geometry.RotationOrderTest#testName, org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, org.apache.commons.math.util.MathUtilsTest#testSinh, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, org.apache.commons.math.complex.ComplexTest#testTanNaN, org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, org.apache.commons.math.fraction.BigFractionTest#testAdd, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, org.apache.commons.math.random.RandomDataTest#testNextSample, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix, org.apache.commons.math.linear.QRSolverTest#testRank, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.geometry.RotationTest#testSingularities, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, org.apache.commons.math.util.MathUtilsTest#testFactorialFail, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, org.apache.commons.math.fraction.BigFractionTest#testAbs, org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, org.apache.commons.math.linear.RealMatrixImplTest#testCopySubMatrix, org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, org.apache.commons.math.complex.ComplexFieldTest#testOne, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, org.apache.commons.math.linear.RealMatrixImplTest#testSetRowVector, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, org.apache.commons.math.linear.BigMatrixImplTest#testTrace, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, org.apache.commons.math.distribution.NormalDistributionTest#testDensity, org.apache.commons.math.geometry.Vector3DTest#testNormInf, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, org.apache.commons.math.complex.ComplexTest#testLogNaN, org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testFactorial, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMin, org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, org.apache.commons.math.linear.RealMatrixImplTest#testSetColumn, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, org.apache.commons.math.MathExceptionTest#testConstructor, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, org.apache.commons.math.random.RandomDataTest#testNextPoissonLargeMean, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.random.RandomDataTest#testNextLong, org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testDeprecated, org.apache.commons.math.geometry.RotationTest#testComposeInverse, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, org.apache.commons.math.linear.LUSolverTest#testSingular, org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, org.apache.commons.math.random.RandomAdaptorTest#testNextPoissonLargeMean, org.apache.commons.math.random.RandomDataTest#testNextSecureHex, org.apache.commons.math.random.RandomAdaptorTest#testNextHex, org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, org.apache.commons.math.util.BigRealFieldTest#testZero, org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, org.apache.commons.math.fraction.BigFractionTest#testMultiply, org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, org.apache.commons.math.distribution.TDistributionTest#testSmallDf, org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, org.apache.commons.math.linear.RealMatrixImplTest#testWalk, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, org.apache.commons.math.util.TransformerMapTest#testSerial, org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, org.apache.commons.math.complex.ComplexTest#testSinInf, org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testFunctionEvaluationExceptions, org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, org.apache.commons.math.complex.ComplexFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.complex.ComplexTest#testAsin, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, org.apache.commons.math.geometry.RotationTest#testAxisAngle, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetRelativeAccuracy, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, org.apache.commons.math.geometry.RotationTest#testRevert, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, org.apache.commons.math.util.OpenIntToFieldTest#testRemove, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testDeprecated, org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, org.apache.commons.math.util.MathUtilsTest#testCoshNaN, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, org.apache.commons.math.stat.StatUtilsTest#testSumLog, org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, org.apache.commons.math.transform.FastSineTransformerTest#testParameters, org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, org.apache.commons.math.linear.BigMatrixImplTest#testAdd, org.apache.commons.math.complex.ComplexTest#testPowZero, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, org.apache.commons.math.geometry.Vector3DTest#testDistance1, org.apache.commons.math.linear.RealMatrixImplTest#testFrobeniusNorm, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInversible, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.fraction.FractionTest#testFloatValue, org.apache.commons.math.complex.ComplexTest#testDivide, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, org.apache.commons.math.random.MersenneTwisterTest#testNextIntN, org.apache.commons.math.complex.ComplexTest#testSubtract, org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, org.apache.commons.math.fraction.FractionTest#testMultiply, org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, org.apache.commons.math.fraction.BigFractionTest#testFloatValue, org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function2, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, org.apache.commons.math.complex.ComplexTest#testAtan, org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, org.apache.commons.math.estimation.MinpackTest#testMinpackBard, org.apache.commons.math.random.MersenneTwisterTest#testNextLong, org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed, org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt, org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.RealMatrixImplTest#testSerial, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, org.apache.commons.math.stat.StatUtilsTest#testMean, org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, org.apache.commons.math.complex.ComplexTest#testSin, org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, org.apache.commons.math.linear.RealMatrixImplTest#testExamples, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testExpNaN, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetFunctionValueAccuracy, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, org.apache.commons.math.fraction.BigFractionTest#testIntValue, org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, org.apache.commons.math.util.BigRealTest#testBigDecimalValue, org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, org.apache.commons.math.linear.EigenSolverTest#testInvertible, org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, org.apache.commons.math.util.MathUtilsTest#testPow, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, org.apache.commons.math.geometry.RotationTest#testIdentity, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArguments, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, org.apache.commons.math.random.ValueServerTest#testNextDigest, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, org.apache.commons.math.random.RandomDataTest#testNextGaussian, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, org.apache.commons.math.linear.RealMatrixImplTest#testNorm, org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, org.apache.commons.math.MathExceptionTest#testPrintStackTrace, org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, org.apache.commons.math.complex.ComplexFormatTest#testNan, org.apache.commons.math.random.RandomDataTest#testNextPermutation, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, org.apache.commons.math.special.ErfTest#testErf2576, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, org.apache.commons.math.util.MathUtilsTest#testCompareTo, org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, org.apache.commons.math.util.MathUtilsTest#testArrayHash, org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, org.apache.commons.math.util.MathUtilsTest#testLcm, org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, org.apache.commons.math.complex.ComplexTest#testTanInf, org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, org.apache.commons.math.complex.ComplexTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, org.apache.commons.math.complex.ComplexTest#testTanhInf, org.apache.commons.math.stat.FrequencyTest#testCounts, org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, org.apache.commons.math.linear.BigMatrixImplTest#testSolve, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors, org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, org.apache.commons.math.fraction.BigFractionFormatTest#testParse, org.apache.commons.math.fraction.BigFractionTest#testCompareTo, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, org.apache.commons.math.complex.ComplexTest#testTanhNaN, org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, org.apache.commons.math.fraction.FractionTest#testAbs, org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testMinEndpoints, org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, org.apache.commons.math.util.MathUtilsTest#testEquals, org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard, org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, org.apache.commons.math.optimization.direct.NelderMeadTest#testFunctionEvaluationExceptions, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, org.apache.commons.math.util.MathUtilsTest#testLog, org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, org.apache.commons.math.util.MathUtilsTest#testSignLong, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, org.apache.commons.math.complex.ComplexTest#testMultiply, org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, org.apache.commons.math.fraction.FractionTest#testAdd, org.apache.commons.math.complex.ComplexTest#testNegate, org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, org.apache.commons.math.complex.ComplexTest#testSinhInf, org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction2, org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular, org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation, org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testRosenbrock, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, org.apache.commons.math.stat.StatUtilsTest#testSumSq, org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, org.apache.commons.math.complex.ComplexTest#testAcos, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, org.apache.commons.math.util.DefaultTransformerTest#testSerial, org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, org.apache.commons.math.util.OpenIntToFieldTest#testCopy, org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, org.apache.commons.math.distribution.PascalDistributionTest#testDensities, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, org.apache.commons.math.linear.BlockRealMatrixTest#testToString, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArray, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, org.apache.commons.math.complex.ComplexTest#testTanCritical, org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, org.apache.commons.math.complex.ComplexTest#testExp, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, org.apache.commons.math.stat.StatUtilsTest#testMin, org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, org.apache.commons.math.fraction.FractionTest#testConstructorDouble, org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, org.apache.commons.math.fraction.FractionTest#testSubtract, org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, org.apache.commons.math.complex.ComplexTest#testPowNaNBase, org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, org.apache.commons.math.linear.SparseRealVectorTest#testSerial, org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, org.apache.commons.math.special.GammaTest#testLogGammaNan, org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, org.apache.commons.math.util.MathUtilsTest#testSinhNaN, org.apache.commons.math.random.RandomDataTest#testNextHex, org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, org.apache.commons.math.fraction.BigFractionTest#testLongValue, org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, org.apache.commons.math.random.ValueServerTest#testModes, org.apache.commons.math.fraction.FractionTest#testSerial, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, org.apache.commons.math.fraction.FractionTest#testLongValue, org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, org.apache.commons.math.fraction.BigFractionFieldTest#testOne, org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta, org.apache.commons.math.stat.data.LewTest#testCertifiedValues, org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, org.apache.commons.math.optimization.direct.MultiDirectionalTest#testPowell, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxEvaluations, org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, org.apache.commons.math.linear.SingularValueSolverTest#testSolve, org.apache.commons.math.fraction.FractionTest#testGoldenRatio, org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, org.apache.commons.math.complex.ComplexFieldTest#testSerial, org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble, org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing, org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, org.apache.commons.math.special.ErfTest#testErf0, org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayArgumentCause, org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, org.apache.commons.math.fraction.FractionTest#testNegate, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], jUnit5Tests=[], jacocoIncludes=[org.apache.commons.*], jacocoExcludes=[java.*], family=SPECTRUM_BASED, spectrumFormula=DSTAR, computeSpoonResults=false}
Computing tests from config.
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testdiscardArtificialVariables, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInfinite, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadParameters, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAddNonComparable, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonLargeMean, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadParameters, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testScalb, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testGaussian, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testBound, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignDouble, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.geometry.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinh, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoissonLargeMean, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoissonLargeMean, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEquals, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLog, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArray, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayArgumentCause, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@4441d567}
Running TestContext{testMethods=[[Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testOverdetermined, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testCompose, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowFieldMatrix, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithSplit, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotPositiveDefinite, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testCorr, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfterSpecialCases, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testPerfectFit, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckLong, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testReplay, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignInt, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewNewtonSolverValid, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAdd, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveZero, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTan, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testIsSingular, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testSimpleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateSin, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNanPositive, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPermutedArrayHash, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosNaN, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataThatIsNotSquare, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNotSymmetricMatrixException, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testdiscardArtificialVariables, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testSummaryStatistics, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsErrors, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideInfinite, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testCompletelyIncorrectBandwidth, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testEpsilon, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testTheory, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtractNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testWeightedConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealZero, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveBadParameters, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSetQuantile, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryNegative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAddNonComparable, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvalues, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowLarge, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNegativePositivePositive, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testTridiagonal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAngles, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoissonLargeMean, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSolutionWithNegativeDecisionVariable, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testMultiplication, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLaguerrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testRandomAccess, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testIdentityPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseBig, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testSanityChecks, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveRankErrors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceSq, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHermiteDifferentials, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetMean, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testComparatorPermutation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIntegratorControls, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testSSENonNegative, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension1, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testTrivialModel, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension3, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestBinary#test, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhCritical, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateDegenerate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaPositive, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testProduct, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosInf, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownAlmostLinear, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testInvalidConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormalize, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testEqualRepr, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConstant, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaTest, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngular, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacity, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testGcd, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.genetics.FitnessCachingTest#testFitnessCaching, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoSuccesses, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.distribution.BetaDistributionTest#testCumulative, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate1, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaNegativePositive, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDegenerate0, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testScale, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpInf, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNorris, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testDecode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigMatrix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBadParameters, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.genetics.FixedGenerationCountTest#testIsSatisfied, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveZeroPositive, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstChebyshevPolynomials, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testNaN, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testTransformers, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testIterator, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testConstants, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_fourthRoot, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaSmallArgs, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testInference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#test5, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testClear, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaZeroPositivePositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testInfeasibleSolution, [Manual]TestMethod=org.apache.commons.math.analysis.integration.SimpsonIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntNeg, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsTrue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArgumentCause, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiply, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromSingle, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClear, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtPolar, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testFill, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testMath280, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDistinctEigenvalues, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMath226, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.genetics.ElitisticListPopulationTest#testNextGeneration, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexNaN, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.genetics.ListPopulationTest#testGetFittestChromosome, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRowRealMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testPutTransformer, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNormalizeAngle, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaZero, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testErrorConditions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBytes, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2Complex, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMath221, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1z, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnDistortedSine, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testQuaternion, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testHTrapezoidal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNoRoot, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.analysis.integration.RombergIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatZero, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetBeta, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.data.LotteryTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testFixedState, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testSmallLastStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsClass, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFat, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMinimization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#test0Choose0, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformString, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetMean, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testRepeatedEigenvalue, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testFindSameChromosome, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEventsNoConvergence, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testAlpha, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedUlps, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracySin, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyDigestFile, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseZeroImaginary, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testTrigamma, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testQuantiles, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testDigammaLargeArgs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRandom, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaN, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnTwoPoints, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testScalarProduct, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorOnePair, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQOrthogonal, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNan, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testWrongDerivative, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testNormalApproximateProbability, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMaximalTiesMinimum, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationInside, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegateNaN, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor2, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testConstructor1, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogZero, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMinMax, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearFullRank, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfect, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseManyComponents, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDigitLimitConstructor, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testBigFractionConverter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGet, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMath199, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantUnsolvable, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#backward, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseNegativeImaginary, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperateLarge, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistanceInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnOnePoint, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngularSeparation, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testInverse, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformDouble, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCosh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testTableauWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testScalb, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testRandomConstructor, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testEstimate, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testContainsKey, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testUUpperTriangular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_normal_thirdRoot, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testToString, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testMath272, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMinimizeMaximize, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testOnStraightLine, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinh, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testArrayIndexConditions, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNotAllFiniteReal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testNaN, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testVariableSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testGetSummary, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDiagonal, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnRealMatrix, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignByte, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testBoundaries, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf3291, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddNaN, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne2, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testDistance, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testRUpperTriangular, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackOsborne1, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperatePremultiplyLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateNaN, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreRows, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCos, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaNanPositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuintic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#checklone, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testConfig, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNISTExample, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbability2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testInsufficientBandwidth, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testMoreLargeValues, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayEquals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesMaximum, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testOrthogonal, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testSetScale, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testEmptyTable, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxIterations, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaZeroPositive, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientLarge, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testWindowSize, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsMinimalTiesAverage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testWholeFormat, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testVariance, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testRemoveTransformer, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testUpperOrLower, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.MaxIterationsExceededExceptionTest#testComplexConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHeterscedastic, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testPcts, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testAngle, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testGaussian, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction2, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBrentSolverValid, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testLUDecomposition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testProperties, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNorm1, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtanInf, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2807, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testArrayIsReference, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testConfig, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNexBoolean, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testOperate, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testClasses, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testCovarianceConsistency, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrt1zNaN, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignShort, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf1960, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testHash, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.ArrayFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgumentInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest#dimension2, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testIntegerValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testConstruction, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryMutationTest#testMutate, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcosNaN, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAddInfinite, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testDimension, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testLargeDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLog, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testScalarMultiplyNaN, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateRealMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.genetics.BinaryChromosomeTest#testIsSame, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testNoReset, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRootMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testChebyshevBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testConstant, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniform, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testWithInitialCapacityAndExpansionFactor, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testNullEmpty, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsSame, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNext, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundDouble, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.DuplicateSampleAbscissaExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiplyNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveNull, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinear, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerial, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testNullIntervalCheck, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testPercentile, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregateSpecialValues, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testToString, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullURL, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonUnEqualCounts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregationConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficientFail, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testRoundFloat, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testSetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogInf, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSubstitute, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPlusMinus, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregate, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackPowellSingular, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testSinMin, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextPoisson, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest#testCentroid, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.InvalidMatrixExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewBisectionSolverValid, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testAEqualQR, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testMath274, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetRealFormatNull, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstLegendrePolynomials, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testReciprocal, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.UniformRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testMismatch, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testBasicFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testCopy, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.EstimatedParameterTest#testBound, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test8Points, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testDefault, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.genetics.TournamentSelectionTest#testSelect, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest#testAggregation, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormat, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testRootEndpoints, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testDoubleConstructor, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testModelWithNoArtificialVars, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsImaginaryDifference, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testDivide, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveSingle, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.ArrayRealVectorTest#testMapFunctions, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testAdaptor, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testNonSquare, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares3, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testMeanAccessors, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testGetArgument, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares1, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testLeastSquares2, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullDoubleArray, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBox3Dimensional, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivideNaNInf, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testDimension4WithoutSplit, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtNaN, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testGetStandardDeviation, [Manual]TestMethod=org.apache.commons.math.linear.MatrixIndexExceptionTest#testConstructorMessage, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareIndependence, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsRemovedTiesSequential, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testNumeratorFormat, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAbsentOnExisting, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDeterminant, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsClass, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testCoshInf, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testMoreColumns, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiple, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetAbsoluteAccuracy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSingleton, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testLongFormat, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#notEnoughData, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilityAgaintStackOverflow, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneWayAnovaUtils, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testPowell, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testIllConditioned, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseZeroX, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL2DistanceDouble, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testLongly, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testHighPercentile, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveSin, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testNextAfter, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testGetValues, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonEqualCounts, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testCoordinates, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsinNaN, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorDouble, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureLong, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testNaN, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testFractionConverter, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testMean, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testCopy, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareLargeTestStatistic, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNegativePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest#checkClone, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtInf, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAbsInfinite, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddCovarianceDataWithSampleSizeMismatch, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testFormatImproper, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsNaN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_realPartZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtImaginaryZero, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextFloat, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testPaired, [Manual]TestMethod=org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest#testImpossibleSerialization, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroImaginary, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testParameterAccessors, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigestFail, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperInvalidMinus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testDataInOut, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testRestrictVariablesToNonNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.correlation.CovarianceTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexTableauTest#testInitialization, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testNonInvertible, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveXY, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.ode.ContinuousOutputModelTest#testModelsMerging, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testToString, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowInf, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest#testValues, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#noReset, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.transform.FastCosineTransformerTest#testAdHocData, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanh, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testMath209, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMax, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove2, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testUOrthogonal, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testBBiDiagonal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testpowNull, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testVOrthogonal, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testDegenerateInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#polynomial, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSinZero, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGetReducedFraction, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues2, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInteger, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testMatricesValues1, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testDoubleValue, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testSetMaximalIterationCount, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testSetterInjection, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testTTriDiagonal, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testSolveAccuracyNull, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConstructorNaN, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateBigIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositivePositive, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testStepSize, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest#testMeanAndCorrelation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignFloat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignDouble, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalid, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testVectorTwoPairs, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testExtremeValues, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testThreshold, [Manual]TestMethod=org.apache.commons.math.geometry.RotationOrderTest#testName, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorShort, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollisions, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testStaticFormatComplex, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testAEqualQTQt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinh, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetImaginaryFormat, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanNaN, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testInducedPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnVectorLarge, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSeparator, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaPValue, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ConvergenceExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackRosenbrok, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testNaNContracts, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSample, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseIgnoredWhitespace, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.CholeskySolverTest#testSolveDimensionErrors, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testBigMatrix, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testRank, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testAEqualVDVt, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testSingularities, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullCovarianceData, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testDoubleFormat, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorialFail, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testQTOrthogonal, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSimplistic, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopySubMatrix, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testSetAlpha, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLaguerreDifferentials, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddSampleDataWithSizeMismatch, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetRowVector, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testNormInf, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testMakotoNishimura, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testRedundantSolvable, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testLogNaN, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatImproperNegative, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#testNoIntInverse, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryCharacterEmpty, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testBinIndexOverflow, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testEpsilonLimitConstructor, [Manual]TestMethod=org.apache.commons.math.stat.inference.OneWayAnovaTest#testAnovaFValue, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testSwissFertility, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testFactorial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testStats, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testLegendreDifferentials, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testMisc, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testFormatNegative, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testInconsistentSizes, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testQuinticMin, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testSampling, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateTwoSegment, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSetColumn, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testBoundParameters, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testTwoSets, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackFreudensteinRoth, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPoissonLargeMean, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateResiduals, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorByte, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testAEqualLLT, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutKeysWithCollision2, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testComposeInverse, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWithExpectedSize, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBrownDennis, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSingular, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.InteractionTest#testInteraction, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheckLong, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testCopy, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextPoissonLargeMean, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextSecureHex, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.util.BigRealFieldTest#testZero, [Manual]TestMethod=org.apache.commons.math.linear.QRDecompositionImplTest#testMatricesValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNegativeBoth, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testDiscard, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAdd1000, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testSmallDf, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testWalk, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextUniformExclusiveEndpoints, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaZeroPositive, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testConstructorPatternArguments, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testCreateColumnFieldMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testMoreEstimatedParametersUnsorted, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testIntegerOverflow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testPopulation, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingRobustnessItersIncreasesSmoothnessWithOutliers, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinInf, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaNanPositive, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest#testBracketEndpointRoot, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testPutAndGetWith0ExpectedSize, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MedianTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testInconsistentEquations, [Manual]TestMethod=org.apache.commons.math.util.TransformerMapTest#testContainsTransformer, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues5, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testMatricesValues3, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest#testTestPositive, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testControlParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAsin, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowVectorLarge, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParametersVariance, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetElementArbitraryExpansion, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testLinear, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testHat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_NAN_Inf, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsAndInfs, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testAxisAngle, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetRelativeAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testFirstHermitePolynomials, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testPaired, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testRevert, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testSerial, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testLargeModel, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testVectorialProducts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.genetics.OnePointCrossoverTest#testCrossover, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemove, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testMath283, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#exceedMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextSecureInt, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations#test, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testRedundantEquations, [Manual]TestMethod=org.apache.commons.math.linear.LUSolverTest#testSolveSingularityErrors, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testDeprecated, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareDataSetsComparisonBadCounts, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest#testPercentileSetter, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCoshNaN, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testPositiveInfinity, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNExponent, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumLog, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testMath209, [Manual]TestMethod=org.apache.commons.math.transform.FastSineTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformNull, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest#testNoOptimum, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowZero, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.stat.ranking.NaturalRankingTest#testNaNsFixedTiesRandom, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProper, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSingleVariableAndConstraint, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DTest#testDistance1, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testFrobeniusNorm, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositiveNegativePositive, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareTestTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#interpolationAtBounds, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testCopy, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveObsFromEmpty, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackMeyer, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleTTest, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNonInversible, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testDivide, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testGetAbsent, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextIntN, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateNoFailures, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testUnsorted, [Manual]TestMethod=org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest#testCircleFitting, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.estimation.WeightedMeasurementTest#testIgnored, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testFloatValue, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testSmallDegreesOfFreedom, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testExpm1Function2, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest#testMinStep, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testKepler, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAtan, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuadraticFunction, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testDfAccessors, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testLogBetaPositivePositive, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testPutOnExisting, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testProductAndGeometricMean, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.random.MersenneTwisterTest#testNextLong, [Manual]TestMethod=org.apache.commons.math.linear.CholeskyDecompositionImplTest#testLTTransposed, [Manual]TestMethod=org.apache.commons.math.linear.TriDiagonalTransformerTest#testNoAccessBelowDiagonal, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testRank, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerial, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#test2DData, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest#testInterpolateLinearDegenerateThreeSegment, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextInt, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testSkewAndKurtosis, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMean, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testConditionNumber, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testCopy, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testCircleFittingBadInit, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseNegative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testPremultiplyVector, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testMutators, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.util.ContinuedFractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testParameters, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testDifferenceStats, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#testInitialGuess, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSin, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testDegenerateFullSample, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testMath199, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextExponential, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testExamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExpNaN, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetRowMatrix, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testResetFunctionValueAccuracy, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testAddition, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testIntValue, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest#testHighDegreeLegendre, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.HarmonicFitterTest#test1PercentError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackJennrichSampson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.util.BigRealTest#testBigDecimalValue, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testQRColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.EigenSolverTest#testInvertible, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testTranspose, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testNoDenseOutput, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoadNullFile, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testPow, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.distribution.ChiSquareDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testRemoval, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testDensity, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetSetColumnMatrixLarge, [Manual]TestMethod=org.apache.commons.math.complex.ComplexUtilsTest#testPolar2ComplexIllegalModulus, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSetImaginaryCharacterNull, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testSetColumnVector, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackWatson, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testCopyFunctions, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testIdentity, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#testLongly, [Manual]TestMethod=org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayPatternArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopy, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testNextDigest, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorPatternArgumentsCause, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testGridTooFine, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextGaussian, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testIterator, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testQuadratic, [Manual]TestMethod=org.apache.commons.math.distribution.GammaDistributionTest#testProbabilities, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testNorm, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testPaired, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testTrivial, [Manual]TestMethod=org.apache.commons.math.MathExceptionTest#testPrintStackTrace, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testConcurrentModification, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testNan, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextPermutation, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testForgottenPrefix, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testEmptyData, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testWalk, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleWithDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BisectionSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testEqualsRealDifference, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultipleToEmpty, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressandVariance, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testAddAndCheck, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf2576, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#cannotAddNullYSampleData, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.ProductTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.distribution.CauchyDistributionTest#testMedian, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testMultiply2, [Manual]TestMethod=org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest#serialization, [Manual]TestMethod=org.apache.commons.math.random.RandomAdaptorTest#testNextLongExtremeValues, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testArrayHash, [Manual]TestMethod=org.apache.commons.math.distribution.BinomialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testBeta, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLcm, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest#dimensionCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testIndicatorFloat, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testNaN, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testLoad, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveZero, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testExamples, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testDifferentImaginaryChar, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanInf, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testForgottenImaginaryCharacter, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testForgottenSuffix, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetVectors, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDoubleDimension, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhInf, [Manual]TestMethod=org.apache.commons.math.stat.FrequencyTest#testCounts, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldVectorTest#testPredicates, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testSolve, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testSetNumberOfElements, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackKowalikOsborne, [Manual]TestMethod=org.apache.commons.math.linear.EigenDecompositionImplTest#testEigenvectors, [Manual]TestMethod=org.apache.commons.math.distribution.PoissonDistributionTest#testLargeMeanInverseCumulativeProbability, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testAdd, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FirstMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testGetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFormatTest#testParse, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testCopy, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanhNaN, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testInverseCumulativeProbabilityExtremes, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testUnstableDerivative, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSubAndCheckErrorMessage, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest#testCopy, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAbs, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest#derivativesConsistency, [Manual]TestMethod=org.apache.commons.math.optimization.univariate.BrentMinimizerTest#testMinEndpoints, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest#testEqualsAndHashCode, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MinTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseProperNegative, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEquals, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testNexFail, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testFormatNumber, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueDecompositionImplTest#testHadamard, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformBigDecimal, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SummaryStatisticsTest#testSetterIllegalState, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testColumnsPermutation, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testFunctionEvaluationExceptions, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testGetRealFormat, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSqrtRealPositive, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testPremultiply, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testRemoveMultiplePastEmpty, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.PercentileTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLog, [Manual]TestMethod=org.apache.commons.math.transform.FastFourierTransformerTest#testParameters, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNan, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSignLong, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testUnequalSizeArguments, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testBasicStats, [Manual]TestMethod=org.apache.commons.math.random.GaussianRandomGeneratorTest#testMeanAndStandardDeviation, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testRemoveFromEmpty, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testMulAndCheck, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testIncreasingTolerance, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testGeometricMean, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testAdd, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testNegate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testGetRowVector, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumSqTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testBinomialCoefficient, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testSetRow, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.VarianceTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testSinhInf, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.estimation.GaussNewtonEstimatorTest#testOneSet, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testQuinticFunction2, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testZeroReal, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testTrace, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testLLowerTriangular, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testSmallError, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testFloatingPointArguments, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.KurtosisTest#testCopyConsistency, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetRow, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.FieldLUDecompositionImplTest#testPPermutation, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testL1DistanceDouble, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testRosenbrock, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testConsistency, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#test20090720, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testLinearFunction, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testUnboundedSolution, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest#testNewSecantSolverValid, [Manual]TestMethod=org.apache.commons.math.distribution.FDistributionTest#testIllegalArguments, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testSumSq, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testSetImaginaryFormatNull, [Manual]TestMethod=org.apache.commons.math.optimization.fitting.PolynomialFitterTest#testNoError, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.ListUnivariateImplTest#testN0andN1Conditions, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest#testShuffledStatistics, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testAcos, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemoveAbsent, [Manual]TestMethod=org.apache.commons.math.ode.FirstOrderConverterTest#testDecreasingSteps, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeReal, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testOneSampleT, [Manual]TestMethod=org.apache.commons.math.ode.sampling.StepNormalizerTest#testBeforeEnd, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testSerial, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testConstructors, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformInteger, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testNoDependency, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testConjugateInfiinite, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testCopy, [Manual]TestMethod=org.apache.commons.math.optimization.linear.SimplexSolverTest#testSimplexSolver, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testStaticFormatRealVectorImpl, [Manual]TestMethod=org.apache.commons.math.linear.BigMatrixImplTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testParseInvalidDenominator, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testDimensions, [Manual]TestMethod=org.apache.commons.math.util.ResizableDoubleArrayTest#testAddElementRolling, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GillIntegratorTest#testBigStep, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testIncrementation, [Manual]TestMethod=org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest#cannotAddXSampleData, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSeveralBlocks, [Manual]TestMethod=org.apache.commons.math.distribution.PascalDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testPaseNegativeInfinity, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest#testDerivativesConsistency, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testToString, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArray, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeX, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testDimensionCheck, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testTanCritical, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleWithDecimalsTrunc, [Manual]TestMethod=org.apache.commons.math.linear.RealMatrixImplTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFormatTest#testSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeZ, [Manual]TestMethod=org.apache.commons.math.geometry.RotationTest#testApplyInverseTo, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testNegativeY, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeZ, [Manual]TestMethod=org.apache.commons.math.special.BetaTest#testRegularizedBetaPositivePositiveNan, [Manual]TestMethod=org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest#testMeanAndCovariance, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testExp, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testEvents, [Manual]TestMethod=org.apache.commons.math.stat.StatUtilsTest#testMin, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testGetColumn, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToFieldTest#testGetFromEmpty, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeX, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeY, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testSmallSamples, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest#canEstimateRegressionParameters, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetColumnVector, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testRegularizedGammaPositiveNegative, [Manual]TestMethod=org.apache.commons.math.MathConfigurationExceptionTest#testConstructorCause, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testParseSimpleNoDecimals, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testConstructorDouble, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test4Points, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.summary.SumLogTest#testSpecialValues, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.FourthMomentTest#testEvaluation, [Manual]TestMethod=org.apache.commons.math.util.DefaultTransformerTest#testTransformObject, [Manual]TestMethod=org.apache.commons.math.stat.inference.TestUtilsTest#testChiSquareZeroCount, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSubtract, [Manual]TestMethod=org.apache.commons.math.distribution.NormalDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.util.OpenIntToDoubleHashMapTest#testRemove, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testSetRowMatrix, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testStaticFormatVector3D, [Manual]TestMethod=org.apache.commons.math.complex.ComplexTest#testPowNaNBase, [Manual]TestMethod=org.apache.commons.math.linear.LUDecompositionImplTest#testPAEqualLU, [Manual]TestMethod=org.apache.commons.math.genetics.RandomKeyTest#testRandomPermutation, [Manual]TestMethod=org.apache.commons.math.linear.Array2DRowRealMatrixTest#testAddFail, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealVectorTest#testSerial, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testPerfectNegative, [Manual]TestMethod=org.apache.commons.math.distribution.TDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testSwiss, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.genetics.ChromosomeTest#testCompareTo, [Manual]TestMethod=org.apache.commons.math.special.GammaTest#testLogGammaNan, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testMultiply, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SkewnessTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.linear.FrenchRealVectorFormatTest#testParseNoComponents, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testSinhNaN, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextHex, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.BrentSolverTest#testBadEndpoints, [Manual]TestMethod=org.apache.commons.math.linear.MatrixUtilsTest#testcreateFieldIdentityMatrix, [Manual]TestMethod=org.apache.commons.math.random.AbstractRandomGeneratorTest#testNextBoolean, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.stat.inference.TTestFactoryTest#testTwoSampleTHomoscedastic, [Manual]TestMethod=org.apache.commons.math.distribution.HypergeometricDistributionTest#testPopulationSize, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.stat.inference.ChiSquareFactoryTest#testChiSquare, [Manual]TestMethod=org.apache.commons.math.complex.FrenchComplexFormatTest#testNegativeBoth, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.rank.MaxTest#testCopy, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testAdd, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testModes, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testSerial, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testfirstDerivativeComparison, [Manual]TestMethod=org.apache.commons.math.stat.regression.SimpleRegressionTest#testNaNs, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerial, [Manual]TestMethod=org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest#testMoreEstimatedParametersSimple, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testParsePositiveInfinity, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testLongValue, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.RiddersSolverTest#testExpm1Function, [Manual]TestMethod=org.apache.commons.math.random.RandomDataTest#testNextIntExtremeValues, [Manual]TestMethod=org.apache.commons.math.stat.correlation.PearsonsCorrelationTest#testInsufficientData, [Manual]TestMethod=org.apache.commons.math.ArgumentOutsideDomainExceptionTest#testConstructor, [Manual]TestMethod=org.apache.commons.math.distribution.WeibullDistributionTest#testInverseCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.fraction.BigFractionFieldTest#testOne, [Manual]TestMethod=org.apache.commons.math.distribution.ExponentialDistributionTest#testCumulativeProbabilities, [Manual]TestMethod=org.apache.commons.math.transform.FastHadamardTransformerTest#test3Points, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackHelicalValley, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testScalarAdd, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testFormatObject, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testEqualsWithAllowedDelta, [Manual]TestMethod=org.apache.commons.math.stat.data.LewTest#testCertifiedValues, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.NewtonSolverTest#testQuinticZero, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.MullerSolverTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.optimization.direct.MultiDirectionalTest#testPowell, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testIncreasingBandwidthIncreasesSmoothness, [Manual]TestMethod=org.apache.commons.math.linear.FieldMatrixImplTest#testTrace, [Manual]TestMethod=org.apache.commons.math.fraction.FractionFormatTest#testDenominatorFormat, [Manual]TestMethod=org.apache.commons.math.optimization.direct.NelderMeadTest#testMaxEvaluations, [Manual]TestMethod=org.apache.commons.math.linear.RealVectorFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.linear.SparseRealMatrixTest#testGetEntry, [Manual]TestMethod=org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest#testStdErrorConsistency, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testNonDefaultSetting, [Manual]TestMethod=org.apache.commons.math.analysis.solvers.LaguerreSolverTest#testQuinticFunction, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testSetColumnMatrix, [Manual]TestMethod=org.apache.commons.math.stat.CertifiedDataTest#testDescriptiveStatistics, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest#testSmallStep, [Manual]TestMethod=org.apache.commons.math.linear.QRSolverTest#testUnderdetermined, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackLinearRank1ZeroColsAndRows, [Manual]TestMethod=org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest#testExactIntegration, [Manual]TestMethod=org.apache.commons.math.linear.SparseFieldMatrixTest#testSetSubMatrix, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.SecondMomentTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.distribution.ZipfDistributionTest#testDensities, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackLinearRank1, [Manual]TestMethod=org.apache.commons.math.linear.SingularValueSolverTest#testSolve, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testGoldenRatio, [Manual]TestMethod=org.apache.commons.math.linear.BiDiagonalTransformerTest#testAEqualUSVt, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testSerialization, [Manual]TestMethod=org.apache.commons.math.stat.descriptive.moment.MeanTest#testMomentSmallSamples, [Manual]TestMethod=org.apache.commons.math.complex.ComplexFieldTest#testSerial, [Manual]TestMethod=org.apache.commons.math.random.EmpiricalDistributionTest#testDoubleLoad, [Manual]TestMethod=org.apache.commons.math.util.MathUtilsTest#testLInfDistanceDouble, [Manual]TestMethod=org.apache.commons.math.geometry.FrenchVector3DFormatTest#testConstructorSingleFormat, [Manual]TestMethod=org.apache.commons.math.optimization.general.MinpackTest#testMinpackBard, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest#testSinFunction, [Manual]TestMethod=org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest#testNonStrictlyIncreasing, [Manual]TestMethod=org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest#testSubtraction, [Manual]TestMethod=org.apache.commons.math.geometry.Vector3DFormatTest#testParseNegativeAll, [Manual]TestMethod=org.apache.commons.math.special.ErfTest#testErf0, [Manual]TestMethod=org.apache.commons.math.FunctionEvaluationExceptionTest#testConstructorArrayArgumentCause, [Manual]TestMethod=org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest#testBackward, [Manual]TestMethod=org.apache.commons.math.fraction.FractionTest#testNegate, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSubMatrix, [Manual]TestMethod=org.apache.commons.math.estimation.MinpackTest#testMinpackChebyquad, [Manual]TestMethod=org.apache.commons.math.linear.BlockRealMatrixTest#testGetSetRowMatrixLarge, [Manual]TestMethod=org.apache.commons.math.linear.BlockFieldMatrixTest#testOperate, [Manual]TestMethod=org.apache.commons.math.random.ValueServerTest#testEmptyReplayFile], testFrameworkStrategy=fr.spoonlabs.flacoco.core.coverage.framework.JUnit4Strategy@4441d567}
Path to runner Classes: /Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar
Adding a line where an exception was thrown: org.apache.commons.math.optimization.direct.DirectSearchOptimizer@-@320
Adding a line from the block where an exception was thrown: org.apache.commons.math.optimization.direct.DirectSearchOptimizer@-@320
Adding a line where an exception was thrown: org.apache.commons.math.optimization.direct.MultiDirectional@-@66
Adding a line from the block where an exception was thrown: org.apache.commons.math.optimization.direct.MultiDirectional@-@66
Adding a line where an exception was thrown: org.apache.commons.math.optimization.direct.DirectSearchOptimizer@-@307
Adding a line from the block where an exception was thrown: org.apache.commons.math.optimization.direct.DirectSearchOptimizer@-@294
Adding a line from the block where an exception was thrown: org.apache.commons.math.optimization.direct.DirectSearchOptimizer@-@306
Adding a line from the block where an exception was thrown: org.apache.commons.math.optimization.direct.DirectSearchOptimizer@-@307
Tests found: 2057
Tests executed: 2057
Suspicious: 1 line org.apache.commons.math.fraction.AbstractFormat l: 110, susp 1.8
Suspicious: 2 line org.apache.commons.math.fraction.AbstractFormat l: 58, susp 1.0909090909090908
Suspicious: 3 line org.apache.commons.math.fraction.AbstractFormat l: 59, susp 1.0909090909090908
Suspicious: 4 line org.apache.commons.math.fraction.AbstractFormat l: 68, susp 1.0909090909090908
Suspicious: 5 line org.apache.commons.math.fraction.AbstractFormat l: 69, susp 1.0909090909090908
Suspicious: 6 line org.apache.commons.math.fraction.AbstractFormat l: 70, susp 1.0909090909090908
Suspicious: 7 line org.apache.commons.math.fraction.AbstractFormat l: 71, susp 1.0909090909090908
Suspicious: 8 line org.apache.commons.math.fraction.AbstractFormat l: 91, susp 1.0909090909090908
Suspicious: 9 line org.apache.commons.math.fraction.AbstractFormat l: 92, susp 1.0909090909090908
Suspicious: 10 line org.apache.commons.math.fraction.AbstractFormat l: 93, susp 1.0909090909090908
Suspicious: 11 line org.apache.commons.math.fraction.AbstractFormat l: 94, susp 1.0909090909090908
Suspicious: 12 line org.apache.commons.math.fraction.FractionFormat l: 55, susp 0.8888888888888888
Suspicious: 13 line org.apache.commons.math.fraction.FractionFormat l: 56, susp 0.8888888888888888
Suspicious: 14 line org.apache.commons.math.fraction.ProperFractionFormat l: 60, susp 0.8888888888888888
Suspicious: 15 line org.apache.commons.math.fraction.ProperFractionFormat l: 61, susp 0.8888888888888888
Suspicious: 16 line org.apache.commons.math.fraction.FractionFormat l: 66, susp 0.8888888888888888
Suspicious: 17 line org.apache.commons.math.fraction.FractionFormat l: 67, susp 0.8888888888888888
Suspicious: 18 line org.apache.commons.math.fraction.ProperFractionFormat l: 74, susp 0.8888888888888888
Suspicious: 19 line org.apache.commons.math.fraction.ProperFractionFormat l: 75, susp 0.8888888888888888
Suspicious: 20 line org.apache.commons.math.fraction.ProperFractionFormat l: 76, susp 0.8888888888888888
Suspicious: 21 line org.apache.commons.math.fraction.FractionFormat l: 103, susp 0.8888888888888888
Suspicious: 22 line org.apache.commons.math.fraction.FractionFormat l: 120, susp 0.8888888888888888
Suspicious: 23 line org.apache.commons.math.fraction.ProperFractionFormat l: 227, susp 0.8888888888888888
Suspicious: 24 line org.apache.commons.math.fraction.ProperFractionFormat l: 231, susp 0.8888888888888888
Suspicious: 25 line org.apache.commons.math.fraction.ProperFractionFormat l: 232, susp 0.8888888888888888
Suspicious: 26 line org.apache.commons.math.fraction.ProperFractionFormat l: 118, susp 0.8181818181818182
Suspicious: 27 line org.apache.commons.math.fraction.AbstractFormat l: 102, susp 0.8
Suspicious: 28 line org.apache.commons.math.fraction.ProperFractionFormat l: 152, susp 0.5714285714285714
Suspicious: 29 line org.apache.commons.math.fraction.ProperFractionFormat l: 153, susp 0.5714285714285714
Suspicious: 30 line org.apache.commons.math.fraction.FractionFormat l: 233, susp 0.5714285714285714
Suspicious: 31 line org.apache.commons.math.fraction.FractionFormat l: 234, susp 0.5714285714285714
Suspicious: 32 line org.apache.commons.math.optimization.direct.MultiDirectional l: 45, susp 0.5
Suspicious: 33 line org.apache.commons.math.optimization.direct.MultiDirectional l: 46, susp 0.5
Suspicious: 34 line org.apache.commons.math.optimization.direct.MultiDirectional l: 47, susp 0.5
Suspicious: 35 line org.apache.commons.math.optimization.direct.MultiDirectional l: 48, susp 0.5
Suspicious: 36 line org.apache.commons.math.optimization.direct.MultiDirectional l: 66, susp 0.5
Suspicious: 37 line org.apache.commons.math.optimization.direct.MultiDirectional l: 69, susp 0.5
Suspicious: 38 line org.apache.commons.math.optimization.direct.MultiDirectional l: 70, susp 0.5
Suspicious: 39 line org.apache.commons.math.optimization.direct.MultiDirectional l: 73, susp 0.5
Suspicious: 40 line org.apache.commons.math.optimization.direct.MultiDirectional l: 74, susp 0.5
Suspicious: 41 line org.apache.commons.math.optimization.direct.MultiDirectional l: 89, susp 0.5
Suspicious: 42 line org.apache.commons.math.optimization.direct.MultiDirectional l: 90, susp 0.5
Suspicious: 43 line org.apache.commons.math.optimization.direct.MultiDirectional l: 97, susp 0.5
Suspicious: 44 line org.apache.commons.math.optimization.direct.MultiDirectional l: 115, susp 0.5
Suspicious: 45 line org.apache.commons.math.optimization.direct.MultiDirectional l: 116, susp 0.5
Suspicious: 46 line org.apache.commons.math.optimization.direct.MultiDirectional l: 119, susp 0.5
Suspicious: 47 line org.apache.commons.math.optimization.direct.MultiDirectional l: 120, susp 0.5
Suspicious: 48 line org.apache.commons.math.optimization.direct.MultiDirectional l: 121, susp 0.5
Suspicious: 49 line org.apache.commons.math.optimization.direct.MultiDirectional l: 122, susp 0.5
Suspicious: 50 line org.apache.commons.math.optimization.direct.MultiDirectional l: 123, susp 0.5
Suspicious: 51 line org.apache.commons.math.optimization.direct.MultiDirectional l: 124, susp 0.5
Suspicious: 52 line org.apache.commons.math.optimization.direct.MultiDirectional l: 125, susp 0.5
Suspicious: 53 line org.apache.commons.math.optimization.direct.MultiDirectional l: 127, susp 0.5
Suspicious: 54 line org.apache.commons.math.optimization.direct.MultiDirectional l: 131, susp 0.5
Suspicious: 55 line org.apache.commons.math.optimization.direct.MultiDirectional l: 132, susp 0.5
Suspicious: 56 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 91, susp 0.4444444444444444
Suspicious: 57 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 92, susp 0.4444444444444444
Suspicious: 58 line org.apache.commons.math.fraction.ProperFractionFormat l: 92, susp 0.4444444444444444
Suspicious: 59 line org.apache.commons.math.fraction.ProperFractionFormat l: 93, susp 0.4444444444444444
Suspicious: 60 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 94, susp 0.4444444444444444
Suspicious: 61 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 95, susp 0.4444444444444444
Suspicious: 62 line org.apache.commons.math.fraction.ProperFractionFormat l: 95, susp 0.4444444444444444
Suspicious: 63 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 96, susp 0.4444444444444444
Suspicious: 64 line org.apache.commons.math.fraction.ProperFractionFormat l: 96, susp 0.4444444444444444
Suspicious: 65 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 97, susp 0.4444444444444444
Suspicious: 66 line org.apache.commons.math.fraction.ProperFractionFormat l: 97, susp 0.4444444444444444
Suspicious: 67 line org.apache.commons.math.fraction.ProperFractionFormat l: 98, susp 0.4444444444444444
Suspicious: 68 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 99, susp 0.4444444444444444
Suspicious: 69 line org.apache.commons.math.fraction.ProperFractionFormat l: 100, susp 0.4444444444444444
Suspicious: 70 line org.apache.commons.math.fraction.ProperFractionFormat l: 105, susp 0.4444444444444444
Suspicious: 71 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 106, susp 0.4444444444444444
Suspicious: 72 line org.apache.commons.math.fraction.ProperFractionFormat l: 106, susp 0.4444444444444444
Suspicious: 73 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 107, susp 0.4444444444444444
Suspicious: 74 line org.apache.commons.math.fraction.ProperFractionFormat l: 107, susp 0.4444444444444444
Suspicious: 75 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 108, susp 0.4444444444444444
Suspicious: 76 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 110, susp 0.4444444444444444
Suspicious: 77 line org.apache.commons.math.fraction.ProperFractionFormat l: 110, susp 0.4444444444444444
Suspicious: 78 line org.apache.commons.math.fraction.BigFractionFormat l: 169, susp 0.4444444444444444
Suspicious: 79 line org.apache.commons.math.fraction.FractionFormat l: 176, susp 0.4444444444444444
Suspicious: 80 line org.apache.commons.math.fraction.ProperFractionFormat l: 141, susp 0.4
Suspicious: 81 line org.apache.commons.math.fraction.ProperFractionFormat l: 144, susp 0.4
Suspicious: 82 line org.apache.commons.math.fraction.ProperFractionFormat l: 147, susp 0.4
Suspicious: 83 line org.apache.commons.math.fraction.ProperFractionFormat l: 148, susp 0.4
Suspicious: 84 line org.apache.commons.math.fraction.FractionFormat l: 206, susp 0.4
Suspicious: 85 line org.apache.commons.math.fraction.FractionFormat l: 207, susp 0.4
Suspicious: 86 line org.apache.commons.math.fraction.BigFractionFormat l: 168, susp 0.36363636363636365
Suspicious: 87 line org.apache.commons.math.fraction.FractionFormat l: 173, susp 0.36363636363636365
Suspicious: 88 line org.apache.commons.math.fraction.FractionFormat l: 175, susp 0.36363636363636365
Suspicious: 89 line org.apache.commons.math.fraction.BigFractionFormat l: 180, susp 0.36363636363636365
Suspicious: 90 line org.apache.commons.math.fraction.FractionFormat l: 191, susp 0.36363636363636365
Suspicious: 91 line org.apache.commons.math.fraction.ProperFractionFormat l: 136, susp 0.3333333333333333
Suspicious: 92 line org.apache.commons.math.fraction.ProperFractionFormat l: 137, susp 0.3333333333333333
Suspicious: 93 line org.apache.commons.math.fraction.FractionFormat l: 203, susp 0.3333333333333333
Suspicious: 94 line org.apache.commons.math.fraction.FractionFormat l: 204, susp 0.3333333333333333
Suspicious: 95 line org.apache.commons.math.fraction.FractionFormat l: 205, susp 0.3333333333333333
Suspicious: 96 line org.apache.commons.math.fraction.FractionFormat l: 222, susp 0.3333333333333333
Suspicious: 97 line org.apache.commons.math.fraction.FractionFormat l: 225, susp 0.3333333333333333
Suspicious: 98 line org.apache.commons.math.fraction.FractionFormat l: 228, susp 0.3333333333333333
Suspicious: 99 line org.apache.commons.math.fraction.FractionFormat l: 229, susp 0.3333333333333333
Suspicious: 100 line org.apache.commons.math.fraction.BigFraction l: 743, susp 0.3076923076923077
Suspicious: 101 line org.apache.commons.math.fraction.BigFraction l: 776, susp 0.3076923076923077
Suspicious: 102 line org.apache.commons.math.MathRuntimeException l: 413, susp 0.26666666666666666
Suspicious: 103 line org.apache.commons.math.MathRuntimeException$9 l: 413, susp 0.26666666666666666
Suspicious: 104 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 142, susp 0.25
Suspicious: 105 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 143, susp 0.25
Suspicious: 106 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 144, susp 0.25
Suspicious: 107 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 145, susp 0.25
Suspicious: 108 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 146, susp 0.25
Suspicious: 109 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 147, susp 0.25
Suspicious: 110 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 152, susp 0.25
Suspicious: 111 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 155, susp 0.25
Suspicious: 112 line org.apache.commons.math.optimization.RealPointValuePair l: 61, susp 0.23529411764705882
Suspicious: 113 line org.apache.commons.math.optimization.RealPointValuePair l: 62, susp 0.23529411764705882
Suspicious: 114 line org.apache.commons.math.optimization.RealPointValuePair l: 63, susp 0.23529411764705882
Suspicious: 115 line org.apache.commons.math.optimization.RealPointValuePair l: 64, susp 0.23529411764705882
Suspicious: 116 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1 l: 278, susp 0.23529411764705882
Suspicious: 117 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1 l: 279, susp 0.23529411764705882
Suspicious: 118 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1 l: 280, susp 0.23529411764705882
Suspicious: 119 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1 l: 281, susp 0.23529411764705882
Suspicious: 120 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 289, susp 0.23529411764705882
Suspicious: 121 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 291, susp 0.23529411764705882
Suspicious: 122 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 294, susp 0.23529411764705882
Suspicious: 123 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 306, susp 0.23529411764705882
Suspicious: 124 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 307, susp 0.23529411764705882
Suspicious: 125 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 319, susp 0.23529411764705882
Suspicious: 126 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 322, susp 0.23529411764705882
Suspicious: 127 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 345, susp 0.23529411764705882
Suspicious: 128 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 349, susp 0.23529411764705882
Suspicious: 129 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 396, susp 0.23529411764705882
Suspicious: 130 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 401, susp 0.23529411764705882
Suspicious: 131 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 403, susp 0.23529411764705882
Suspicious: 132 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 116, susp 0.21052631578947367
Suspicious: 133 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 117, susp 0.21052631578947367
Suspicious: 134 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 118, susp 0.21052631578947367
Suspicious: 135 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 119, susp 0.21052631578947367
Suspicious: 136 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 120, susp 0.21052631578947367
Suspicious: 137 line org.apache.commons.math.fraction.AbstractFormat l: 173, susp 0.21052631578947367
Suspicious: 138 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 220, susp 0.21052631578947367
Suspicious: 139 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 221, susp 0.21052631578947367
Suspicious: 140 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 230, susp 0.21052631578947367
Suspicious: 141 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 231, susp 0.21052631578947367
Suspicious: 142 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 250, susp 0.21052631578947367
Suspicious: 143 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 251, susp 0.21052631578947367
Suspicious: 144 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 265, susp 0.21052631578947367
Suspicious: 145 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 273, susp 0.21052631578947367
Suspicious: 146 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 274, susp 0.21052631578947367
Suspicious: 147 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1 l: 275, susp 0.21052631578947367
Suspicious: 148 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 286, susp 0.21052631578947367
Suspicious: 149 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 287, susp 0.21052631578947367
Suspicious: 150 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 288, susp 0.21052631578947367
Suspicious: 151 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 360, susp 0.21052631578947367
Suspicious: 152 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 361, susp 0.21052631578947367
Suspicious: 153 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 368, susp 0.21052631578947367
Suspicious: 154 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 369, susp 0.21052631578947367
Suspicious: 155 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 372, susp 0.21052631578947367
Suspicious: 156 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 373, susp 0.21052631578947367
Suspicious: 157 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 374, susp 0.21052631578947367
Suspicious: 158 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 375, susp 0.21052631578947367
Suspicious: 159 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 376, susp 0.21052631578947367
Suspicious: 160 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 378, susp 0.21052631578947367
Suspicious: 161 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 381, susp 0.21052631578947367
Suspicious: 162 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 392, susp 0.21052631578947367
Suspicious: 163 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 393, susp 0.21052631578947367
Suspicious: 164 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 394, susp 0.21052631578947367
Suspicious: 165 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 395, susp 0.21052631578947367
Suspicious: 166 line org.apache.commons.math.optimization.RealPointValuePair l: 79, susp 0.19047619047619047
Suspicious: 167 line org.apache.commons.math.fraction.AbstractFormat l: 149, susp 0.19047619047619047
Suspicious: 168 line org.apache.commons.math.fraction.AbstractFormat l: 150, susp 0.19047619047619047
Suspicious: 169 line org.apache.commons.math.fraction.AbstractFormat l: 151, susp 0.19047619047619047
Suspicious: 170 line org.apache.commons.math.fraction.AbstractFormat l: 161, susp 0.19047619047619047
Suspicious: 171 line org.apache.commons.math.fraction.AbstractFormat l: 162, susp 0.19047619047619047
Suspicious: 172 line org.apache.commons.math.fraction.AbstractFormat l: 163, susp 0.19047619047619047
Suspicious: 173 line org.apache.commons.math.fraction.AbstractFormat l: 165, susp 0.19047619047619047
Suspicious: 174 line org.apache.commons.math.fraction.AbstractFormat l: 168, susp 0.19047619047619047
Suspicious: 175 line org.apache.commons.math.fraction.AbstractFormat l: 169, susp 0.19047619047619047
Suspicious: 176 line org.apache.commons.math.fraction.AbstractFormat l: 170, susp 0.19047619047619047
Suspicious: 177 line org.apache.commons.math.fraction.AbstractFormat l: 172, susp 0.19047619047619047
Suspicious: 178 line org.apache.commons.math.fraction.AbstractFormat l: 177, susp 0.19047619047619047
Suspicious: 179 line org.apache.commons.math.fraction.BigFractionFormat l: 58, susp 0.17391304347826086
Suspicious: 180 line org.apache.commons.math.fraction.BigFractionFormat l: 59, susp 0.17391304347826086
Suspicious: 181 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 60, susp 0.17391304347826086
Suspicious: 182 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 61, susp 0.17391304347826086
Suspicious: 183 line org.apache.commons.math.fraction.BigFractionFormat l: 69, susp 0.17391304347826086
Suspicious: 184 line org.apache.commons.math.fraction.BigFractionFormat l: 70, susp 0.17391304347826086
Suspicious: 185 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 73, susp 0.17391304347826086
Suspicious: 186 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 74, susp 0.17391304347826086
Suspicious: 187 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 75, susp 0.17391304347826086
Suspicious: 188 line org.apache.commons.math.fraction.BigFractionFormat l: 106, susp 0.17391304347826086
Suspicious: 189 line org.apache.commons.math.fraction.BigFractionFormat l: 123, susp 0.17391304347826086
Suspicious: 190 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 234, susp 0.17391304347826086
Suspicious: 191 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 238, susp 0.17391304347826086
Suspicious: 192 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 239, susp 0.17391304347826086
Suspicious: 193 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$2 l: 82, susp 0.14285714285714285
Suspicious: 194 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$2 l: 85, susp 0.14285714285714285
Suspicious: 195 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$2 l: 86, susp 0.14285714285714285
Suspicious: 196 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$2 l: 87, susp 0.14285714285714285
Suspicious: 197 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 103, susp 0.14285714285714285
Suspicious: 198 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 225, susp 0.14285714285714285
Suspicious: 199 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 226, susp 0.14285714285714285
Suspicious: 200 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 227, susp 0.14285714285714285
Suspicious: 201 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 228, susp 0.14285714285714285
Suspicious: 202 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 235, susp 0.14285714285714285
Suspicious: 203 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 239, susp 0.14285714285714285
Suspicious: 204 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 240, susp 0.14285714285714285
Suspicious: 205 line org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D l: 241, susp 0.14285714285714285
Suspicious: 206 line org.apache.commons.math.fraction.BigFraction l: 414, susp 0.13793103448275862
Suspicious: 207 line org.apache.commons.math.fraction.BigFraction l: 415, susp 0.13793103448275862
Suspicious: 208 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 50, susp 0.125
Suspicious: 209 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 51, susp 0.125
Suspicious: 210 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 52, susp 0.125
Suspicious: 211 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 53, susp 0.125
Suspicious: 212 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 100, susp 0.125
Suspicious: 213 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 101, susp 0.125
Suspicious: 214 line org.apache.commons.math.fraction.ProperFractionFormat l: 101, susp 0.125
Suspicious: 215 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 102, susp 0.125
Suspicious: 216 line org.apache.commons.math.fraction.ProperFractionFormat l: 102, susp 0.125
Suspicious: 217 line org.apache.commons.math.fraction.ProperFractionFormat l: 103, susp 0.125
Suspicious: 218 line org.apache.commons.math.fraction.Fraction l: 366, susp 0.125
Suspicious: 219 line org.apache.commons.math.fraction.Fraction l: 374, susp 0.12121212121212122
Suspicious: 220 line org.apache.commons.math.optimization.direct.MultiDirectional l: 77, susp 0.1111111111111111
Suspicious: 221 line org.apache.commons.math.optimization.direct.MultiDirectional l: 78, susp 0.1111111111111111
Suspicious: 222 line org.apache.commons.math.optimization.direct.MultiDirectional l: 79, susp 0.1111111111111111
Suspicious: 223 line org.apache.commons.math.optimization.direct.MultiDirectional l: 81, susp 0.1111111111111111
Suspicious: 224 line org.apache.commons.math.optimization.direct.MultiDirectional l: 84, susp 0.1111111111111111
Suspicious: 225 line org.apache.commons.math.optimization.direct.MultiDirectional l: 94, susp 0.1111111111111111
Suspicious: 226 line org.apache.commons.math.fraction.ProperBigFractionFormat l: 118, susp 0.1111111111111111
Suspicious: 227 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 320, susp 0.1111111111111111
Suspicious: 228 line org.apache.commons.math.fraction.BigFraction l: 164, susp 0.10256410256410256
Suspicious: 229 line org.apache.commons.math.fraction.BigFraction l: 165, susp 0.10256410256410256
Suspicious: 230 line org.apache.commons.math.fraction.BigFraction l: 171, susp 0.10256410256410256
Suspicious: 231 line org.apache.commons.math.fraction.BigFraction l: 177, susp 0.10256410256410256
Suspicious: 232 line org.apache.commons.math.fraction.BigFraction l: 178, susp 0.10256410256410256
Suspicious: 233 line org.apache.commons.math.fraction.BigFraction l: 148, susp 0.1
Suspicious: 234 line org.apache.commons.math.fraction.BigFraction l: 149, susp 0.1
Suspicious: 235 line org.apache.commons.math.fraction.BigFraction l: 152, susp 0.1
Suspicious: 236 line org.apache.commons.math.fraction.BigFraction l: 155, susp 0.1
Suspicious: 237 line org.apache.commons.math.fraction.BigFraction l: 158, susp 0.1
Suspicious: 238 line org.apache.commons.math.fraction.BigFraction l: 181, susp 0.1
Suspicious: 239 line org.apache.commons.math.optimization.RealPointValuePair l: 48, susp 0.09523809523809523
Suspicious: 240 line org.apache.commons.math.optimization.RealPointValuePair l: 49, susp 0.09523809523809523
Suspicious: 241 line org.apache.commons.math.optimization.RealPointValuePair l: 50, susp 0.09523809523809523
Suspicious: 242 line org.apache.commons.math.optimization.RealPointValuePair l: 51, susp 0.09523809523809523
Suspicious: 243 line org.apache.commons.math.optimization.RealPointValuePair l: 86, susp 0.09523809523809523
Suspicious: 244 line org.apache.commons.math.optimization.OptimizationException l: 50, susp 0.09090909090909091
Suspicious: 245 line org.apache.commons.math.optimization.OptimizationException l: 51, susp 0.09090909090909091
Suspicious: 246 line org.apache.commons.math.ConvergenceException l: 53, susp 0.08333333333333333
Suspicious: 247 line org.apache.commons.math.ConvergenceException l: 54, susp 0.08333333333333333
Suspicious: 248 line org.apache.commons.math.MaxIterationsExceededException l: 43, susp 0.06666666666666667
Suspicious: 249 line org.apache.commons.math.MaxIterationsExceededException l: 44, susp 0.06666666666666667
Suspicious: 250 line org.apache.commons.math.MaxIterationsExceededException l: 45, susp 0.06666666666666667
Suspicious: 251 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 245, susp 0.0625
Suspicious: 252 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 268, susp 0.0625
Suspicious: 253 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 269, susp 0.0625
Suspicious: 254 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 270, susp 0.0625
Suspicious: 255 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 301, susp 0.0625
Suspicious: 256 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 295, susp 0.05555555555555555
Suspicious: 257 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 296, susp 0.05555555555555555
Suspicious: 258 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 297, susp 0.05555555555555555
Suspicious: 259 line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 299, susp 0.05555555555555555
Suspicious: 260 line org.apache.commons.math.MathException l: 172, susp 0.05
Suspicious: 261 line org.apache.commons.math.optimization.RealPointValuePair l: 70, susp 0.038461538461538464
Suspicious: 262 line org.apache.commons.math.fraction.Fraction l: 253, susp 0.034482758620689655
Suspicious: 263 line org.apache.commons.math.fraction.Fraction l: 254, susp 0.034482758620689655
Suspicious: 264 line org.apache.commons.math.fraction.Fraction l: 258, susp 0.034482758620689655
Suspicious: 265 line org.apache.commons.math.fraction.Fraction l: 267, susp 0.034482758620689655
Suspicious: 266 line org.apache.commons.math.fraction.Fraction l: 268, susp 0.034482758620689655
Suspicious: 267 line org.apache.commons.math.fraction.Fraction l: 274, susp 0.034482758620689655
Suspicious: 268 line org.apache.commons.math.fraction.Fraction l: 278, susp 0.034482758620689655
Suspicious: 269 line org.apache.commons.math.fraction.Fraction l: 279, susp 0.034482758620689655
Suspicious: 270 line org.apache.commons.math.fraction.Fraction l: 280, susp 0.034482758620689655
Suspicious: 271 line org.apache.commons.math.util.MathUtils l: 655, susp 0.03418803418803419
Suspicious: 272 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 65, susp 0.03333333333333333
Suspicious: 273 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 66, susp 0.03333333333333333
Suspicious: 274 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 67, susp 0.03333333333333333
Suspicious: 275 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 68, susp 0.03333333333333333
Suspicious: 276 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 74, susp 0.03333333333333333
Suspicious: 277 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 75, susp 0.03333333333333333
Suspicious: 278 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 76, susp 0.03333333333333333
Suspicious: 279 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 77, susp 0.03333333333333333
Suspicious: 280 line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 78, susp 0.03333333333333333
Suspicious: 281 line org.apache.commons.math.util.MathUtils l: 621, susp 0.03333333333333333
Suspicious: 282 line org.apache.commons.math.util.MathUtils l: 624, susp 0.03333333333333333
Suspicious: 283 line org.apache.commons.math.util.MathUtils l: 625, susp 0.03333333333333333
Suspicious: 284 line org.apache.commons.math.util.MathUtils l: 628, susp 0.03333333333333333
Suspicious: 285 line org.apache.commons.math.util.MathUtils l: 629, susp 0.03333333333333333
Suspicious: 286 line org.apache.commons.math.util.MathUtils l: 635, susp 0.03333333333333333
Suspicious: 287 line org.apache.commons.math.util.MathUtils l: 642, susp 0.03333333333333333
Suspicious: 288 line org.apache.commons.math.util.MathUtils l: 648, susp 0.03333333333333333
Suspicious: 289 line org.apache.commons.math.util.MathUtils l: 652, susp 0.03333333333333333
Suspicious: 290 line org.apache.commons.math.util.MathUtils l: 658, susp 0.03333333333333333
Suspicious: 291 line org.apache.commons.math.util.MathUtils l: 661, susp 0.03333333333333333
Suspicious: 292 line org.apache.commons.math.util.MathUtils l: 662, susp 0.03333333333333333
Suspicious: 293 line org.apache.commons.math.util.MathUtils l: 606, susp 0.03305785123966942
Suspicious: 294 line org.apache.commons.math.util.MathUtils l: 607, susp 0.03305785123966942
Suspicious: 295 line org.apache.commons.math.util.MathUtils l: 608, susp 0.03305785123966942
Suspicious: 296 line org.apache.commons.math.MathException l: 119, susp 0.029411764705882353
Suspicious: 297 line org.apache.commons.math.MathException l: 120, susp 0.029411764705882353
Suspicious: 298 line org.apache.commons.math.MathException l: 121, susp 0.029411764705882353
Suspicious: 299 line org.apache.commons.math.MathException l: 122, susp 0.029411764705882353
Suspicious: 300 line org.apache.commons.math.ConvergenceException l: 45, susp 0.02564102564102564
Suspicious: 301 line org.apache.commons.math.ConvergenceException l: 46, susp 0.02564102564102564
Suspicious: 302 line org.apache.commons.math.MathException l: 166, susp 0.02564102564102564
Suspicious: 303 line org.apache.commons.math.util.MathUtils l: 649, susp 0.009900990099009901
Suspicious: 304 line org.apache.commons.math.MathException l: 106, susp 0.009708737864077669
Suspicious: 305 line org.apache.commons.math.MathException l: 107, susp 0.009708737864077669
Suspicious: 306 line org.apache.commons.math.MathException l: 108, susp 0.009708737864077669
Suspicious: 307 line org.apache.commons.math.MathException l: 109, susp 0.009708737864077669
Suspicious: 308 line org.apache.commons.math.MathRuntimeException l: 61, susp 0.009433962264150943
Suspicious: 309 line org.apache.commons.math.MathRuntimeException l: 68, susp 0.009433962264150943
Suspicious: 310 line org.apache.commons.math.MathRuntimeException l: 74, susp 0.009433962264150943
Suspicious: 311 line org.apache.commons.math.MathRuntimeException l: 87, susp 0.009433962264150943
Suspicious: 312 line org.apache.commons.math.util.MathUtils l: 653, susp 0.009259259259259259
Suspicious: 313 line org.apache.commons.math.MathException l: 60, susp 0.009009009009009009
Suspicious: 314 line org.apache.commons.math.MathException l: 67, susp 0.009009009009009009
Suspicious: 315 line org.apache.commons.math.MathException l: 73, susp 0.009009009009009009
Suspicious: 316 line org.apache.commons.math.MathException l: 85, susp 0.008771929824561403
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 110, susp 1.8
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 58, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 59, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 68, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 69, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 70, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 71, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 91, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 92, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 93, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 94, susp 1.0909090909090908
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 55, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 56, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 60, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 61, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 66, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 67, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 74, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 75, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 76, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 103, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 120, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 227, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 231, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 232, susp 0.8888888888888888
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 118, susp 0.8181818181818182
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 102, susp 0.8
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 152, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 153, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 233, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 234, susp 0.5714285714285714
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 45, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 46, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 47, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 48, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 66, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 69, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 70, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 73, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 74, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 89, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 90, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 97, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 115, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 116, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 119, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 120, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 121, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 122, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 123, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 124, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 125, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 127, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 131, susp 0.5
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 132, susp 0.5
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 91, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 92, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 92, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 93, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 94, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 95, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 95, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 96, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 96, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 97, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 97, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 98, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 99, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 100, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 105, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 106, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 106, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 107, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 107, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 108, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 110, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 110, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 169, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 176, susp 0.4444444444444444
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 141, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 144, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 147, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 148, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 206, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 207, susp 0.4
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 168, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 173, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 175, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 180, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 191, susp 0.36363636363636365
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 136, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 137, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 203, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 204, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 205, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 222, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 225, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 228, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.FractionFormat l: 229, susp 0.3333333333333333
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 743, susp 0.3076923076923077
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 776, susp 0.3076923076923077
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 413, susp 0.26666666666666666
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 413, susp 0.26666666666666666
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 142, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 143, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 144, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 145, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 146, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 147, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 152, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 155, susp 0.25
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 61, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 62, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 63, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 64, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 278, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 279, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 280, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 281, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 289, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 291, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 294, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 306, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 307, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 319, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 322, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 345, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 349, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 396, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 401, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 403, susp 0.23529411764705882
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 116, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 117, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 118, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 119, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 120, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 173, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 220, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 221, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 230, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 231, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 250, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 251, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 265, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 273, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 274, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 275, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 286, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 287, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 288, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 360, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 361, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 368, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 369, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 372, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 373, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 374, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 375, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 376, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 378, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 381, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 392, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 393, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 394, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 395, susp 0.21052631578947367
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 79, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 149, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 150, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 151, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 161, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 162, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 163, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 165, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 168, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 169, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 170, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 172, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.AbstractFormat l: 177, susp 0.19047619047619047
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 58, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 59, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 60, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 61, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 69, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 70, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 73, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 74, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 75, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 106, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.BigFractionFormat l: 123, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 234, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 238, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 239, susp 0.17391304347826086
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 82, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 85, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 86, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 87, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 103, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 225, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 226, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 227, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 228, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 235, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 239, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 240, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectionalTest l: 241, susp 0.14285714285714285
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 414, susp 0.13793103448275862
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 415, susp 0.13793103448275862
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 50, susp 0.125
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 51, susp 0.125
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 52, susp 0.125
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 53, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 100, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 101, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 101, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 102, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 102, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.ProperFractionFormat l: 103, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 366, susp 0.125
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 374, susp 0.12121212121212122
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 77, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 78, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 79, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 81, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 84, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.optimization.direct.MultiDirectional l: 94, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.fraction.ProperBigFractionFormat l: 118, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 320, susp 0.1111111111111111
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 164, susp 0.10256410256410256
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 165, susp 0.10256410256410256
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 171, susp 0.10256410256410256
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 177, susp 0.10256410256410256
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 178, susp 0.10256410256410256
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 148, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 149, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 152, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 155, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 158, susp 0.1
Suspicious:  line org.apache.commons.math.fraction.BigFraction l: 181, susp 0.1
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 48, susp 0.09523809523809523
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 49, susp 0.09523809523809523
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 50, susp 0.09523809523809523
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 51, susp 0.09523809523809523
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 86, susp 0.09523809523809523
Suspicious:  line org.apache.commons.math.optimization.OptimizationException l: 50, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.optimization.OptimizationException l: 51, susp 0.09090909090909091
Suspicious:  line org.apache.commons.math.ConvergenceException l: 53, susp 0.08333333333333333
Suspicious:  line org.apache.commons.math.ConvergenceException l: 54, susp 0.08333333333333333
Suspicious:  line org.apache.commons.math.MaxIterationsExceededException l: 43, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.MaxIterationsExceededException l: 44, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.MaxIterationsExceededException l: 45, susp 0.06666666666666667
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 245, susp 0.0625
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 268, susp 0.0625
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 269, susp 0.0625
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 270, susp 0.0625
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 301, susp 0.0625
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 295, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 296, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 297, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.optimization.direct.DirectSearchOptimizer l: 299, susp 0.05555555555555555
Suspicious:  line org.apache.commons.math.MathException l: 172, susp 0.05
Suspicious:  line org.apache.commons.math.optimization.RealPointValuePair l: 70, susp 0.038461538461538464
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 253, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 254, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 258, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 267, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 268, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 274, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 278, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 279, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.fraction.Fraction l: 280, susp 0.034482758620689655
Suspicious:  line org.apache.commons.math.util.MathUtils l: 655, susp 0.03418803418803419
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 65, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 66, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 67, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 68, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 74, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 75, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 76, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 77, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.optimization.SimpleScalarValueChecker l: 78, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 621, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 624, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 625, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 628, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 629, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 635, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 642, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 648, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 652, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 658, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 661, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 662, susp 0.03333333333333333
Suspicious:  line org.apache.commons.math.util.MathUtils l: 606, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 607, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.util.MathUtils l: 608, susp 0.03305785123966942
Suspicious:  line org.apache.commons.math.MathException l: 119, susp 0.029411764705882353
Suspicious:  line org.apache.commons.math.MathException l: 120, susp 0.029411764705882353
Suspicious:  line org.apache.commons.math.MathException l: 121, susp 0.029411764705882353
Suspicious:  line org.apache.commons.math.MathException l: 122, susp 0.029411764705882353
Suspicious:  line org.apache.commons.math.ConvergenceException l: 45, susp 0.02564102564102564
Suspicious:  line org.apache.commons.math.ConvergenceException l: 46, susp 0.02564102564102564
Suspicious:  line org.apache.commons.math.MathException l: 166, susp 0.02564102564102564
Suspicious:  line org.apache.commons.math.util.MathUtils l: 649, susp 0.009900990099009901
Suspicious:  line org.apache.commons.math.MathException l: 106, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.MathException l: 107, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.MathException l: 108, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.MathException l: 109, susp 0.009708737864077669
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 61, susp 0.009433962264150943
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 68, susp 0.009433962264150943
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 74, susp 0.009433962264150943
Suspicious:  line org.apache.commons.math.MathRuntimeException l: 87, susp 0.009433962264150943
Suspicious:  line org.apache.commons.math.util.MathUtils l: 653, susp 0.009259259259259259
Suspicious:  line org.apache.commons.math.MathException l: 60, susp 0.009009009009009009
Suspicious:  line org.apache.commons.math.MathException l: 67, susp 0.009009009009009009
Suspicious:  line org.apache.commons.math.MathException l: 73, susp 0.009009009009009009
Suspicious:  line org.apache.commons.math.MathException l: 85, susp 0.008771929824561403
Executing time Fault localization: 20 sec
Setting up the max to 209310 milliseconds (209 sec)
---- Initial suspicious size: 316
Creating variant 1
--ModifPoint:CtReturnImpl, suspValue 1.8, line 110, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0909090909090908, line 58, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.0909090909090908, line 69, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 1.0909090909090908, line 70, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 1.0909090909090908, line 91, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0909090909090908, line 92, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 1.0909090909090908, line 93, file AbstractFormat.java
--ModifPoint:CtReturnImpl, suspValue 1.0909090909090908, line 94, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.8888888888888888, line 60, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.8888888888888888, line 75, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8888888888888888, line 103, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8888888888888888, line 120, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.8888888888888888, line 227, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.8888888888888888, line 231, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8181818181818182, line 118, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.8, line 102, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.5714285714285714, line 152, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.5714285714285714, line 153, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.5714285714285714, line 233, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.5714285714285714, line 234, file FractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 46, file MultiDirectional.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 47, file MultiDirectional.java
--ModifPoint:CtInvocationImpl, suspValue 0.5, line 66, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 69, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 70, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 73, file MultiDirectional.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 74, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 89, file MultiDirectional.java
--ModifPoint:CtIfImpl, suspValue 0.5, line 90, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 115, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 116, file MultiDirectional.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 119, file MultiDirectional.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 120, file MultiDirectional.java
--ModifPoint:CtForImpl, suspValue 0.5, line 121, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 122, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.5, line 123, file MultiDirectional.java
--ModifPoint:CtForImpl, suspValue 0.5, line 124, file MultiDirectional.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 125, file MultiDirectional.java
--ModifPoint:CtAssignmentImpl, suspValue 0.5, line 127, file MultiDirectional.java
--ModifPoint:CtInvocationImpl, suspValue 0.5, line 131, file MultiDirectional.java
--ModifPoint:CtReturnImpl, suspValue 0.5, line 132, file MultiDirectional.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 91, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 92, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 92, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 93, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 94, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 95, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 95, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 96, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 96, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 97, file ProperBigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4444444444444444, line 97, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 98, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 99, file ProperBigFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4444444444444444, line 100, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 105, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 106, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 106, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 107, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 107, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4444444444444444, line 108, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.4444444444444444, line 110, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.4444444444444444, line 110, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 169, file BigFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.4444444444444444, line 176, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4, line 141, file ProperFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.4, line 144, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.4, line 147, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.4, line 148, file ProperFractionFormat.java
--ModifPoint:CtThrowImpl, suspValue 0.4, line 206, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.36363636363636365, line 168, file BigFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.36363636363636365, line 173, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.36363636363636365, line 175, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.36363636363636365, line 180, file BigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.36363636363636365, line 191, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 136, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 137, file ProperFractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 203, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 204, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 205, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 222, file FractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.3333333333333333, line 225, file FractionFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.3333333333333333, line 228, file FractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.3333333333333333, line 229, file FractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.3076923076923077, line 743, file BigFraction.java
--ModifPoint:CtReturnImpl, suspValue 0.3076923076923077, line 776, file BigFraction.java
--ModifPoint:CtReturnImpl, suspValue 0.26666666666666666, line 413, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.26666666666666666, line 413, file MathRuntimeException.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.25, line 142, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.25, line 143, file DirectSearchOptimizer.java
--ModifPoint:CtForImpl, suspValue 0.25, line 144, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.25, line 145, file DirectSearchOptimizer.java
--ModifPoint:CtForImpl, suspValue 0.25, line 146, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.25, line 147, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.25, line 152, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.23529411764705882, line 62, file RealPointValuePair.java
--ModifPoint:CtAssignmentImpl, suspValue 0.23529411764705882, line 63, file RealPointValuePair.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.23529411764705882, line 278, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.23529411764705882, line 279, file DirectSearchOptimizer.java
--ModifPoint:CtReturnImpl, suspValue 0.23529411764705882, line 280, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.23529411764705882, line 289, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.23529411764705882, line 291, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.23529411764705882, line 294, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.23529411764705882, line 306, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.23529411764705882, line 307, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.23529411764705882, line 319, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.23529411764705882, line 345, file DirectSearchOptimizer.java
--ModifPoint:CtReturnImpl, suspValue 0.23529411764705882, line 349, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.23529411764705882, line 396, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.23529411764705882, line 401, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.21052631578947367, line 117, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.21052631578947367, line 118, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.21052631578947367, line 119, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 173, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 220, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 230, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 250, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.21052631578947367, line 265, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 273, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.21052631578947367, line 274, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 286, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 287, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.21052631578947367, line 288, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.21052631578947367, line 360, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.21052631578947367, line 361, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 368, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 369, file DirectSearchOptimizer.java
--ModifPoint:CtForImpl, suspValue 0.21052631578947367, line 372, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.21052631578947367, line 373, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.21052631578947367, line 374, file DirectSearchOptimizer.java
--ModifPoint:CtForImpl, suspValue 0.21052631578947367, line 375, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 376, file DirectSearchOptimizer.java
--ModifPoint:CtAssignmentImpl, suspValue 0.21052631578947367, line 378, file DirectSearchOptimizer.java
--ModifPoint:CtForImpl, suspValue 0.21052631578947367, line 392, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.21052631578947367, line 393, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.21052631578947367, line 394, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.21052631578947367, line 395, file DirectSearchOptimizer.java
--ModifPoint:CtReturnImpl, suspValue 0.19047619047619047, line 79, file RealPointValuePair.java
--ModifPoint:CtInvocationImpl, suspValue 0.19047619047619047, line 149, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.19047619047619047, line 150, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19047619047619047, line 161, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19047619047619047, line 162, file AbstractFormat.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.19047619047619047, line 163, file AbstractFormat.java
--ModifPoint:CtIfImpl, suspValue 0.19047619047619047, line 165, file AbstractFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.19047619047619047, line 168, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.19047619047619047, line 170, file AbstractFormat.java
--ModifPoint:CtIfImpl, suspValue 0.19047619047619047, line 172, file AbstractFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.19047619047619047, line 177, file AbstractFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.17391304347826086, line 60, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.17391304347826086, line 74, file ProperBigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.17391304347826086, line 106, file BigFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.17391304347826086, line 123, file BigFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.17391304347826086, line 234, file ProperBigFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.17391304347826086, line 238, file ProperBigFractionFormat.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$2, methodName=null, lineNumber=82, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$2, methodName=null, lineNumber=85, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$2, methodName=null, lineNumber=86, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$2, methodName=null, lineNumber=87, susp=0.14285714285714285]
--ModifPoint:CtAssignmentImpl, suspValue 0.14285714285714285, line 103, file ProperBigFractionFormat.java
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=225, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=226, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=227, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=228, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=235, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=239, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=240, susp=0.14285714285714285]
 Not ctClass for suspicious code Candidate [className=org.apache.commons.math.optimization.direct.MultiDirectionalTest$Gaussian2D, methodName=null, lineNumber=241, susp=0.14285714285714285]
--ModifPoint:CtInvocationImpl, suspValue 0.13793103448275862, line 414, file BigFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.125, line 51, file SimpleScalarValueChecker.java
--ModifPoint:CtAssignmentImpl, suspValue 0.125, line 52, file SimpleScalarValueChecker.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 100, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 101, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 101, file ProperFractionFormat.java
--ModifPoint:CtIfImpl, suspValue 0.125, line 102, file ProperBigFractionFormat.java
--ModifPoint:CtInvocationImpl, suspValue 0.125, line 102, file ProperFractionFormat.java
--ModifPoint:CtAssignmentImpl, suspValue 0.125, line 103, file ProperFractionFormat.java
--ModifPoint:CtReturnImpl, suspValue 0.125, line 366, file Fraction.java
--ModifPoint:CtReturnImpl, suspValue 0.12121212121212122, line 374, file Fraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1111111111111111, line 77, file MultiDirectional.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.1111111111111111, line 78, file MultiDirectional.java
--ModifPoint:CtIfImpl, suspValue 0.1111111111111111, line 79, file MultiDirectional.java
--ModifPoint:CtAssignmentImpl, suspValue 0.1111111111111111, line 81, file MultiDirectional.java
--ModifPoint:CtReturnImpl, suspValue 0.1111111111111111, line 84, file MultiDirectional.java
--ModifPoint:CtReturnImpl, suspValue 0.1111111111111111, line 94, file MultiDirectional.java
--ModifPoint:CtReturnImpl, suspValue 0.1111111111111111, line 118, file ProperBigFractionFormat.java
--ModifPoint:CtThrowImpl, suspValue 0.1111111111111111, line 320, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.10256410256410256, line 164, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.10256410256410256, line 165, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.10256410256410256, line 171, file BigFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10256410256410256, line 177, file BigFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.10256410256410256, line 178, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 149, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 152, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 155, file BigFraction.java
--ModifPoint:CtIfImpl, suspValue 0.1, line 158, file BigFraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.09523809523809523, line 49, file RealPointValuePair.java
--ModifPoint:CtAssignmentImpl, suspValue 0.09523809523809523, line 50, file RealPointValuePair.java
--ModifPoint:CtReturnImpl, suspValue 0.09523809523809523, line 86, file RealPointValuePair.java
--ModifPoint:CtAssignmentImpl, suspValue 0.06666666666666667, line 44, file MaxIterationsExceededException.java
--ModifPoint:CtReturnImpl, suspValue 0.0625, line 245, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.0625, line 268, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.0625, line 269, file DirectSearchOptimizer.java
--ModifPoint:CtInvocationImpl, suspValue 0.0625, line 270, file DirectSearchOptimizer.java
--ModifPoint:CtReturnImpl, suspValue 0.0625, line 301, file DirectSearchOptimizer.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.05555555555555555, line 295, file DirectSearchOptimizer.java
--ModifPoint:CtForImpl, suspValue 0.05555555555555555, line 296, file DirectSearchOptimizer.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.05555555555555555, line 297, file DirectSearchOptimizer.java
--ModifPoint:CtIfImpl, suspValue 0.05555555555555555, line 299, file DirectSearchOptimizer.java
--ModifPoint:CtReturnImpl, suspValue 0.05, line 172, file MathException.java
--ModifPoint:CtReturnImpl, suspValue 0.038461538461538464, line 70, file RealPointValuePair.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 254, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 258, file Fraction.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.034482758620689655, line 267, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 268, file Fraction.java
--ModifPoint:CtIfImpl, suspValue 0.034482758620689655, line 274, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.034482758620689655, line 278, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.034482758620689655, line 279, file Fraction.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03418803418803419, line 655, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03333333333333333, line 66, file SimpleScalarValueChecker.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03333333333333333, line 67, file SimpleScalarValueChecker.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03333333333333333, line 74, file SimpleScalarValueChecker.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03333333333333333, line 75, file SimpleScalarValueChecker.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03333333333333333, line 76, file SimpleScalarValueChecker.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03333333333333333, line 77, file SimpleScalarValueChecker.java
--ModifPoint:CtReturnImpl, suspValue 0.03333333333333333, line 78, file SimpleScalarValueChecker.java
--ModifPoint:CtIfImpl, suspValue 0.03333333333333333, line 621, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03333333333333333, line 624, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03333333333333333, line 625, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03333333333333333, line 628, file MathUtils.java
--ModifPoint:CtWhileImpl, suspValue 0.03333333333333333, line 629, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03333333333333333, line 635, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03333333333333333, line 642, file MathUtils.java
--ModifPoint:CtWhileImpl, suspValue 0.03333333333333333, line 648, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03333333333333333, line 652, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.03333333333333333, line 658, file MathUtils.java
--ModifPoint:CtReturnImpl, suspValue 0.03333333333333333, line 662, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03305785123966942, line 606, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.03305785123966942, line 607, file MathUtils.java
--ModifPoint:CtIfImpl, suspValue 0.03305785123966942, line 608, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.029411764705882353, line 120, file MathException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.029411764705882353, line 121, file MathException.java
--ModifPoint:CtReturnImpl, suspValue 0.02564102564102564, line 166, file MathException.java
--ModifPoint:CtOperatorAssignmentImpl, suspValue 0.009900990099009901, line 649, file MathUtils.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009708737864077669, line 107, file MathException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009708737864077669, line 108, file MathException.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.009433962264150943, line 61, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.009433962264150943, line 74, file MathRuntimeException.java
--ModifPoint:CtReturnImpl, suspValue 0.009433962264150943, line 87, file MathRuntimeException.java
--ModifPoint:CtAssignmentImpl, suspValue 0.009259259259259259, line 653, file MathUtils.java
--ModifPoint:CtLocalVariableImpl, suspValue 0.009009009009009009, line 60, file MathException.java
--ModifPoint:CtReturnImpl, suspValue 0.009009009009009009, line 73, file MathException.java
--ModifPoint:CtReturnImpl, suspValue 0.008771929824561403, line 85, file MathException.java
Total suspicious from FL: 316,  240
Total ModPoint created: 240
Creating program variant #1, [Variant id: 1, #gens: 240, #ops: 0, parent:-]
Calculating fitness
Calculating fitness for original program variant.
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout209secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.geometry.RotationOrderTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.estimation.EstimatedParameterTest  org.apache.commons.math.linear.CholeskyDecompositionImplTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.DuplicateSampleAbscissaExceptionTest  org.apache.commons.math.estimation.MinpackTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.FunctionEvaluationExceptionTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.inference.TTestFactoryTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.linear.LUDecompositionImplTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.QRDecompositionImplTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.geometry.Vector3DTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.linear.FieldLUDecompositionImplTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.linear.SingularValueDecompositionImplTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.linear.InvalidMatrixExceptionTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.ConvergenceExceptionTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.linear.RealMatrixImplTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.linear.EigenDecompositionImplTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.geometry.Vector3DFormatTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.estimation.WeightedMeasurementTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.linear.MatrixIndexExceptionTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest  org.apache.commons.math.optimization.direct.MultiDirectionalTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.linear.BigMatrixImplTest  org.apache.commons.math.stat.inference.ChiSquareFactoryTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.optimization.univariate.BrentMinimizerTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ArgumentOutsideDomainExceptionTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.MaxIterationsExceededExceptionTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.direct.NelderMeadTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.geometry.RotationTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.geometry.FrenchVector3DFormatTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.MathConfigurationExceptionTest  org.apache.commons.math.estimation.GaussNewtonEstimatorTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 2057] ,[]
The original fitness is : 2.0
----------------------------
---Configuration properties
p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
p:workingDirectory= /Users/marekmazur/astor/./output_astor
p:keepcomments= true
p:maxnumvariablesperingredient= 10
p:folderDiff= ./diffSolutions
p:evo_affected_by_op= true
p:clusteringfilename= clustering.csv
p:validation= process
p:modificationpointnavigation= weight
p:transformingredient= false
p:diffcontext= 0
p:evo_buggy_class= true
p:runjava7code= false
p:manipulatesuper= false
p:forceExecuteRegression= false
p:skipfitnessinitialpopulation= false
p:filterfaultlocalization= true
p:population= 1
p:maxtimefactor= 10
p:elementsToMutate= 10
p:parsesourcefromoriginal= true
p:alternativecompliancelevel= 8
p:bugId= 280
p:regressionforfaultlocalization= true
p:max_synthesis_step= 10000
p:failing= org.apache.commons.math.optimization.direct.MultiDirectionalTest:org.apache.commons.math.optimization.direct.MultiDirectionalTest:
p:maxmodificationpoints= 1000
p:projectIdentifier= 
p:savecompletepatched= true
p:synthesis_depth= 3
p:seed= 10
p:applyCrossover= false
p:executorjar= ./lib/jtestex7.jar
p:binjavafolder= /target/classes/
p:version-location= ./math-version/
p:tmax1= 10000
p:tmax2= 209310
p:continuewhenmodelfail= true
p:locationGzoltarJar= ./lib/
p:logtestexecution= false
p:processoutputinfile= false
p:gzoltarVersion= 1.7.3
p:javacompliancelevel= 8
p:gzoltarpackagetonotinstrument= junit.framework
p:diff_type= relative
p:cleantemplates= true
p:stopfirst= true
p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
p:testbystep= false
p:maxtime= 60
p:preservelinenumbers= true
p:resetoperations= false
p:forcesubprocesskilling= false
p:jvm4evosuitetestexecution= /Users/marekmazur/Library/Java/JavaVirtualMachines/openjdk-19.0.1/Contents/Home/bin
p:dependenciespath= /Users/marekmazur/astor/examples/libs/junit-4.4.jar
p:pathToMVNRepository= 
p:limitbysuspicious= true
p:faultlocalization= flacoco
p:maxsuspcandidates= 1000
p:antipattern= false
p:reintroduce= PARENTS:ORIGINAL
p:multipointmodification= false
p:probabilistictransformation= true
p:mutationrate= 1 
p:jvm4testexecution= /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin
p:mode= jgenprog
p:pvariantfoldername= variant-
p:flthreshold= 0
p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
p:nrPlaceholders= 1
p:nolog= False
p:saveall= false
p:evoRunOnBuggyClass= true
p:learningdir= 
p:bintestfolder= /target/test-classes/
p:evosuiteresultfolder= evosuite
p:operatorspace= irr-statements
p:resourcesfolder= /src/main/resources:/src/test/resources:
p:includeZeros= false
p:allpoints= false
p:collectonlyusedmethod= false
p:maxVarCombination= 1000
p:timezone= America/Los_Angeles
p:skipfaultlocalization= false
p:savesolution= true
p:maxGeneration= 1000000
p:evosuitetimeout= 120
p:packageToInstrument= org.apache.commons
p:uniqueoptogen= false
p:scope= local
p:srcjavafolder= /src/java/
p:commandTrunk= 50000
p:metid= 0
p:ignoredTestCases= 
p:savespoonmodelondisk= false
p:targetelementprocessor= statements
p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
p:maxCombinationVariableLimit= false
p:jvmversion= 1.8.0_202
p:nomodificationconvergence= 100
p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
p:srctestfolder= /src/test/
p:outputjsonresult= true
p:gzoltartestpackagetoexclude= junit.framework
p:probagenmutation= false
p:resetmodel= true
p:jsonoutputname= astor_output
p:numberExecutions= 1
p:ignoreflakyinfl= false
p:evoDSE= false
p:duplicateingredientsinspace= false
p:overridemaxtime= true
p:maxnumbersolutions= 1000000
p:logsattemps= true
p:location= /Users/marekmazur/astor/defects4j/math-84
p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
----------------------------
----Starting Solution Search
----------Running generation: 1, population size: 1

***** Generation 1 : 0
**Parent Variant: [Variant id: 1, #gens: 240, #ops: 0, parent:-]

--Child created id: 2
--Creating new operations for variant [Variant id: 2, #gens: 240, #ops: 0, parent:1]
---analyzing modificationPoint position: 93
location: DirectSearchOptimizer.java147
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2, #gens: 239, #ops: 1, parent:1] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1(f=2.0), 2(f=2.0), )
Selected to next generation: IDs2--> (1(f=2.0), )
----------Running generation: 2, population size: 1

***** Generation 2 : 0
**Parent Variant: [Variant id: 3, #gens: 240, #ops: 0, parent:-]

--Child created id: 4
--Creating new operations for variant [Variant id: 4, #gens: 240, #ops: 0, parent:3]
---analyzing modificationPoint position: 100
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 228
location: MathException.java121
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arguments = new java.lang.Object[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 4, #gens: 239, #ops: 1, parent:3] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 4, errors: [MathException.java:123: error: variable arguments might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(2): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arguments = new java.lang.Object[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (3(f=2.0), 4(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (3(f=2.0), )
----------Running generation: 3, population size: 1

***** Generation 3 : 0
**Parent Variant: [Variant id: 5, #gens: 240, #ops: 0, parent:-]

--Child created id: 6
--Creating new operations for variant [Variant id: 6, #gens: 240, #ops: 0, parent:5]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 111
location: DirectSearchOptimizer.java118
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxIterations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 6, #gens: 239, #ops: 1, parent:5] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 6
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-6/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(3): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxIterations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (5(f=2.0), 6(f=2.0), )
Selected to next generation: IDs2--> (5(f=2.0), )
----------Running generation: 4, population size: 1

***** Generation 4 : 0
**Parent Variant: [Variant id: 7, #gens: 240, #ops: 0, parent:-]

--Child created id: 8
--Creating new operations for variant [Variant id: 8, #gens: 240, #ops: 0, parent:7]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 8, #gens: 241, #ops: 1, parent:7] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 8, errors: [MultiDirectional.java:132: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
		evaluateSimplex(comparator); 		final double[] xSmallest = original[0].getPointRef();
		                             		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(4): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (7(f=2.0), 8(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (7(f=2.0), )
----------Running generation: 5, population size: 1

***** Generation 5 : 0
**Parent Variant: [Variant id: 9, #gens: 240, #ops: 0, parent:-]

--Child created id: 10
--Creating new operations for variant [Variant id: 10, #gens: 240, #ops: 0, parent:9]
---analyzing modificationPoint position: 89
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxEvaluations]
--> var from patch: maxEvaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java143
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 143, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 10, #gens: 241, #ops: 1, parent:9] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 10, errors: [DirectSearchOptimizer.java:236: error: incompatible types: unexpected return value
		return maxEvaluations; 		startConfiguration = new double[n][n]; 		for (int i = 0; i < n; ++i) { 			final double[] vertexI = startConfiguration[i]; 			for (int j = 0; j < (i + 1); ++j) { 				if (steps[j] == 0.0) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", j, j + 1);} 				java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1);}}} 	/**
		       ^, DirectSearchOptimizer.java:249: error: cannot find symbol
		for (int i = 0; i < (n + 1); ++i) { 			final double[] refI = referenceSimplex[i]; 			// safety checks
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:250: error: cannot find symbol
			if (refI.length != n) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}", refI.length, n);} 			for (int j = 0; j < i; ++j) { 				final double[] refJ = referenceSimplex[j]; 				boolean allEquals = true; 				for (int k = 0; k < n; ++k) { 					if (refI[k] != refJ[k]) { 						allEquals = false; 						break;}} 				if (allEquals) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", i, j);}} 			// store vertex i position relative to vertex 0 position
			                   ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:250: error: cannot find symbol
			if (refI.length != n) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}", refI.length, n);} 			for (int j = 0; j < i; ++j) { 				final double[] refJ = referenceSimplex[j]; 				boolean allEquals = true; 				for (int k = 0; k < n; ++k) { 					if (refI[k] != refJ[k]) { 						allEquals = false; 						break;}} 				if (allEquals) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", i, j);}} 			// store vertex i position relative to vertex 0 position
			                        				                                                                                                                                ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:250: error: cannot find symbol
			if (refI.length != n) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}", refI.length, n);} 			for (int j = 0; j < i; ++j) { 				final double[] refJ = referenceSimplex[j]; 				boolean allEquals = true; 				for (int k = 0; k < n; ++k) { 					if (refI[k] != refJ[k]) { 						allEquals = false; 						break;}} 				if (allEquals) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", i, j);}} 			// store vertex i position relative to vertex 0 position
			                        				                                                                                                                                     			                              				                                           				                          				                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:251: error: cannot find symbol
			if (i > 0) { 				final double[] confI = startConfiguration[i - 1]; 				for (int k = 0; k < n; ++k) { 					confI[k] = refI[k] - ref0[k];}}}} 	/**
			             				                                                  				                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:251: error: cannot find symbol
			if (i > 0) { 				final double[] confI = startConfiguration[i - 1]; 				for (int k = 0; k < n; ++k) { 					confI[k] = refI[k] - ref0[k];}}}} 	/**
			             				                                                  				                              					                     ^
  symbol:   variable ref0
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:270: error: cannot find symbol
			java.util.Arrays.fill(unit, 1.0);
			                      ^
  symbol:   variable unit
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:271: error: cannot find symbol
			setStartConfiguration(unit);
			                      ^
  symbol:   variable unit
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer]
Ingredient counter is Zero
---Undoing: gnrtn(5): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (9(f=2.0), 10(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (9(f=2.0), )
----------Running generation: 6, population size: 1

***** Generation 6 : 0
**Parent Variant: [Variant id: 11, #gens: 240, #ops: 0, parent:-]

--Child created id: 12
--Creating new operations for variant [Variant id: 12, #gens: 240, #ops: 0, parent:11]
---analyzing modificationPoint position: 159
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  toAppendTo.append(' ')
---analyzing modificationPoint position: 165
Templates availables144
Attempts Base Ingredients  1 total 144
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 149
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 3 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 79
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 12, #gens: 239, #ops: 1, parent:11] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 12
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-12/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(6): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (11(f=2.0), 12(f=2.0), )
Selected to next generation: IDs2--> (11(f=2.0), )
----------Running generation: 7, population size: 1

***** Generation 7 : 0
**Parent Variant: [Variant id: 13, #gens: 240, #ops: 0, parent:-]

--Child created id: 14
--Creating new operations for variant [Variant id: 14, #gens: 240, #ops: 0, parent:13]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 70
location: BigFractionFormat.java168
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 14, #gens: 239, #ops: 1, parent:13] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 14, errors: [BigFractionFormat.java:181: error: variable ret might not have been initialized
		return ret;
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(7): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (13(f=2.0), 14(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (13(f=2.0), )
----------Running generation: 8, population size: 1

***** Generation 8 : 0
**Parent Variant: [Variant id: 15, #gens: 240, #ops: 0, parent:-]

--Child created id: 16
--Creating new operations for variant [Variant id: 16, #gens: 240, #ops: 0, parent:15]
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 92, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 16, #gens: 241, #ops: 1, parent:15] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 16, errors: [ProperBigFractionFormat.java:96: error: variable den is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		java.math.BigInteger den = fraction.getDenominator(); 		pos.setEndIndex(0); 		java.math.BigInteger num = fraction.getNumerator(); 		java.math.BigInteger den = fraction.getDenominator();
		                                                      		                    		                                                    		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(8): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (15(f=2.0), 16(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (15(f=2.0), )
----------Running generation: 9, population size: 1

***** Generation 9 : 0
**Parent Variant: [Variant id: 17, #gens: 240, #ops: 0, parent:-]

--Child created id: 18
--Creating new operations for variant [Variant id: 18, #gens: 240, #ops: 0, parent:17]
---analyzing modificationPoint position: 54
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 101
---modifPoint 3 not mutation generated in  org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java229
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 229, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 18, #gens: 241, #ops: 1, parent:17] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 18, errors: [FractionFormat.java:230: error: unreachable statement
		if (num == null) {
		^]
Ingredient counter is Zero
---Undoing: gnrtn(9): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (17(f=2.0), 18(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (17(f=2.0), )
----------Running generation: 10, population size: 1

***** Generation 10 : 0
**Parent Variant: [Variant id: 19, #gens: 240, #ops: 0, parent:-]

--Child created id: 20
--Creating new operations for variant [Variant id: 20, #gens: 240, #ops: 0, parent:19]
---analyzing modificationPoint position: 62
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 110, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 20, #gens: 241, #ops: 1, parent:19] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 20, errors: [ProperFractionFormat.java:109: error: variable num is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		pos); 		int num = fraction.getNumerator();
		      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(10): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (19(f=2.0), 20(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (19(f=2.0), )
----------Running generation: 11, population size: 1

***** Generation 11 : 0
**Parent Variant: [Variant id: 21, #gens: 240, #ops: 0, parent:-]

--Child created id: 22
--Creating new operations for variant [Variant id: 22, #gens: 240, #ops: 0, parent:21]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 22, #gens: 241, #ops: 1, parent:21] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 22, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(11): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (21(f=2.0), 22(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (21(f=2.0), )
----------Running generation: 12, population size: 1

***** Generation 12 : 0
**Parent Variant: [Variant id: 23, #gens: 240, #ops: 0, parent:-]

--Child created id: 24
--Creating new operations for variant [Variant id: 24, #gens: 240, #ops: 0, parent:23]
---analyzing modificationPoint position: 138
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 136
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 24, #gens: 241, #ops: 1, parent:23] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 24
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-24/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(12): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (23(f=2.0), 24(f=2.0), )
Selected to next generation: IDs2--> (23(f=2.0), )
----------Running generation: 13, population size: 1

***** Generation 13 : 0
**Parent Variant: [Variant id: 25, #gens: 240, #ops: 0, parent:-]

--Child created id: 26
--Creating new operations for variant [Variant id: 26, #gens: 240, #ops: 0, parent:25]
---analyzing modificationPoint position: 158
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java100
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 100, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 26, #gens: 241, #ops: 1, parent:25] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 26
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-26/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(13): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (25(f=2.0), 26(f=2.0), )
Selected to next generation: IDs2--> (25(f=2.0), )
----------Running generation: 14, population size: 1

***** Generation 14 : 0
**Parent Variant: [Variant id: 27, #gens: 240, #ops: 0, parent:-]

--Child created id: 28
--Creating new operations for variant [Variant id: 28, #gens: 240, #ops: 0, parent:27]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 137
---modifPoint 2 not mutation generated in  return point
---analyzing modificationPoint position: 177
location: BigFraction.java177
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 28, #gens: 239, #ops: 1, parent:27] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 28, errors: [BigFraction.java:182: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(14): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (27(f=2.0), 28(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (27(f=2.0), )
----------Running generation: 15, population size: 1

***** Generation 15 : 0
**Parent Variant: [Variant id: 29, #gens: 240, #ops: 0, parent:-]

--Child created id: 30
--Creating new operations for variant [Variant id: 30, #gens: 240, #ops: 0, parent:29]
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations, maxIterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: maxIterations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java117
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 117, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 30, #gens: 241, #ops: 1, parent:29] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 30, errors: [DirectSearchOptimizer.java:342: error: illegal start of expression
	 * Set start configuration for simplex.
	 ^, DirectSearchOptimizer.java:342: error: ';' expected
	 * Set start configuration for simplex.
	      ^, DirectSearchOptimizer.java:342: error: ';' expected
	 * Set start configuration for simplex.
	                          ^, DirectSearchOptimizer.java:342: error: '(' expected
	 * Set start configuration for simplex.
	                              ^, DirectSearchOptimizer.java:342: error: <identifier> expected
	 * Set start configuration for simplex.
	                                       ^, DirectSearchOptimizer.java:343: error: illegal start of expression
	 * <p>The real initial simplex will be set up by moving the reference
	      ^, DirectSearchOptimizer.java:343: error: not a statement
	 * <p>The real initial simplex will be set up by moving the reference
	 ^, DirectSearchOptimizer.java:343: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	         ^, DirectSearchOptimizer.java:343: error: not a statement
	 * <p>The real initial simplex will be set up by moving the reference
	          ^, DirectSearchOptimizer.java:343: error: ')' expected
	 * <p>The real initial simplex will be set up by moving the reference
	              ^, DirectSearchOptimizer.java:343: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                              ^, DirectSearchOptimizer.java:343: error: variable declaration not allowed here
	 * <p>The real initial simplex will be set up by moving the reference
	                       ^, DirectSearchOptimizer.java:343: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                      ^, DirectSearchOptimizer.java:343: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                             ^, DirectSearchOptimizer.java:343: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                                       ^, DirectSearchOptimizer.java:343: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                                                     ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	               ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                        ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                    ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                               ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                      ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                                  ^, DirectSearchOptimizer.java:344: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                                         ^, DirectSearchOptimizer.java:345: error: illegal start of type
	 * optimization.</p>
	                 ^, DirectSearchOptimizer.java:346: error: illegal start of expression
	 *
	 ^, DirectSearchOptimizer.java:347: error: illegal start of expression
	 * @param referenceSimplex
	 ^, DirectSearchOptimizer.java:347: error: illegal start of expression
	 * @param referenceSimplex
	   ^, DirectSearchOptimizer.java:345: error: not a statement
	 * optimization.</p>
	                   ^, DirectSearchOptimizer.java:348: error: ';' expected
	 * 		reference simplex
	   		         ^, DirectSearchOptimizer.java:349: error: illegal start of expression
	 * @exception IllegalArgumentException
	   ^, DirectSearchOptimizer.java:350: error: illegal start of expression
	 * 		if the reference simplex does not
	   		^, DirectSearchOptimizer.java:350: error: not a statement
	 * 		if the reference simplex does not
	 ^, DirectSearchOptimizer.java:350: error: '(' expected
	 * 		if the reference simplex does not
	   		  ^, DirectSearchOptimizer.java:350: error: ')' expected
	 * 		if the reference simplex does not
	   		      ^, DirectSearchOptimizer.java:350: error: ';' expected
	 * 		if the reference simplex does not
	   		                        ^, DirectSearchOptimizer.java:350: error: variable declaration not allowed here
	 * 		if the reference simplex does not
	   		                 ^, DirectSearchOptimizer.java:350: error: ';' expected
	 * 		if the reference simplex does not
	   		                                 ^, DirectSearchOptimizer.java:351: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		          ^, DirectSearchOptimizer.java:351: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                    ^, DirectSearchOptimizer.java:351: error: not a statement
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                     ^, DirectSearchOptimizer.java:351: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                          ^, DirectSearchOptimizer.java:351: error: not a statement
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                            ^, DirectSearchOptimizer.java:351: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                              ^, DirectSearchOptimizer.java:351: error: '(' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                 ^, DirectSearchOptimizer.java:351: error: ')' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                       ^, DirectSearchOptimizer.java:351: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                            ^, DirectSearchOptimizer.java:351: error: variable declaration not allowed here
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                           ^, DirectSearchOptimizer.java:351: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                                               ^, DirectSearchOptimizer.java:352: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		      ^, DirectSearchOptimizer.java:352: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                        ^, DirectSearchOptimizer.java:352: error: not a statement
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                         ^, DirectSearchOptimizer.java:352: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                           ^, DirectSearchOptimizer.java:352: error: '(' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                              ^, DirectSearchOptimizer.java:352: error: ')' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                  ^, DirectSearchOptimizer.java:352: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                         ^, DirectSearchOptimizer.java:352: error: variable declaration not allowed here
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                      ^, DirectSearchOptimizer.java:352: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                                     ^, DirectSearchOptimizer.java:353: error: illegal start of expression
	 */ 	public void setStartConfiguration(final double[][] referenceSimplex) throws java.lang.IllegalArgumentException { 		// only the relative position of the n final vertices with respect 		// to the first one are stored 		final int n = referenceSimplex.length - 1; 		if (n < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");} 		startConfiguration = new double[n][n]; 		final double[] ref0 = referenceSimplex[0]; 		// vertices loop
	  ^, DirectSearchOptimizer.java:353: error: illegal start of expression
	 */ 	public void setStartConfiguration(final double[][] referenceSimplex) throws java.lang.IllegalArgumentException { 		// only the relative position of the n final vertices with respect 		// to the first one are stored 		final int n = referenceSimplex.length - 1; 		if (n < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");} 		startConfiguration = new double[n][n]; 		final double[] ref0 = referenceSimplex[0]; 		// vertices loop
	    	^, DirectSearchOptimizer.java:376: error: illegal start of type
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:376: error: ';' expected
	 * Increment the iterations counter by 1.
	                ^, DirectSearchOptimizer.java:376: error: ';' expected
	 * Increment the iterations counter by 1.
	                                   ^, DirectSearchOptimizer.java:376: error: <identifier> expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:378: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:379: error: ';' expected
	 * 		if the maximal number
	   		              ^, DirectSearchOptimizer.java:379: error: <identifier> expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:380: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:380: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^, DirectSearchOptimizer.java:426: error: illegal start of expression
	 * Replace the worst point of the simplex by a new point.
	 ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	          ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                    ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                             ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                         ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                              ^, DirectSearchOptimizer.java:426: error: <identifier> expected
	 * Replace the worst point of the simplex by a new point.
	                                                         ^, DirectSearchOptimizer.java:427: error: '(' or '[' expected
	 *
	 ^, DirectSearchOptimizer.java:428: error: illegal start of expression
	 * @param pointValuePair
	 ^, DirectSearchOptimizer.java:428: error: illegal start of expression
	 * @param pointValuePair
	   ^, DirectSearchOptimizer.java:429: error: not a statement
	 * 		point to insert
	 ^, DirectSearchOptimizer.java:429: error: ';' expected
	 * 		point to insert
	   		     ^, DirectSearchOptimizer.java:429: error: ';' expected
	 * 		point to insert
	   		               ^, DirectSearchOptimizer.java:430: error: <identifier> expected
	 * @param comparator
	                    ^, DirectSearchOptimizer.java:431: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		             ^, DirectSearchOptimizer.java:431: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                    ^, DirectSearchOptimizer.java:431: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                 ^, DirectSearchOptimizer.java:431: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                               ^, DirectSearchOptimizer.java:431: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                                       ^, DirectSearchOptimizer.java:432: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	  ^, DirectSearchOptimizer.java:432: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(15): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (29(f=2.0), 30(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (29(f=2.0), )
----------Running generation: 16, population size: 1

***** Generation 16 : 0
**Parent Variant: [Variant id: 31, #gens: 240, #ops: 0, parent:-]

--Child created id: 32
--Creating new operations for variant [Variant id: 32, #gens: 240, #ops: 0, parent:31]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 120
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  // initialize search iterations = 0
---analyzing modificationPoint position: 17
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 3 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 85
---modifPoint 4 not mutation generated in  return numerator
---analyzing modificationPoint position: 0
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 32, #gens: 241, #ops: 1, parent:31] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 32, errors: [FractionFormat.java:234: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return java.text.NumberFormat.getAvailableLocales();
			                            			                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(16): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (31(f=2.0), 32(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (31(f=2.0), )
----------Running generation: 17, population size: 1

***** Generation 17 : 0
**Parent Variant: [Variant id: 33, #gens: 240, #ops: 0, parent:-]

--Child created id: 34
--Creating new operations for variant [Variant id: 34, #gens: 240, #ops: 0, parent:33]
---analyzing modificationPoint position: 102
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [simplex, startPoint, java.lang.Double.NaN]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: startPoint spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java294
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...] ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 294, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...] ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 34, #gens: 241, #ops: 1, parent:33] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 34, errors: [DirectSearchOptimizer.java:371: error: illegal start of expression
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:371: error: ';' expected
	 * Increment the iterations counter by 1.
	            ^, DirectSearchOptimizer.java:371: error: ';' expected
	 * Increment the iterations counter by 1.
	                           ^, DirectSearchOptimizer.java:371: error: ';' expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:373: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:374: error: '(' expected
	 * 		if the maximal number
	   		  ^, DirectSearchOptimizer.java:374: error: ')' expected
	 * 		if the maximal number
	   		      ^, DirectSearchOptimizer.java:374: error: ';' expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:374: error: variable declaration not allowed here
	 * 		if the maximal number
	   		               ^, DirectSearchOptimizer.java:375: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:375: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^, DirectSearchOptimizer.java:376: error: illegal start of expression
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		if ((++iterations) > maxIterations) { 			throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.MaxIterationsExceededException(maxIterations));}} 	/**
	    	^, DirectSearchOptimizer.java:421: error: illegal start of expression
	 * Replace the worst point of the simplex by a new point.
	 ^, DirectSearchOptimizer.java:421: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	          ^, DirectSearchOptimizer.java:421: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                    ^, DirectSearchOptimizer.java:421: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                             ^, DirectSearchOptimizer.java:421: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                         ^, DirectSearchOptimizer.java:421: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                              ^, DirectSearchOptimizer.java:421: error: <identifier> expected
	 * Replace the worst point of the simplex by a new point.
	                                                         ^, DirectSearchOptimizer.java:422: error: '(' or '[' expected
	 *
	 ^, DirectSearchOptimizer.java:423: error: illegal start of expression
	 * @param pointValuePair
	 ^, DirectSearchOptimizer.java:423: error: illegal start of expression
	 * @param pointValuePair
	   ^, DirectSearchOptimizer.java:424: error: not a statement
	 * 		point to insert
	 ^, DirectSearchOptimizer.java:424: error: ';' expected
	 * 		point to insert
	   		     ^, DirectSearchOptimizer.java:424: error: ';' expected
	 * 		point to insert
	   		               ^, DirectSearchOptimizer.java:425: error: <identifier> expected
	 * @param comparator
	                    ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		             ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                    ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                 ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                               ^, DirectSearchOptimizer.java:426: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                                       ^, DirectSearchOptimizer.java:427: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	  ^, DirectSearchOptimizer.java:427: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(17): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...] ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (33(f=2.0), 34(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (33(f=2.0), )
----------Running generation: 18, population size: 1

***** Generation 18 : 0
**Parent Variant: [Variant id: 35, #gens: 240, #ops: 0, parent:-]

--Child created id: 36
--Creating new operations for variant [Variant id: 36, #gens: 240, #ops: 0, parent:35]
---analyzing modificationPoint position: 181
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 36, #gens: 240, #ops: 1, parent:35] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 36, errors: [ProperBigFractionFormat.java:90: error: call to this must be first statement in constructor
	 */ 	@java.lang.Override 	public java.lang.StringBuffer format(final org.apache.commons.math.fraction.BigFraction fraction, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) { 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                    	                                                                                                                                                                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(18): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (35(f=2.0), 36(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (35(f=2.0), )
----------Running generation: 19, population size: 1

***** Generation 19 : 0
**Parent Variant: [Variant id: 37, #gens: 240, #ops: 0, parent:-]

--Child created id: 38
--Creating new operations for variant [Variant id: 38, #gens: 240, #ops: 0, parent:37]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 38, #gens: 241, #ops: 1, parent:37] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 38
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-38/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(19): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (37(f=2.0), 38(f=2.0), )
Selected to next generation: IDs2--> (37(f=2.0), )
----------Running generation: 20, population size: 1

***** Generation 20 : 0
**Parent Variant: [Variant id: 39, #gens: 240, #ops: 0, parent:-]

--Child created id: 40
--Creating new operations for variant [Variant id: 40, #gens: 240, #ops: 0, parent:39]
---analyzing modificationPoint position: 62
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 46
---modifPoint 2 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 40, #gens: 241, #ops: 1, parent:39] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 40, errors: [MultiDirectional.java:71: error: cannot assign a value to final variable khi
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0]; 			this.khi = khi;
			                                                                                  			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(20): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (39(f=2.0), 40(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (39(f=2.0), )
----------Running generation: 21, population size: 1

***** Generation 21 : 0
**Parent Variant: [Variant id: 41, #gens: 240, #ops: 0, parent:-]

--Child created id: 42
--Creating new operations for variant [Variant id: 42, #gens: 240, #ops: 0, parent:41]
---analyzing modificationPoint position: 142
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java163
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 163, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 42, #gens: 241, #ops: 1, parent:41] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 42, errors: [AbstractFormat.java:164: error: non-static variable denominatorFormat cannot be referenced from a static context
		char ret = 0; 		return denominatorFormat;
		              		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(21): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (41(f=2.0), 42(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (41(f=2.0), )
----------Running generation: 22, population size: 1

***** Generation 22 : 0
**Parent Variant: [Variant id: 43, #gens: 240, #ops: 0, parent:-]

--Child created id: 44
--Creating new operations for variant [Variant id: 44, #gens: 240, #ops: 0, parent:43]
---analyzing modificationPoint position: 163
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 44, #gens: 241, #ops: 1, parent:43] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 44
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-44/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(22): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (43(f=2.0), 44(f=2.0), )
Selected to next generation: IDs2--> (43(f=2.0), )
----------Running generation: 23, population size: 1

***** Generation 23 : 0
**Parent Variant: [Variant id: 45, #gens: 240, #ops: 0, parent:-]

--Child created id: 46
--Creating new operations for variant [Variant id: 46, #gens: 240, #ops: 0, parent:45]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 25
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 46, #gens: 240, #ops: 1, parent:45] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 46, errors: [MultiDirectional.java:78: error: cannot find symbol
			final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex; 			if (comparator.compare(reflected, best) < 0) { 				// compute the expanded simplex 				final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex;
			                                                                                            			                       ^
  symbol:   variable reflected
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:80: error: cannot find symbol
				if (comparator.compare(reflected, expanded) <= 0) {
				                       ^
  symbol:   variable reflected
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(23): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (45(f=2.0), 46(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (45(f=2.0), )
----------Running generation: 24, population size: 1

***** Generation 24 : 0
**Parent Variant: [Variant id: 47, #gens: 240, #ops: 0, parent:-]

--Child created id: 48
--Creating new operations for variant [Variant id: 48, #gens: 240, #ops: 0, parent:47]
---analyzing modificationPoint position: 202
Templates availables144
Attempts Base Ingredients  1 total 144
vars from patch []
location: Fraction.java274
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; } ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.Fraction line: 274, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; } ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 48, #gens: 241, #ops: 1, parent:47] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 48, errors: [Fraction.java:279: error: unreachable statement
		this.numerator = num;
		^, Fraction.java:278: error: variable denominator might not have been initialized
		} 		return;
		  		^]
Ingredient counter is Zero
---Undoing: gnrtn(24): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; } ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (47(f=2.0), 48(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (47(f=2.0), )
----------Running generation: 25, population size: 1

***** Generation 25 : 0
**Parent Variant: [Variant id: 49, #gens: 240, #ops: 0, parent:-]

--Child created id: 50
--Creating new operations for variant [Variant id: 50, #gens: 240, #ops: 0, parent:49]
---analyzing modificationPoint position: 32
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [simplex, n]
--> var from patch: simplex spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 50, #gens: 240, #ops: 1, parent:49] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 50
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-50/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(25): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (49(f=2.0), 50(f=4.0), )
Selected to next generation: IDs2--> (49(f=2.0), )
----------Running generation: 26, population size: 1

***** Generation 26 : 0
**Parent Variant: [Variant id: 51, #gens: 240, #ops: 0, parent:-]

--Child created id: 52
--Creating new operations for variant [Variant id: 52, #gens: 240, #ops: 0, parent:51]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 52, #gens: 241, #ops: 1, parent:51] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 52, errors: [MultiDirectional.java:117: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(26): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (51(f=2.0), 52(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (51(f=2.0), )
----------Running generation: 27, population size: 1

***** Generation 27 : 0
**Parent Variant: [Variant id: 53, #gens: 240, #ops: 0, parent:-]

--Child created id: 54
--Creating new operations for variant [Variant id: 54, #gens: 240, #ops: 0, parent:53]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 75, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 54, #gens: 240, #ops: 1, parent:53] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 54, errors: [ProperFractionFormat.java:75: error: call to this must be first statement in constructor
		super(numeratorFormat, denominatorFormat); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                                           		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(27): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (53(f=2.0), 54(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (53(f=2.0), )
----------Running generation: 28, population size: 1

***** Generation 28 : 0
**Parent Variant: [Variant id: 55, #gens: 240, #ops: 0, parent:-]

--Child created id: 56
--Creating new operations for variant [Variant id: 56, #gens: 240, #ops: 0, parent:55]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 56, #gens: 241, #ops: 1, parent:55] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 56, errors: [ProperFractionFormat.java:232: error: call to this must be first statement in constructor
		this.wholeFormat = format; 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                           		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(28): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (55(f=2.0), 56(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (55(f=2.0), )
----------Running generation: 29, population size: 1

***** Generation 29 : 0
**Parent Variant: [Variant id: 57, #gens: 240, #ops: 0, parent:-]

--Child created id: 58
--Creating new operations for variant [Variant id: 58, #gens: 240, #ops: 0, parent:57]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 58, #gens: 241, #ops: 1, parent:57] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 58, errors: [AbstractFormat.java:94: error: call to this must be first statement in constructor
		nf.setParseIntegerOnly(true); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(29): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (57(f=2.0), 58(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (57(f=2.0), )
----------Running generation: 30, population size: 1

***** Generation 30 : 0
**Parent Variant: [Variant id: 59, #gens: 240, #ops: 0, parent:-]

--Child created id: 60
--Creating new operations for variant [Variant id: 60, #gens: 240, #ops: 0, parent:59]
---analyzing modificationPoint position: 233
Templates availables37
Attempts Base Ingredients  1 total 37
---modifPoint 0 not mutation generated in  java.util.ResourceBundle bundle =  java.util.ResourceBundle.getBundle("org.apache.commons.math.Messa[...]
---analyzing modificationPoint position: 80
---modifPoint 1 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 100
Templates availables11
Attempts Base Ingredients  1 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java289
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 289, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 60, #gens: 240, #ops: 1, parent:59] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 60
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-60/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(30): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (59(f=2.0), 60(f=2.0), )
Selected to next generation: IDs2--> (59(f=2.0), )
----------Running generation: 31, population size: 1

***** Generation 31 : 0
**Parent Variant: [Variant id: 61, #gens: 240, #ops: 0, parent:-]

--Child created id: 62
--Creating new operations for variant [Variant id: 62, #gens: 240, #ops: 0, parent:61]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  this.f = f
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 186
Templates availables1
Attempts Base Ingredients  1 total 1
vars from patch [this.maxIterations]
--> var from patch: this.maxIterations spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 








































int maxIterations
SameName: final 








































int maxIterations
Transforming shadowed variable in maxIterations = maxIterations
location: MaxIterationsExceededException.java44
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.MaxIterationsExceededException line: 44, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 62, #gens: 240, #ops: 1, parent:61] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 62, errors: [MaxIterationsExceededException.java:45: error: final parameter maxIterations may not be assigned
		maxIterations = maxIterations;
		^, MaxIterationsExceededException.java:46: error: variable maxIterations might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(31): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (61(f=2.0), 62(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (61(f=2.0), )
----------Running generation: 32, population size: 1

***** Generation 32 : 0
**Parent Variant: [Variant id: 63, #gens: 240, #ops: 0, parent:-]

--Child created id: 64
--Creating new operations for variant [Variant id: 64, #gens: 240, #ops: 0, parent:63]
---analyzing modificationPoint position: 20
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 124
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java361
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `break` (spoon.support.reflect.code.CtBreakImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 361, pointed element: CtBreakImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `break` (spoon.support.reflect.code.CtBreakImpl) 

--Summary Creation: for variant [Variant id: 64, #gens: 241, #ops: 1, parent:63] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 64, errors: [DirectSearchOptimizer.java:361: error: break outside switch or loop
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length; 		break;
	    	                                                                                                 		                                 		^]
Ingredient counter is Zero
---Undoing: gnrtn(32): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `break` (spoon.support.reflect.code.CtBreakImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (63(f=2.0), 64(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (63(f=2.0), )
----------Running generation: 33, population size: 1

***** Generation 33 : 0
**Parent Variant: [Variant id: 65, #gens: 240, #ops: 0, parent:-]

--Child created id: 66
--Creating new operations for variant [Variant id: 66, #gens: 240, #ops: 0, parent:65]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 11
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 62
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 128
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch []
location: DirectSearchOptimizer.java373
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] confI = startConfiguration[i] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 373, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] confI = startConfiguration[i] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 66, #gens: 240, #ops: 1, parent:65] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 66, errors: [DirectSearchOptimizer.java:377: error: cannot find symbol
				vertexI[k] = startPoint[k] + confI[k];
				                             ^
  symbol:   variable confI
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer]
Ingredient counter is Zero
---Undoing: gnrtn(33): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] confI = startConfiguration[i] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (65(f=2.0), 66(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (65(f=2.0), )
----------Running generation: 34, population size: 1

***** Generation 34 : 0
**Parent Variant: [Variant id: 67, #gens: 240, #ops: 0, parent:-]

--Child created id: 68
--Creating new operations for variant [Variant id: 68, #gens: 240, #ops: 0, parent:67]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 4 not mutation generated in  // evaluate it evaluateSimplex(comparator)
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 5 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [this.numeratorFormat]
--> var from patch: this.numeratorFormat spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 

































































java.text.NumberFormat numeratorFormat
SameName: final 

































































java.text.NumberFormat numeratorFormat
Transforming shadowed variable in numeratorFormat = numeratorFormat
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 68, #gens: 241, #ops: 1, parent:67] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 68, errors: [AbstractFormat.java:71: error: final parameter numeratorFormat may not be assigned
		this.denominatorFormat = denominatorFormat; 		numeratorFormat = numeratorFormat;
		                                            		^]
Ingredient counter is Zero
---Undoing: gnrtn(34): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (67(f=2.0), 68(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (67(f=2.0), )
----------Running generation: 35, population size: 1

***** Generation 35 : 0
**Parent Variant: [Variant id: 69, #gens: 240, #ops: 0, parent:-]

--Child created id: 70
--Creating new operations for variant [Variant id: 70, #gens: 240, #ops: 0, parent:69]
---analyzing modificationPoint position: 61
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 20
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java46
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 46, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 70, #gens: 240, #ops: 1, parent:69] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 70, errors: [MultiDirectional.java:56: error: variable khi might not have been initialized
		this.khi = khi; 		this.gamma = 0.5;} 	/**
		           ^]
Ingredient counter is Zero
---Undoing: gnrtn(35): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (69(f=2.0), 70(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (69(f=2.0), )
----------Running generation: 36, population size: 1

***** Generation 36 : 0
**Parent Variant: [Variant id: 71, #gens: 240, #ops: 0, parent:-]

--Child created id: 72
--Creating new operations for variant [Variant id: 72, #gens: 240, #ops: 0, parent:71]
---analyzing modificationPoint position: 125
location: DirectSearchOptimizer.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 72, #gens: 239, #ops: 1, parent:71] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 72
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-72/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(36): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (71(f=2.0), 72(f=5.0), )
Selected to next generation: IDs2--> (71(f=2.0), )
----------Running generation: 37, population size: 1

***** Generation 37 : 0
**Parent Variant: [Variant id: 73, #gens: 240, #ops: 0, parent:-]

--Child created id: 74
--Creating new operations for variant [Variant id: 74, #gens: 240, #ops: 0, parent:73]
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 74, #gens: 241, #ops: 1, parent:73] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 74, errors: [ProperFractionFormat.java:154: error: unreachable statement
			return null; 			return null;
			             			^]
Ingredient counter is Zero
---Undoing: gnrtn(37): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (73(f=2.0), 74(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (73(f=2.0), )
----------Running generation: 38, population size: 1

***** Generation 38 : 0
**Parent Variant: [Variant id: 75, #gens: 240, #ops: 0, parent:-]

--Child created id: 76
--Creating new operations for variant [Variant id: 76, #gens: 240, #ops: 0, parent:75]
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  // evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...]
---analyzing modificationPoint position: 103
location: DirectSearchOptimizer.java306
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 76, #gens: 239, #ops: 1, parent:75] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 76
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-76/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(38): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (75(f=2.0), 76(f=4.0), )
Selected to next generation: IDs2--> (75(f=2.0), )
----------Running generation: 39, population size: 1

***** Generation 39 : 0
**Parent Variant: [Variant id: 77, #gens: 240, #ops: 0, parent:-]

--Child created id: 78
--Creating new operations for variant [Variant id: 78, #gens: 240, #ops: 0, parent:77]
---analyzing modificationPoint position: 31
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  // create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]
---analyzing modificationPoint position: 61
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 78, #gens: 240, #ops: 1, parent:77] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 78, errors: [ProperBigFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		return wholeFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(39): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (77(f=2.0), 78(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (77(f=2.0), )
----------Running generation: 40, population size: 1

***** Generation 40 : 0
**Parent Variant: [Variant id: 79, #gens: 240, #ops: 0, parent:-]

--Child created id: 80
--Creating new operations for variant [Variant id: 80, #gens: 240, #ops: 0, parent:79]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 42
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 80, #gens: 239, #ops: 1, parent:79] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 80
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-80/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(40): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (79(f=2.0), 80(f=2.0), )
Selected to next generation: IDs2--> (79(f=2.0), )
----------Running generation: 41, population size: 1

***** Generation 41 : 0
**Parent Variant: [Variant id: 81, #gens: 240, #ops: 0, parent:-]

--Child created id: 82
--Creating new operations for variant [Variant id: 82, #gens: 240, #ops: 0, parent:81]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 82, #gens: 241, #ops: 1, parent:81] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 82, errors: [MultiDirectional.java:120: error: cannot assign a value to final variable khi
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		this.khi = 2.0;
		                                                                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(41): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (81(f=2.0), 82(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (81(f=2.0), )
----------Running generation: 42, population size: 1

***** Generation 42 : 0
**Parent Variant: [Variant id: 83, #gens: 240, #ops: 0, parent:-]

--Child created id: 84
--Creating new operations for variant [Variant id: 84, #gens: 240, #ops: 0, parent:83]
---analyzing modificationPoint position: 94
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1)
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 84, #gens: 241, #ops: 1, parent:83] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 84, errors: [MultiDirectional.java:57: error: variable gamma might not have been initialized
		this.gamma = gamma; 		this.gamma = 0.5;} 	/**
		             ^, MultiDirectional.java:57: error: variable gamma might already have been assigned
		this.gamma = gamma; 		this.gamma = 0.5;} 	/**
		                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(42): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (83(f=2.0), 84(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (83(f=2.0), )
----------Running generation: 43, population size: 1

***** Generation 43 : 0
**Parent Variant: [Variant id: 85, #gens: 240, #ops: 0, parent:-]

--Child created id: 86
--Creating new operations for variant [Variant id: 86, #gens: 240, #ops: 0, parent:85]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 86, #gens: 241, #ops: 1, parent:85] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 86
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-86/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(43): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (85(f=2.0), 86(f=2.0), )
Selected to next generation: IDs2--> (85(f=2.0), )
----------Running generation: 44, population size: 1

***** Generation 44 : 0
**Parent Variant: [Variant id: 87, #gens: 240, #ops: 0, parent:-]

--Child created id: 88
--Creating new operations for variant [Variant id: 88, #gens: 240, #ops: 0, parent:87]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 165
---modifPoint 2 not mutation generated in  return numerator
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 88, #gens: 241, #ops: 1, parent:87] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 88
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-88/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(44): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (87(f=2.0), 88(f=2.0), )
Selected to next generation: IDs2--> (87(f=2.0), )
----------Running generation: 45, population size: 1

***** Generation 45 : 0
**Parent Variant: [Variant id: 89, #gens: 240, #ops: 0, parent:-]

--Child created id: 90
--Creating new operations for variant [Variant id: 90, #gens: 240, #ops: 0, parent:89]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 90, #gens: 239, #ops: 1, parent:89] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 90
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-90/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(45): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (89(f=2.0), 90(f=2.0), )
Selected to next generation: IDs2--> (89(f=2.0), )
----------Running generation: 46, population size: 1

***** Generation 46 : 0
**Parent Variant: [Variant id: 91, #gens: 240, #ops: 0, parent:-]

--Child created id: 92
--Creating new operations for variant [Variant id: 92, #gens: 240, #ops: 0, parent:91]
---analyzing modificationPoint position: 87
Templates availables37
Attempts Base Ingredients  1 total 37
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 92, #gens: 241, #ops: 1, parent:91] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 92
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-92/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(46): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (91(f=2.0), 92(f=2.0), )
Selected to next generation: IDs2--> (91(f=2.0), )
----------Running generation: 47, population size: 1

***** Generation 47 : 0
**Parent Variant: [Variant id: 93, #gens: 240, #ops: 0, parent:-]

--Child created id: 94
--Creating new operations for variant [Variant id: 94, #gens: 240, #ops: 0, parent:93]
---analyzing modificationPoint position: 79
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 49
---modifPoint 1 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 109
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 94, #gens: 241, #ops: 1, parent:93] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 94
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-94/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(47): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (93(f=2.0), 94(f=2.0), )
Selected to next generation: IDs2--> (93(f=2.0), )
----------Running generation: 48, population size: 1

***** Generation 48 : 0
**Parent Variant: [Variant id: 95, #gens: 240, #ops: 0, parent:-]

--Child created id: 96
--Creating new operations for variant [Variant id: 96, #gens: 240, #ops: 0, parent:95]
---analyzing modificationPoint position: 39
location: MultiDirectional.java131
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 96, #gens: 239, #ops: 1, parent:95] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 96
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-96/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(48): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (95(f=2.0), 96(f=4.0), )
Selected to next generation: IDs2--> (95(f=2.0), )
----------Running generation: 49, population size: 1

***** Generation 49 : 0
**Parent Variant: [Variant id: 97, #gens: 240, #ops: 0, parent:-]

--Child created id: 98
--Creating new operations for variant [Variant id: 98, #gens: 240, #ops: 0, parent:97]
---analyzing modificationPoint position: 31
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 98, #gens: 240, #ops: 1, parent:97] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 98, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable gamma
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		this.gamma = gamma;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(49): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (97(f=2.0), 98(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (97(f=2.0), )
----------Running generation: 50, population size: 1

***** Generation 50 : 0
**Parent Variant: [Variant id: 99, #gens: 240, #ops: 0, parent:-]

--Child created id: 100
--Creating new operations for variant [Variant id: 100, #gens: 240, #ops: 0, parent:99]
---analyzing modificationPoint position: 87
Templates availables37
Attempts Base Ingredients  1 total 37
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch []
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 100, #gens: 240, #ops: 1, parent:99] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 100, errors: [FractionFormat.java:230: error: cannot find symbol
		if (num == null) {
		    ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(50): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (99(f=2.0), 100(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (99(f=2.0), )
----------Running generation: 51, population size: 1

***** Generation 51 : 0
**Parent Variant: [Variant id: 101, #gens: 240, #ops: 0, parent:-]

--Child created id: 102
--Creating new operations for variant [Variant id: 102, #gens: 240, #ops: 0, parent:101]
---analyzing modificationPoint position: 57
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 102, #gens: 240, #ops: 1, parent:101] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 102
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-102/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(51): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (101(f=2.0), 102(f=2.0), )
Selected to next generation: IDs2--> (101(f=2.0), )
----------Running generation: 52, population size: 1

***** Generation 52 : 0
**Parent Variant: [Variant id: 103, #gens: 240, #ops: 0, parent:-]

--Child created id: 104
--Creating new operations for variant [Variant id: 104, #gens: 240, #ops: 0, parent:103]
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java122
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 104, #gens: 241, #ops: 1, parent:103] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 104, errors: [MultiDirectional.java:122: error: incompatible types: missing return value
		for (int i = 1; i <= n; ++i) { 			return;
		                               			^]
Ingredient counter is Zero
---Undoing: gnrtn(52): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (103(f=2.0), 104(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (103(f=2.0), )
----------Running generation: 53, population size: 1

***** Generation 53 : 0
**Parent Variant: [Variant id: 105, #gens: 240, #ops: 0, parent:-]

--Child created id: 106
--Creating new operations for variant [Variant id: 106, #gens: 240, #ops: 0, parent:105]
---analyzing modificationPoint position: 81
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 106, #gens: 239, #ops: 1, parent:105] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 106
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-106/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(53): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (105(f=2.0), 106(f=2.0), )
Selected to next generation: IDs2--> (105(f=2.0), )
----------Running generation: 54, population size: 1

***** Generation 54 : 0
**Parent Variant: [Variant id: 107, #gens: 240, #ops: 0, parent:-]

--Child created id: 108
--Creating new operations for variant [Variant id: 108, #gens: 240, #ops: 0, parent:107]
---analyzing modificationPoint position: 142
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 122
location: DirectSearchOptimizer.java288
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 108, #gens: 239, #ops: 1, parent:107] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 108
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-108/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(54): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (107(f=2.0), 108(f=5.0), )
Selected to next generation: IDs2--> (107(f=2.0), )
----------Running generation: 55, population size: 1

***** Generation 55 : 0
**Parent Variant: [Variant id: 109, #gens: 240, #ops: 0, parent:-]

--Child created id: 110
--Creating new operations for variant [Variant id: 110, #gens: 240, #ops: 0, parent:109]
---analyzing modificationPoint position: 72
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 110, #gens: 239, #ops: 1, parent:109] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 110
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-110/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(55): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (109(f=2.0), 110(f=2.0), )
Selected to next generation: IDs2--> (109(f=2.0), )
----------Running generation: 56, population size: 1

***** Generation 56 : 0
**Parent Variant: [Variant id: 111, #gens: 240, #ops: 0, parent:-]

--Child created id: 112
--Creating new operations for variant [Variant id: 112, #gens: 240, #ops: 0, parent:111]
---analyzing modificationPoint position: 54
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 0 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  num = num % den
---analyzing modificationPoint position: 86
---modifPoint 2 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 48
---modifPoint 3 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 4 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 112, #gens: 241, #ops: 1, parent:111] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 112, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(56): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (111(f=2.0), 112(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (111(f=2.0), )
----------Running generation: 57, population size: 1

***** Generation 57 : 0
**Parent Variant: [Variant id: 113, #gens: 240, #ops: 0, parent:-]

--Child created id: 114
--Creating new operations for variant [Variant id: 114, #gens: 240, #ops: 0, parent:113]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 108
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...]
---analyzing modificationPoint position: 53
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 114, #gens: 239, #ops: 1, parent:113] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 114
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-114/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(57): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (113(f=2.0), 114(f=2.0), )
Selected to next generation: IDs2--> (113(f=2.0), )
----------Running generation: 58, population size: 1

***** Generation 58 : 0
**Parent Variant: [Variant id: 115, #gens: 240, #ops: 0, parent:-]

--Child created id: 116
--Creating new operations for variant [Variant id: 116, #gens: 240, #ops: 0, parent:115]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [num, pos, initialIndex]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 116, #gens: 241, #ops: 1, parent:115] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 116
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-116/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(58): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (115(f=2.0), 116(f=2.0), )
Selected to next generation: IDs2--> (115(f=2.0), )
----------Running generation: 59, population size: 1

***** Generation 59 : 0
**Parent Variant: [Variant id: 117, #gens: 240, #ops: 0, parent:-]

--Child created id: 118
--Creating new operations for variant [Variant id: 118, #gens: 240, #ops: 0, parent:117]
---analyzing modificationPoint position: 211
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [previous]
--> var from patch: previous spoon.support.reflect.code.CtVariableReadImpl
location: SimpleScalarValueChecker.java77
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double p = previous.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 77, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double p = previous.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 118, #gens: 241, #ops: 1, parent:117] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 118, errors: [SimpleScalarValueChecker.java:78: error: variable p is already defined in method converged(int,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
		final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)); 		final double p = previous.getValue();
		                                                                                      		             ^]
Ingredient counter is Zero
---Undoing: gnrtn(59): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double p = previous.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (117(f=2.0), 118(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (117(f=2.0), )
----------Running generation: 60, population size: 1

***** Generation 60 : 0
**Parent Variant: [Variant id: 119, #gens: 240, #ops: 0, parent:-]

--Child created id: 120
--Creating new operations for variant [Variant id: 120, #gens: 240, #ops: 0, parent:119]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 28
Templates availables3
Attempts Base Ingredients  1 total 3
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 3 not mutation generated in  if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]
---analyzing modificationPoint position: 33
Templates availables2
Attempts Base Ingredients  1 total 2
---modifPoint 4 not mutation generated in  for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]
---analyzing modificationPoint position: 62
---modifPoint 5 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 7
---modifPoint 6 not mutation generated in  return nf
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 120, #gens: 241, #ops: 1, parent:119] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 120, errors: [MultiDirectional.java:129: error: cannot assign a value to final variable khi
		} 		this.khi = khi;
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(60): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (119(f=2.0), 120(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (119(f=2.0), )
----------Running generation: 61, population size: 1

***** Generation 61 : 0
**Parent Variant: [Variant id: 121, #gens: 240, #ops: 0, parent:-]

--Child created id: 122
--Creating new operations for variant [Variant id: 122, #gens: 240, #ops: 0, parent:121]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 165
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 97
---modifPoint 2 not mutation generated in  final double v1 = o1.getValue()
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 18
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 122, #gens: 240, #ops: 1, parent:121] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 122
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-122/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(61): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (121(f=2.0), 122(f=2.0), )
Selected to next generation: IDs2--> (121(f=2.0), )
----------Running generation: 62, population size: 1

***** Generation 62 : 0
**Parent Variant: [Variant id: 123, #gens: 240, #ops: 0, parent:-]

--Child created id: 124
--Creating new operations for variant [Variant id: 124, #gens: 240, #ops: 0, parent:123]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 70
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 10
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 163
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 124, #gens: 239, #ops: 1, parent:123] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 124
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-124/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(62): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (123(f=2.0), 124(f=2.0), )
Selected to next generation: IDs2--> (123(f=2.0), )
----------Running generation: 63, population size: 1

***** Generation 63 : 0
**Parent Variant: [Variant id: 125, #gens: 240, #ops: 0, parent:-]

--Child created id: 126
--Creating new operations for variant [Variant id: 126, #gens: 240, #ops: 0, parent:125]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 126, #gens: 239, #ops: 1, parent:125] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 126
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-126/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(63): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (125(f=2.0), 126(f=2.0), )
Selected to next generation: IDs2--> (125(f=2.0), )
----------Running generation: 64, population size: 1

***** Generation 64 : 0
**Parent Variant: [Variant id: 127, #gens: 240, #ops: 0, parent:-]

--Child created id: 128
--Creating new operations for variant [Variant id: 128, #gens: 240, #ops: 0, parent:127]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [whole]
--> var from patch: whole spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 128, #gens: 240, #ops: 1, parent:127] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 128, errors: [ProperBigFractionFormat.java:237: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:240: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:243: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:244: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:245: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:245: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:246: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:246: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:247: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:247: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(64): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (127(f=2.0), 128(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (127(f=2.0), )
----------Running generation: 65, population size: 1

***** Generation 65 : 0
**Parent Variant: [Variant id: 129, #gens: 240, #ops: 0, parent:-]

--Child created id: 130
--Creating new operations for variant [Variant id: 130, #gens: 240, #ops: 0, parent:129]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtFieldReadImpl
SameName: final 

































































java.text.NumberFormat numeratorFormat
SameName: final 

































































java.text.NumberFormat numeratorFormat
Transforming shadowed variable in return numeratorFormat
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 130, #gens: 241, #ops: 1, parent:129] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 130, errors: [AbstractFormat.java:111: error: incompatible types: unexpected return value
		return numeratorFormat; 		this.denominatorFormat = denominatorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(65): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (129(f=2.0), 130(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (129(f=2.0), )
----------Running generation: 66, population size: 1

***** Generation 66 : 0
**Parent Variant: [Variant id: 131, #gens: 240, #ops: 0, parent:-]

--Child created id: 132
--Creating new operations for variant [Variant id: 132, #gens: 240, #ops: 0, parent:131]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 132, #gens: 240, #ops: 1, parent:131] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 132, errors: [ProperBigFractionFormat.java:107: error: call to this must be first statement in constructor
		getNumeratorFormat().format(num, toAppendTo, pos); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(66): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (131(f=2.0), 132(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (131(f=2.0), )
----------Running generation: 67, population size: 1

***** Generation 67 : 0
**Parent Variant: [Variant id: 133, #gens: 240, #ops: 0, parent:-]

--Child created id: 134
--Creating new operations for variant [Variant id: 134, #gens: 240, #ops: 0, parent:133]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 144
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 134, #gens: 241, #ops: 1, parent:133] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 134, errors: [AbstractFormat.java:169: error: non-static variable denominatorFormat cannot be referenced from a static context
				c = source.charAt(index++); 				return denominatorFormat;
				                            				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(67): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (133(f=2.0), 134(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (133(f=2.0), )
----------Running generation: 68, population size: 1

***** Generation 68 : 0
**Parent Variant: [Variant id: 135, #gens: 240, #ops: 0, parent:-]

--Child created id: 136
--Creating new operations for variant [Variant id: 136, #gens: 240, #ops: 0, parent:135]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 136, #gens: 239, #ops: 1, parent:135] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 136
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-136/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(68): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (135(f=2.0), 136(f=2.0), )
Selected to next generation: IDs2--> (135(f=2.0), )
----------Running generation: 69, population size: 1

***** Generation 69 : 0
**Parent Variant: [Variant id: 137, #gens: 240, #ops: 0, parent:-]

--Child created id: 138
--Creating new operations for variant [Variant id: 138, #gens: 240, #ops: 0, parent:137]
---analyzing modificationPoint position: 57
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 77
---modifPoint 1 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 171
---modifPoint 2 not mutation generated in  // accept the contracted simplex  // check convergence return
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 138, #gens: 241, #ops: 1, parent:137] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 138, errors: [AbstractFormat.java:92: error: unreachable statement
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault()); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		                                                                                                              		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(69): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (137(f=2.0), 138(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (137(f=2.0), )
----------Running generation: 70, population size: 1

***** Generation 70 : 0
**Parent Variant: [Variant id: 139, #gens: 240, #ops: 0, parent:-]

--Child created id: 140
--Creating new operations for variant [Variant id: 140, #gens: 240, #ops: 0, parent:139]
---analyzing modificationPoint position: 94
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1)
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 140, #gens: 240, #ops: 1, parent:139] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 140
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-140/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(70): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (139(f=2.0), 140(f=2.0), )
Selected to next generation: IDs2--> (139(f=2.0), )
----------Running generation: 71, population size: 1

***** Generation 71 : 0
**Parent Variant: [Variant id: 141, #gens: 240, #ops: 0, parent:-]

--Child created id: 142
--Creating new operations for variant [Variant id: 142, #gens: 240, #ops: 0, parent:141]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 97
---modifPoint 1 not mutation generated in  final double v1 = o1.getValue()
---analyzing modificationPoint position: 11
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 79
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java205
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 205, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 142, #gens: 241, #ops: 1, parent:141] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 142, errors: [FractionFormat.java:205: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition); 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		                                                                                       		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(71): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (141(f=2.0), 142(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (141(f=2.0), )
----------Running generation: 72, population size: 1

***** Generation 72 : 0
**Parent Variant: [Variant id: 143, #gens: 240, #ops: 0, parent:-]

--Child created id: 144
--Creating new operations for variant [Variant id: 144, #gens: 240, #ops: 0, parent:143]
---analyzing modificationPoint position: 57
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 144, #gens: 239, #ops: 1, parent:143] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 144
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-144/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(72): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (143(f=2.0), 144(f=2.0), )
Selected to next generation: IDs2--> (143(f=2.0), )
----------Running generation: 73, population size: 1

***** Generation 73 : 0
**Parent Variant: [Variant id: 145, #gens: 240, #ops: 0, parent:-]

--Child created id: 146
--Creating new operations for variant [Variant id: 146, #gens: 240, #ops: 0, parent:145]
---analyzing modificationPoint position: 56
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 146, #gens: 239, #ops: 1, parent:145] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 146
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-146/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(73): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (145(f=2.0), 146(f=2.0), )
Selected to next generation: IDs2--> (145(f=2.0), )
----------Running generation: 74, population size: 1

***** Generation 74 : 0
**Parent Variant: [Variant id: 147, #gens: 240, #ops: 0, parent:-]

--Child created id: 148
--Creating new operations for variant [Variant id: 148, #gens: 240, #ops: 0, parent:147]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 85
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 156
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 2 not mutation generated in  this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 148, #gens: 241, #ops: 1, parent:147] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 148
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-148/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(74): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (147(f=2.0), 148(f=2.0), )
Selected to next generation: IDs2--> (147(f=2.0), )
----------Running generation: 75, population size: 1

***** Generation 75 : 0
**Parent Variant: [Variant id: 149, #gens: 240, #ops: 0, parent:-]

--Child created id: 150
--Creating new operations for variant [Variant id: 150, #gens: 240, #ops: 0, parent:149]
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 109
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxEvaluations]
--> var from patch: maxEvaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 150, #gens: 241, #ops: 1, parent:149] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 150, errors: [DirectSearchOptimizer.java:399: error: incompatible types: unexpected return value
		} 		return maxEvaluations;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(75): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (149(f=2.0), 150(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (149(f=2.0), )
----------Running generation: 76, population size: 1

***** Generation 76 : 0
**Parent Variant: [Variant id: 151, #gens: 240, #ops: 0, parent:-]

--Child created id: 152
--Creating new operations for variant [Variant id: 152, #gens: 240, #ops: 0, parent:151]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 152, #gens: 241, #ops: 1, parent:151] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 152, errors: [BigFractionFormat.java:170: error: unreachable statement
			ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos);
			^]
Ingredient counter is Zero
---Undoing: gnrtn(76): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (151(f=2.0), 152(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (151(f=2.0), )
----------Running generation: 77, population size: 1

***** Generation 77 : 0
**Parent Variant: [Variant id: 153, #gens: 240, #ops: 0, parent:-]

--Child created id: 154
--Creating new operations for variant [Variant id: 154, #gens: 240, #ops: 0, parent:153]
---analyzing modificationPoint position: 66
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 221
Templates availables71
Attempts Base Ingredients  1 total 71
---modifPoint 1 not mutation generated in  // B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; }
---analyzing modificationPoint position: 10
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 154, #gens: 239, #ops: 1, parent:153] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 154
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-154/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(77): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (153(f=2.0), 154(f=2.0), )
Selected to next generation: IDs2--> (153(f=2.0), )
----------Running generation: 78, population size: 1

***** Generation 78 : 0
**Parent Variant: [Variant id: 155, #gens: 240, #ops: 0, parent:-]

--Child created id: 156
--Creating new operations for variant [Variant id: 156, #gens: 240, #ops: 0, parent:155]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 21
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 40
---modifPoint 2 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [ret, ((java.math.BigInteger) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.math.BigInteger) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 156, #gens: 240, #ops: 1, parent:155] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 156
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-156/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(78): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (155(f=2.0), 156(f=2.0), )
Selected to next generation: IDs2--> (155(f=2.0), )
----------Running generation: 79, population size: 1

***** Generation 79 : 0
**Parent Variant: [Variant id: 157, #gens: 240, #ops: 0, parent:-]

--Child created id: 158
--Creating new operations for variant [Variant id: 158, #gens: 240, #ops: 0, parent:157]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 101
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [simplex, startPoint, java.lang.Double.NaN]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: startPoint spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java291
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...] ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 291, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...] ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 158, #gens: 241, #ops: 1, parent:157] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 158, errors: [DirectSearchOptimizer.java:372: error: illegal start of expression
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:372: error: ';' expected
	 * Increment the iterations counter by 1.
	            ^, DirectSearchOptimizer.java:372: error: ';' expected
	 * Increment the iterations counter by 1.
	                           ^, DirectSearchOptimizer.java:372: error: ';' expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:374: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:375: error: '(' expected
	 * 		if the maximal number
	   		  ^, DirectSearchOptimizer.java:375: error: ')' expected
	 * 		if the maximal number
	   		      ^, DirectSearchOptimizer.java:375: error: ';' expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:375: error: variable declaration not allowed here
	 * 		if the maximal number
	   		               ^, DirectSearchOptimizer.java:376: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:376: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^, DirectSearchOptimizer.java:377: error: illegal start of expression
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		if ((++iterations) > maxIterations) { 			throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.MaxIterationsExceededException(maxIterations));}} 	/**
	    	^, DirectSearchOptimizer.java:422: error: illegal start of expression
	 * Replace the worst point of the simplex by a new point.
	 ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	          ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                    ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                             ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                         ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                              ^, DirectSearchOptimizer.java:422: error: <identifier> expected
	 * Replace the worst point of the simplex by a new point.
	                                                         ^, DirectSearchOptimizer.java:423: error: '(' or '[' expected
	 *
	 ^, DirectSearchOptimizer.java:424: error: illegal start of expression
	 * @param pointValuePair
	 ^, DirectSearchOptimizer.java:424: error: illegal start of expression
	 * @param pointValuePair
	   ^, DirectSearchOptimizer.java:425: error: not a statement
	 * 		point to insert
	 ^, DirectSearchOptimizer.java:425: error: ';' expected
	 * 		point to insert
	   		     ^, DirectSearchOptimizer.java:425: error: ';' expected
	 * 		point to insert
	   		               ^, DirectSearchOptimizer.java:426: error: <identifier> expected
	 * @param comparator
	                    ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		             ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                    ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                 ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                               ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                                       ^, DirectSearchOptimizer.java:428: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	  ^, DirectSearchOptimizer.java:428: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(79): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...] ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (157(f=2.0), 158(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (157(f=2.0), )
----------Running generation: 80, population size: 1

***** Generation 80 : 0
**Parent Variant: [Variant id: 159, #gens: 240, #ops: 0, parent:-]

--Child created id: 160
--Creating new operations for variant [Variant id: 160, #gens: 240, #ops: 0, parent:159]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 160, #gens: 241, #ops: 1, parent:159] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 160, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable gamma
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		this.gamma = gamma;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(80): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (159(f=2.0), 160(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (159(f=2.0), )
----------Running generation: 81, population size: 1

***** Generation 81 : 0
**Parent Variant: [Variant id: 161, #gens: 240, #ops: 0, parent:-]

--Child created id: 162
--Creating new operations for variant [Variant id: 162, #gens: 240, #ops: 0, parent:161]
---analyzing modificationPoint position: 194
location: DirectSearchOptimizer.java297
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `converged &= checker.converged(iterations, previous[i], simplex[i]) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 162, #gens: 239, #ops: 1, parent:161] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 162
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-162/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(81): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `converged &= checker.converged(iterations, previous[i], simplex[i]) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (161(f=2.0), 162(f=4.0), )
Selected to next generation: IDs2--> (161(f=2.0), )
----------Running generation: 82, population size: 1

***** Generation 82 : 0
**Parent Variant: [Variant id: 163, #gens: 240, #ops: 0, parent:-]

--Child created id: 164
--Creating new operations for variant [Variant id: 164, #gens: 240, #ops: 0, parent:163]
---analyzing modificationPoint position: 52
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 28
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [o2]
--> var from patch: o2 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java279
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 279, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 164, #gens: 241, #ops: 1, parent:163] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 164, errors: [DirectSearchOptimizer.java:280: error: variable v2 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v2 = o2.getValue(); 				final double v2 = o2.getValue();
				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(82): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (163(f=2.0), 164(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (163(f=2.0), )
----------Running generation: 83, population size: 1

***** Generation 83 : 0
**Parent Variant: [Variant id: 165, #gens: 240, #ops: 0, parent:-]

--Child created id: 166
--Creating new operations for variant [Variant id: 166, #gens: 240, #ops: 0, parent:165]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 14
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 166, #gens: 240, #ops: 1, parent:165] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 166, errors: [FractionFormat.java:274: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(83): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse '/' final int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (165(f=2.0), 166(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (165(f=2.0), )
----------Running generation: 84, population size: 1

***** Generation 84 : 0
**Parent Variant: [Variant id: 167, #gens: 240, #ops: 0, parent:-]

--Child created id: 168
--Creating new operations for variant [Variant id: 168, #gens: 240, #ops: 0, parent:167]
---analyzing modificationPoint position: 181
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 84
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch [denominator]
--> var from patch: denominator spoon.support.reflect.code.CtFieldReadImpl
location: BigFraction.java743
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return denominator.intValue()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 743, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return denominator.intValue()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 168, #gens: 241, #ops: 1, parent:167] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 168, errors: [BigFraction.java:755: error: incompatible types: int cannot be converted to java.math.BigInteger
		return denominator.intValue(); 		return denominator;} 	/**
		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(84): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return denominator.intValue()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (167(f=2.0), 168(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (167(f=2.0), )
----------Running generation: 85, population size: 1

***** Generation 85 : 0
**Parent Variant: [Variant id: 169, #gens: 240, #ops: 0, parent:-]

--Child created id: 170
--Creating new operations for variant [Variant id: 170, #gens: 240, #ops: 0, parent:169]
---analyzing modificationPoint position: 38
location: MultiDirectional.java127
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 170, #gens: 239, #ops: 1, parent:169] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 170
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-170/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(85): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (169(f=2.0), 170(f=4.0), )
Selected to next generation: IDs2--> (169(f=2.0), )
----------Running generation: 86, population size: 1

***** Generation 86 : 0
**Parent Variant: [Variant id: 171, #gens: 240, #ops: 0, parent:-]

--Child created id: 172
--Creating new operations for variant [Variant id: 172, #gens: 240, #ops: 0, parent:171]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 172, #gens: 239, #ops: 1, parent:171] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 172
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-172/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(86): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (171(f=2.0), 172(f=4.0), )
Selected to next generation: IDs2--> (171(f=2.0), )
----------Running generation: 87, population size: 1

***** Generation 87 : 0
**Parent Variant: [Variant id: 173, #gens: 240, #ops: 0, parent:-]

--Child created id: 174
--Creating new operations for variant [Variant id: 174, #gens: 240, #ops: 0, parent:173]
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 50
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 174, #gens: 239, #ops: 1, parent:173] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 174
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-174/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(87): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (173(f=2.0), 174(f=2.0), )
Selected to next generation: IDs2--> (173(f=2.0), )
----------Running generation: 88, population size: 1

***** Generation 88 : 0
**Parent Variant: [Variant id: 175, #gens: 240, #ops: 0, parent:-]

--Child created id: 176
--Creating new operations for variant [Variant id: 176, #gens: 240, #ops: 0, parent:175]
---analyzing modificationPoint position: 145
location: AbstractFormat.java170
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 176, #gens: 239, #ops: 1, parent:175] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 176
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-176/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(88): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (175(f=2.0), 176(f=2.0), )
Selected to next generation: IDs2--> (175(f=2.0), )
----------Running generation: 89, population size: 1

***** Generation 89 : 0
**Parent Variant: [Variant id: 177, #gens: 240, #ops: 0, parent:-]

--Child created id: 178
--Creating new operations for variant [Variant id: 178, #gens: 240, #ops: 0, parent:177]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 174
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 2 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  return null
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 4 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 111
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 5 not mutation generated in  setMaxIterations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 6 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 78
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [source, parsePosition]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java204
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 204, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 178, #gens: 240, #ops: 1, parent:177] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 178
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-178/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(89): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (177(f=2.0), 178(f=2.0), )
Selected to next generation: IDs2--> (177(f=2.0), )
----------Running generation: 90, population size: 1

***** Generation 90 : 0
**Parent Variant: [Variant id: 179, #gens: 240, #ops: 0, parent:-]

--Child created id: 180
--Creating new operations for variant [Variant id: 180, #gens: 240, #ops: 0, parent:179]
---analyzing modificationPoint position: 38
location: MultiDirectional.java127
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 180, #gens: 239, #ops: 1, parent:179] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 180
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-180/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(90): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (179(f=2.0), 180(f=4.0), )
Selected to next generation: IDs2--> (179(f=2.0), )
----------Running generation: 91, population size: 1

***** Generation 91 : 0
**Parent Variant: [Variant id: 181, #gens: 240, #ops: 0, parent:-]

--Child created id: 182
--Creating new operations for variant [Variant id: 182, #gens: 240, #ops: 0, parent:181]
---analyzing modificationPoint position: 58
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 140
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java161
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 182, #gens: 241, #ops: 1, parent:181] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 182, errors: [AbstractFormat.java:162: error: unreachable statement
	 */ 	protected static char parseNextCharacter(final java.lang.String source, final java.text.ParsePosition pos) { 		throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("numerator format can not be null"); 		int index = pos.getIndex();
	    	                                                                                                             		                                                                                                                       		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(91): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (181(f=2.0), 182(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (181(f=2.0), )
----------Running generation: 92, population size: 1

***** Generation 92 : 0
**Parent Variant: [Variant id: 183, #gens: 240, #ops: 0, parent:-]

--Child created id: 184
--Creating new operations for variant [Variant id: 184, #gens: 240, #ops: 0, parent:183]
---analyzing modificationPoint position: 157
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 184, #gens: 239, #ops: 1, parent:183] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 184
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-184/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(92): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (183(f=2.0), 184(f=2.0), )
Selected to next generation: IDs2--> (183(f=2.0), )
----------Running generation: 93, population size: 1

***** Generation 93 : 0
**Parent Variant: [Variant id: 185, #gens: 240, #ops: 0, parent:-]

--Child created id: 186
--Creating new operations for variant [Variant id: 186, #gens: 240, #ops: 0, parent:185]
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 186, #gens: 240, #ops: 1, parent:185] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 186, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(93): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (185(f=2.0), 186(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (185(f=2.0), )
----------Running generation: 94, population size: 1

***** Generation 94 : 0
**Parent Variant: [Variant id: 187, #gens: 240, #ops: 0, parent:-]

--Child created id: 188
--Creating new operations for variant [Variant id: 188, #gens: 240, #ops: 0, parent:187]
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 188, #gens: 241, #ops: 1, parent:187] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 188, errors: [ProperFractionFormat.java:111: error: unreachable statement
		return toAppendTo; 		pos.setEndIndex(0); 		int num = fraction.getNumerator(); 		int den = fraction.getDenominator(); 		int whole = num / den; 		num = num % den; 		if (whole != 0) { 			getWholeFormat().format(whole, toAppendTo, pos); 			toAppendTo.append(' '); 			num = java.lang.Math.abs(num);} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;
		                   		^]
Ingredient counter is Zero
---Undoing: gnrtn(94): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (187(f=2.0), 188(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (187(f=2.0), )
----------Running generation: 95, population size: 1

***** Generation 95 : 0
**Parent Variant: [Variant id: 189, #gens: 240, #ops: 0, parent:-]

--Child created id: 190
--Creating new operations for variant [Variant id: 190, #gens: 240, #ops: 0, parent:189]
---analyzing modificationPoint position: 38
location: MultiDirectional.java127
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 190, #gens: 239, #ops: 1, parent:189] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 190
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-190/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(95): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (189(f=2.0), 190(f=4.0), )
Selected to next generation: IDs2--> (189(f=2.0), )
----------Running generation: 96, population size: 1

***** Generation 96 : 0
**Parent Variant: [Variant id: 191, #gens: 240, #ops: 0, parent:-]

--Child created id: 192
--Creating new operations for variant [Variant id: 192, #gens: 240, #ops: 0, parent:191]
---analyzing modificationPoint position: 202
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 0 not mutation generated in  // move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; }
---analyzing modificationPoint position: 112
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  setMaxEvaluations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 192, #gens: 239, #ops: 1, parent:191] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 192
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-192/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(96): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (191(f=2.0), 192(f=2.0), )
Selected to next generation: IDs2--> (191(f=2.0), )
----------Running generation: 97, population size: 1

***** Generation 97 : 0
**Parent Variant: [Variant id: 193, #gens: 240, #ops: 0, parent:-]

--Child created id: 194
--Creating new operations for variant [Variant id: 194, #gens: 240, #ops: 0, parent:193]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 119
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...]
---analyzing modificationPoint position: 221
Templates availables259
Attempts Base Ingredients  1 total 259
vars from patch []
location: MathUtils.java652
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `// We use the formula // (n choose k) = n! / (n-k)! / k! // (n choose k) == ((n-k+1)*...*n) / (1*...[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 652, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `// We use the formula // (n choose k) = n! / (n-k)! / k! // (n choose k) == ((n-k+1)*...*n) / (1*...[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 194, #gens: 241, #ops: 1, parent:193] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 194, errors: [MathUtils.java:673: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(97): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `// B5 [reset max(u,v)] if (t > 0) { 	u = -t; } else { 	v = t; } ` -topatch--> `// We use the formula // (n choose k) = n! / (n-k)! / k! // (n choose k) == ((n-k+1)*...*n) / (1*...[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (193(f=2.0), 194(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (193(f=2.0), )
----------Running generation: 98, population size: 1

***** Generation 98 : 0
**Parent Variant: [Variant id: 195, #gens: 240, #ops: 0, parent:-]

--Child created id: 196
--Creating new operations for variant [Variant id: 196, #gens: 240, #ops: 0, parent:195]
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 196, #gens: 241, #ops: 1, parent:195] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 196
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-196/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(98): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (195(f=2.0), 196(f=4.0), )
Selected to next generation: IDs2--> (195(f=2.0), )
----------Running generation: 99, population size: 1

***** Generation 99 : 0
**Parent Variant: [Variant id: 197, #gens: 240, #ops: 0, parent:-]

--Child created id: 198
--Creating new operations for variant [Variant id: 198, #gens: 240, #ops: 0, parent:197]
---analyzing modificationPoint position: 30
---modifPoint 0 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java96
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int den = fraction.getDenominator() ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 96, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int den = fraction.getDenominator() ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 198, #gens: 241, #ops: 1, parent:197] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 198
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-198/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(99): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int den = fraction.getDenominator() ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (197(f=2.0), 198(f=2.0), )
Selected to next generation: IDs2--> (197(f=2.0), )
----------Running generation: 100, population size: 1

***** Generation 100 : 0
**Parent Variant: [Variant id: 199, #gens: 240, #ops: 0, parent:-]

--Child created id: 200
--Creating new operations for variant [Variant id: 200, #gens: 240, #ops: 0, parent:199]
---analyzing modificationPoint position: 110
location: DirectSearchOptimizer.java117
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 200, #gens: 239, #ops: 1, parent:199] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 200
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-200/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(100): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (199(f=2.0), 200(f=2.0), )
Selected to next generation: IDs2--> (199(f=2.0), )
----------Running generation: 101, population size: 1

***** Generation 101 : 0
**Parent Variant: [Variant id: 201, #gens: 240, #ops: 0, parent:-]

--Child created id: 202
--Creating new operations for variant [Variant id: 202, #gens: 240, #ops: 0, parent:201]
---analyzing modificationPoint position: 142
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java163
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 163, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 202, #gens: 241, #ops: 1, parent:201] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 202, errors: [AbstractFormat.java:163: error: variable n is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		final int n = source.length(); 		final int n = source.length();
		                               		          ^]
Ingredient counter is Zero
---Undoing: gnrtn(101): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `char ret = 0 ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (201(f=2.0), 202(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (201(f=2.0), )
----------Running generation: 102, population size: 1

***** Generation 102 : 0
**Parent Variant: [Variant id: 203, #gens: 240, #ops: 0, parent:-]

--Child created id: 204
--Creating new operations for variant [Variant id: 204, #gens: 240, #ops: 0, parent:203]
---analyzing modificationPoint position: 50
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 204, #gens: 241, #ops: 1, parent:203] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 204
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-204/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(102): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (203(f=2.0), 204(f=2.0), )
Selected to next generation: IDs2--> (203(f=2.0), )
----------Running generation: 103, population size: 1

***** Generation 103 : 0
**Parent Variant: [Variant id: 205, #gens: 240, #ops: 0, parent:-]

--Child created id: 206
--Creating new operations for variant [Variant id: 206, #gens: 240, #ops: 0, parent:205]
---analyzing modificationPoint position: 101
---modifPoint 0 not mutation generated in  org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 206, #gens: 240, #ops: 1, parent:205] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 206
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-206/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(103): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (205(f=2.0), 206(f=2.0), )
Selected to next generation: IDs2--> (205(f=2.0), )
----------Running generation: 104, population size: 1

***** Generation 104 : 0
**Parent Variant: [Variant id: 207, #gens: 240, #ops: 0, parent:-]

--Child created id: 208
--Creating new operations for variant [Variant id: 208, #gens: 240, #ops: 0, parent:207]
---analyzing modificationPoint position: 222
location: MathUtils.java658
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// B6/B3. at this point both u and v should be odd. t = (v - u) / 2 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 208, #gens: 239, #ops: 1, parent:207] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 208, errors: [MathUtils.java:673: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(104): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// B6/B3. at this point both u and v should be odd. t = (v - u) / 2 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (207(f=2.0), 208(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (207(f=2.0), )
----------Running generation: 105, population size: 1

***** Generation 105 : 0
**Parent Variant: [Variant id: 209, #gens: 240, #ops: 0, parent:-]

--Child created id: 210
--Creating new operations for variant [Variant id: 210, #gens: 240, #ops: 0, parent:209]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 210, #gens: 240, #ops: 1, parent:209] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 210
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-210/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(105): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (209(f=2.0), 210(f=2.0), )
Selected to next generation: IDs2--> (209(f=2.0), )
----------Running generation: 106, population size: 1

***** Generation 106 : 0
**Parent Variant: [Variant id: 211, #gens: 240, #ops: 0, parent:-]

--Child created id: 212
--Creating new operations for variant [Variant id: 212, #gens: 240, #ops: 0, parent:211]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  simplex[0] = original[0]
---analyzing modificationPoint position: 82
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 212, #gens: 241, #ops: 1, parent:211] gen mutated: 1 , gen not mut: 3, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 212
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-212/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(106): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (211(f=2.0), 212(f=2.0), )
Selected to next generation: IDs2--> (211(f=2.0), )
----------Running generation: 107, population size: 1

***** Generation 107 : 0
**Parent Variant: [Variant id: 213, #gens: 240, #ops: 0, parent:-]

--Child created id: 214
--Creating new operations for variant [Variant id: 214, #gens: 240, #ops: 0, parent:213]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 75, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 214, #gens: 241, #ops: 1, parent:213] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 214
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-214/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(107): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (213(f=2.0), 214(f=2.0), )
Selected to next generation: IDs2--> (213(f=2.0), )
----------Running generation: 108, population size: 1

***** Generation 108 : 0
**Parent Variant: [Variant id: 215, #gens: 240, #ops: 0, parent:-]

--Child created id: 216
--Creating new operations for variant [Variant id: 216, #gens: 240, #ops: 0, parent:215]
---analyzing modificationPoint position: 44
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 216, #gens: 239, #ops: 1, parent:215] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 216
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-216/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(108): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (215(f=2.0), 216(f=2.0), )
Selected to next generation: IDs2--> (215(f=2.0), )
----------Running generation: 109, population size: 1

***** Generation 109 : 0
**Parent Variant: [Variant id: 217, #gens: 240, #ops: 0, parent:-]

--Child created id: 218
--Creating new operations for variant [Variant id: 218, #gens: 240, #ops: 0, parent:217]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 146
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos, index]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: index spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java172
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 172, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 218, #gens: 241, #ops: 1, parent:217] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 218
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-218/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(109): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (217(f=2.0), 218(f=2.0), )
Selected to next generation: IDs2--> (217(f=2.0), )
----------Running generation: 110, population size: 1

***** Generation 110 : 0
**Parent Variant: [Variant id: 219, #gens: 240, #ops: 0, parent:-]

--Child created id: 220
--Creating new operations for variant [Variant id: 220, #gens: 240, #ops: 0, parent:219]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 74
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 2 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 93
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 3 not mutation generated in  if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java96
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 96, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 220, #gens: 241, #ops: 1, parent:219] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 220, errors: [ProperBigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:250: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:250: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:251: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:252: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:252: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:253: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:253: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:254: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:254: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:254: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:254: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:254: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(110): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (219(f=2.0), 220(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (219(f=2.0), )
----------Running generation: 111, population size: 1

***** Generation 111 : 0
**Parent Variant: [Variant id: 221, #gens: 240, #ops: 0, parent:-]

--Child created id: 222
--Creating new operations for variant [Variant id: 222, #gens: 240, #ops: 0, parent:221]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, n]
--> var from patch: simplex spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 222, #gens: 241, #ops: 1, parent:221] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 222
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-222/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(111): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (221(f=2.0), 222(f=2.0), )
Selected to next generation: IDs2--> (221(f=2.0), )
----------Running generation: 112, population size: 1

***** Generation 112 : 0
**Parent Variant: [Variant id: 223, #gens: 240, #ops: 0, parent:-]

--Child created id: 224
--Creating new operations for variant [Variant id: 224, #gens: 240, #ops: 0, parent:223]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 224, #gens: 241, #ops: 1, parent:223] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 224, errors: [AbstractFormat.java:123: error: unreachable statement
		"denominator format can not be null"); 		this.numeratorFormat = numeratorFormat; 		this.denominatorFormat = denominatorFormat;} 	/**
		                                       		^]
Ingredient counter is Zero
---Undoing: gnrtn(112): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (223(f=2.0), 224(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (223(f=2.0), )
----------Running generation: 113, population size: 1

***** Generation 113 : 0
**Parent Variant: [Variant id: 225, #gens: 240, #ops: 0, parent:-]

--Child created id: 226
--Creating new operations for variant [Variant id: 226, #gens: 240, #ops: 0, parent:225]
---analyzing modificationPoint position: 107
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxEvaluations, x]
--> var from patch: maxEvaluations spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: x spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java349
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluat[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 349, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluat[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 226, #gens: 241, #ops: 1, parent:225] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 226, errors: [DirectSearchOptimizer.java:350: error: unreachable statement
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x); 		return f.value(x);
	    	                                                                                                                                             		                                        			                                                                                                                                                		                                                                                                                                               		^]
Ingredient counter is Zero
---Undoing: gnrtn(113): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluat[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (225(f=2.0), 226(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (225(f=2.0), )
----------Running generation: 114, population size: 1

***** Generation 114 : 0
**Parent Variant: [Variant id: 227, #gens: 240, #ops: 0, parent:-]

--Child created id: 228
--Creating new operations for variant [Variant id: 228, #gens: 240, #ops: 0, parent:227]
---analyzing modificationPoint position: 30
---modifPoint 0 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 62
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java120
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 228, #gens: 241, #ops: 1, parent:227] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 228, errors: [MultiDirectional.java:121: error: incompatible types: missing return value
		simplex[0] = original[0]; 		return;
		                          		^]
Ingredient counter is Zero
---Undoing: gnrtn(114): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (227(f=2.0), 228(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (227(f=2.0), )
----------Running generation: 115, population size: 1

***** Generation 115 : 0
**Parent Variant: [Variant id: 229, #gens: 240, #ops: 0, parent:-]

--Child created id: 230
--Creating new operations for variant [Variant id: 230, #gens: 240, #ops: 0, parent:229]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 60
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 230, #gens: 239, #ops: 1, parent:229] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 230
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-230/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(115): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (229(f=2.0), 230(f=2.0), )
Selected to next generation: IDs2--> (229(f=2.0), )
----------Running generation: 116, population size: 1

***** Generation 116 : 0
**Parent Variant: [Variant id: 231, #gens: 240, #ops: 0, parent:-]

--Child created id: 232
--Creating new operations for variant [Variant id: 232, #gens: 240, #ops: 0, parent:231]
---analyzing modificationPoint position: 171
location: MultiDirectional.java94
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 232, #gens: 239, #ops: 1, parent:231] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 232
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-232/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(116): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (231(f=2.0), 232(f=2.0), )
Selected to next generation: IDs2--> (231(f=2.0), )
----------Running generation: 117, population size: 1

***** Generation 117 : 0
**Parent Variant: [Variant id: 233, #gens: 240, #ops: 0, parent:-]

--Child created id: 234
--Creating new operations for variant [Variant id: 234, #gens: 240, #ops: 0, parent:233]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 234, #gens: 241, #ops: 1, parent:233] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 234, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(117): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (233(f=2.0), 234(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (233(f=2.0), )
----------Running generation: 118, population size: 1

***** Generation 118 : 0
**Parent Variant: [Variant id: 235, #gens: 240, #ops: 0, parent:-]

--Child created id: 236
--Creating new operations for variant [Variant id: 236, #gens: 240, #ops: 0, parent:235]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 79
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, parsePosition]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java205
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 205, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 236, #gens: 241, #ops: 1, parent:235] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 236, errors: [FractionFormat.java:205: error: variable result is already defined in method parse(java.lang.String)
		final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition); 		final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition);
		                                                                                       		                                                ^]
Ingredient counter is Zero
---Undoing: gnrtn(118): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (235(f=2.0), 236(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (235(f=2.0), )
----------Running generation: 119, population size: 1

***** Generation 119 : 0
**Parent Variant: [Variant id: 237, #gens: 240, #ops: 0, parent:-]

--Child created id: 238
--Creating new operations for variant [Variant id: 238, #gens: 240, #ops: 0, parent:237]
---analyzing modificationPoint position: 123
---modifPoint 0 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 238, #gens: 241, #ops: 1, parent:237] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 238, errors: [ProperFractionFormat.java:99: error: variable whole is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		num = num % den; 		int whole = num / den;
		                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(119): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (237(f=2.0), 238(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (237(f=2.0), )
----------Running generation: 120, population size: 1

***** Generation 120 : 0
**Parent Variant: [Variant id: 239, #gens: 240, #ops: 0, parent:-]

--Child created id: 240
--Creating new operations for variant [Variant id: 240, #gens: 240, #ops: 0, parent:239]
---analyzing modificationPoint position: 29
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 240, #gens: 240, #ops: 1, parent:239] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 240, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                  ^
  symbol:   variable xSmallest
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                           ^
  symbol:   variable xSmallest
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(120): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (239(f=2.0), 240(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (239(f=2.0), )
----------Running generation: 121, population size: 1

***** Generation 121 : 0
**Parent Variant: [Variant id: 241, #gens: 240, #ops: 0, parent:-]

--Child created id: 242
--Creating new operations for variant [Variant id: 242, #gens: 240, #ops: 0, parent:241]
---analyzing modificationPoint position: 177
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  // store the values in the final fields numerator = num
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 92
location: DirectSearchOptimizer.java146
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 242, #gens: 239, #ops: 1, parent:241] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 242, errors: [DirectSearchOptimizer.java:146: error: variable declaration not allowed here
			final double[] vertexI = startConfiguration[i];
			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(121): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (241(f=2.0), 242(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (241(f=2.0), )
----------Running generation: 122, population size: 1

***** Generation 122 : 0
**Parent Variant: [Variant id: 243, #gens: 240, #ops: 0, parent:-]

--Child created id: 244
--Creating new operations for variant [Variant id: 244, #gens: 240, #ops: 0, parent:243]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 91, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 244, #gens: 241, #ops: 1, parent:243] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 244, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(122): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (243(f=2.0), 244(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (243(f=2.0), )
----------Running generation: 123, population size: 1

***** Generation 123 : 0
**Parent Variant: [Variant id: 245, #gens: 240, #ops: 0, parent:-]

--Child created id: 246
--Creating new operations for variant [Variant id: 246, #gens: 240, #ops: 0, parent:245]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 122
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  buildSimplex(startPoint)
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 246, #gens: 240, #ops: 1, parent:245] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 246
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-246/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(123): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (245(f=2.0), 246(f=2.0), )
Selected to next generation: IDs2--> (245(f=2.0), )
----------Running generation: 124, population size: 1

***** Generation 124 : 0
**Parent Variant: [Variant id: 247, #gens: 240, #ops: 0, parent:-]

--Child created id: 248
--Creating new operations for variant [Variant id: 248, #gens: 240, #ops: 0, parent:247]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 144
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [ret, c]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 248, #gens: 241, #ops: 1, parent:247] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 248, errors: [AbstractFormat.java:174: error: variable c might not have been initialized
				ret = c; 				c = source.charAt(index++);} while (java.lang.Character.isWhitespace(c) && (index < n) ); 			pos.setIndex(index); 			if (index < n) { 				ret = c;
				      ^]
Ingredient counter is Zero
---Undoing: gnrtn(124): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `ret = c` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (247(f=2.0), 248(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (247(f=2.0), )
----------Running generation: 125, population size: 1

***** Generation 125 : 0
**Parent Variant: [Variant id: 249, #gens: 240, #ops: 0, parent:-]

--Child created id: 250
--Creating new operations for variant [Variant id: 250, #gens: 240, #ops: 0, parent:249]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 122
location: DirectSearchOptimizer.java288
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 250, #gens: 239, #ops: 1, parent:249] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 250
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-250/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(125): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (249(f=2.0), 250(f=5.0), )
Selected to next generation: IDs2--> (249(f=2.0), )
----------Running generation: 126, population size: 1

***** Generation 126 : 0
**Parent Variant: [Variant id: 251, #gens: 240, #ops: 0, parent:-]

--Child created id: 252
--Creating new operations for variant [Variant id: 252, #gens: 240, #ops: 0, parent:251]
---analyzing modificationPoint position: 120
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [this.maxIterations]
--> var from patch: this.maxIterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 286, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 252, #gens: 240, #ops: 1, parent:251] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 252
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-252/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(126): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (251(f=2.0), 252(f=2.0), )
Selected to next generation: IDs2--> (251(f=2.0), )
----------Running generation: 127, population size: 1

***** Generation 127 : 0
**Parent Variant: [Variant id: 253, #gens: 240, #ops: 0, parent:-]

--Child created id: 254
--Creating new operations for variant [Variant id: 254, #gens: 240, #ops: 0, parent:253]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 112
location: DirectSearchOptimizer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 254, #gens: 239, #ops: 1, parent:253] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 254
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-254/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(127): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (253(f=2.0), 254(f=5.0), )
Selected to next generation: IDs2--> (253(f=2.0), )
----------Running generation: 128, population size: 1

***** Generation 128 : 0
**Parent Variant: [Variant id: 255, #gens: 240, #ops: 0, parent:-]

--Child created id: 256
--Creating new operations for variant [Variant id: 256, #gens: 240, #ops: 0, parent:255]
---analyzing modificationPoint position: 143
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...]
---analyzing modificationPoint position: 165
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 82
---modifPoint 3 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 0
---modifPoint 4 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 5 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 104
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 6 not mutation generated in  iterateSimplex(comparator)
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 256, #gens: 241, #ops: 1, parent:255] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 256, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(128): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (255(f=2.0), 256(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (255(f=2.0), )
----------Running generation: 129, population size: 1

***** Generation 129 : 0
**Parent Variant: [Variant id: 257, #gens: 240, #ops: 0, parent:-]

--Child created id: 258
--Creating new operations for variant [Variant id: 258, #gens: 240, #ops: 0, parent:257]
---analyzing modificationPoint position: 67
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java147
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 147, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 258, #gens: 240, #ops: 1, parent:257] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 258, errors: [ProperFractionFormat.java:202: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(129): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (257(f=2.0), 258(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (257(f=2.0), )
----------Running generation: 130, population size: 1

***** Generation 130 : 0
**Parent Variant: [Variant id: 259, #gens: 240, #ops: 0, parent:-]

--Child created id: 260
--Creating new operations for variant [Variant id: 260, #gens: 240, #ops: 0, parent:259]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 90
location: DirectSearchOptimizer.java144
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 260, #gens: 239, #ops: 1, parent:259] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 260
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-260/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(130): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (259(f=2.0), 260(f=3.0), )
Selected to next generation: IDs2--> (259(f=2.0), )
----------Running generation: 131, population size: 1

***** Generation 131 : 0
**Parent Variant: [Variant id: 261, #gens: 240, #ops: 0, parent:-]

--Child created id: 262
--Creating new operations for variant [Variant id: 262, #gens: 240, #ops: 0, parent:261]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 262, #gens: 241, #ops: 1, parent:261] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 262, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(131): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (261(f=2.0), 262(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (261(f=2.0), )
----------Running generation: 132, population size: 1

***** Generation 132 : 0
**Parent Variant: [Variant id: 263, #gens: 240, #ops: 0, parent:-]

--Child created id: 264
--Creating new operations for variant [Variant id: 264, #gens: 240, #ops: 0, parent:263]
---analyzing modificationPoint position: 47
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 168
Templates availables3
Attempts Base Ingredients  1 total 3
Name Conflict [comparator, reflected, best, simplex, original, khi]
---modifPoint 2 not mutation generated in  if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...]
---analyzing modificationPoint position: 134
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 3 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i]
---analyzing modificationPoint position: 66
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 264, #gens: 239, #ops: 1, parent:263] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 264
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-264/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(132): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (263(f=2.0), 264(f=2.0), )
Selected to next generation: IDs2--> (263(f=2.0), )
----------Running generation: 133, population size: 1

***** Generation 133 : 0
**Parent Variant: [Variant id: 265, #gens: 240, #ops: 0, parent:-]

--Child created id: 266
--Creating new operations for variant [Variant id: 266, #gens: 240, #ops: 0, parent:265]
---analyzing modificationPoint position: 22
location: MultiDirectional.java66
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 266, #gens: 239, #ops: 1, parent:265] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 266
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-266/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(133): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (265(f=2.0), 266(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (265(f=2.0), )
----------Running generation: 134, population size: 1

***** Generation 134 : 0
**Parent Variant: [Variant id: 267, #gens: 240, #ops: 0, parent:-]

--Child created id: 268
--Creating new operations for variant [Variant id: 268, #gens: 240, #ops: 0, parent:267]
---analyzing modificationPoint position: 23
---modifPoint 0 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 126
location: DirectSearchOptimizer.java369
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 268, #gens: 239, #ops: 1, parent:267] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 268
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-268/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(134): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (267(f=2.0), 268(f=5.0), )
Selected to next generation: IDs2--> (267(f=2.0), )
----------Running generation: 135, population size: 1

***** Generation 135 : 0
**Parent Variant: [Variant id: 269, #gens: 240, #ops: 0, parent:-]

--Child created id: 270
--Creating new operations for variant [Variant id: 270, #gens: 240, #ops: 0, parent:269]
---analyzing modificationPoint position: 38
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...]
---analyzing modificationPoint position: 32
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 270, #gens: 240, #ops: 1, parent:269] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 270, errors: [MultiDirectional.java:120: error: cannot assign a value to final variable gamma
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		this.gamma = gamma;
		                                                                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(135): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (269(f=2.0), 270(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (269(f=2.0), )
----------Running generation: 136, population size: 1

***** Generation 136 : 0
**Parent Variant: [Variant id: 271, #gens: 240, #ops: 0, parent:-]

--Child created id: 272
--Creating new operations for variant [Variant id: 272, #gens: 240, #ops: 0, parent:271]
---analyzing modificationPoint position: 90
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [i, n, startConfiguration, j, steps, vertexI]
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: startConfiguration spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: steps spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: vertexI spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java144
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...] ` -topatch--> `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 144, pointed element: CtForImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...] ` -topatch--> `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 272, #gens: 240, #ops: 1, parent:271] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 272
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-272/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(136): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...] ` -topatch--> `for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (271(f=2.0), 272(f=2.0), )
Selected to next generation: IDs2--> (271(f=2.0), )
----------Running generation: 137, population size: 1

***** Generation 137 : 0
**Parent Variant: [Variant id: 273, #gens: 240, #ops: 0, parent:-]

--Child created id: 274
--Creating new operations for variant [Variant id: 274, #gens: 240, #ops: 0, parent:273]
---analyzing modificationPoint position: 159
location: ProperBigFractionFormat.java101
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 274, #gens: 239, #ops: 1, parent:273] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 274
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-274/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(137): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (273(f=2.0), 274(f=2.0), )
Selected to next generation: IDs2--> (273(f=2.0), )
----------Running generation: 138, population size: 1

***** Generation 138 : 0
**Parent Variant: [Variant id: 275, #gens: 240, #ops: 0, parent:-]

--Child created id: 276
--Creating new operations for variant [Variant id: 276, #gens: 240, #ops: 0, parent:275]
---analyzing modificationPoint position: 68
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 276, #gens: 239, #ops: 1, parent:275] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 276
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-276/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(138): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (275(f=2.0), 276(f=2.0), )
Selected to next generation: IDs2--> (275(f=2.0), )
----------Running generation: 139, population size: 1

***** Generation 139 : 0
**Parent Variant: [Variant id: 277, #gens: 240, #ops: 0, parent:-]

--Child created id: 278
--Creating new operations for variant [Variant id: 278, #gens: 240, #ops: 0, parent:277]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [j, n, xTransformed, xSmallest, coeff, xOriginal]
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTransformed spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xSmallest spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: coeff spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xOriginal spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java124
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 124, pointed element: CtForImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 278, #gens: 240, #ops: 1, parent:277] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 278
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-278/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(139): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (277(f=2.0), 278(f=2.0), )
Selected to next generation: IDs2--> (277(f=2.0), )
----------Running generation: 140, population size: 1

***** Generation 140 : 0
**Parent Variant: [Variant id: 279, #gens: 240, #ops: 0, parent:-]

--Child created id: 280
--Creating new operations for variant [Variant id: 280, #gens: 240, #ops: 0, parent:279]
---analyzing modificationPoint position: 96
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtFieldReadImpl
SameName: final 


























































double value
SameName: final 


























































double value
Transforming shadowed variable in return value
location: RealPointValuePair.java63
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 63, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 280, #gens: 241, #ops: 1, parent:279] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 280, errors: [RealPointValuePair.java:87: error: incompatible types: unexpected return value
		return value; 		this.value = value;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(140): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (279(f=2.0), 280(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (279(f=2.0), )
----------Running generation: 141, population size: 1

***** Generation 141 : 0
**Parent Variant: [Variant id: 281, #gens: 240, #ops: 0, parent:-]

--Child created id: 282
--Creating new operations for variant [Variant id: 282, #gens: 240, #ops: 0, parent:281]
---analyzing modificationPoint position: 127
location: DirectSearchOptimizer.java372
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 282, #gens: 239, #ops: 1, parent:281] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 282
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-282/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(141): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (281(f=2.0), 282(f=4.0), )
Selected to next generation: IDs2--> (281(f=2.0), )
----------Running generation: 142, population size: 1

***** Generation 142 : 0
**Parent Variant: [Variant id: 283, #gens: 240, #ops: 0, parent:-]

--Child created id: 284
--Creating new operations for variant [Variant id: 284, #gens: 240, #ops: 0, parent:283]
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 284, #gens: 239, #ops: 1, parent:283] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 284
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-284/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(142): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (283(f=2.0), 284(f=2.0), )
Selected to next generation: IDs2--> (283(f=2.0), )
----------Running generation: 143, population size: 1

***** Generation 143 : 0
**Parent Variant: [Variant id: 285, #gens: 240, #ops: 0, parent:-]

--Child created id: 286
--Creating new operations for variant [Variant id: 286, #gens: 240, #ops: 0, parent:285]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 286, #gens: 241, #ops: 1, parent:285] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 286
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-286/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(143): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (285(f=2.0), 286(f=4.0), )
Selected to next generation: IDs2--> (285(f=2.0), )
----------Running generation: 144, population size: 1

***** Generation 144 : 0
**Parent Variant: [Variant id: 287, #gens: 240, #ops: 0, parent:-]

--Child created id: 288
--Creating new operations for variant [Variant id: 288, #gens: 240, #ops: 0, parent:287]
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 288, #gens: 241, #ops: 1, parent:287] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 288
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-288/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(144): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (287(f=2.0), 288(f=2.0), )
Selected to next generation: IDs2--> (287(f=2.0), )
----------Running generation: 145, population size: 1

***** Generation 145 : 0
**Parent Variant: [Variant id: 289, #gens: 240, #ops: 0, parent:-]

--Child created id: 290
--Creating new operations for variant [Variant id: 290, #gens: 240, #ops: 0, parent:289]
---analyzing modificationPoint position: 64
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [ret, ((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((org.apache.commons.math.fraction.Fraction) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 290, #gens: 240, #ops: 1, parent:289] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 290
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-290/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(145): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (289(f=2.0), 290(f=2.0), )
Selected to next generation: IDs2--> (289(f=2.0), )
----------Running generation: 146, population size: 1

***** Generation 146 : 0
**Parent Variant: [Variant id: 291, #gens: 240, #ops: 0, parent:-]

--Child created id: 292
--Creating new operations for variant [Variant id: 292, #gens: 240, #ops: 0, parent:291]
---analyzing modificationPoint position: 17
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 3 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 292, #gens: 241, #ops: 1, parent:291] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 292
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-292/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(146): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (291(f=2.0), 292(f=2.0), )
Selected to next generation: IDs2--> (291(f=2.0), )
----------Running generation: 147, population size: 1

***** Generation 147 : 0
**Parent Variant: [Variant id: 293, #gens: 240, #ops: 0, parent:-]

--Child created id: 294
--Creating new operations for variant [Variant id: 294, #gens: 240, #ops: 0, parent:293]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java70
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 294, #gens: 240, #ops: 1, parent:293] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 294, errors: [AbstractFormat.java:70: error: final parameter numeratorFormat may not be assigned
	 */ 	protected AbstractFormat(final java.text.NumberFormat numeratorFormat, final java.text.NumberFormat denominatorFormat) { 		this.numeratorFormat = numeratorFormat; 		numeratorFormat = numeratorFormat;
	    	                                                                                                                         		                                        		^]
Ingredient counter is Zero
---Undoing: gnrtn(147): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (293(f=2.0), 294(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (293(f=2.0), )
----------Running generation: 148, population size: 1

***** Generation 148 : 0
**Parent Variant: [Variant id: 295, #gens: 240, #ops: 0, parent:-]

--Child created id: 296
--Creating new operations for variant [Variant id: 296, #gens: 240, #ops: 0, parent:295]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 296, #gens: 240, #ops: 1, parent:295] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 296, errors: [AbstractFormat.java:167: error: cannot find symbol
		char c; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		        		^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:167: error: cannot find symbol
		char c; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		        		                                		^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:167: error: cannot find symbol
		char c; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		        		                                		                              		       ^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(148): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (295(f=2.0), 296(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (295(f=2.0), )
----------Running generation: 149, population size: 1

***** Generation 149 : 0
**Parent Variant: [Variant id: 297, #gens: 240, #ops: 0, parent:-]

--Child created id: 298
--Creating new operations for variant [Variant id: 298, #gens: 240, #ops: 0, parent:297]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java89
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 89, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 298, #gens: 241, #ops: 1, parent:297] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 298, errors: [MultiDirectional.java:90: error: variable best is already defined in method iterateSimplex(java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
			final org.apache.commons.math.optimization.RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator); 			final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
			                                                                                                                            			                                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(149): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (297(f=2.0), 298(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (297(f=2.0), )
----------Running generation: 150, population size: 1

***** Generation 150 : 0
**Parent Variant: [Variant id: 299, #gens: 240, #ops: 0, parent:-]

--Child created id: 300
--Creating new operations for variant [Variant id: 300, #gens: 240, #ops: 0, parent:299]
---analyzing modificationPoint position: 42
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 183
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtFieldReadImpl
SameName: final 














































double[] point
SameName: final 














































double[] point
Transforming shadowed variable in return point
location: RealPointValuePair.java49
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return point` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 49, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return point` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 300, #gens: 241, #ops: 1, parent:299] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 300, errors: [RealPointValuePair.java:80: error: incompatible types: unexpected return value
		return point; 		this.value = value;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(150): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return point` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (299(f=2.0), 300(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (299(f=2.0), )
----------Running generation: 151, population size: 1

***** Generation 151 : 0
**Parent Variant: [Variant id: 301, #gens: 240, #ops: 0, parent:-]

--Child created id: 302
--Creating new operations for variant [Variant id: 302, #gens: 240, #ops: 0, parent:301]
---analyzing modificationPoint position: 125
location: DirectSearchOptimizer.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 302, #gens: 239, #ops: 1, parent:301] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 302
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-302/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(151): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (301(f=2.0), 302(f=5.0), )
Selected to next generation: IDs2--> (301(f=2.0), )
----------Running generation: 152, population size: 1

***** Generation 152 : 0
**Parent Variant: [Variant id: 303, #gens: 240, #ops: 0, parent:-]

--Child created id: 304
--Creating new operations for variant [Variant id: 304, #gens: 240, #ops: 0, parent:303]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 304, #gens: 240, #ops: 1, parent:303] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 304
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-304/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(152): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (303(f=2.0), 304(f=2.0), )
Selected to next generation: IDs2--> (303(f=2.0), )
----------Running generation: 153, population size: 1

***** Generation 153 : 0
**Parent Variant: [Variant id: 305, #gens: 240, #ops: 0, parent:-]

--Child created id: 306
--Creating new operations for variant [Variant id: 306, #gens: 240, #ops: 0, parent:305]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  // evaluate it evaluateSimplex(comparator)
---analyzing modificationPoint position: 73
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch [ret, ((java.lang.Number) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.lang.Number) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java180
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 180, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 306, #gens: 241, #ops: 1, parent:305] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 306, errors: [BigFractionFormat.java:179: error: variable ret might already have been assigned
		} 		ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue()), toAppendTo, pos);
		  		^]
Ingredient counter is Zero
---Undoing: gnrtn(153): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (305(f=2.0), 306(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (305(f=2.0), )
----------Running generation: 154, population size: 1

***** Generation 154 : 0
**Parent Variant: [Variant id: 307, #gens: 240, #ops: 0, parent:-]

--Child created id: 308
--Creating new operations for variant [Variant id: 308, #gens: 240, #ops: 0, parent:307]
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 308, #gens: 241, #ops: 1, parent:307] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 308, errors: [AbstractFormat.java:110: error: call to this must be first statement in constructor
	 */ 	public java.text.NumberFormat getNumeratorFormat() { 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                     		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(154): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (307(f=2.0), 308(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (307(f=2.0), )
----------Running generation: 155, population size: 1

***** Generation 155 : 0
**Parent Variant: [Variant id: 309, #gens: 240, #ops: 0, parent:-]

--Child created id: 310
--Creating new operations for variant [Variant id: 310, #gens: 240, #ops: 0, parent:309]
---analyzing modificationPoint position: 131
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  vertexI[k] = startPoint[k] + confI[k]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 310, #gens: 241, #ops: 1, parent:309] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 310, errors: [AbstractFormat.java:93: error: non-static variable numeratorFormat cannot be referenced from a static context
		nf.setMaximumFractionDigits(0); 		numeratorFormat = numeratorFormat;
		                                		^, AbstractFormat.java:93: error: non-static variable numeratorFormat cannot be referenced from a static context
		nf.setMaximumFractionDigits(0); 		numeratorFormat = numeratorFormat;
		                                		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(155): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (309(f=2.0), 310(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (309(f=2.0), )
----------Running generation: 156, population size: 1

***** Generation 156 : 0
**Parent Variant: [Variant id: 311, #gens: 240, #ops: 0, parent:-]

--Child created id: 312
--Creating new operations for variant [Variant id: 312, #gens: 240, #ops: 0, parent:311]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 47
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 38
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...]
---analyzing modificationPoint position: 141
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 176
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 4 not mutation generated in  // move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...]
---analyzing modificationPoint position: 32
Templates availables9
Attempts Base Ingredients  1 total 9
Attempts Base Ingredients  2 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 312, #gens: 240, #ops: 1, parent:311] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 312, errors: [MultiDirectional.java:120: error: cannot assign a value to final variable khi
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		this.khi = 2.0;
		                                                                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(156): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (311(f=2.0), 312(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (311(f=2.0), )
----------Running generation: 157, population size: 1

***** Generation 157 : 0
**Parent Variant: [Variant id: 313, #gens: 240, #ops: 0, parent:-]

--Child created id: 314
--Creating new operations for variant [Variant id: 314, #gens: 240, #ops: 0, parent:313]
---analyzing modificationPoint position: 202
Templates availables144
Attempts Base Ingredients  1 total 144
---modifPoint 0 not mutation generated in  // move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; }
---analyzing modificationPoint position: 36
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 74
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 314, #gens: 241, #ops: 1, parent:313] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 314, errors: [FractionFormat.java:190: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		} 		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
		  		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(157): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (313(f=2.0), 314(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (313(f=2.0), )
----------Running generation: 158, population size: 1

***** Generation 158 : 0
**Parent Variant: [Variant id: 315, #gens: 240, #ops: 0, parent:-]

--Child created id: 316
--Creating new operations for variant [Variant id: 316, #gens: 240, #ops: 0, parent:315]
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 316, #gens: 241, #ops: 1, parent:315] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 316
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-316/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(158): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (315(f=2.0), 316(f=2.0), )
Selected to next generation: IDs2--> (315(f=2.0), )
----------Running generation: 159, population size: 1

***** Generation 159 : 0
**Parent Variant: [Variant id: 317, #gens: 240, #ops: 0, parent:-]

--Child created id: 318
--Creating new operations for variant [Variant id: 318, #gens: 240, #ops: 0, parent:317]
---analyzing modificationPoint position: 148
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 115
location: DirectSearchOptimizer.java230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 318, #gens: 239, #ops: 1, parent:317] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 318
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-318/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(159): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (317(f=2.0), 318(f=5.0), )
Selected to next generation: IDs2--> (317(f=2.0), )
----------Running generation: 160, population size: 1

***** Generation 160 : 0
**Parent Variant: [Variant id: 319, #gens: 240, #ops: 0, parent:-]

--Child created id: 320
--Creating new operations for variant [Variant id: 320, #gens: 240, #ops: 0, parent:319]
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 320, #gens: 239, #ops: 1, parent:319] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 320
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-320/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(160): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (319(f=2.0), 320(f=2.0), )
Selected to next generation: IDs2--> (319(f=2.0), )
----------Running generation: 161, population size: 1

***** Generation 161 : 0
**Parent Variant: [Variant id: 321, #gens: 240, #ops: 0, parent:-]

--Child created id: 322
--Creating new operations for variant [Variant id: 322, #gens: 240, #ops: 0, parent:321]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 45
---modifPoint 1 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 136
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 2 not mutation generated in  if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...]
---analyzing modificationPoint position: 93
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 3 not mutation generated in  if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 18
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 4 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 5 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 6 not mutation generated in  return nf
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 322, #gens: 239, #ops: 1, parent:321] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 322
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-322/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(161): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (321(f=2.0), 322(f=2.0), )
Selected to next generation: IDs2--> (321(f=2.0), )
----------Running generation: 162, population size: 1

***** Generation 162 : 0
**Parent Variant: [Variant id: 323, #gens: 240, #ops: 0, parent:-]

--Child created id: 324
--Creating new operations for variant [Variant id: 324, #gens: 240, #ops: 0, parent:323]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 324, #gens: 239, #ops: 1, parent:323] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 324
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-324/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(162): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (323(f=2.0), 324(f=2.0), )
Selected to next generation: IDs2--> (323(f=2.0), )
----------Running generation: 163, population size: 1

***** Generation 163 : 0
**Parent Variant: [Variant id: 325, #gens: 240, #ops: 0, parent:-]

--Child created id: 326
--Creating new operations for variant [Variant id: 326, #gens: 240, #ops: 0, parent:325]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 326, #gens: 239, #ops: 1, parent:325] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 326
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-326/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(163): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (325(f=2.0), 326(f=2.0), )
Selected to next generation: IDs2--> (325(f=2.0), )
----------Running generation: 164, population size: 1

***** Generation 164 : 0
**Parent Variant: [Variant id: 327, #gens: 240, #ops: 0, parent:-]

--Child created id: 328
--Creating new operations for variant [Variant id: 328, #gens: 240, #ops: 0, parent:327]
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxIterations]
--> var from patch: maxIterations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java392
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `return maxIterations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 392, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `return maxIterations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 328, #gens: 241, #ops: 1, parent:327] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 328, errors: [DirectSearchOptimizer.java:399: error: incompatible types: unexpected return value
		} 		return maxIterations;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(164): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `return maxIterations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (327(f=2.0), 328(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (327(f=2.0), )
----------Running generation: 165, population size: 1

***** Generation 165 : 0
**Parent Variant: [Variant id: 329, #gens: 240, #ops: 0, parent:-]

--Child created id: 330
--Creating new operations for variant [Variant id: 330, #gens: 240, #ops: 0, parent:329]
---analyzing modificationPoint position: 22
Templates availables2
Attempts Base Ingredients  1 total 2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java66
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 330, #gens: 240, #ops: 1, parent:329] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 330, errors: [MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(165): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (329(f=2.0), 330(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (329(f=2.0), )
----------Running generation: 166, population size: 1

***** Generation 166 : 0
**Parent Variant: [Variant id: 331, #gens: 240, #ops: 0, parent:-]

--Child created id: 332
--Creating new operations for variant [Variant id: 332, #gens: 240, #ops: 0, parent:331]
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  vertexI[k] = startPoint[k] + confI[k]
---analyzing modificationPoint position: 15
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 332, #gens: 240, #ops: 1, parent:331] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 332, errors: [AbstractFormat.java:92: error: call to this must be first statement in constructor
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                		                                                                                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(166): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (331(f=2.0), 332(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (331(f=2.0), )
----------Running generation: 167, population size: 1

***** Generation 167 : 0
**Parent Variant: [Variant id: 333, #gens: 240, #ops: 0, parent:-]

--Child created id: 334
--Creating new operations for variant [Variant id: 334, #gens: 240, #ops: 0, parent:333]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 40
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java132
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 334, #gens: 241, #ops: 1, parent:333] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 334, errors: [MultiDirectional.java:132: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
		evaluateSimplex(comparator); 		final double[] xSmallest = original[0].getPointRef();
		                             		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(167): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (333(f=2.0), 334(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (333(f=2.0), )
----------Running generation: 168, population size: 1

***** Generation 168 : 0
**Parent Variant: [Variant id: 335, #gens: 240, #ops: 0, parent:-]

--Child created id: 336
--Creating new operations for variant [Variant id: 336, #gens: 240, #ops: 0, parent:335]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 26
Templates availables3
Attempts Base Ingredients  1 total 3
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]
---analyzing modificationPoint position: 112
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  setMaxEvaluations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 91
---modifPoint 3 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 39
Templates availables2
Attempts Base Ingredients  1 total 2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 336, #gens: 240, #ops: 1, parent:335] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 336
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-336/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(168): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (335(f=2.0), 336(f=2.0), )
Selected to next generation: IDs2--> (335(f=2.0), )
----------Running generation: 169, population size: 1

***** Generation 169 : 0
**Parent Variant: [Variant id: 337, #gens: 240, #ops: 0, parent:-]

--Child created id: 338
--Creating new operations for variant [Variant id: 338, #gens: 240, #ops: 0, parent:337]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 338, #gens: 241, #ops: 1, parent:337] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 338, errors: [MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(169): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (337(f=2.0), 338(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (337(f=2.0), )
----------Running generation: 170, population size: 1

***** Generation 170 : 0
**Parent Variant: [Variant id: 339, #gens: 240, #ops: 0, parent:-]

--Child created id: 340
--Creating new operations for variant [Variant id: 340, #gens: 240, #ops: 0, parent:339]
---analyzing modificationPoint position: 198
location: Fraction.java254
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den == 0) { 	throw org.apache.commons.math.MathRuntimeException.createArithmeticException("zero [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 340, #gens: 239, #ops: 1, parent:339] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 340
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-340/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(170): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den == 0) { 	throw org.apache.commons.math.MathRuntimeException.createArithmeticException("zero [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (339(f=2.0), 340(f=2.0), )
Selected to next generation: IDs2--> (339(f=2.0), )
----------Running generation: 171, population size: 1

***** Generation 171 : 0
**Parent Variant: [Variant id: 341, #gens: 240, #ops: 0, parent:-]

--Child created id: 342
--Creating new operations for variant [Variant id: 342, #gens: 240, #ops: 0, parent:341]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [checker]
--> var from patch: checker spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java145
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 145, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 342, #gens: 241, #ops: 1, parent:341] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 342, errors: [DirectSearchOptimizer.java:320: error: illegal start of expression
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		if ((++iterations) > maxIterations) {
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(171): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (341(f=2.0), 342(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (341(f=2.0), )
----------Running generation: 172, population size: 1

***** Generation 172 : 0
**Parent Variant: [Variant id: 343, #gens: 240, #ops: 0, parent:-]

--Child created id: 344
--Creating new operations for variant [Variant id: 344, #gens: 240, #ops: 0, parent:343]
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java103
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 344, #gens: 241, #ops: 1, parent:343] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 344
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-344/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(172): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (343(f=2.0), 344(f=2.0), )
Selected to next generation: IDs2--> (343(f=2.0), )
----------Running generation: 173, population size: 1

***** Generation 173 : 0
**Parent Variant: [Variant id: 345, #gens: 240, #ops: 0, parent:-]

--Child created id: 346
--Creating new operations for variant [Variant id: 346, #gens: 240, #ops: 0, parent:345]
---analyzing modificationPoint position: 145
location: AbstractFormat.java170
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 346, #gens: 239, #ops: 1, parent:345] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 346
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-346/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(173): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (345(f=2.0), 346(f=2.0), )
Selected to next generation: IDs2--> (345(f=2.0), )
----------Running generation: 174, population size: 1

***** Generation 174 : 0
**Parent Variant: [Variant id: 347, #gens: 240, #ops: 0, parent:-]

--Child created id: 348
--Creating new operations for variant [Variant id: 348, #gens: 240, #ops: 0, parent:347]
---analyzing modificationPoint position: 82
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 348, #gens: 239, #ops: 1, parent:347] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 348
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-348/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(174): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (347(f=2.0), 348(f=2.0), )
Selected to next generation: IDs2--> (347(f=2.0), )
----------Running generation: 175, population size: 1

***** Generation 175 : 0
**Parent Variant: [Variant id: 349, #gens: 240, #ops: 0, parent:-]

--Child created id: 350
--Creating new operations for variant [Variant id: 350, #gens: 240, #ops: 0, parent:349]
---analyzing modificationPoint position: 75
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 92
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 4 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 350, #gens: 241, #ops: 1, parent:349] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 350
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-350/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(175): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (349(f=2.0), 350(f=2.0), )
Selected to next generation: IDs2--> (349(f=2.0), )
----------Running generation: 176, population size: 1

***** Generation 176 : 0
**Parent Variant: [Variant id: 351, #gens: 240, #ops: 0, parent:-]

--Child created id: 352
--Creating new operations for variant [Variant id: 352, #gens: 240, #ops: 0, parent:351]
---analyzing modificationPoint position: 146
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [index, n, ret, c]
--> var from patch: index spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java172
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `if (index < n) { 	ret = c; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 172, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `if (index < n) { 	ret = c; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 352, #gens: 240, #ops: 1, parent:351] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 352
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-352/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(176): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `if (index < n) { 	ret = c; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (351(f=2.0), 352(f=2.0), )
Selected to next generation: IDs2--> (351(f=2.0), )
----------Running generation: 177, population size: 1

***** Generation 177 : 0
**Parent Variant: [Variant id: 353, #gens: 240, #ops: 0, parent:-]

--Child created id: 354
--Creating new operations for variant [Variant id: 354, #gens: 240, #ops: 0, parent:353]
---analyzing modificationPoint position: 18
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 354, #gens: 239, #ops: 1, parent:353] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 354
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-354/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(177): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (353(f=2.0), 354(f=2.0), )
Selected to next generation: IDs2--> (353(f=2.0), )
----------Running generation: 178, population size: 1

***** Generation 178 : 0
**Parent Variant: [Variant id: 355, #gens: 240, #ops: 0, parent:-]

--Child created id: 356
--Creating new operations for variant [Variant id: 356, #gens: 240, #ops: 0, parent:355]
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java392
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `break` (spoon.support.reflect.code.CtBreakImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 392, pointed element: CtBreakImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `break` (spoon.support.reflect.code.CtBreakImpl) 

--Summary Creation: for variant [Variant id: 356, #gens: 241, #ops: 1, parent:355] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 356, errors: [DirectSearchOptimizer.java:399: error: break outside switch or loop
		} 		break;
		  		^]
Ingredient counter is Zero
---Undoing: gnrtn(178): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `break` (spoon.support.reflect.code.CtBreakImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (355(f=2.0), 356(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (355(f=2.0), )
----------Running generation: 179, population size: 1

***** Generation 179 : 0
**Parent Variant: [Variant id: 357, #gens: 240, #ops: 0, parent:-]

--Child created id: 358
--Creating new operations for variant [Variant id: 358, #gens: 240, #ops: 0, parent:357]
---analyzing modificationPoint position: 116
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  this.checker = checker
---analyzing modificationPoint position: 191
location: DirectSearchOptimizer.java301
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an optimum return simplex[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 358, #gens: 239, #ops: 1, parent:357] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 358
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-358/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(179): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an optimum return simplex[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (357(f=2.0), 358(f=4.0), )
Selected to next generation: IDs2--> (357(f=2.0), )
----------Running generation: 180, population size: 1

***** Generation 180 : 0
**Parent Variant: [Variant id: 359, #gens: 240, #ops: 0, parent:-]

--Child created id: 360
--Creating new operations for variant [Variant id: 360, #gens: 240, #ops: 0, parent:359]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 360, #gens: 239, #ops: 1, parent:359] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 360
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-360/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(180): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (359(f=2.0), 360(f=2.0), )
Selected to next generation: IDs2--> (359(f=2.0), )
----------Running generation: 181, population size: 1

***** Generation 181 : 0
**Parent Variant: [Variant id: 361, #gens: 240, #ops: 0, parent:-]

--Child created id: 362
--Creating new operations for variant [Variant id: 362, #gens: 240, #ops: 0, parent:361]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 144
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  c = source.charAt(index++)
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 362, #gens: 241, #ops: 1, parent:361] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 362, errors: [ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(181): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (361(f=2.0), 362(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (361(f=2.0), )
----------Running generation: 182, population size: 1

***** Generation 182 : 0
**Parent Variant: [Variant id: 363, #gens: 240, #ops: 0, parent:-]

--Child created id: 364
--Creating new operations for variant [Variant id: 364, #gens: 240, #ops: 0, parent:363]
---analyzing modificationPoint position: 100
location: DirectSearchOptimizer.java289
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 364, #gens: 239, #ops: 1, parent:363] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 364
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-364/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(182): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (363(f=2.0), 364(f=3.0), )
Selected to next generation: IDs2--> (363(f=2.0), )
----------Running generation: 183, population size: 1

***** Generation 183 : 0
**Parent Variant: [Variant id: 365, #gens: 240, #ops: 0, parent:-]

--Child created id: 366
--Creating new operations for variant [Variant id: 366, #gens: 240, #ops: 0, parent:365]
---analyzing modificationPoint position: 122
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  buildSimplex(startPoint)
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 99
Templates availables1
Attempts Base Ingredients  1 total 1
---modifPoint 2 not mutation generated in  return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...]
---analyzing modificationPoint position: 198
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 3 not mutation generated in  if (den == 0) { 	throw org.apache.commons.math.MathRuntimeException.createArithmeticException("zero [...]
---analyzing modificationPoint position: 0
---modifPoint 4 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 5 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 366, #gens: 240, #ops: 1, parent:365] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 366
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-366/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(183): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (365(f=2.0), 366(f=2.0), )
Selected to next generation: IDs2--> (365(f=2.0), )
----------Running generation: 184, population size: 1

***** Generation 184 : 0
**Parent Variant: [Variant id: 367, #gens: 240, #ops: 0, parent:-]

--Child created id: 368
--Creating new operations for variant [Variant id: 368, #gens: 240, #ops: 0, parent:367]
---analyzing modificationPoint position: 183
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [this.point]
--> var from patch: this.point spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 














































double[] point
SameName: final 














































double[] point
Transforming shadowed variable in point = point.clone()
location: RealPointValuePair.java49
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 49, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 368, #gens: 240, #ops: 1, parent:367] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 368, errors: [RealPointValuePair.java:52: error: final parameter point may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		point = point.clone(); 		this.value = value;}
	    	                                                                      		^, RealPointValuePair.java:52: error: variable point might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		point = point.clone(); 		this.value = value;}
	    	                                                                      		                       		                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(184): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (367(f=2.0), 368(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (367(f=2.0), )
----------Running generation: 185, population size: 1

***** Generation 185 : 0
**Parent Variant: [Variant id: 369, #gens: 240, #ops: 0, parent:-]

--Child created id: 370
--Creating new operations for variant [Variant id: 370, #gens: 240, #ops: 0, parent:369]
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 370, #gens: 239, #ops: 1, parent:369] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 370
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-370/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(185): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (369(f=2.0), 370(f=2.0), )
Selected to next generation: IDs2--> (369(f=2.0), )
----------Running generation: 186, population size: 1

***** Generation 186 : 0
**Parent Variant: [Variant id: 371, #gens: 240, #ops: 0, parent:-]

--Child created id: 372
--Creating new operations for variant [Variant id: 372, #gens: 240, #ops: 0, parent:371]
---analyzing modificationPoint position: 56
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 372, #gens: 239, #ops: 1, parent:371] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 372
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-372/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(186): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (371(f=2.0), 372(f=2.0), )
Selected to next generation: IDs2--> (371(f=2.0), )
----------Running generation: 187, population size: 1

***** Generation 187 : 0
**Parent Variant: [Variant id: 373, #gens: 240, #ops: 0, parent:-]

--Child created id: 374
--Creating new operations for variant [Variant id: 374, #gens: 240, #ops: 0, parent:373]
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 374, #gens: 239, #ops: 1, parent:373] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 374
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-374/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(187): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (373(f=2.0), 374(f=2.0), )
Selected to next generation: IDs2--> (373(f=2.0), )
----------Running generation: 188, population size: 1

***** Generation 188 : 0
**Parent Variant: [Variant id: 375, #gens: 240, #ops: 0, parent:-]

--Child created id: 376
--Creating new operations for variant [Variant id: 376, #gens: 240, #ops: 0, parent:375]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 376, #gens: 241, #ops: 1, parent:375] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 376, errors: [AbstractFormat.java:103: error: non-static variable denominatorFormat cannot be referenced from a static context
		return denominatorFormat; 		return nf;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(188): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (375(f=2.0), 376(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (375(f=2.0), )
----------Running generation: 189, population size: 1

***** Generation 189 : 0
**Parent Variant: [Variant id: 377, #gens: 240, #ops: 0, parent:-]

--Child created id: 378
--Creating new operations for variant [Variant id: 378, #gens: 240, #ops: 0, parent:377]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 170
location: MultiDirectional.java84
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 378, #gens: 239, #ops: 1, parent:377] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 378
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-378/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(189): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (377(f=2.0), 378(f=3.0), )
Selected to next generation: IDs2--> (377(f=2.0), )
----------Running generation: 190, population size: 1

***** Generation 190 : 0
**Parent Variant: [Variant id: 379, #gens: 240, #ops: 0, parent:-]

--Child created id: 380
--Creating new operations for variant [Variant id: 380, #gens: 240, #ops: 0, parent:379]
---analyzing modificationPoint position: 62
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 141
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java162
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 162, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 380, #gens: 240, #ops: 1, parent:379] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 380, errors: [AbstractFormat.java:162: error: variable index is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
	 */ 	protected static char parseNextCharacter(final java.lang.String source, final java.text.ParsePosition pos) { 		int index = pos.getIndex(); 		int index = pos.getIndex();
	    	                                                                                                             		                            		    ^, AbstractFormat.java:166: error: cannot find symbol
		if (index < n) {
		            ^
  symbol:   variable n
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:170: error: cannot find symbol
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:173: error: cannot find symbol
			if (index < n) {
			            ^
  symbol:   variable n
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(190): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (379(f=2.0), 380(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (379(f=2.0), )
----------Running generation: 191, population size: 1

***** Generation 191 : 0
**Parent Variant: [Variant id: 381, #gens: 240, #ops: 0, parent:-]

--Child created id: 382
--Creating new operations for variant [Variant id: 382, #gens: 240, #ops: 0, parent:381]
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 382, #gens: 239, #ops: 1, parent:381] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 382
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-382/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(191): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (381(f=2.0), 382(f=2.0), )
Selected to next generation: IDs2--> (381(f=2.0), )
----------Running generation: 192, population size: 1

***** Generation 192 : 0
**Parent Variant: [Variant id: 383, #gens: 240, #ops: 0, parent:-]

--Child created id: 384
--Creating new operations for variant [Variant id: 384, #gens: 240, #ops: 0, parent:383]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 75
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 166
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 2 not mutation generated in  // compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 384, #gens: 239, #ops: 1, parent:383] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 384
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-384/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(192): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (383(f=2.0), 384(f=2.0), )
Selected to next generation: IDs2--> (383(f=2.0), )
----------Running generation: 193, population size: 1

***** Generation 193 : 0
**Parent Variant: [Variant id: 385, #gens: 240, #ops: 0, parent:-]

--Child created id: 386
--Creating new operations for variant [Variant id: 386, #gens: 240, #ops: 0, parent:385]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 386, #gens: 241, #ops: 1, parent:385] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 386, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable gamma
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		this.gamma = gamma; 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(193): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (385(f=2.0), 386(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (385(f=2.0), )
----------Running generation: 194, population size: 1

***** Generation 194 : 0
**Parent Variant: [Variant id: 387, #gens: 240, #ops: 0, parent:-]

--Child created id: 388
--Creating new operations for variant [Variant id: 388, #gens: 240, #ops: 0, parent:387]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 92
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 388, #gens: 241, #ops: 1, parent:387] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 388
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-388/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(194): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (387(f=2.0), 388(f=2.0), )
Selected to next generation: IDs2--> (387(f=2.0), )
----------Running generation: 195, population size: 1

***** Generation 195 : 0
**Parent Variant: [Variant id: 389, #gens: 240, #ops: 0, parent:-]

--Child created id: 390
--Creating new operations for variant [Variant id: 390, #gens: 240, #ops: 0, parent:389]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 163
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 390, #gens: 241, #ops: 1, parent:389] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 390
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-390/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(195): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (389(f=2.0), 390(f=2.0), )
Selected to next generation: IDs2--> (389(f=2.0), )
----------Running generation: 196, population size: 1

***** Generation 196 : 0
**Parent Variant: [Variant id: 391, #gens: 240, #ops: 0, parent:-]

--Child created id: 392
--Creating new operations for variant [Variant id: 392, #gens: 240, #ops: 0, parent:391]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 392, #gens: 239, #ops: 1, parent:391] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 392
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-392/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(196): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (391(f=2.0), 392(f=2.0), )
Selected to next generation: IDs2--> (391(f=2.0), )
----------Running generation: 197, population size: 1

***** Generation 197 : 0
**Parent Variant: [Variant id: 393, #gens: 240, #ops: 0, parent:-]

--Child created id: 394
--Creating new operations for variant [Variant id: 394, #gens: 240, #ops: 0, parent:393]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 126
Templates availables17
Attempts Base Ingredients  1 total 17
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 105
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 3 not mutation generated in  if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]
---analyzing modificationPoint position: 48
---modifPoint 4 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 183
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 5 not mutation generated in  this.point = point.clone()
---analyzing modificationPoint position: 130
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 6 not mutation generated in  for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; }
---analyzing modificationPoint position: 236
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 7 not mutation generated in  u = -t
---analyzing modificationPoint position: 39
location: MultiDirectional.java131
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 394, #gens: 239, #ops: 1, parent:393] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child compiles: id 394
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-394/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(197): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (393(f=2.0), 394(f=4.0), )
Selected to next generation: IDs2--> (393(f=2.0), )
----------Running generation: 198, population size: 1

***** Generation 198 : 0
**Parent Variant: [Variant id: 395, #gens: 240, #ops: 0, parent:-]

--Child created id: 396
--Creating new operations for variant [Variant id: 396, #gens: 240, #ops: 0, parent:395]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 98, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 396, #gens: 241, #ops: 1, parent:395] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 396
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-396/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(198): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (395(f=2.0), 396(f=2.0), )
Selected to next generation: IDs2--> (395(f=2.0), )
----------Running generation: 199, population size: 1

***** Generation 199 : 0
**Parent Variant: [Variant id: 397, #gens: 240, #ops: 0, parent:-]

--Child created id: 398
--Creating new operations for variant [Variant id: 398, #gens: 240, #ops: 0, parent:397]
---analyzing modificationPoint position: 51
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 58
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 398, #gens: 241, #ops: 1, parent:397] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 398, errors: [ProperBigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:250: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:250: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:251: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:252: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:252: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:253: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:253: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:254: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:254: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:254: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:254: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:254: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(199): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (397(f=2.0), 398(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (397(f=2.0), )
----------Running generation: 200, population size: 1

***** Generation 200 : 0
**Parent Variant: [Variant id: 399, #gens: 240, #ops: 0, parent:-]

--Child created id: 400
--Creating new operations for variant [Variant id: 400, #gens: 240, #ops: 0, parent:399]
---analyzing modificationPoint position: 57
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 87
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 1 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 29
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 400, #gens: 240, #ops: 1, parent:399] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 400, errors: [MultiDirectional.java:117: error: cannot find symbol
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                                                                                        		              ^
  symbol:   variable xSmallest
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                  ^
  symbol:   variable xSmallest
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                           ^
  symbol:   variable xSmallest
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(200): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (399(f=2.0), 400(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (399(f=2.0), )
----------Running generation: 201, population size: 1

***** Generation 201 : 0
**Parent Variant: [Variant id: 401, #gens: 240, #ops: 0, parent:-]

--Child created id: 402
--Creating new operations for variant [Variant id: 402, #gens: 240, #ops: 0, parent:401]
---analyzing modificationPoint position: 60
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 36
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java124
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `final double[] xTransformed = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 124, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `final double[] xTransformed = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 402, #gens: 241, #ops: 1, parent:401] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 402, errors: [MultiDirectional.java:124: error: variable xTransformed is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
			final double[] xTransformed = new double[n]; 			final double[] xTransformed = new double[n];
			                                             			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(201): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `final double[] xTransformed = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (401(f=2.0), 402(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (401(f=2.0), )
----------Running generation: 202, population size: 1

***** Generation 202 : 0
**Parent Variant: [Variant id: 403, #gens: 240, #ops: 0, parent:-]

--Child created id: 404
--Creating new operations for variant [Variant id: 404, #gens: 240, #ops: 0, parent:403]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 404, #gens: 239, #ops: 1, parent:403] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 404
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-404/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(202): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (403(f=2.0), 404(f=2.0), )
Selected to next generation: IDs2--> (403(f=2.0), )
----------Running generation: 203, population size: 1

***** Generation 203 : 0
**Parent Variant: [Variant id: 405, #gens: 240, #ops: 0, parent:-]

--Child created id: 406
--Creating new operations for variant [Variant id: 406, #gens: 240, #ops: 0, parent:405]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 114
location: DirectSearchOptimizer.java220
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 406, #gens: 239, #ops: 1, parent:405] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 406
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-406/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(203): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (405(f=2.0), 406(f=4.0), )
Selected to next generation: IDs2--> (405(f=2.0), )
----------Running generation: 204, population size: 1

***** Generation 204 : 0
**Parent Variant: [Variant id: 407, #gens: 240, #ops: 0, parent:-]

--Child created id: 408
--Creating new operations for variant [Variant id: 408, #gens: 240, #ops: 0, parent:407]
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 234, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 408, #gens: 241, #ops: 1, parent:407] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 408
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-408/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(204): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (407(f=2.0), 408(f=2.0), )
Selected to next generation: IDs2--> (407(f=2.0), )
----------Running generation: 205, population size: 1

***** Generation 205 : 0
**Parent Variant: [Variant id: 409, #gens: 240, #ops: 0, parent:-]

--Child created id: 410
--Creating new operations for variant [Variant id: 410, #gens: 240, #ops: 0, parent:409]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java118
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 118, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 410, #gens: 240, #ops: 1, parent:409] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 410
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-410/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(205): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (409(f=2.0), 410(f=2.0), )
Selected to next generation: IDs2--> (409(f=2.0), )
----------Running generation: 206, population size: 1

***** Generation 206 : 0
**Parent Variant: [Variant id: 411, #gens: 240, #ops: 0, parent:-]

--Child created id: 412
--Creating new operations for variant [Variant id: 412, #gens: 240, #ops: 0, parent:411]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 412, #gens: 241, #ops: 1, parent:411] gen mutated: 1 , gen not mut: 0, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 412
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-412/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(206): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (411(f=2.0), 412(f=2.0), )
Selected to next generation: IDs2--> (411(f=2.0), )
----------Running generation: 207, population size: 1

***** Generation 207 : 0
**Parent Variant: [Variant id: 413, #gens: 240, #ops: 0, parent:-]

--Child created id: 414
--Creating new operations for variant [Variant id: 414, #gens: 240, #ops: 0, parent:413]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 414, #gens: 241, #ops: 1, parent:413] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 414
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-414/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(207): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (413(f=2.0), 414(f=2.0), )
Selected to next generation: IDs2--> (413(f=2.0), )
----------Running generation: 208, population size: 1

***** Generation 208 : 0
**Parent Variant: [Variant id: 415, #gens: 240, #ops: 0, parent:-]

--Child created id: 416
--Creating new operations for variant [Variant id: 416, #gens: 240, #ops: 0, parent:415]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 416, #gens: 241, #ops: 1, parent:415] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 416
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-416/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(208): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (415(f=2.0), 416(f=2.0), )
Selected to next generation: IDs2--> (415(f=2.0), )
----------Running generation: 209, population size: 1

***** Generation 209 : 0
**Parent Variant: [Variant id: 417, #gens: 240, #ops: 0, parent:-]

--Child created id: 418
--Creating new operations for variant [Variant id: 418, #gens: 240, #ops: 0, parent:417]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 418, #gens: 241, #ops: 1, parent:417] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 418, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable gamma
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		this.gamma = 0.5; 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(209): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (417(f=2.0), 418(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (417(f=2.0), )
----------Running generation: 210, population size: 1

***** Generation 210 : 0
**Parent Variant: [Variant id: 419, #gens: 240, #ops: 0, parent:-]

--Child created id: 420
--Creating new operations for variant [Variant id: 420, #gens: 240, #ops: 0, parent:419]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 87
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 1 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Name Conflict [n, original, xSmallest, coeff, simplex, java.lang.Double.NaN]
---modifPoint 2 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 420, #gens: 241, #ops: 1, parent:419] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 420
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-420/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(210): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (419(f=2.0), 420(f=2.0), )
Selected to next generation: IDs2--> (419(f=2.0), )
----------Running generation: 211, population size: 1

***** Generation 211 : 0
**Parent Variant: [Variant id: 421, #gens: 240, #ops: 0, parent:-]

--Child created id: 422
--Creating new operations for variant [Variant id: 422, #gens: 240, #ops: 0, parent:421]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 35
---modifPoint 1 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 422, #gens: 241, #ops: 1, parent:421] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 422
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-422/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(211): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (421(f=2.0), 422(f=2.0), )
Selected to next generation: IDs2--> (421(f=2.0), )
----------Running generation: 212, population size: 1

***** Generation 212 : 0
**Parent Variant: [Variant id: 423, #gens: 240, #ops: 0, parent:-]

--Child created id: 424
--Creating new operations for variant [Variant id: 424, #gens: 240, #ops: 0, parent:423]
---analyzing modificationPoint position: 121
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  evaluations = 0
---analyzing modificationPoint position: 71
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java173
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 173, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 424, #gens: 241, #ops: 1, parent:423] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 424, errors: [FractionFormat.java:174: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
	 */ 	@java.lang.Override 	public java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) { 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault()); 		java.lang.StringBuffer ret = null;
	    	                    	                                                                                                                                               		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(212): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.StringBuffer ret = null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (423(f=2.0), 424(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (423(f=2.0), )
----------Running generation: 213, population size: 1

***** Generation 213 : 0
**Parent Variant: [Variant id: 425, #gens: 240, #ops: 0, parent:-]

--Child created id: 426
--Creating new operations for variant [Variant id: 426, #gens: 240, #ops: 0, parent:425]
---analyzing modificationPoint position: 135
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 11
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 72
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 3 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 76
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 426, #gens: 239, #ops: 1, parent:425] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 426
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-426/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(213): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (425(f=2.0), 426(f=2.0), )
Selected to next generation: IDs2--> (425(f=2.0), )
----------Running generation: 214, population size: 1

***** Generation 214 : 0
**Parent Variant: [Variant id: 427, #gens: 240, #ops: 0, parent:-]

--Child created id: 428
--Creating new operations for variant [Variant id: 428, #gens: 240, #ops: 0, parent:427]
---analyzing modificationPoint position: 44
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 428, #gens: 240, #ops: 1, parent:427] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 428, errors: [ProperFractionFormat.java:93: error: call to this must be first statement in constructor
		pos.setBeginIndex(0); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(214): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (427(f=2.0), 428(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (427(f=2.0), )
----------Running generation: 215, population size: 1

***** Generation 215 : 0
**Parent Variant: [Variant id: 429, #gens: 240, #ops: 0, parent:-]

--Child created id: 430
--Creating new operations for variant [Variant id: 430, #gens: 240, #ops: 0, parent:429]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 168
Templates availables30
Attempts Base Ingredients  1 total 30
Name Conflict [comparator, reflected, best, simplex, original, khi]
---modifPoint 1 not mutation generated in  if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 430, #gens: 241, #ops: 1, parent:429] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 430
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-430/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(215): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (429(f=2.0), 430(f=2.0), )
Selected to next generation: IDs2--> (429(f=2.0), )
----------Running generation: 216, population size: 1

***** Generation 216 : 0
**Parent Variant: [Variant id: 431, #gens: 240, #ops: 0, parent:-]

--Child created id: 432
--Creating new operations for variant [Variant id: 432, #gens: 240, #ops: 0, parent:431]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 85
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 135
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 2 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 11
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 432, #gens: 241, #ops: 1, parent:431] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 432, errors: [AbstractFormat.java:103: error: non-static variable denominatorFormat cannot be referenced from a static context
		return denominatorFormat; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(216): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (431(f=2.0), 432(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (431(f=2.0), )
----------Running generation: 217, population size: 1

***** Generation 217 : 0
**Parent Variant: [Variant id: 433, #gens: 240, #ops: 0, parent:-]

--Child created id: 434
--Creating new operations for variant [Variant id: 434, #gens: 240, #ops: 0, parent:433]
---analyzing modificationPoint position: 97
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [o1]
--> var from patch: o1 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java278
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 278, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 434, #gens: 241, #ops: 1, parent:433] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 434, errors: [DirectSearchOptimizer.java:279: error: variable v1 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v1 = o1.getValue(); 				final double v1 = o1.getValue();
				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(217): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (433(f=2.0), 434(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (433(f=2.0), )
----------Running generation: 218, population size: 1

***** Generation 218 : 0
**Parent Variant: [Variant id: 435, #gens: 240, #ops: 0, parent:-]

--Child created id: 436
--Creating new operations for variant [Variant id: 436, #gens: 240, #ops: 0, parent:435]
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [this.maxEvaluations]
--> var from patch: this.maxEvaluations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java392
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `this.maxEvaluations = maxEvaluations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 392, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `this.maxEvaluations = maxEvaluations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 436, #gens: 241, #ops: 1, parent:435] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 436
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-436/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(218): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `this.maxEvaluations = maxEvaluations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (435(f=2.0), 436(f=2.0), )
Selected to next generation: IDs2--> (435(f=2.0), )
----------Running generation: 219, population size: 1

***** Generation 219 : 0
**Parent Variant: [Variant id: 437, #gens: 240, #ops: 0, parent:-]

--Child created id: 438
--Creating new operations for variant [Variant id: 438, #gens: 240, #ops: 0, parent:437]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 438, #gens: 241, #ops: 1, parent:437] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 438
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-438/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(219): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (437(f=2.0), 438(f=2.0), )
Selected to next generation: IDs2--> (437(f=2.0), )
----------Running generation: 220, population size: 1

***** Generation 220 : 0
**Parent Variant: [Variant id: 439, #gens: 240, #ops: 0, parent:-]

--Child created id: 440
--Creating new operations for variant [Variant id: 440, #gens: 240, #ops: 0, parent:439]
---analyzing modificationPoint position: 70
location: BigFractionFormat.java168
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 440, #gens: 239, #ops: 1, parent:439] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 440, errors: [BigFractionFormat.java:181: error: variable ret might not have been initialized
		return ret;
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(220): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (439(f=2.0), 440(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (439(f=2.0), )
----------Running generation: 221, population size: 1

***** Generation 221 : 0
**Parent Variant: [Variant id: 441, #gens: 240, #ops: 0, parent:-]

--Child created id: 442
--Creating new operations for variant [Variant id: 442, #gens: 240, #ops: 0, parent:441]
---analyzing modificationPoint position: 99
---modifPoint 0 not mutation generated in  return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...]
---analyzing modificationPoint position: 174
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 1 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 105
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 442, #gens: 241, #ops: 1, parent:441] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 442, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		this.numeratorFormat = numeratorFormat; 		this.denominatorFormat = denominatorFormat;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(221): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (441(f=2.0), 442(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (441(f=2.0), )
----------Running generation: 222, population size: 1

***** Generation 222 : 0
**Parent Variant: [Variant id: 443, #gens: 240, #ops: 0, parent:-]

--Child created id: 444
--Creating new operations for variant [Variant id: 444, #gens: 240, #ops: 0, parent:443]
---analyzing modificationPoint position: 199
location: Fraction.java258
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den < 0) { 	if ((num == java.lang.Integer.MIN_VALUE) || (den == java.lang.Integer.MIN_VALUE)) { [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 444, #gens: 239, #ops: 1, parent:443] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 444
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-444/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(222): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den < 0) { 	if ((num == java.lang.Integer.MIN_VALUE) || (den == java.lang.Integer.MIN_VALUE)) { [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (443(f=2.0), 444(f=2.0), )
Selected to next generation: IDs2--> (443(f=2.0), )
----------Running generation: 223, population size: 1

***** Generation 223 : 0
**Parent Variant: [Variant id: 445, #gens: 240, #ops: 0, parent:-]

--Child created id: 446
--Creating new operations for variant [Variant id: 446, #gens: 240, #ops: 0, parent:445]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 108
location: DirectSearchOptimizer.java396
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 446, #gens: 239, #ops: 1, parent:445] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 446
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-446/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(223): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (445(f=2.0), 446(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (445(f=2.0), )
----------Running generation: 224, population size: 1

***** Generation 224 : 0
**Parent Variant: [Variant id: 447, #gens: 240, #ops: 0, parent:-]

--Child created id: 448
--Creating new operations for variant [Variant id: 448, #gens: 240, #ops: 0, parent:447]
---analyzing modificationPoint position: 202
location: Fraction.java274
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 448, #gens: 239, #ops: 1, parent:447] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 448
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-448/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(224): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (447(f=2.0), 448(f=2.0), )
Selected to next generation: IDs2--> (447(f=2.0), )
----------Running generation: 225, population size: 1

***** Generation 225 : 0
**Parent Variant: [Variant id: 449, #gens: 240, #ops: 0, parent:-]

--Child created id: 450
--Creating new operations for variant [Variant id: 450, #gens: 240, #ops: 0, parent:449]
---analyzing modificationPoint position: 196
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [arguments]
--> var from patch: arguments spoon.support.reflect.code.CtFieldReadImpl
location: MathException.java172
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.getDefault()) ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathException line: 172, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.getDefault()) ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 450, #gens: 240, #ops: 1, parent:449] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 450, errors: [MathException.java:172: error: incompatible types: java.lang.Object[] cannot be converted to java.lang.String
	 */ 	@java.lang.Override 	public java.lang.String getLocalizedMessage() { 		return arguments.clone();
	    	                    	                                                		                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(225): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return getMessage(java.util.Locale.getDefault()) ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (449(f=2.0), 450(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (449(f=2.0), )
----------Running generation: 226, population size: 1

***** Generation 226 : 0
**Parent Variant: [Variant id: 451, #gens: 240, #ops: 0, parent:-]

--Child created id: 452
--Creating new operations for variant [Variant id: 452, #gens: 240, #ops: 0, parent:451]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 81
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 452, #gens: 239, #ops: 1, parent:451] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 452
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-452/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(226): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (451(f=2.0), 452(f=2.0), )
Selected to next generation: IDs2--> (451(f=2.0), )
----------Running generation: 227, population size: 1

***** Generation 227 : 0
**Parent Variant: [Variant id: 453, #gens: 240, #ops: 0, parent:-]

--Child created id: 454
--Creating new operations for variant [Variant id: 454, #gens: 240, #ops: 0, parent:453]
---analyzing modificationPoint position: 123
Templates availables19
Attempts Base Ingredients  1 total 19
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 117
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 3 not mutation generated in  if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...]
---analyzing modificationPoint position: 113
location: AbstractFormat.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 454, #gens: 239, #ops: 1, parent:453] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 454
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-454/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(227): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (453(f=2.0), 454(f=2.0), )
Selected to next generation: IDs2--> (453(f=2.0), )
----------Running generation: 228, population size: 1

***** Generation 228 : 0
**Parent Variant: [Variant id: 455, #gens: 240, #ops: 0, parent:-]

--Child created id: 456
--Creating new operations for variant [Variant id: 456, #gens: 240, #ops: 0, parent:455]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 456, #gens: 241, #ops: 1, parent:455] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 456, errors: [MultiDirectional.java:48: error: variable khi might already have been assigned
		this.gamma = 0.5; 		this.khi = 2.0;
		                  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(228): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (455(f=2.0), 456(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (455(f=2.0), )
----------Running generation: 229, population size: 1

***** Generation 229 : 0
**Parent Variant: [Variant id: 457, #gens: 240, #ops: 0, parent:-]

--Child created id: 458
--Creating new operations for variant [Variant id: 458, #gens: 240, #ops: 0, parent:457]
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 458, #gens: 241, #ops: 1, parent:457] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 458, errors: [MultiDirectional.java:82: error: cannot find symbol
					simplex = reflectedSimplex;
					          ^
  symbol:   variable reflectedSimplex
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(229): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (457(f=2.0), 458(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (457(f=2.0), )
----------Running generation: 230, population size: 1

***** Generation 230 : 0
**Parent Variant: [Variant id: 459, #gens: 240, #ops: 0, parent:-]

--Child created id: 460
--Creating new operations for variant [Variant id: 460, #gens: 240, #ops: 0, parent:459]
---analyzing modificationPoint position: 59
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 460, #gens: 240, #ops: 1, parent:459] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 460
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-460/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(230): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (459(f=2.0), 460(f=2.0), )
Selected to next generation: IDs2--> (459(f=2.0), )
----------Running generation: 231, population size: 1

***** Generation 231 : 0
**Parent Variant: [Variant id: 461, #gens: 240, #ops: 0, parent:-]

--Child created id: 462
--Creating new operations for variant [Variant id: 462, #gens: 240, #ops: 0, parent:461]
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 462, #gens: 241, #ops: 1, parent:461] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 462
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-462/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(231): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (461(f=2.0), 462(f=4.0), )
Selected to next generation: IDs2--> (461(f=2.0), )
----------Running generation: 232, population size: 1

***** Generation 232 : 0
**Parent Variant: [Variant id: 463, #gens: 240, #ops: 0, parent:-]

--Child created id: 464
--Creating new operations for variant [Variant id: 464, #gens: 240, #ops: 0, parent:463]
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 58
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 464, #gens: 239, #ops: 1, parent:463] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 464
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-464/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(232): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (463(f=2.0), 464(f=2.0), )
Selected to next generation: IDs2--> (463(f=2.0), )
----------Running generation: 233, population size: 1

***** Generation 233 : 0
**Parent Variant: [Variant id: 465, #gens: 240, #ops: 0, parent:-]

--Child created id: 466
--Creating new operations for variant [Variant id: 466, #gens: 240, #ops: 0, parent:465]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [num, whole, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 466, #gens: 240, #ops: 1, parent:465] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 466, errors: [ProperBigFractionFormat.java:239: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:242: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:242: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:245: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:245: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:246: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:247: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:247: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:248: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:248: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:248: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:249: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:249: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:249: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:249: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:249: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(233): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = whole.multiply(den).add(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (465(f=2.0), 466(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (465(f=2.0), )
----------Running generation: 234, population size: 1

***** Generation 234 : 0
**Parent Variant: [Variant id: 467, #gens: 240, #ops: 0, parent:-]

--Child created id: 468
--Creating new operations for variant [Variant id: 468, #gens: 240, #ops: 0, parent:467]
---analyzing modificationPoint position: 61
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 468, #gens: 241, #ops: 1, parent:467] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 468
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-468/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(234): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (467(f=2.0), 468(f=2.0), )
Selected to next generation: IDs2--> (467(f=2.0), )
----------Running generation: 235, population size: 1

***** Generation 235 : 0
**Parent Variant: [Variant id: 469, #gens: 240, #ops: 0, parent:-]

--Child created id: 470
--Creating new operations for variant [Variant id: 470, #gens: 240, #ops: 0, parent:469]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 470, #gens: 241, #ops: 1, parent:469] gen mutated: 1 , gen not mut: 1, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 470
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-470/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(235): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (469(f=2.0), 470(f=2.0), )
Selected to next generation: IDs2--> (469(f=2.0), )
----------Running generation: 236, population size: 1

***** Generation 236 : 0
**Parent Variant: [Variant id: 471, #gens: 240, #ops: 0, parent:-]

--Child created id: 472
--Creating new operations for variant [Variant id: 472, #gens: 240, #ops: 0, parent:471]
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 472, #gens: 239, #ops: 1, parent:471] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 472
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-472/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(236): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (471(f=2.0), 472(f=2.0), )
Selected to next generation: IDs2--> (471(f=2.0), )
----------Running generation: 237, population size: 1

***** Generation 237 : 0
**Parent Variant: [Variant id: 473, #gens: 240, #ops: 0, parent:-]

--Child created id: 474
--Creating new operations for variant [Variant id: 474, #gens: 240, #ops: 0, parent:473]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 474, #gens: 241, #ops: 1, parent:473] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 474
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-474/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(237): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (473(f=2.0), 474(f=2.0), )
Selected to next generation: IDs2--> (473(f=2.0), )
----------Running generation: 238, population size: 1

***** Generation 238 : 0
**Parent Variant: [Variant id: 475, #gens: 240, #ops: 0, parent:-]

--Child created id: 476
--Creating new operations for variant [Variant id: 476, #gens: 240, #ops: 0, parent:475]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
---modifPoint 1 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 121
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  evaluations = 0
---analyzing modificationPoint position: 87
---modifPoint 3 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 7
---modifPoint 4 not mutation generated in  return nf
---analyzing modificationPoint position: 134
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 5 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i]
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 6 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 7 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 20
location: MultiDirectional.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 476, #gens: 239, #ops: 1, parent:475] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child does NOT compile: 476, errors: [MultiDirectional.java:49: error: variable khi might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(238): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (475(f=2.0), 476(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (475(f=2.0), )
----------Running generation: 239, population size: 1

***** Generation 239 : 0
**Parent Variant: [Variant id: 477, #gens: 240, #ops: 0, parent:-]

--Child created id: 478
--Creating new operations for variant [Variant id: 478, #gens: 240, #ops: 0, parent:477]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 478, #gens: 241, #ops: 1, parent:477] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 478
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-478/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(239): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (477(f=2.0), 478(f=2.0), )
Selected to next generation: IDs2--> (477(f=2.0), )
----------Running generation: 240, population size: 1

***** Generation 240 : 0
**Parent Variant: [Variant id: 479, #gens: 240, #ops: 0, parent:-]

--Child created id: 480
--Creating new operations for variant [Variant id: 480, #gens: 240, #ops: 0, parent:479]
---analyzing modificationPoint position: 44
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 480, #gens: 239, #ops: 1, parent:479] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 480
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-480/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(240): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (479(f=2.0), 480(f=2.0), )
Selected to next generation: IDs2--> (479(f=2.0), )
----------Running generation: 241, population size: 1

***** Generation 241 : 0
**Parent Variant: [Variant id: 481, #gens: 240, #ops: 0, parent:-]

--Child created id: 482
--Creating new operations for variant [Variant id: 482, #gens: 240, #ops: 0, parent:481]
---analyzing modificationPoint position: 111
location: DirectSearchOptimizer.java118
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxIterations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 482, #gens: 239, #ops: 1, parent:481] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 482
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-482/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(241): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxIterations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (481(f=2.0), 482(f=2.0), )
Selected to next generation: IDs2--> (481(f=2.0), )
----------Running generation: 242, population size: 1

***** Generation 242 : 0
**Parent Variant: [Variant id: 483, #gens: 240, #ops: 0, parent:-]

--Child created id: 484
--Creating new operations for variant [Variant id: 484, #gens: 240, #ops: 0, parent:483]
---analyzing modificationPoint position: 114
location: DirectSearchOptimizer.java220
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 484, #gens: 239, #ops: 1, parent:483] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 484
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-484/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(242): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (483(f=2.0), 484(f=4.0), )
Selected to next generation: IDs2--> (483(f=2.0), )
----------Running generation: 243, population size: 1

***** Generation 243 : 0
**Parent Variant: [Variant id: 485, #gens: 240, #ops: 0, parent:-]

--Child created id: 486
--Creating new operations for variant [Variant id: 486, #gens: 240, #ops: 0, parent:485]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [o1]
--> var from patch: o1 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java279
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 279, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 486, #gens: 241, #ops: 1, parent:485] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 486, errors: [DirectSearchOptimizer.java:279: error: variable v1 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v1 = o1.getValue(); 				final double v1 = o1.getValue();
				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(243): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (485(f=2.0), 486(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (485(f=2.0), )
----------Running generation: 244, population size: 1

***** Generation 244 : 0
**Parent Variant: [Variant id: 487, #gens: 240, #ops: 0, parent:-]

--Child created id: 488
--Creating new operations for variant [Variant id: 488, #gens: 240, #ops: 0, parent:487]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 488, #gens: 241, #ops: 1, parent:487] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 488
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-488/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(244): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (487(f=2.0), 488(f=2.0), )
Selected to next generation: IDs2--> (487(f=2.0), )
----------Running generation: 245, population size: 1

***** Generation 245 : 0
**Parent Variant: [Variant id: 489, #gens: 240, #ops: 0, parent:-]

--Child created id: 490
--Creating new operations for variant [Variant id: 490, #gens: 240, #ops: 0, parent:489]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 74
---modifPoint 2 not mutation generated in  return ret
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java97
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 97, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 490, #gens: 241, #ops: 1, parent:489] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 490, errors: [ProperFractionFormat.java:97: error: variable den is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		int den = fraction.getDenominator(); 		int den = fraction.getDenominator();
		                                     		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(245): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int whole = num / den ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (489(f=2.0), 490(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (489(f=2.0), )
----------Running generation: 246, population size: 1

***** Generation 246 : 0
**Parent Variant: [Variant id: 491, #gens: 240, #ops: 0, parent:-]

--Child created id: 492
--Creating new operations for variant [Variant id: 492, #gens: 240, #ops: 0, parent:491]
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
Attempts Base Ingredients  2 total 38
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 115
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  this.maxEvaluations = maxEvaluations
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 492, #gens: 239, #ops: 1, parent:491] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 492
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-492/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(246): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (491(f=2.0), 492(f=2.0), )
Selected to next generation: IDs2--> (491(f=2.0), )
----------Running generation: 247, population size: 1

***** Generation 247 : 0
**Parent Variant: [Variant id: 493, #gens: 240, #ops: 0, parent:-]

--Child created id: 494
--Creating new operations for variant [Variant id: 494, #gens: 240, #ops: 0, parent:493]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 138
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java149
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 149, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 494, #gens: 240, #ops: 1, parent:493] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 494, errors: [AbstractFormat.java:150: error: call to this must be first statement in constructor
	 */ 	protected static void parseAndIgnoreWhitespace(final java.lang.String source, final java.text.ParsePosition pos) { 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(247): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (493(f=2.0), 494(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (493(f=2.0), )
----------Running generation: 248, population size: 1

***** Generation 248 : 0
**Parent Variant: [Variant id: 495, #gens: 240, #ops: 0, parent:-]

--Child created id: 496
--Creating new operations for variant [Variant id: 496, #gens: 240, #ops: 0, parent:495]
---analyzing modificationPoint position: 85
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, n]
--> var from patch: simplex spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 496, #gens: 241, #ops: 1, parent:495] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 496
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-496/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(248): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (495(f=2.0), 496(f=2.0), )
Selected to next generation: IDs2--> (495(f=2.0), )
----------Running generation: 249, population size: 1

***** Generation 249 : 0
**Parent Variant: [Variant id: 497, #gens: 240, #ops: 0, parent:-]

--Child created id: 498
--Creating new operations for variant [Variant id: 498, #gens: 240, #ops: 0, parent:497]
---analyzing modificationPoint position: 24
---modifPoint 0 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 498, #gens: 239, #ops: 1, parent:497] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 498
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-498/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(249): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (497(f=2.0), 498(f=2.0), )
Selected to next generation: IDs2--> (497(f=2.0), )
----------Running generation: 250, population size: 1

***** Generation 250 : 0
**Parent Variant: [Variant id: 499, #gens: 240, #ops: 0, parent:-]

--Child created id: 500
--Creating new operations for variant [Variant id: 500, #gens: 240, #ops: 0, parent:499]
---analyzing modificationPoint position: 150
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 500, #gens: 239, #ops: 1, parent:499] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 500
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-500/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(250): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (499(f=2.0), 500(f=2.0), )
Selected to next generation: IDs2--> (499(f=2.0), )
----------Running generation: 251, population size: 1

***** Generation 251 : 0
**Parent Variant: [Variant id: 501, #gens: 240, #ops: 0, parent:-]

--Child created id: 502
--Creating new operations for variant [Variant id: 502, #gens: 240, #ops: 0, parent:501]
---analyzing modificationPoint position: 140
---modifPoint 0 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 502, #gens: 240, #ops: 1, parent:501] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 502
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-502/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(251): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (501(f=2.0), 502(f=2.0), )
Selected to next generation: IDs2--> (501(f=2.0), )
----------Running generation: 252, population size: 1

***** Generation 252 : 0
**Parent Variant: [Variant id: 503, #gens: 240, #ops: 0, parent:-]

--Child created id: 504
--Creating new operations for variant [Variant id: 504, #gens: 240, #ops: 0, parent:503]
---analyzing modificationPoint position: 60
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 108, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 504, #gens: 240, #ops: 1, parent:503] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 504, errors: [ProperBigFractionFormat.java:108: error: call to this must be first statement in constructor
		toAppendTo.append(" / "); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                          		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(252): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (503(f=2.0), 504(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (503(f=2.0), )
----------Running generation: 253, population size: 1

***** Generation 253 : 0
**Parent Variant: [Variant id: 505, #gens: 240, #ops: 0, parent:-]

--Child created id: 506
--Creating new operations for variant [Variant id: 506, #gens: 240, #ops: 0, parent:505]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 116
location: DirectSearchOptimizer.java250
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 506, #gens: 239, #ops: 1, parent:505] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 506
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-506/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(253): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (505(f=2.0), 506(f=4.0), )
Selected to next generation: IDs2--> (505(f=2.0), )
----------Running generation: 254, population size: 1

***** Generation 254 : 0
**Parent Variant: [Variant id: 507, #gens: 240, #ops: 0, parent:-]

--Child created id: 508
--Creating new operations for variant [Variant id: 508, #gens: 240, #ops: 0, parent:507]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 131
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 2 not mutation generated in  vertexI[k] = startPoint[k] + confI[k]
---analyzing modificationPoint position: 107
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java349
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 349, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 508, #gens: 241, #ops: 1, parent:507] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 508
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-508/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(254): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (507(f=2.0), 508(f=2.0), )
Selected to next generation: IDs2--> (507(f=2.0), )
----------Running generation: 255, population size: 1

***** Generation 255 : 0
**Parent Variant: [Variant id: 509, #gens: 240, #ops: 0, parent:-]

--Child created id: 510
--Creating new operations for variant [Variant id: 510, #gens: 240, #ops: 0, parent:509]
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 92, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 510, #gens: 241, #ops: 1, parent:509] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 510, errors: [ProperBigFractionFormat.java:96: error: variable den is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		java.math.BigInteger den = fraction.getDenominator(); 		java.math.BigInteger num = fraction.getNumerator(); 		java.math.BigInteger den = fraction.getDenominator();
		                                                      		                                                    		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(255): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (509(f=2.0), 510(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (509(f=2.0), )
----------Running generation: 256, population size: 1

***** Generation 256 : 0
**Parent Variant: [Variant id: 511, #gens: 240, #ops: 0, parent:-]

--Child created id: 512
--Creating new operations for variant [Variant id: 512, #gens: 240, #ops: 0, parent:511]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 149
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 180
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 2 not mutation generated in  if (den == null) { 	throw org.apache.commons.math.MathRuntimeException.createNullPointerException("d[...]
---analyzing modificationPoint position: 29
---modifPoint 3 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 4 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 77
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 5 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 60
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 108, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 512, #gens: 241, #ops: 1, parent:511] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 512, errors: [ProperBigFractionFormat.java:109: error: variable num is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		getDenominatorFormat().format(den, toAppendTo, pos); 		java.math.BigInteger num = fraction.getNumerator();
		                                                     		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(256): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (511(f=2.0), 512(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (511(f=2.0), )
----------Running generation: 257, population size: 1

***** Generation 257 : 0
**Parent Variant: [Variant id: 513, #gens: 240, #ops: 0, parent:-]

--Child created id: 514
--Creating new operations for variant [Variant id: 514, #gens: 240, #ops: 0, parent:513]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 514, #gens: 239, #ops: 1, parent:513] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 514
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-514/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(257): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (513(f=2.0), 514(f=2.0), )
Selected to next generation: IDs2--> (513(f=2.0), )
----------Running generation: 258, population size: 1

***** Generation 258 : 0
**Parent Variant: [Variant id: 515, #gens: 240, #ops: 0, parent:-]

--Child created id: 516
--Creating new operations for variant [Variant id: 516, #gens: 240, #ops: 0, parent:515]
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 516, #gens: 241, #ops: 1, parent:515] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 516
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-516/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(258): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (515(f=2.0), 516(f=2.0), )
Selected to next generation: IDs2--> (515(f=2.0), )
----------Running generation: 259, population size: 1

***** Generation 259 : 0
**Parent Variant: [Variant id: 517, #gens: 240, #ops: 0, parent:-]

--Child created id: 518
--Creating new operations for variant [Variant id: 518, #gens: 240, #ops: 0, parent:517]
---analyzing modificationPoint position: 137
---modifPoint 0 not mutation generated in  return point
---analyzing modificationPoint position: 143
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...]
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [ret, ((java.lang.Number) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.lang.Number) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 518, #gens: 240, #ops: 1, parent:517] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 518
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-518/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(259): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.lang.Number) (obj)).doubleValue[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (517(f=2.0), 518(f=2.0), )
Selected to next generation: IDs2--> (517(f=2.0), )
----------Running generation: 260, population size: 1

***** Generation 260 : 0
**Parent Variant: [Variant id: 519, #gens: 240, #ops: 0, parent:-]

--Child created id: 520
--Creating new operations for variant [Variant id: 520, #gens: 240, #ops: 0, parent:519]
---analyzing modificationPoint position: 113
location: AbstractFormat.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 520, #gens: 239, #ops: 1, parent:519] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 520
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-520/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(260): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (519(f=2.0), 520(f=2.0), )
Selected to next generation: IDs2--> (519(f=2.0), )
----------Running generation: 261, population size: 1

***** Generation 261 : 0
**Parent Variant: [Variant id: 521, #gens: 240, #ops: 0, parent:-]

--Child created id: 522
--Creating new operations for variant [Variant id: 522, #gens: 240, #ops: 0, parent:521]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 127
location: DirectSearchOptimizer.java372
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 522, #gens: 239, #ops: 1, parent:521] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 522
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-522/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(261): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (521(f=2.0), 522(f=4.0), )
Selected to next generation: IDs2--> (521(f=2.0), )
----------Running generation: 262, population size: 1

***** Generation 262 : 0
**Parent Variant: [Variant id: 523, #gens: 240, #ops: 0, parent:-]

--Child created id: 524
--Creating new operations for variant [Variant id: 524, #gens: 240, #ops: 0, parent:523]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java118
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 118, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 524, #gens: 241, #ops: 1, parent:523] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 524, errors: [ProperFractionFormat.java:119: error: unreachable statement
		return wholeFormat; 		return wholeFormat;
		                    		^]
Ingredient counter is Zero
---Undoing: gnrtn(262): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (523(f=2.0), 524(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (523(f=2.0), )
----------Running generation: 263, population size: 1

***** Generation 263 : 0
**Parent Variant: [Variant id: 525, #gens: 240, #ops: 0, parent:-]

--Child created id: 526
--Creating new operations for variant [Variant id: 526, #gens: 240, #ops: 0, parent:525]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 526, #gens: 239, #ops: 1, parent:525] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 526
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-526/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(263): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (525(f=2.0), 526(f=2.0), )
Selected to next generation: IDs2--> (525(f=2.0), )
----------Running generation: 264, population size: 1

***** Generation 264 : 0
**Parent Variant: [Variant id: 527, #gens: 240, #ops: 0, parent:-]

--Child created id: 528
--Creating new operations for variant [Variant id: 528, #gens: 240, #ops: 0, parent:527]
---analyzing modificationPoint position: 151
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 138
location: AbstractFormat.java149
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 528, #gens: 239, #ops: 1, parent:527] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 528
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-528/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(264): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (527(f=2.0), 528(f=2.0), )
Selected to next generation: IDs2--> (527(f=2.0), )
----------Running generation: 265, population size: 1

***** Generation 265 : 0
**Parent Variant: [Variant id: 529, #gens: 240, #ops: 0, parent:-]

--Child created id: 530
--Creating new operations for variant [Variant id: 530, #gens: 240, #ops: 0, parent:529]
---analyzing modificationPoint position: 37
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]))
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 210
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 3 not mutation generated in  final double difference = java.lang.Math.abs(p - c)
---analyzing modificationPoint position: 26
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 4 not mutation generated in  if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 530, #gens: 240, #ops: 1, parent:529] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 530
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-530/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(265): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (529(f=2.0), 530(f=2.0), )
Selected to next generation: IDs2--> (529(f=2.0), )
----------Running generation: 266, population size: 1

***** Generation 266 : 0
**Parent Variant: [Variant id: 531, #gens: 240, #ops: 0, parent:-]

--Child created id: 532
--Creating new operations for variant [Variant id: 532, #gens: 240, #ops: 0, parent:531]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 532, #gens: 241, #ops: 1, parent:531] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 532
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-532/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(266): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (531(f=2.0), 532(f=2.0), )
Selected to next generation: IDs2--> (531(f=2.0), )
----------Running generation: 267, population size: 1

***** Generation 267 : 0
**Parent Variant: [Variant id: 533, #gens: 240, #ops: 0, parent:-]

--Child created id: 534
--Creating new operations for variant [Variant id: 534, #gens: 240, #ops: 0, parent:533]
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 20
location: MultiDirectional.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 534, #gens: 239, #ops: 1, parent:533] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 534, errors: [MultiDirectional.java:49: error: variable khi might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(267): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (533(f=2.0), 534(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (533(f=2.0), )
----------Running generation: 268, population size: 1

***** Generation 268 : 0
**Parent Variant: [Variant id: 535, #gens: 240, #ops: 0, parent:-]

--Child created id: 536
--Creating new operations for variant [Variant id: 536, #gens: 240, #ops: 0, parent:535]
---analyzing modificationPoint position: 42
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 536, #gens: 239, #ops: 1, parent:535] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 536
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-536/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(268): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (535(f=2.0), 536(f=2.0), )
Selected to next generation: IDs2--> (535(f=2.0), )
----------Running generation: 269, population size: 1

***** Generation 269 : 0
**Parent Variant: [Variant id: 537, #gens: 240, #ops: 0, parent:-]

--Child created id: 538
--Creating new operations for variant [Variant id: 538, #gens: 240, #ops: 0, parent:537]
---analyzing modificationPoint position: 64
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [ret, ((java.lang.Number) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.lang.Number) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue())[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue())[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 538, #gens: 240, #ops: 1, parent:537] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 538, errors: [FractionFormat.java:180: error: unreported exception org.apache.commons.math.fraction.FractionConversionException; must be caught or declared to be thrown
			ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue()), 
			             ^]
Ingredient counter is Zero
---Undoing: gnrtn(269): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(new org.apache.commons.math.fraction.Fraction(((java.lang.Number) (obj)).doubleValue())[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (537(f=2.0), 538(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (537(f=2.0), )
----------Running generation: 270, population size: 1

***** Generation 270 : 0
**Parent Variant: [Variant id: 539, #gens: 240, #ops: 0, parent:-]

--Child created id: 540
--Creating new operations for variant [Variant id: 540, #gens: 240, #ops: 0, parent:539]
---analyzing modificationPoint position: 147
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java177
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 177, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 540, #gens: 241, #ops: 1, parent:539] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 540, errors: [AbstractFormat.java:176: error: incompatible types: java.text.NumberFormat cannot be converted to char
		} 		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
		  		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(270): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (539(f=2.0), 540(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (539(f=2.0), )
----------Running generation: 271, population size: 1

***** Generation 271 : 0
**Parent Variant: [Variant id: 541, #gens: 240, #ops: 0, parent:-]

--Child created id: 542
--Creating new operations for variant [Variant id: 542, #gens: 240, #ops: 0, parent:541]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 542, #gens: 239, #ops: 1, parent:541] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 542
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-542/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(271): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (541(f=2.0), 542(f=2.0), )
Selected to next generation: IDs2--> (541(f=2.0), )
----------Running generation: 272, population size: 1

***** Generation 272 : 0
**Parent Variant: [Variant id: 543, #gens: 240, #ops: 0, parent:-]

--Child created id: 544
--Creating new operations for variant [Variant id: 544, #gens: 240, #ops: 0, parent:543]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java229
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 229, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 544, #gens: 241, #ops: 1, parent:543] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 544, errors: [FractionFormat.java:236: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		} 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		  		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(272): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (543(f=2.0), 544(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (543(f=2.0), )
----------Running generation: 273, population size: 1

***** Generation 273 : 0
**Parent Variant: [Variant id: 545, #gens: 240, #ops: 0, parent:-]

--Child created id: 546
--Creating new operations for variant [Variant id: 546, #gens: 240, #ops: 0, parent:545]
---analyzing modificationPoint position: 171
location: MultiDirectional.java94
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 546, #gens: 239, #ops: 1, parent:545] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 546
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-546/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(273): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (545(f=2.0), 546(f=2.0), )
Selected to next generation: IDs2--> (545(f=2.0), )
----------Running generation: 274, population size: 1

***** Generation 274 : 0
**Parent Variant: [Variant id: 547, #gens: 240, #ops: 0, parent:-]

--Child created id: 548
--Creating new operations for variant [Variant id: 548, #gens: 240, #ops: 0, parent:547]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 548, #gens: 241, #ops: 1, parent:547] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 548, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable khi
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		this.khi = khi; 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(274): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (547(f=2.0), 548(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (547(f=2.0), )
----------Running generation: 275, population size: 1

***** Generation 275 : 0
**Parent Variant: [Variant id: 549, #gens: 240, #ops: 0, parent:-]

--Child created id: 550
--Creating new operations for variant [Variant id: 550, #gens: 240, #ops: 0, parent:549]
---analyzing modificationPoint position: 18
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 550, #gens: 239, #ops: 1, parent:549] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 550
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-550/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(275): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (549(f=2.0), 550(f=2.0), )
Selected to next generation: IDs2--> (549(f=2.0), )
----------Running generation: 276, population size: 1

***** Generation 276 : 0
**Parent Variant: [Variant id: 551, #gens: 240, #ops: 0, parent:-]

--Child created id: 552
--Creating new operations for variant [Variant id: 552, #gens: 240, #ops: 0, parent:551]
---analyzing modificationPoint position: 229
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 0 not mutation generated in  return org.apache.commons.math.MathException.buildMessage(locale, pattern, arguments)
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 64
location: FractionFormat.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 552, #gens: 239, #ops: 1, parent:551] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 552
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-552/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(276): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (551(f=2.0), 552(f=2.0), )
Selected to next generation: IDs2--> (551(f=2.0), )
----------Running generation: 277, population size: 1

***** Generation 277 : 0
**Parent Variant: [Variant id: 553, #gens: 240, #ops: 0, parent:-]

--Child created id: 554
--Creating new operations for variant [Variant id: 554, #gens: 240, #ops: 0, parent:553]
---analyzing modificationPoint position: 79
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java46
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 46, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 554, #gens: 241, #ops: 1, parent:553] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 554, errors: [MultiDirectional.java:47: error: variable khi might already have been assigned
		this.khi = 2.0; 		this.khi = 2.0;
		                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(277): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (553(f=2.0), 554(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (553(f=2.0), )
----------Running generation: 278, population size: 1

***** Generation 278 : 0
**Parent Variant: [Variant id: 555, #gens: 240, #ops: 0, parent:-]

--Child created id: 556
--Creating new operations for variant [Variant id: 556, #gens: 240, #ops: 0, parent:555]
---analyzing modificationPoint position: 148
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 71
---modifPoint 1 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 81
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 556, #gens: 239, #ops: 1, parent:555] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 556
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-556/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(278): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (555(f=2.0), 556(f=2.0), )
Selected to next generation: IDs2--> (555(f=2.0), )
----------Running generation: 279, population size: 1

***** Generation 279 : 0
**Parent Variant: [Variant id: 557, #gens: 240, #ops: 0, parent:-]

--Child created id: 558
--Creating new operations for variant [Variant id: 558, #gens: 240, #ops: 0, parent:557]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 558, #gens: 241, #ops: 1, parent:557] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 558
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-558/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(279): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (557(f=2.0), 558(f=2.0), )
Selected to next generation: IDs2--> (557(f=2.0), )
----------Running generation: 280, population size: 1

***** Generation 280 : 0
**Parent Variant: [Variant id: 559, #gens: 240, #ops: 0, parent:-]

--Child created id: 560
--Creating new operations for variant [Variant id: 560, #gens: 240, #ops: 0, parent:559]
---analyzing modificationPoint position: 109
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  // sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator)
---analyzing modificationPoint position: 84
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 560, #gens: 240, #ops: 1, parent:559] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 560, errors: [AbstractFormat.java:111: error: non-static variable numeratorFormat cannot be referenced from a static context
		return numeratorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(280): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (559(f=2.0), 560(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (559(f=2.0), )
----------Running generation: 281, population size: 1

***** Generation 281 : 0
**Parent Variant: [Variant id: 561, #gens: 240, #ops: 0, parent:-]

--Child created id: 562
--Creating new operations for variant [Variant id: 562, #gens: 240, #ops: 0, parent:561]
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 145
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java170
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 170, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 562, #gens: 241, #ops: 1, parent:561] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 562, errors: [AbstractFormat.java:171: error: variable index is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
			pos.setIndex(index); 			int index = pos.getIndex();
			                     			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(281): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (561(f=2.0), 562(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (561(f=2.0), )
----------Running generation: 282, population size: 1

***** Generation 282 : 0
**Parent Variant: [Variant id: 563, #gens: 240, #ops: 0, parent:-]

--Child created id: 564
--Creating new operations for variant [Variant id: 564, #gens: 240, #ops: 0, parent:563]
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch []
location: BigFractionFormat.java169
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 564, #gens: 241, #ops: 1, parent:563] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 564
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-564/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(282): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (563(f=2.0), 564(f=2.0), )
Selected to next generation: IDs2--> (563(f=2.0), )
----------Running generation: 283, population size: 1

***** Generation 283 : 0
**Parent Variant: [Variant id: 565, #gens: 240, #ops: 0, parent:-]

--Child created id: 566
--Creating new operations for variant [Variant id: 566, #gens: 240, #ops: 0, parent:565]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 566, #gens: 239, #ops: 1, parent:565] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 566
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-566/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(283): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (565(f=2.0), 566(f=2.0), )
Selected to next generation: IDs2--> (565(f=2.0), )
----------Running generation: 284, population size: 1

***** Generation 284 : 0
**Parent Variant: [Variant id: 567, #gens: 240, #ops: 0, parent:-]

--Child created id: 568
--Creating new operations for variant [Variant id: 568, #gens: 240, #ops: 0, parent:567]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 568, #gens: 240, #ops: 1, parent:567] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 568, errors: [ProperFractionFormat.java:51: error: recursive constructor invocation
		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		^]
Ingredient counter is Zero
---Undoing: gnrtn(284): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (567(f=2.0), 568(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (567(f=2.0), )
----------Running generation: 285, population size: 1

***** Generation 285 : 0
**Parent Variant: [Variant id: 569, #gens: 240, #ops: 0, parent:-]

--Child created id: 570
--Creating new operations for variant [Variant id: 570, #gens: 240, #ops: 0, parent:569]
---analyzing modificationPoint position: 91
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 117
location: DirectSearchOptimizer.java265
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 570, #gens: 239, #ops: 1, parent:569] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 570
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-570/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(285): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (569(f=2.0), 570(f=4.0), )
Selected to next generation: IDs2--> (569(f=2.0), )
----------Running generation: 286, population size: 1

***** Generation 286 : 0
**Parent Variant: [Variant id: 571, #gens: 240, #ops: 0, parent:-]

--Child created id: 572
--Creating new operations for variant [Variant id: 572, #gens: 240, #ops: 0, parent:571]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [o2]
--> var from patch: o2 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java279
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 279, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 572, #gens: 241, #ops: 1, parent:571] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 572, errors: [DirectSearchOptimizer.java:280: error: variable v2 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v2 = o2.getValue(); 				final double v2 = o2.getValue();
				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(286): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (571(f=2.0), 572(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (571(f=2.0), )
----------Running generation: 287, population size: 1

***** Generation 287 : 0
**Parent Variant: [Variant id: 573, #gens: 240, #ops: 0, parent:-]

--Child created id: 574
--Creating new operations for variant [Variant id: 574, #gens: 240, #ops: 0, parent:573]
---analyzing modificationPoint position: 122
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java288
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `evaluations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 288, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `evaluations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 574, #gens: 241, #ops: 1, parent:573] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 574
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-574/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(287): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `buildSimplex(startPoint) ` -topatch--> `evaluations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (573(f=2.0), 574(f=2.0), )
Selected to next generation: IDs2--> (573(f=2.0), )
----------Running generation: 288, population size: 1

***** Generation 288 : 0
**Parent Variant: [Variant id: 575, #gens: 240, #ops: 0, parent:-]

--Child created id: 576
--Creating new operations for variant [Variant id: 576, #gens: 240, #ops: 0, parent:575]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 576, #gens: 241, #ops: 1, parent:575] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 576
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-576/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(288): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (575(f=2.0), 576(f=2.0), )
Selected to next generation: IDs2--> (575(f=2.0), )
----------Running generation: 289, population size: 1

***** Generation 289 : 0
**Parent Variant: [Variant id: 577, #gens: 240, #ops: 0, parent:-]

--Child created id: 578
--Creating new operations for variant [Variant id: 578, #gens: 240, #ops: 0, parent:577]
---analyzing modificationPoint position: 87
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 578, #gens: 241, #ops: 1, parent:577] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 578, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf; 		return nf;
		           		^]
Ingredient counter is Zero
---Undoing: gnrtn(289): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (577(f=2.0), 578(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (577(f=2.0), )
----------Running generation: 290, population size: 1

***** Generation 290 : 0
**Parent Variant: [Variant id: 579, #gens: 240, #ops: 0, parent:-]

--Child created id: 580
--Creating new operations for variant [Variant id: 580, #gens: 240, #ops: 0, parent:579]
---analyzing modificationPoint position: 210
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [p, c]
--> var from patch: p spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: SimpleScalarValueChecker.java76
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double difference = java.lang.Math.abs(p - c) ` -topatch--> `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c))` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 76, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double difference = java.lang.Math.abs(p - c) ` -topatch--> `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c))` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 580, #gens: 240, #ops: 1, parent:579] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 580, errors: [SimpleScalarValueChecker.java:78: error: variable size is already defined in method converged(int,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
		final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)); 		final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c));
		                                                                                      		             ^, SimpleScalarValueChecker.java:79: error: cannot find symbol
		return (difference <= (size * relativeThreshold)) || (difference <= absoluteThreshold);
		        ^
  symbol:   variable difference
  location: class org.apache.commons.math.optimization.SimpleScalarValueChecker, SimpleScalarValueChecker.java:79: error: cannot find symbol
		return (difference <= (size * relativeThreshold)) || (difference <= absoluteThreshold);
		                                                      ^
  symbol:   variable difference
  location: class org.apache.commons.math.optimization.SimpleScalarValueChecker]
Ingredient counter is Zero
---Undoing: gnrtn(290): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double difference = java.lang.Math.abs(p - c) ` -topatch--> `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c))` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (579(f=2.0), 580(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (579(f=2.0), )
----------Running generation: 291, population size: 1

***** Generation 291 : 0
**Parent Variant: [Variant id: 581, #gens: 240, #ops: 0, parent:-]

--Child created id: 582
--Creating new operations for variant [Variant id: 582, #gens: 240, #ops: 0, parent:581]
---analyzing modificationPoint position: 29
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 0 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 122
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  buildSimplex(startPoint)
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 582, #gens: 241, #ops: 1, parent:581] gen mutated: 1 , gen not mut: 2, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 582
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-582/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(291): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (581(f=2.0), 582(f=2.0), )
Selected to next generation: IDs2--> (581(f=2.0), )
----------Running generation: 292, population size: 1

***** Generation 292 : 0
**Parent Variant: [Variant id: 583, #gens: 240, #ops: 0, parent:-]

--Child created id: 584
--Creating new operations for variant [Variant id: 584, #gens: 240, #ops: 0, parent:583]
---analyzing modificationPoint position: 49
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java136
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 136, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 584, #gens: 241, #ops: 1, parent:583] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 584, errors: [ProperFractionFormat.java:184: error: orphaned case
			case '/' :
			^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(292): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (583(f=2.0), 584(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (583(f=2.0), )
----------Running generation: 293, population size: 1

***** Generation 293 : 0
**Parent Variant: [Variant id: 585, #gens: 240, #ops: 0, parent:-]

--Child created id: 586
--Creating new operations for variant [Variant id: 586, #gens: 240, #ops: 0, parent:585]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 586, #gens: 241, #ops: 1, parent:585] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 586, errors: [AbstractFormat.java:92: error: variable nf is already defined in method getDefaultNumberFormat(java.util.Locale)
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		                                                                                    		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(293): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (585(f=2.0), 586(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (585(f=2.0), )
----------Running generation: 294, population size: 1

***** Generation 294 : 0
**Parent Variant: [Variant id: 587, #gens: 240, #ops: 0, parent:-]

--Child created id: 588
--Creating new operations for variant [Variant id: 588, #gens: 240, #ops: 0, parent:587]
---analyzing modificationPoint position: 22
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 15
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 588, #gens: 241, #ops: 1, parent:587] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 588
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-588/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(294): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (587(f=2.0), 588(f=2.0), )
Selected to next generation: IDs2--> (587(f=2.0), )
----------Running generation: 295, population size: 1

***** Generation 295 : 0
**Parent Variant: [Variant id: 589, #gens: 240, #ops: 0, parent:-]

--Child created id: 590
--Creating new operations for variant [Variant id: 590, #gens: 240, #ops: 0, parent:589]
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 590, #gens: 239, #ops: 1, parent:589] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 590
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-590/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(295): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (589(f=2.0), 590(f=4.0), )
Selected to next generation: IDs2--> (589(f=2.0), )
----------Running generation: 296, population size: 1

***** Generation 296 : 0
**Parent Variant: [Variant id: 591, #gens: 240, #ops: 0, parent:-]

--Child created id: 592
--Creating new operations for variant [Variant id: 592, #gens: 240, #ops: 0, parent:591]
---analyzing modificationPoint position: 81
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java225
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 225, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 592, #gens: 241, #ops: 1, parent:591] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 592
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-592/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(296): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (591(f=2.0), 592(f=2.0), )
Selected to next generation: IDs2--> (591(f=2.0), )
----------Running generation: 297, population size: 1

***** Generation 297 : 0
**Parent Variant: [Variant id: 593, #gens: 240, #ops: 0, parent:-]

--Child created id: 594
--Creating new operations for variant [Variant id: 594, #gens: 240, #ops: 0, parent:593]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 74
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 10
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 3 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 7
---modifPoint 4 not mutation generated in  return nf
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 5 not mutation generated in  xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]))
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 594, #gens: 241, #ops: 1, parent:593] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 594, errors: [ProperFractionFormat.java:231: error: incompatible types: unexpected return value
		} 		return null;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(297): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (593(f=2.0), 594(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (593(f=2.0), )
----------Running generation: 298, population size: 1

***** Generation 298 : 0
**Parent Variant: [Variant id: 595, #gens: 240, #ops: 0, parent:-]

--Child created id: 596
--Creating new operations for variant [Variant id: 596, #gens: 240, #ops: 0, parent:595]
---analyzing modificationPoint position: 213
Templates availables71
Attempts Base Ingredients  1 total 71
---modifPoint 0 not mutation generated in  // keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...]
---analyzing modificationPoint position: 70
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
---modifPoint 2 not mutation generated in  final double v2 = o2.getValue()
---analyzing modificationPoint position: 72
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 596, #gens: 239, #ops: 1, parent:595] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 596
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-596/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(298): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (595(f=2.0), 596(f=2.0), )
Selected to next generation: IDs2--> (595(f=2.0), )
----------Running generation: 299, population size: 1

***** Generation 299 : 0
**Parent Variant: [Variant id: 597, #gens: 240, #ops: 0, parent:-]

--Child created id: 598
--Creating new operations for variant [Variant id: 598, #gens: 240, #ops: 0, parent:597]
---analyzing modificationPoint position: 191
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  // we have found an optimum return simplex[0]
---analyzing modificationPoint position: 144
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 598, #gens: 241, #ops: 1, parent:597] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 598, errors: [AbstractFormat.java:169: error: variable index is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
				c = source.charAt(index++); 				int index = pos.getIndex();
				                            				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(299): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (597(f=2.0), 598(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (597(f=2.0), )
----------Running generation: 300, population size: 1

***** Generation 300 : 0
**Parent Variant: [Variant id: 599, #gens: 240, #ops: 0, parent:-]

--Child created id: 600
--Creating new operations for variant [Variant id: 600, #gens: 240, #ops: 0, parent:599]
---analyzing modificationPoint position: 100
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 58
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 600, #gens: 239, #ops: 1, parent:599] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 600
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-600/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(300): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (599(f=2.0), 600(f=2.0), )
Selected to next generation: IDs2--> (599(f=2.0), )
----------Running generation: 301, population size: 1

***** Generation 301 : 0
**Parent Variant: [Variant id: 601, #gens: 240, #ops: 0, parent:-]

--Child created id: 602
--Creating new operations for variant [Variant id: 602, #gens: 240, #ops: 0, parent:601]
---analyzing modificationPoint position: 79
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 38
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java127
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 127, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 602, #gens: 241, #ops: 1, parent:601] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 602, errors: [MultiDirectional.java:128: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false); 			final double[] xSmallest = original[0].getPointRef();
			                                                                                                                     			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(301): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (601(f=2.0), 602(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (601(f=2.0), )
----------Running generation: 302, population size: 1

***** Generation 302 : 0
**Parent Variant: [Variant id: 603, #gens: 240, #ops: 0, parent:-]

--Child created id: 604
--Creating new operations for variant [Variant id: 604, #gens: 240, #ops: 0, parent:603]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java46
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 46, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 604, #gens: 241, #ops: 1, parent:603] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 604, errors: [MultiDirectional.java:158: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:158: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:158: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:158: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:158: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:158: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(302): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (603(f=2.0), 604(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (603(f=2.0), )
----------Running generation: 303, population size: 1

***** Generation 303 : 0
**Parent Variant: [Variant id: 605, #gens: 240, #ops: 0, parent:-]

--Child created id: 606
--Creating new operations for variant [Variant id: 606, #gens: 240, #ops: 0, parent:605]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 115
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  this.maxEvaluations = maxEvaluations
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 2 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 146
location: AbstractFormat.java172
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 606, #gens: 239, #ops: 1, parent:605] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 606
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-606/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(303): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (605(f=2.0), 606(f=2.0), )
Selected to next generation: IDs2--> (605(f=2.0), )
----------Running generation: 304, population size: 1

***** Generation 304 : 0
**Parent Variant: [Variant id: 607, #gens: 240, #ops: 0, parent:-]

--Child created id: 608
--Creating new operations for variant [Variant id: 608, #gens: 240, #ops: 0, parent:607]
---analyzing modificationPoint position: 130
location: DirectSearchOptimizer.java375
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 608, #gens: 239, #ops: 1, parent:607] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 608
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-608/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(304): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (607(f=2.0), 608(f=3.0), )
Selected to next generation: IDs2--> (607(f=2.0), )
----------Running generation: 305, population size: 1

***** Generation 305 : 0
**Parent Variant: [Variant id: 609, #gens: 240, #ops: 0, parent:-]

--Child created id: 610
--Creating new operations for variant [Variant id: 610, #gens: 240, #ops: 0, parent:609]
---analyzing modificationPoint position: 35
---modifPoint 0 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 93
Templates availables14
Attempts Base Ingredients  1 total 14
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 39
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 2
---modifPoint 2 not mutation generated in  // evaluate it evaluateSimplex(comparator)
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 3 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 4 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 6 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 7 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 63
location: BigFractionFormat.java169
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 610, #gens: 239, #ops: 1, parent:609] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child does NOT compile: 610, errors: [BigFractionFormat.java:181: error: variable ret might not have been initialized
		return ret;
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(305): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (609(f=2.0), 610(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (609(f=2.0), )
----------Running generation: 306, population size: 1

***** Generation 306 : 0
**Parent Variant: [Variant id: 611, #gens: 240, #ops: 0, parent:-]

--Child created id: 612
--Creating new operations for variant [Variant id: 612, #gens: 240, #ops: 0, parent:611]
---analyzing modificationPoint position: 19
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 612, #gens: 239, #ops: 1, parent:611] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 612
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-612/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(306): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (611(f=2.0), 612(f=2.0), )
Selected to next generation: IDs2--> (611(f=2.0), )
----------Running generation: 307, population size: 1

***** Generation 307 : 0
**Parent Variant: [Variant id: 613, #gens: 240, #ops: 0, parent:-]

--Child created id: 614
--Creating new operations for variant [Variant id: 614, #gens: 240, #ops: 0, parent:613]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 614, #gens: 239, #ops: 1, parent:613] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 614
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-614/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(307): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (613(f=2.0), 614(f=2.0), )
Selected to next generation: IDs2--> (613(f=2.0), )
----------Running generation: 308, population size: 1

***** Generation 308 : 0
**Parent Variant: [Variant id: 615, #gens: 240, #ops: 0, parent:-]

--Child created id: 616
--Creating new operations for variant [Variant id: 616, #gens: 240, #ops: 0, parent:615]
---analyzing modificationPoint position: 97
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [o1]
--> var from patch: o1 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java278
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 278, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 616, #gens: 240, #ops: 1, parent:615] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 616
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-616/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(308): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (615(f=2.0), 616(f=2.0), )
Selected to next generation: IDs2--> (615(f=2.0), )
----------Running generation: 309, population size: 1

***** Generation 309 : 0
**Parent Variant: [Variant id: 617, #gens: 240, #ops: 0, parent:-]

--Child created id: 618
--Creating new operations for variant [Variant id: 618, #gens: 240, #ops: 0, parent:617]
---analyzing modificationPoint position: 54
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 618, #gens: 239, #ops: 1, parent:617] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 618
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-618/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(309): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (617(f=2.0), 618(f=2.0), )
Selected to next generation: IDs2--> (617(f=2.0), )
----------Running generation: 310, population size: 1

***** Generation 310 : 0
**Parent Variant: [Variant id: 619, #gens: 240, #ops: 0, parent:-]

--Child created id: 620
--Creating new operations for variant [Variant id: 620, #gens: 240, #ops: 0, parent:619]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 183
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [this.value]
--> var from patch: this.value spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 














































double value
SameName: final 














































double value
Transforming shadowed variable in value = value
location: RealPointValuePair.java49
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 49, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 620, #gens: 241, #ops: 1, parent:619] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 620, errors: [RealPointValuePair.java:52: error: final parameter value may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		value = value; 		this.point = point.clone(); 		this.value = value;}
	    	                                                                      		^]
Ingredient counter is Zero
---Undoing: gnrtn(310): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (619(f=2.0), 620(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (619(f=2.0), )
----------Running generation: 311, population size: 1

***** Generation 311 : 0
**Parent Variant: [Variant id: 621, #gens: 240, #ops: 0, parent:-]

--Child created id: 622
--Creating new operations for variant [Variant id: 622, #gens: 240, #ops: 0, parent:621]
---analyzing modificationPoint position: 140
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 77
---modifPoint 1 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 622, #gens: 239, #ops: 1, parent:621] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 622
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-622/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(311): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (621(f=2.0), 622(f=2.0), )
Selected to next generation: IDs2--> (621(f=2.0), )
----------Running generation: 312, population size: 1

***** Generation 312 : 0
**Parent Variant: [Variant id: 623, #gens: 240, #ops: 0, parent:-]

--Child created id: 624
--Creating new operations for variant [Variant id: 624, #gens: 240, #ops: 0, parent:623]
---analyzing modificationPoint position: 191
---modifPoint 0 not mutation generated in  // we have found an optimum return simplex[0]
---analyzing modificationPoint position: 178
location: BigFraction.java178
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `denominator = den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 624, #gens: 239, #ops: 1, parent:623] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 624, errors: [BigFraction.java:182: error: variable denominator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(312): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `denominator = den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (623(f=2.0), 624(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (623(f=2.0), )
----------Running generation: 313, population size: 1

***** Generation 313 : 0
**Parent Variant: [Variant id: 625, #gens: 240, #ops: 0, parent:-]

--Child created id: 626
--Creating new operations for variant [Variant id: 626, #gens: 240, #ops: 0, parent:625]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 626, #gens: 239, #ops: 1, parent:625] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 626
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-626/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(313): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (625(f=2.0), 626(f=2.0), )
Selected to next generation: IDs2--> (625(f=2.0), )
----------Running generation: 314, population size: 1

***** Generation 314 : 0
**Parent Variant: [Variant id: 627, #gens: 240, #ops: 0, parent:-]

--Child created id: 628
--Creating new operations for variant [Variant id: 628, #gens: 240, #ops: 0, parent:627]
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 628, #gens: 239, #ops: 1, parent:627] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 628
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-628/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(314): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (627(f=2.0), 628(f=4.0), )
Selected to next generation: IDs2--> (627(f=2.0), )
----------Running generation: 315, population size: 1

***** Generation 315 : 0
**Parent Variant: [Variant id: 629, #gens: 240, #ops: 0, parent:-]

--Child created id: 630
--Creating new operations for variant [Variant id: 630, #gens: 240, #ops: 0, parent:629]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 61
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 630, #gens: 240, #ops: 1, parent:629] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 630
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-630/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(315): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (629(f=2.0), 630(f=2.0), )
Selected to next generation: IDs2--> (629(f=2.0), )
----------Running generation: 316, population size: 1

***** Generation 316 : 0
**Parent Variant: [Variant id: 631, #gens: 240, #ops: 0, parent:-]

--Child created id: 632
--Creating new operations for variant [Variant id: 632, #gens: 240, #ops: 0, parent:631]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 632, #gens: 239, #ops: 1, parent:631] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 632
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-632/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(316): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (631(f=2.0), 632(f=2.0), )
Selected to next generation: IDs2--> (631(f=2.0), )
----------Running generation: 317, population size: 1

***** Generation 317 : 0
**Parent Variant: [Variant id: 633, #gens: 240, #ops: 0, parent:-]

--Child created id: 634
--Creating new operations for variant [Variant id: 634, #gens: 240, #ops: 0, parent:633]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 48
---modifPoint 1 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 634, #gens: 241, #ops: 1, parent:633] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 634, errors: [MultiDirectional.java:121: error: cannot assign a value to final variable gamma
		simplex[0] = original[0]; 		this.gamma = gamma;
		                          		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(317): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (633(f=2.0), 634(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (633(f=2.0), )
----------Running generation: 318, population size: 1

***** Generation 318 : 0
**Parent Variant: [Variant id: 635, #gens: 240, #ops: 0, parent:-]

--Child created id: 636
--Creating new operations for variant [Variant id: 636, #gens: 240, #ops: 0, parent:635]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  this.f = f
---analyzing modificationPoint position: 135
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxEvaluations]
--> var from patch: maxEvaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java394
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] point = vertex.getPointRef() ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 394, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] point = vertex.getPointRef() ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 636, #gens: 241, #ops: 1, parent:635] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 636, errors: [DirectSearchOptimizer.java:394: error: incompatible types: unexpected return value
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i]; 			return maxEvaluations;
		                                           			                                                                                   			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(318): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] point = vertex.getPointRef() ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (635(f=2.0), 636(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (635(f=2.0), )
----------Running generation: 319, population size: 1

***** Generation 319 : 0
**Parent Variant: [Variant id: 637, #gens: 240, #ops: 0, parent:-]

--Child created id: 638
--Creating new operations for variant [Variant id: 638, #gens: 240, #ops: 0, parent:637]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 94, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 638, #gens: 241, #ops: 1, parent:637] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 638, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(319): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (637(f=2.0), 638(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (637(f=2.0), )
----------Running generation: 320, population size: 1

***** Generation 320 : 0
**Parent Variant: [Variant id: 639, #gens: 240, #ops: 0, parent:-]

--Child created id: 640
--Creating new operations for variant [Variant id: 640, #gens: 240, #ops: 0, parent:639]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 53
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 640, #gens: 239, #ops: 1, parent:639] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 640
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-640/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(320): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (639(f=2.0), 640(f=2.0), )
Selected to next generation: IDs2--> (639(f=2.0), )
----------Running generation: 321, population size: 1

***** Generation 321 : 0
**Parent Variant: [Variant id: 641, #gens: 240, #ops: 0, parent:-]

--Child created id: 642
--Creating new operations for variant [Variant id: 642, #gens: 240, #ops: 0, parent:641]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java115
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 115, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 642, #gens: 241, #ops: 1, parent:641] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 642, errors: [MultiDirectional.java:133: error: unreachable statement
		return simplex[0]; 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];
		                   		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(321): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xSmallest = original[0].getPointRef() ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (641(f=2.0), 642(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (641(f=2.0), )
----------Running generation: 322, population size: 1

***** Generation 322 : 0
**Parent Variant: [Variant id: 643, #gens: 240, #ops: 0, parent:-]

--Child created id: 644
--Creating new operations for variant [Variant id: 644, #gens: 240, #ops: 0, parent:643]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 49
---modifPoint 1 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 3 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 38
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java127
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 127, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 644, #gens: 240, #ops: 1, parent:643] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 644
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-644/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(322): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (643(f=2.0), 644(f=4.0), )
Selected to next generation: IDs2--> (643(f=2.0), )
----------Running generation: 323, population size: 1

***** Generation 323 : 0
**Parent Variant: [Variant id: 645, #gens: 240, #ops: 0, parent:-]

--Child created id: 646
--Creating new operations for variant [Variant id: 646, #gens: 240, #ops: 0, parent:645]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 111
location: DirectSearchOptimizer.java118
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxIterations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 646, #gens: 239, #ops: 1, parent:645] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 646
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-646/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(323): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxIterations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (645(f=2.0), 646(f=2.0), )
Selected to next generation: IDs2--> (645(f=2.0), )
----------Running generation: 324, population size: 1

***** Generation 324 : 0
**Parent Variant: [Variant id: 647, #gens: 240, #ops: 0, parent:-]

--Child created id: 648
--Creating new operations for variant [Variant id: 648, #gens: 240, #ops: 0, parent:647]
---analyzing modificationPoint position: 77
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 113
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java173
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 173, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 648, #gens: 241, #ops: 1, parent:647] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 648, errors: [AbstractFormat.java:174: error: variable ret is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
				ret = c; 				char ret = 0;
				         				     ^]
Ingredient counter is Zero
---Undoing: gnrtn(324): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (647(f=2.0), 648(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (647(f=2.0), )
----------Running generation: 325, population size: 1

***** Generation 325 : 0
**Parent Variant: [Variant id: 649, #gens: 240, #ops: 0, parent:-]

--Child created id: 650
--Creating new operations for variant [Variant id: 650, #gens: 240, #ops: 0, parent:649]
---analyzing modificationPoint position: 29
---modifPoint 0 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 83
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 84
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  return denominator
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 650, #gens: 240, #ops: 1, parent:649] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 650, errors: [FractionFormat.java:131: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.FractionFormat
		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(325): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (649(f=2.0), 650(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (649(f=2.0), )
----------Running generation: 326, population size: 1

***** Generation 326 : 0
**Parent Variant: [Variant id: 651, #gens: 240, #ops: 0, parent:-]

--Child created id: 652
--Creating new operations for variant [Variant id: 652, #gens: 240, #ops: 0, parent:651]
---analyzing modificationPoint position: 17
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 652, #gens: 241, #ops: 1, parent:651] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 652
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-652/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(326): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (651(f=2.0), 652(f=2.0), )
Selected to next generation: IDs2--> (651(f=2.0), )
----------Running generation: 327, population size: 1

***** Generation 327 : 0
**Parent Variant: [Variant id: 653, #gens: 240, #ops: 0, parent:-]

--Child created id: 654
--Creating new operations for variant [Variant id: 654, #gens: 240, #ops: 0, parent:653]
---analyzing modificationPoint position: 144
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [this.denominatorFormat]
--> var from patch: this.denominatorFormat spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `this.denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `this.denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 654, #gens: 240, #ops: 1, parent:653] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 654, errors: [AbstractFormat.java:168: error: non-static variable this cannot be referenced from a static context
			do { 				this.denominatorFormat = denominatorFormat;
			     				^, AbstractFormat.java:168: error: non-static variable denominatorFormat cannot be referenced from a static context
			do { 				this.denominatorFormat = denominatorFormat;
			     				                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(327): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `this.denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (653(f=2.0), 654(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (653(f=2.0), )
----------Running generation: 328, population size: 1

***** Generation 328 : 0
**Parent Variant: [Variant id: 655, #gens: 240, #ops: 0, parent:-]

--Child created id: 656
--Creating new operations for variant [Variant id: 656, #gens: 240, #ops: 0, parent:655]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 146
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 1 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 3 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 201
Templates availables144
Attempts Base Ingredients  1 total 144
---modifPoint 4 not mutation generated in  if (d > 1) { 	num /= d; 	den /= d; }
---analyzing modificationPoint position: 0
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 43
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 656, #gens: 239, #ops: 1, parent:655] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 656
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-656/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(328): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (655(f=2.0), 656(f=2.0), )
Selected to next generation: IDs2--> (655(f=2.0), )
----------Running generation: 329, population size: 1

***** Generation 329 : 0
**Parent Variant: [Variant id: 657, #gens: 240, #ops: 0, parent:-]

--Child created id: 658
--Creating new operations for variant [Variant id: 658, #gens: 240, #ops: 0, parent:657]
---analyzing modificationPoint position: 107
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java349
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `// we have found an optimum return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 349, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `// we have found an optimum return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 658, #gens: 240, #ops: 1, parent:657] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 658, errors: [DirectSearchOptimizer.java:351: error: incompatible types: org.apache.commons.math.optimization.RealPointValuePair cannot be converted to double
		return simplex[0];}
		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(329): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `// we have found an optimum return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (657(f=2.0), 658(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (657(f=2.0), )
----------Running generation: 330, population size: 1

***** Generation 330 : 0
**Parent Variant: [Variant id: 659, #gens: 240, #ops: 0, parent:-]

--Child created id: 660
--Creating new operations for variant [Variant id: 660, #gens: 240, #ops: 0, parent:659]
---analyzing modificationPoint position: 73
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 660, #gens: 239, #ops: 1, parent:659] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 660
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-660/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(330): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (659(f=2.0), 660(f=4.0), )
Selected to next generation: IDs2--> (659(f=2.0), )
----------Running generation: 331, population size: 1

***** Generation 331 : 0
**Parent Variant: [Variant id: 661, #gens: 240, #ops: 0, parent:-]

--Child created id: 662
--Creating new operations for variant [Variant id: 662, #gens: 240, #ops: 0, parent:661]
---analyzing modificationPoint position: 219
Templates availables259
Attempts Base Ingredients  1 total 259
---modifPoint 0 not mutation generated in  // B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]
---analyzing modificationPoint position: 153
location: ProperBigFractionFormat.java238
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 662, #gens: 239, #ops: 1, parent:661] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 662
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-662/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(331): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (661(f=2.0), 662(f=2.0), )
Selected to next generation: IDs2--> (661(f=2.0), )
----------Running generation: 332, population size: 1

***** Generation 332 : 0
**Parent Variant: [Variant id: 663, #gens: 240, #ops: 0, parent:-]

--Child created id: 664
--Creating new operations for variant [Variant id: 664, #gens: 240, #ops: 0, parent:663]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 40
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch []
location: MultiDirectional.java132
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 664, #gens: 240, #ops: 1, parent:663] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 664, errors: [MultiDirectional.java:132: error: incompatible types: missing return value
		evaluateSimplex(comparator); 		return;
		                             		^]
Ingredient counter is Zero
---Undoing: gnrtn(332): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (663(f=2.0), 664(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (663(f=2.0), )
----------Running generation: 333, population size: 1

***** Generation 333 : 0
**Parent Variant: [Variant id: 665, #gens: 240, #ops: 0, parent:-]

--Child created id: 666
--Creating new operations for variant [Variant id: 666, #gens: 240, #ops: 0, parent:665]
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [ret, ((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((org.apache.commons.math.fraction.BigFraction) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java169
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 169, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 666, #gens: 240, #ops: 1, parent:665] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 666
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-666/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(333): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos) ` -topatch--> `ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (665(f=2.0), 666(f=2.0), )
Selected to next generation: IDs2--> (665(f=2.0), )
----------Running generation: 334, population size: 1

***** Generation 334 : 0
**Parent Variant: [Variant id: 667, #gens: 240, #ops: 0, parent:-]

--Child created id: 668
--Creating new operations for variant [Variant id: 668, #gens: 240, #ops: 0, parent:667]
---analyzing modificationPoint position: 50
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 668, #gens: 239, #ops: 1, parent:667] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 668
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-668/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(334): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (667(f=2.0), 668(f=2.0), )
Selected to next generation: IDs2--> (667(f=2.0), )
----------Running generation: 335, population size: 1

***** Generation 335 : 0
**Parent Variant: [Variant id: 669, #gens: 240, #ops: 0, parent:-]

--Child created id: 670
--Creating new operations for variant [Variant id: 670, #gens: 240, #ops: 0, parent:669]
---analyzing modificationPoint position: 32
location: MultiDirectional.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 670, #gens: 239, #ops: 1, parent:669] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 670
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-670/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(335): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (669(f=2.0), 670(f=4.0), )
Selected to next generation: IDs2--> (669(f=2.0), )
----------Running generation: 336, population size: 1

***** Generation 336 : 0
**Parent Variant: [Variant id: 671, #gens: 240, #ops: 0, parent:-]

--Child created id: 672
--Creating new operations for variant [Variant id: 672, #gens: 240, #ops: 0, parent:671]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java94
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 672, #gens: 241, #ops: 1, parent:671] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 672, errors: [ProperBigFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperBigFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperBigFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperBigFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperBigFractionFormat.java:209: error: illegal start of type
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                 ^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                           ^, ProperBigFractionFormat.java:209: error: ';' expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                            ^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                              ^, ProperBigFractionFormat.java:209: error: illegal start of type
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                               ^, ProperBigFractionFormat.java:216: error: illegal start of type
		if (wholeIsNeg) {
		^, ProperBigFractionFormat.java:216: error: <identifier> expected
		if (wholeIsNeg) {
		              ^, ProperBigFractionFormat.java:219: error: <identifier> expected
		num = whole.multiply(den).add(num);
		   ^, ProperBigFractionFormat.java:220: error: illegal start of type
		if (wholeIsNeg) {
		^, ProperBigFractionFormat.java:220: error: <identifier> expected
		if (wholeIsNeg) {
		              ^, ProperBigFractionFormat.java:224: error: illegal start of type
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                       ^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                           ^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                                ^, ProperBigFractionFormat.java:236: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperBigFractionFormat.java:236: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	                                 ^, ProperBigFractionFormat.java:238: error: class, interface, or enum expected
		}
		^, ProperBigFractionFormat.java:240: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(336): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (671(f=2.0), 672(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (671(f=2.0), )
----------Running generation: 337, population size: 1

***** Generation 337 : 0
**Parent Variant: [Variant id: 673, #gens: 240, #ops: 0, parent:-]

--Child created id: 674
--Creating new operations for variant [Variant id: 674, #gens: 240, #ops: 0, parent:673]
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 674, #gens: 240, #ops: 1, parent:673] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 674, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(337): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (673(f=2.0), 674(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (673(f=2.0), )
----------Running generation: 338, population size: 1

***** Generation 338 : 0
**Parent Variant: [Variant id: 675, #gens: 240, #ops: 0, parent:-]

--Child created id: 676
--Creating new operations for variant [Variant id: 676, #gens: 240, #ops: 0, parent:675]
---analyzing modificationPoint position: 20
location: MultiDirectional.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 676, #gens: 239, #ops: 1, parent:675] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 676, errors: [MultiDirectional.java:49: error: variable khi might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(338): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (675(f=2.0), 676(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (675(f=2.0), )
----------Running generation: 339, population size: 1

***** Generation 339 : 0
**Parent Variant: [Variant id: 677, #gens: 240, #ops: 0, parent:-]

--Child created id: 678
--Creating new operations for variant [Variant id: 678, #gens: 240, #ops: 0, parent:677]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 76
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 137, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 678, #gens: 241, #ops: 1, parent:677] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 678
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-678/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(339): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (677(f=2.0), 678(f=2.0), )
Selected to next generation: IDs2--> (677(f=2.0), )
----------Running generation: 340, population size: 1

***** Generation 340 : 0
**Parent Variant: [Variant id: 679, #gens: 240, #ops: 0, parent:-]

--Child created id: 680
--Creating new operations for variant [Variant id: 680, #gens: 240, #ops: 0, parent:679]
---analyzing modificationPoint position: 87
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch []
location: MathRuntimeException.java413
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...] ` -topatch--> `return getMessage(java.util.Locale.getDefault())` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 413, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...] ` -topatch--> `return getMessage(java.util.Locale.getDefault())` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 680, #gens: 240, #ops: 1, parent:679] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 680, errors: [MathRuntimeException.java:414: error: non-static method getMessage(java.util.Locale) cannot be referenced from a static context
	 */ 	public static java.text.ParseException createParseException(final int offset, final java.lang.String pattern, final java.lang.Object... arguments) { 		return getMessage(java.util.Locale.getDefault());
	    	                                                                                                                                                     		       ^, MathRuntimeException.java:414: error: incompatible types: java.lang.String cannot be converted to java.text.ParseException
	 */ 	public static java.text.ParseException createParseException(final int offset, final java.lang.String pattern, final java.lang.Object... arguments) { 		return getMessage(java.util.Locale.getDefault());
	    	                                                                                                                                                     		                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(340): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...] ` -topatch--> `return getMessage(java.util.Locale.getDefault())` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (679(f=2.0), 680(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (679(f=2.0), )
----------Running generation: 341, population size: 1

***** Generation 341 : 0
**Parent Variant: [Variant id: 681, #gens: 240, #ops: 0, parent:-]

--Child created id: 682
--Creating new operations for variant [Variant id: 682, #gens: 240, #ops: 0, parent:681]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [i, n, original, j, xTransformed, xSmallest, coeff, xOriginal, simplex, java.lang.Double.NaN]
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTransformed spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xSmallest spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: coeff spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xOriginal spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtForImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 682, #gens: 241, #ops: 1, parent:681] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 682
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-682/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(341): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (681(f=2.0), 682(f=2.0), )
Selected to next generation: IDs2--> (681(f=2.0), )
----------Running generation: 342, population size: 1

***** Generation 342 : 0
**Parent Variant: [Variant id: 683, #gens: 240, #ops: 0, parent:-]

--Child created id: 684
--Creating new operations for variant [Variant id: 684, #gens: 240, #ops: 0, parent:683]
---analyzing modificationPoint position: 27
---modifPoint 0 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
Attempts Base Ingredients  3 total 44
vars from patch [num, toAppendTo, pos]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 684, #gens: 241, #ops: 1, parent:683] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 684
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-684/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(342): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getNumeratorFormat().format(num, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (683(f=2.0), 684(f=2.0), )
Selected to next generation: IDs2--> (683(f=2.0), )
----------Running generation: 343, population size: 1

***** Generation 343 : 0
**Parent Variant: [Variant id: 685, #gens: 240, #ops: 0, parent:-]

--Child created id: 686
--Creating new operations for variant [Variant id: 686, #gens: 240, #ops: 0, parent:685]
---analyzing modificationPoint position: 100
location: DirectSearchOptimizer.java289
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 686, #gens: 239, #ops: 1, parent:685] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 686
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-686/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(343): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (685(f=2.0), 686(f=3.0), )
Selected to next generation: IDs2--> (685(f=2.0), )
----------Running generation: 344, population size: 1

***** Generation 344 : 0
**Parent Variant: [Variant id: 687, #gens: 240, #ops: 0, parent:-]

--Child created id: 688
--Creating new operations for variant [Variant id: 688, #gens: 240, #ops: 0, parent:687]
---analyzing modificationPoint position: 166
---modifPoint 0 not mutation generated in  // compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]
---analyzing modificationPoint position: 101
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...]
---analyzing modificationPoint position: 4
---modifPoint 2 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 86
---modifPoint 3 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 14
---modifPoint 4 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 64
location: FractionFormat.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 688, #gens: 239, #ops: 1, parent:687] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 688
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-688/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(344): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (687(f=2.0), 688(f=2.0), )
Selected to next generation: IDs2--> (687(f=2.0), )
----------Running generation: 345, population size: 1

***** Generation 345 : 0
**Parent Variant: [Variant id: 689, #gens: 240, #ops: 0, parent:-]

--Child created id: 690
--Creating new operations for variant [Variant id: 690, #gens: 240, #ops: 0, parent:689]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 96
location: RealPointValuePair.java63
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 690, #gens: 239, #ops: 1, parent:689] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 690, errors: [RealPointValuePair.java:65: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point;}
	    	                                                                                               		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(345): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (689(f=2.0), 690(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (689(f=2.0), )
----------Running generation: 346, population size: 1

***** Generation 346 : 0
**Parent Variant: [Variant id: 691, #gens: 240, #ops: 0, parent:-]

--Child created id: 692
--Creating new operations for variant [Variant id: 692, #gens: 240, #ops: 0, parent:691]
---analyzing modificationPoint position: 70
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 66
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 92
Templates availables11
Attempts Base Ingredients  1 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 4 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 163
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 692, #gens: 239, #ops: 1, parent:691] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 692
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-692/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(346): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (691(f=2.0), 692(f=2.0), )
Selected to next generation: IDs2--> (691(f=2.0), )
----------Running generation: 347, population size: 1

***** Generation 347 : 0
**Parent Variant: [Variant id: 693, #gens: 240, #ops: 0, parent:-]

--Child created id: 694
--Creating new operations for variant [Variant id: 694, #gens: 240, #ops: 0, parent:693]
---analyzing modificationPoint position: 45
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 87
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch [arguments]
--> var from patch: arguments spoon.support.reflect.code.CtFieldReadImpl
SameName: final java.lang.Object... arguments
SameName: final java.lang.Object... arguments
Transforming shadowed variable in return arguments.clone()
location: MathRuntimeException.java413
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...] ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.MathRuntimeException line: 413, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...] ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 694, #gens: 240, #ops: 1, parent:693] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 694, errors: [MathRuntimeException.java:414: error: incompatible types: java.lang.Object[] cannot be converted to java.text.ParseException
	 */ 	public static java.text.ParseException createParseException(final int offset, final java.lang.String pattern, final java.lang.Object... arguments) { 		return arguments.clone();
	    	                                                                                                                                                     		                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(347): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...] ` -topatch--> `return arguments.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (693(f=2.0), 694(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (693(f=2.0), )
----------Running generation: 348, population size: 1

***** Generation 348 : 0
**Parent Variant: [Variant id: 695, #gens: 240, #ops: 0, parent:-]

--Child created id: 696
--Creating new operations for variant [Variant id: 696, #gens: 240, #ops: 0, parent:695]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 696, #gens: 239, #ops: 1, parent:695] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 696
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-696/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(348): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (695(f=2.0), 696(f=2.0), )
Selected to next generation: IDs2--> (695(f=2.0), )
----------Running generation: 349, population size: 1

***** Generation 349 : 0
**Parent Variant: [Variant id: 697, #gens: 240, #ops: 0, parent:-]

--Child created id: 698
--Creating new operations for variant [Variant id: 698, #gens: 240, #ops: 0, parent:697]
---analyzing modificationPoint position: 217
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 0 not mutation generated in  while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 698, #gens: 240, #ops: 1, parent:697] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 698
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-698/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(349): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (697(f=2.0), 698(f=2.0), )
Selected to next generation: IDs2--> (697(f=2.0), )
----------Running generation: 350, population size: 1

***** Generation 350 : 0
**Parent Variant: [Variant id: 699, #gens: 240, #ops: 0, parent:-]

--Child created id: 700
--Creating new operations for variant [Variant id: 700, #gens: 240, #ops: 0, parent:699]
---analyzing modificationPoint position: 56
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 700, #gens: 239, #ops: 1, parent:699] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 700
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-700/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(350): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (699(f=2.0), 700(f=2.0), )
Selected to next generation: IDs2--> (699(f=2.0), )
----------Running generation: 351, population size: 1

***** Generation 351 : 0
**Parent Variant: [Variant id: 701, #gens: 240, #ops: 0, parent:-]

--Child created id: 702
--Creating new operations for variant [Variant id: 702, #gens: 240, #ops: 0, parent:701]
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java96
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 96, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 702, #gens: 241, #ops: 1, parent:701] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 702, errors: [ProperBigFractionFormat.java:97: error: variable num is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		java.math.BigInteger whole = num.divide(den); 		java.math.BigInteger num = fraction.getNumerator();
		                                              		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(351): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (701(f=2.0), 702(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (701(f=2.0), )
----------Running generation: 352, population size: 1

***** Generation 352 : 0
**Parent Variant: [Variant id: 703, #gens: 240, #ops: 0, parent:-]

--Child created id: 704
--Creating new operations for variant [Variant id: 704, #gens: 240, #ops: 0, parent:703]
---analyzing modificationPoint position: 163
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = java.lang.Math.abs(num)
---analyzing modificationPoint position: 84
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 105
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 4 not mutation generated in  if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 5 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 51
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 6 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 7 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 8 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 10
---modifPoint 9 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 704, #gens: 241, #ops: 1, parent:703] gen mutated: 1 , gen not mut: 10, gen not applied  0
-The child does NOT compile: 704, errors: [MultiDirectional.java:137: error: reached end of file while parsing
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(352): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (703(f=2.0), 704(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (703(f=2.0), )
----------Running generation: 353, population size: 1

***** Generation 353 : 0
**Parent Variant: [Variant id: 705, #gens: 240, #ops: 0, parent:-]

--Child created id: 706
--Creating new operations for variant [Variant id: 706, #gens: 240, #ops: 0, parent:705]
---analyzing modificationPoint position: 147
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 706, #gens: 241, #ops: 1, parent:705] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 706
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-706/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(353): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (705(f=2.0), 706(f=2.0), )
Selected to next generation: IDs2--> (705(f=2.0), )
----------Running generation: 354, population size: 1

***** Generation 354 : 0
**Parent Variant: [Variant id: 707, #gens: 240, #ops: 0, parent:-]

--Child created id: 708
--Creating new operations for variant [Variant id: 708, #gens: 240, #ops: 0, parent:707]
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 708, #gens: 241, #ops: 1, parent:707] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 708, errors: [AbstractFormat.java:123: error: unreachable statement
		"denominator format can not be null"); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                       		^]
Ingredient counter is Zero
---Undoing: gnrtn(354): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (707(f=2.0), 708(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (707(f=2.0), )
----------Running generation: 355, population size: 1

***** Generation 355 : 0
**Parent Variant: [Variant id: 709, #gens: 240, #ops: 0, parent:-]

--Child created id: 710
--Creating new operations for variant [Variant id: 710, #gens: 240, #ops: 0, parent:709]
---analyzing modificationPoint position: 140
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java161
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 710, #gens: 241, #ops: 1, parent:709] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 710
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-710/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(355): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `pos.setIndex(pos.getIndex() - 1)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (709(f=2.0), 710(f=2.0), )
Selected to next generation: IDs2--> (709(f=2.0), )
----------Running generation: 356, population size: 1

***** Generation 356 : 0
**Parent Variant: [Variant id: 711, #gens: 240, #ops: 0, parent:-]

--Child created id: 712
--Creating new operations for variant [Variant id: 712, #gens: 240, #ops: 0, parent:711]
---analyzing modificationPoint position: 89
location: DirectSearchOptimizer.java143
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 712, #gens: 239, #ops: 1, parent:711] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 712
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-712/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(356): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (711(f=2.0), 712(f=4.0), )
Selected to next generation: IDs2--> (711(f=2.0), )
----------Running generation: 357, population size: 1

***** Generation 357 : 0
**Parent Variant: [Variant id: 713, #gens: 240, #ops: 0, parent:-]

--Child created id: 714
--Creating new operations for variant [Variant id: 714, #gens: 240, #ops: 0, parent:713]
---analyzing modificationPoint position: 93
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]
---analyzing modificationPoint position: 72
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
---modifPoint 3 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 117
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 4 not mutation generated in  if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...]
---analyzing modificationPoint position: 24
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 5 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 49
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 6 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 7 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 714, #gens: 239, #ops: 1, parent:713] gen mutated: 1 , gen not mut: 8, gen not applied  0
-The child compiles: id 714
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-714/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(357): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (713(f=2.0), 714(f=2.0), )
Selected to next generation: IDs2--> (713(f=2.0), )
----------Running generation: 358, population size: 1

***** Generation 358 : 0
**Parent Variant: [Variant id: 715, #gens: 240, #ops: 0, parent:-]

--Child created id: 716
--Creating new operations for variant [Variant id: 716, #gens: 240, #ops: 0, parent:715]
---analyzing modificationPoint position: 171
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch []
location: MultiDirectional.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 716, #gens: 240, #ops: 1, parent:715] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 716
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-716/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(358): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (715(f=2.0), 716(f=2.0), )
Selected to next generation: IDs2--> (715(f=2.0), )
----------Running generation: 359, population size: 1

***** Generation 359 : 0
**Parent Variant: [Variant id: 717, #gens: 240, #ops: 0, parent:-]

--Child created id: 718
--Creating new operations for variant [Variant id: 718, #gens: 240, #ops: 0, parent:717]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 145
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [pos, index]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: index spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java170
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 170, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 718, #gens: 240, #ops: 1, parent:717] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 718
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-718/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(359): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (717(f=2.0), 718(f=2.0), )
Selected to next generation: IDs2--> (717(f=2.0), )
----------Running generation: 360, population size: 1

***** Generation 360 : 0
**Parent Variant: [Variant id: 719, #gens: 240, #ops: 0, parent:-]

--Child created id: 720
--Creating new operations for variant [Variant id: 720, #gens: 240, #ops: 0, parent:719]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 85
---modifPoint 2 not mutation generated in  return numerator
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 4 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 147
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 5 not mutation generated in  return ret
---analyzing modificationPoint position: 141
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java162
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 162, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 720, #gens: 241, #ops: 1, parent:719] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 720, errors: [AbstractFormat.java:163: error: non-static variable denominatorFormat cannot be referenced from a static context
		final int n = source.length(); 		return denominatorFormat;
		                               		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(360): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (719(f=2.0), 720(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (719(f=2.0), )
----------Running generation: 361, population size: 1

***** Generation 361 : 0
**Parent Variant: [Variant id: 721, #gens: 240, #ops: 0, parent:-]

--Child created id: 722
--Creating new operations for variant [Variant id: 722, #gens: 240, #ops: 0, parent:721]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 722, #gens: 241, #ops: 1, parent:721] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 722
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-722/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(361): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (721(f=2.0), 722(f=2.0), )
Selected to next generation: IDs2--> (721(f=2.0), )
----------Running generation: 362, population size: 1

***** Generation 362 : 0
**Parent Variant: [Variant id: 723, #gens: 240, #ops: 0, parent:-]

--Child created id: 724
--Creating new operations for variant [Variant id: 724, #gens: 240, #ops: 0, parent:723]
---analyzing modificationPoint position: 50
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 74
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 11
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 724, #gens: 239, #ops: 1, parent:723] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 724
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-724/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(362): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (723(f=2.0), 724(f=2.0), )
Selected to next generation: IDs2--> (723(f=2.0), )
----------Running generation: 363, population size: 1

***** Generation 363 : 0
**Parent Variant: [Variant id: 725, #gens: 240, #ops: 0, parent:-]

--Child created id: 726
--Creating new operations for variant [Variant id: 726, #gens: 240, #ops: 0, parent:725]
---analyzing modificationPoint position: 68
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 726, #gens: 239, #ops: 1, parent:725] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 726
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-726/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(363): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (725(f=2.0), 726(f=2.0), )
Selected to next generation: IDs2--> (725(f=2.0), )
----------Running generation: 364, population size: 1

***** Generation 364 : 0
**Parent Variant: [Variant id: 727, #gens: 240, #ops: 0, parent:-]

--Child created id: 728
--Creating new operations for variant [Variant id: 728, #gens: 240, #ops: 0, parent:727]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 89
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  startConfiguration = new double[n][n]
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 86
---modifPoint 3 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 728, #gens: 241, #ops: 1, parent:727] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 728, errors: [MultiDirectional.java:129: error: cannot assign a value to final variable khi
		} 		this.khi = khi;
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(364): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (727(f=2.0), 728(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (727(f=2.0), )
----------Running generation: 365, population size: 1

***** Generation 365 : 0
**Parent Variant: [Variant id: 729, #gens: 240, #ops: 0, parent:-]

--Child created id: 730
--Creating new operations for variant [Variant id: 730, #gens: 240, #ops: 0, parent:729]
---analyzing modificationPoint position: 38
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 1 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 145
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 2 not mutation generated in  pos.setIndex(index)
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 4 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 96
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtFieldReadImpl
SameName: final 


























































double[] point
SameName: final 


























































double[] point
Transforming shadowed variable in return point.clone()
location: RealPointValuePair.java63
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 63, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 730, #gens: 241, #ops: 1, parent:729] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 730, errors: [RealPointValuePair.java:71: error: incompatible types: unexpected return value
		return point.clone();} 	/**
		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(365): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (729(f=2.0), 730(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (729(f=2.0), )
----------Running generation: 366, population size: 1

***** Generation 366 : 0
**Parent Variant: [Variant id: 731, #gens: 240, #ops: 0, parent:-]

--Child created id: 732
--Creating new operations for variant [Variant id: 732, #gens: 240, #ops: 0, parent:731]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 732, #gens: 241, #ops: 1, parent:731] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 732
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-732/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(366): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (731(f=2.0), 732(f=2.0), )
Selected to next generation: IDs2--> (731(f=2.0), )
----------Running generation: 367, population size: 1

***** Generation 367 : 0
**Parent Variant: [Variant id: 733, #gens: 240, #ops: 0, parent:-]

--Child created id: 734
--Creating new operations for variant [Variant id: 734, #gens: 240, #ops: 0, parent:733]
---analyzing modificationPoint position: 32
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  simplex[0] = original[0]
---analyzing modificationPoint position: 46
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 76
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 734, #gens: 239, #ops: 1, parent:733] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 734
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-734/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(367): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (733(f=2.0), 734(f=2.0), )
Selected to next generation: IDs2--> (733(f=2.0), )
----------Running generation: 368, population size: 1

***** Generation 368 : 0
**Parent Variant: [Variant id: 735, #gens: 240, #ops: 0, parent:-]

--Child created id: 736
--Creating new operations for variant [Variant id: 736, #gens: 240, #ops: 0, parent:735]
---analyzing modificationPoint position: 18
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 100
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 94
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1)
---analyzing modificationPoint position: 113
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  ret = c
---analyzing modificationPoint position: 156
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [this.absoluteThreshold, org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD]
--> var from patch: this.absoluteThreshold spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD spoon.support.reflect.code.CtFieldReadImpl
location: SimpleScalarValueChecker.java51
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 51, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 736, #gens: 240, #ops: 1, parent:735] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 736, errors: [SimpleScalarValueChecker.java:53: error: variable absoluteThreshold might already have been assigned
		this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD; 		this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD;
		                                                                                                                   		    ^, SimpleScalarValueChecker.java:54: error: variable relativeThreshold might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(368): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (735(f=2.0), 736(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (735(f=2.0), )
----------Running generation: 369, population size: 1

***** Generation 369 : 0
**Parent Variant: [Variant id: 737, #gens: 240, #ops: 0, parent:-]

--Child created id: 738
--Creating new operations for variant [Variant id: 738, #gens: 240, #ops: 0, parent:737]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 738, #gens: 241, #ops: 1, parent:737] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 738, errors: [FractionFormat.java:246: error: orphaned case
			case '/' :
			^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(369): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "cannot format gi[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (737(f=2.0), 738(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (737(f=2.0), )
----------Running generation: 370, population size: 1

***** Generation 370 : 0
**Parent Variant: [Variant id: 739, #gens: 240, #ops: 0, parent:-]

--Child created id: 740
--Creating new operations for variant [Variant id: 740, #gens: 240, #ops: 0, parent:739]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 740, #gens: 241, #ops: 1, parent:739] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 740, errors: [MultiDirectional.java:133: error: unreachable statement
		return simplex[0]; 		return simplex[0];
		                   		^]
Ingredient counter is Zero
---Undoing: gnrtn(370): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (739(f=2.0), 740(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (739(f=2.0), )
----------Running generation: 371, population size: 1

***** Generation 371 : 0
**Parent Variant: [Variant id: 741, #gens: 240, #ops: 0, parent:-]

--Child created id: 742
--Creating new operations for variant [Variant id: 742, #gens: 240, #ops: 0, parent:741]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 742, #gens: 241, #ops: 1, parent:741] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 742, errors: [AbstractFormat.java:103: error: unreachable statement
		return denominatorFormat; 		return denominatorFormat;
		                          		^]
Ingredient counter is Zero
---Undoing: gnrtn(371): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (741(f=2.0), 742(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (741(f=2.0), )
----------Running generation: 372, population size: 1

***** Generation 372 : 0
**Parent Variant: [Variant id: 743, #gens: 240, #ops: 0, parent:-]

--Child created id: 744
--Creating new operations for variant [Variant id: 744, #gens: 240, #ops: 0, parent:743]
---analyzing modificationPoint position: 74
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 744, #gens: 241, #ops: 1, parent:743] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 744, errors: [FractionFormat.java:190: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
		} 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		  		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(372): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (743(f=2.0), 744(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (743(f=2.0), )
----------Running generation: 373, population size: 1

***** Generation 373 : 0
**Parent Variant: [Variant id: 745, #gens: 240, #ops: 0, parent:-]

--Child created id: 746
--Creating new operations for variant [Variant id: 746, #gens: 240, #ops: 0, parent:745]
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 746, #gens: 241, #ops: 1, parent:745] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 746, errors: [AbstractFormat.java:123: error: unreachable statement
		"denominator format can not be null"); 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		                                       		^]
Ingredient counter is Zero
---Undoing: gnrtn(373): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (745(f=2.0), 746(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (745(f=2.0), )
----------Running generation: 374, population size: 1

***** Generation 374 : 0
**Parent Variant: [Variant id: 747, #gens: 240, #ops: 0, parent:-]

--Child created id: 748
--Creating new operations for variant [Variant id: 748, #gens: 240, #ops: 0, parent:747]
---analyzing modificationPoint position: 27
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java89
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 89, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 748, #gens: 240, #ops: 1, parent:747] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 748
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-748/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(374): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (747(f=2.0), 748(f=2.0), )
Selected to next generation: IDs2--> (747(f=2.0), )
----------Running generation: 375, population size: 1

***** Generation 375 : 0
**Parent Variant: [Variant id: 749, #gens: 240, #ops: 0, parent:-]

--Child created id: 750
--Creating new operations for variant [Variant id: 750, #gens: 240, #ops: 0, parent:749]
---analyzing modificationPoint position: 181
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ZERO.equals(den)) { 	throw org.apache.commons.math.MathRuntimeException.cre[...]
---analyzing modificationPoint position: 176
location: BigFraction.java171
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 750, #gens: 239, #ops: 1, parent:749] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 750
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-750/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(375): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (749(f=2.0), 750(f=2.0), )
Selected to next generation: IDs2--> (749(f=2.0), )
----------Running generation: 376, population size: 1

***** Generation 376 : 0
**Parent Variant: [Variant id: 751, #gens: 240, #ops: 0, parent:-]

--Child created id: 752
--Creating new operations for variant [Variant id: 752, #gens: 240, #ops: 0, parent:751]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 752, #gens: 239, #ops: 1, parent:751] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 752
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-752/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(376): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (751(f=2.0), 752(f=2.0), )
Selected to next generation: IDs2--> (751(f=2.0), )
----------Running generation: 377, population size: 1

***** Generation 377 : 0
**Parent Variant: [Variant id: 753, #gens: 240, #ops: 0, parent:-]

--Child created id: 754
--Creating new operations for variant [Variant id: 754, #gens: 240, #ops: 0, parent:753]
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java222
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 754, #gens: 241, #ops: 1, parent:753] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 754, errors: [FractionFormat.java:223: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
	 */ 	@java.lang.Override 	public org.apache.commons.math.fraction.Fraction parse(final java.lang.String source, final java.text.ParsePosition pos) { 		final int initialIndex = pos.getIndex(); 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
	    	                    	                                                                                                                           		                                         		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(377): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (753(f=2.0), 754(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (753(f=2.0), )
----------Running generation: 378, population size: 1

***** Generation 378 : 0
**Parent Variant: [Variant id: 755, #gens: 240, #ops: 0, parent:-]

--Child created id: 756
--Creating new operations for variant [Variant id: 756, #gens: 240, #ops: 0, parent:755]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 756, #gens: 239, #ops: 1, parent:755] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 756
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-756/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(378): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (755(f=2.0), 756(f=2.0), )
Selected to next generation: IDs2--> (755(f=2.0), )
----------Running generation: 379, population size: 1

***** Generation 379 : 0
**Parent Variant: [Variant id: 757, #gens: 240, #ops: 0, parent:-]

--Child created id: 758
--Creating new operations for variant [Variant id: 758, #gens: 240, #ops: 0, parent:757]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 758, #gens: 240, #ops: 1, parent:757] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 758, errors: [AbstractFormat.java:103: error: non-static variable denominatorFormat cannot be referenced from a static context
		return denominatorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(379): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (757(f=2.0), 758(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (757(f=2.0), )
----------Running generation: 380, population size: 1

***** Generation 380 : 0
**Parent Variant: [Variant id: 759, #gens: 240, #ops: 0, parent:-]

--Child created id: 760
--Creating new operations for variant [Variant id: 760, #gens: 240, #ops: 0, parent:759]
---analyzing modificationPoint position: 156
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [this.relativeThreshold]
--> var from patch: this.relativeThreshold spoon.support.reflect.code.CtFieldWriteImpl
location: SimpleScalarValueChecker.java51
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = relativeThreshold` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 51, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = relativeThreshold` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 760, #gens: 240, #ops: 1, parent:759] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 760, errors: [SimpleScalarValueChecker.java:67: error: variable relativeThreshold might not have been initialized
		this.relativeThreshold = relativeThreshold; 		this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD;} 	/**
		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(380): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = relativeThreshold` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (759(f=2.0), 760(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (759(f=2.0), )
----------Running generation: 381, population size: 1

***** Generation 381 : 0
**Parent Variant: [Variant id: 761, #gens: 240, #ops: 0, parent:-]

--Child created id: 762
--Creating new operations for variant [Variant id: 762, #gens: 240, #ops: 0, parent:761]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 83
location: FractionFormat.java229
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 762, #gens: 239, #ops: 1, parent:761] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 762
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-762/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(381): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (761(f=2.0), 762(f=2.0), )
Selected to next generation: IDs2--> (761(f=2.0), )
----------Running generation: 382, population size: 1

***** Generation 382 : 0
**Parent Variant: [Variant id: 763, #gens: 240, #ops: 0, parent:-]

--Child created id: 764
--Creating new operations for variant [Variant id: 764, #gens: 240, #ops: 0, parent:763]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
Attempts Base Ingredients  3 total 10
Attempts Base Ingredients  4 total 10
Attempts Base Ingredients  5 total 10
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 764, #gens: 240, #ops: 1, parent:763] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 764, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(382): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (763(f=2.0), 764(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (763(f=2.0), )
----------Running generation: 383, population size: 1

***** Generation 383 : 0
**Parent Variant: [Variant id: 765, #gens: 240, #ops: 0, parent:-]

--Child created id: 766
--Creating new operations for variant [Variant id: 766, #gens: 240, #ops: 0, parent:765]
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 766, #gens: 241, #ops: 1, parent:765] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 766
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-766/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(383): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (765(f=2.0), 766(f=2.0), )
Selected to next generation: IDs2--> (765(f=2.0), )
----------Running generation: 384, population size: 1

***** Generation 384 : 0
**Parent Variant: [Variant id: 767, #gens: 240, #ops: 0, parent:-]

--Child created id: 768
--Creating new operations for variant [Variant id: 768, #gens: 240, #ops: 0, parent:767]
---analyzing modificationPoint position: 20
Templates availables9
Attempts Base Ingredients  1 total 9
Attempts Base Ingredients  2 total 9
Attempts Base Ingredients  3 total 9
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 19
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 90
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
---modifPoint 2 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  num = num % den
---analyzing modificationPoint position: 151
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 98
---modifPoint 5 not mutation generated in  final double v2 = o2.getValue()
---analyzing modificationPoint position: 61
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 6 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 768, #gens: 241, #ops: 1, parent:767] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 768, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(384): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (767(f=2.0), 768(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (767(f=2.0), )
----------Running generation: 385, population size: 1

***** Generation 385 : 0
**Parent Variant: [Variant id: 769, #gens: 240, #ops: 0, parent:-]

--Child created id: 770
--Creating new operations for variant [Variant id: 770, #gens: 240, #ops: 0, parent:769]
---analyzing modificationPoint position: 125
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  // set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]
---analyzing modificationPoint position: 103
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  // we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length)
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 121
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [simplex, comparator]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java287
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 287, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 770, #gens: 241, #ops: 1, parent:769] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 770, errors: [DirectSearchOptimizer.java:404: error: illegal start of expression
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:404: error: ';' expected
	 * Increment the iterations counter by 1.
	            ^, DirectSearchOptimizer.java:404: error: ';' expected
	 * Increment the iterations counter by 1.
	                           ^, DirectSearchOptimizer.java:404: error: ';' expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:406: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:407: error: '(' expected
	 * 		if the maximal number
	   		  ^, DirectSearchOptimizer.java:407: error: ')' expected
	 * 		if the maximal number
	   		      ^, DirectSearchOptimizer.java:407: error: ';' expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:407: error: variable declaration not allowed here
	 * 		if the maximal number
	   		               ^, DirectSearchOptimizer.java:408: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:408: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^, DirectSearchOptimizer.java:409: error: illegal start of expression
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		if ((++iterations) > maxIterations) { 			throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.MaxIterationsExceededException(maxIterations));}} 	/**
	    	^, DirectSearchOptimizer.java:454: error: illegal start of expression
	 * Replace the worst point of the simplex by a new point.
	 ^, DirectSearchOptimizer.java:454: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	          ^, DirectSearchOptimizer.java:454: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                    ^, DirectSearchOptimizer.java:454: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                             ^, DirectSearchOptimizer.java:454: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                         ^, DirectSearchOptimizer.java:454: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                              ^, DirectSearchOptimizer.java:454: error: <identifier> expected
	 * Replace the worst point of the simplex by a new point.
	                                                         ^, DirectSearchOptimizer.java:455: error: '(' or '[' expected
	 *
	 ^, DirectSearchOptimizer.java:456: error: illegal start of expression
	 * @param pointValuePair
	 ^, DirectSearchOptimizer.java:456: error: illegal start of expression
	 * @param pointValuePair
	   ^, DirectSearchOptimizer.java:457: error: not a statement
	 * 		point to insert
	 ^, DirectSearchOptimizer.java:457: error: ';' expected
	 * 		point to insert
	   		     ^, DirectSearchOptimizer.java:457: error: ';' expected
	 * 		point to insert
	   		               ^, DirectSearchOptimizer.java:458: error: <identifier> expected
	 * @param comparator
	                    ^, DirectSearchOptimizer.java:459: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		             ^, DirectSearchOptimizer.java:459: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                    ^, DirectSearchOptimizer.java:459: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                 ^, DirectSearchOptimizer.java:459: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                               ^, DirectSearchOptimizer.java:459: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                                       ^, DirectSearchOptimizer.java:460: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	  ^, DirectSearchOptimizer.java:460: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(385): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (769(f=2.0), 770(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (769(f=2.0), )
----------Running generation: 386, population size: 1

***** Generation 386 : 0
**Parent Variant: [Variant id: 771, #gens: 240, #ops: 0, parent:-]

--Child created id: 772
--Creating new operations for variant [Variant id: 772, #gens: 240, #ops: 0, parent:771]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 184
location: RealPointValuePair.java50
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 772, #gens: 239, #ops: 1, parent:771] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 772, errors: [RealPointValuePair.java:52: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.point = point.clone();}
	    	                                                                      		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(386): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (771(f=2.0), 772(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (771(f=2.0), )
----------Running generation: 387, population size: 1

***** Generation 387 : 0
**Parent Variant: [Variant id: 773, #gens: 240, #ops: 0, parent:-]

--Child created id: 774
--Creating new operations for variant [Variant id: 774, #gens: 240, #ops: 0, parent:773]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 17
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 774, #gens: 240, #ops: 1, parent:773] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 774
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-774/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(387): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (773(f=2.0), 774(f=2.0), )
Selected to next generation: IDs2--> (773(f=2.0), )
----------Running generation: 388, population size: 1

***** Generation 388 : 0
**Parent Variant: [Variant id: 775, #gens: 240, #ops: 0, parent:-]

--Child created id: 776
--Creating new operations for variant [Variant id: 776, #gens: 240, #ops: 0, parent:775]
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  num = num.negate()
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [this.wholeFormat, format]
--> var from patch: this.wholeFormat spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 776, #gens: 240, #ops: 1, parent:775] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 776
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-776/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(388): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (775(f=2.0), 776(f=2.0), )
Selected to next generation: IDs2--> (775(f=2.0), )
----------Running generation: 389, population size: 1

***** Generation 389 : 0
**Parent Variant: [Variant id: 777, #gens: 240, #ops: 0, parent:-]

--Child created id: 778
--Creating new operations for variant [Variant id: 778, #gens: 240, #ops: 0, parent:777]
---analyzing modificationPoint position: 147
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 134
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i]
---analyzing modificationPoint position: 100
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 105
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 3 not mutation generated in  if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]
---analyzing modificationPoint position: 142
---modifPoint 4 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 165
---modifPoint 5 not mutation generated in  return numerator
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 778, #gens: 240, #ops: 1, parent:777] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 778
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-778/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(389): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (777(f=2.0), 778(f=2.0), )
Selected to next generation: IDs2--> (777(f=2.0), )
----------Running generation: 390, population size: 1

***** Generation 390 : 0
**Parent Variant: [Variant id: 779, #gens: 240, #ops: 0, parent:-]

--Child created id: 780
--Creating new operations for variant [Variant id: 780, #gens: 240, #ops: 0, parent:779]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 780, #gens: 239, #ops: 1, parent:779] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 780
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-780/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(390): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (779(f=2.0), 780(f=2.0), )
Selected to next generation: IDs2--> (779(f=2.0), )
----------Running generation: 391, population size: 1

***** Generation 391 : 0
**Parent Variant: [Variant id: 781, #gens: 240, #ops: 0, parent:-]

--Child created id: 782
--Creating new operations for variant [Variant id: 782, #gens: 240, #ops: 0, parent:781]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 219
Templates availables42
Attempts Base Ingredients  1 total 42
---modifPoint 1 not mutation generated in  // B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
vars from patch []
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 782, #gens: 240, #ops: 1, parent:781] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 782, errors: [FractionFormat.java:230: error: cannot find symbol
		if (num == null) {
		    ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(391): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (781(f=2.0), 782(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (781(f=2.0), )
----------Running generation: 392, population size: 1

***** Generation 392 : 0
**Parent Variant: [Variant id: 783, #gens: 240, #ops: 0, parent:-]

--Child created id: 784
--Creating new operations for variant [Variant id: 784, #gens: 240, #ops: 0, parent:783]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java176
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 784, #gens: 241, #ops: 1, parent:783] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 784, errors: [FractionFormat.java:176: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		if (obj instanceof org.apache.commons.math.fraction.Fraction) { 			return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
		                                                                			                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(392): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (783(f=2.0), 784(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (783(f=2.0), )
----------Running generation: 393, population size: 1

***** Generation 393 : 0
**Parent Variant: [Variant id: 785, #gens: 240, #ops: 0, parent:-]

--Child created id: 786
--Creating new operations for variant [Variant id: 786, #gens: 240, #ops: 0, parent:785]
---analyzing modificationPoint position: 132
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...]
---analyzing modificationPoint position: 17
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 786, #gens: 240, #ops: 1, parent:785] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 786
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-786/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(393): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (785(f=2.0), 786(f=2.0), )
Selected to next generation: IDs2--> (785(f=2.0), )
----------Running generation: 394, population size: 1

***** Generation 394 : 0
**Parent Variant: [Variant id: 787, #gens: 240, #ops: 0, parent:-]

--Child created id: 788
--Creating new operations for variant [Variant id: 788, #gens: 240, #ops: 0, parent:787]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 17
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 3 not mutation generated in  // evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...]
---analyzing modificationPoint position: 120
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 788, #gens: 239, #ops: 1, parent:787] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 788
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-788/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(394): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (787(f=2.0), 788(f=2.0), )
Selected to next generation: IDs2--> (787(f=2.0), )
----------Running generation: 395, population size: 1

***** Generation 395 : 0
**Parent Variant: [Variant id: 789, #gens: 240, #ops: 0, parent:-]

--Child created id: 790
--Creating new operations for variant [Variant id: 790, #gens: 240, #ops: 0, parent:789]
---analyzing modificationPoint position: 60
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 174
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 1 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
---modifPoint 2 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 790, #gens: 239, #ops: 1, parent:789] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 790
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-790/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(395): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (789(f=2.0), 790(f=2.0), )
Selected to next generation: IDs2--> (789(f=2.0), )
----------Running generation: 396, population size: 1

***** Generation 396 : 0
**Parent Variant: [Variant id: 791, #gens: 240, #ops: 0, parent:-]

--Child created id: 792
--Creating new operations for variant [Variant id: 792, #gens: 240, #ops: 0, parent:791]
---analyzing modificationPoint position: 119
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...]
---analyzing modificationPoint position: 215
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 1 not mutation generated in  v = -v
---analyzing modificationPoint position: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 95
location: RealPointValuePair.java62
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 792, #gens: 239, #ops: 1, parent:791] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 792, errors: [RealPointValuePair.java:65: error: variable point might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.value = value;}
	    	                                                                                               		                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(396): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (791(f=2.0), 792(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (791(f=2.0), )
----------Running generation: 397, population size: 1

***** Generation 397 : 0
**Parent Variant: [Variant id: 793, #gens: 240, #ops: 0, parent:-]

--Child created id: 794
--Creating new operations for variant [Variant id: 794, #gens: 240, #ops: 0, parent:793]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 794, #gens: 241, #ops: 1, parent:793] gen mutated: 1 , gen not mut: 0, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 794
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-794/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(397): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (793(f=2.0), 794(f=2.0), )
Selected to next generation: IDs2--> (793(f=2.0), )
----------Running generation: 398, population size: 1

***** Generation 398 : 0
**Parent Variant: [Variant id: 795, #gens: 240, #ops: 0, parent:-]

--Child created id: 796
--Creating new operations for variant [Variant id: 796, #gens: 240, #ops: 0, parent:795]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [i, n, original, j, xTransformed, xSmallest, coeff, xOriginal, simplex, java.lang.Double.NaN]
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTransformed spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xSmallest spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: coeff spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xOriginal spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtForImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 796, #gens: 241, #ops: 1, parent:795] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 796
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-796/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(398): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (795(f=2.0), 796(f=2.0), )
Selected to next generation: IDs2--> (795(f=2.0), )
----------Running generation: 399, population size: 1

***** Generation 399 : 0
**Parent Variant: [Variant id: 797, #gens: 240, #ops: 0, parent:-]

--Child created id: 798
--Creating new operations for variant [Variant id: 798, #gens: 240, #ops: 0, parent:797]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 798, #gens: 241, #ops: 1, parent:797] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 798, errors: [AbstractFormat.java:70: error: final parameter numeratorFormat may not be assigned
	 */ 	protected AbstractFormat(final java.text.NumberFormat numeratorFormat, final java.text.NumberFormat denominatorFormat) { 		numeratorFormat = numeratorFormat; 		this.numeratorFormat = numeratorFormat;
	    	                                                                                                                         		^]
Ingredient counter is Zero
---Undoing: gnrtn(399): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (797(f=2.0), 798(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (797(f=2.0), )
----------Running generation: 400, population size: 1

***** Generation 400 : 0
**Parent Variant: [Variant id: 799, #gens: 240, #ops: 0, parent:-]

--Child created id: 800
--Creating new operations for variant [Variant id: 800, #gens: 240, #ops: 0, parent:799]
---analyzing modificationPoint position: 120
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [this.f]
--> var from patch: this.f spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 

































































































































































































































































org.apache.commons.math.analysis.MultivariateRealFunction f
SameName: final 

































































































































































































































































org.apache.commons.math.analysis.MultivariateRealFunction f
Transforming shadowed variable in f = f
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `f = f` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 286, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `f = f` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 800, #gens: 241, #ops: 1, parent:799] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 800, errors: [DirectSearchOptimizer.java:284: error: final parameter f may not be assigned
		}; 		f = f;
		   		^]
Ingredient counter is Zero
---Undoing: gnrtn(400): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `f = f` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (799(f=2.0), 800(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (799(f=2.0), )
----------Running generation: 401, population size: 1

***** Generation 401 : 0
**Parent Variant: [Variant id: 801, #gens: 240, #ops: 0, parent:-]

--Child created id: 802
--Creating new operations for variant [Variant id: 802, #gens: 240, #ops: 0, parent:801]
---analyzing modificationPoint position: 90
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 54
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 147
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 3 not mutation generated in  return ret
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 4 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 35
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java123
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 802, #gens: 240, #ops: 1, parent:801] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 802, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				^
  symbol:   variable xTransformed
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:128: error: cannot find symbol
			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);
			                                                                         ^
  symbol:   variable xTransformed
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(401): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (801(f=2.0), 802(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (801(f=2.0), )
----------Running generation: 402, population size: 1

***** Generation 402 : 0
**Parent Variant: [Variant id: 803, #gens: 240, #ops: 0, parent:-]

--Child created id: 804
--Creating new operations for variant [Variant id: 804, #gens: 240, #ops: 0, parent:803]
---analyzing modificationPoint position: 166
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator, reflected, best, simplex, original, khi, expanded, reflectedSimplex]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: reflected spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: best spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: expanded spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: reflectedSimplex spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java77
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 77, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 804, #gens: 241, #ops: 1, parent:803] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 804, errors: [MultiDirectional.java:117: error: illegal start of expression
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(402): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (803(f=2.0), 804(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (803(f=2.0), )
----------Running generation: 403, population size: 1

***** Generation 403 : 0
**Parent Variant: [Variant id: 805, #gens: 240, #ops: 0, parent:-]

--Child created id: 806
--Creating new operations for variant [Variant id: 806, #gens: 240, #ops: 0, parent:805]
---analyzing modificationPoint position: 137
---modifPoint 0 not mutation generated in  return point
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 28
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java90
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 90, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 806, #gens: 241, #ops: 1, parent:805] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 806
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-806/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(403): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (805(f=2.0), 806(f=4.0), )
Selected to next generation: IDs2--> (805(f=2.0), )
----------Running generation: 404, population size: 1

***** Generation 404 : 0
**Parent Variant: [Variant id: 807, #gens: 240, #ops: 0, parent:-]

--Child created id: 808
--Creating new operations for variant [Variant id: 808, #gens: 240, #ops: 0, parent:807]
---analyzing modificationPoint position: 132
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java378
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 378, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 808, #gens: 241, #ops: 1, parent:807] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 808, errors: [DirectSearchOptimizer.java:379: error: unreachable statement
			simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Double.NaN);
			^]
Ingredient counter is Zero
---Undoing: gnrtn(404): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (807(f=2.0), 808(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (807(f=2.0), )
----------Running generation: 405, population size: 1

***** Generation 405 : 0
**Parent Variant: [Variant id: 809, #gens: 240, #ops: 0, parent:-]

--Child created id: 810
--Creating new operations for variant [Variant id: 810, #gens: 240, #ops: 0, parent:809]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 96
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 1 not mutation generated in  this.value = value
---analyzing modificationPoint position: 123
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 2 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 70
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 3 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 4 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 176
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 5 not mutation generated in  // move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 6 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 810, #gens: 241, #ops: 1, parent:809] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 810
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-810/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(405): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (809(f=2.0), 810(f=2.0), )
Selected to next generation: IDs2--> (809(f=2.0), )
----------Running generation: 406, population size: 1

***** Generation 406 : 0
**Parent Variant: [Variant id: 811, #gens: 240, #ops: 0, parent:-]

--Child created id: 812
--Creating new operations for variant [Variant id: 812, #gens: 240, #ops: 0, parent:811]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 812, #gens: 239, #ops: 1, parent:811] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 812
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-812/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(406): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (811(f=2.0), 812(f=2.0), )
Selected to next generation: IDs2--> (811(f=2.0), )
----------Running generation: 407, population size: 1

***** Generation 407 : 0
**Parent Variant: [Variant id: 813, #gens: 240, #ops: 0, parent:-]

--Child created id: 814
--Creating new operations for variant [Variant id: 814, #gens: 240, #ops: 0, parent:813]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java229
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 229, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 814, #gens: 241, #ops: 1, parent:813] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 814, errors: [FractionFormat.java:263: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(407): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (813(f=2.0), 814(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (813(f=2.0), )
----------Running generation: 408, population size: 1

***** Generation 408 : 0
**Parent Variant: [Variant id: 815, #gens: 240, #ops: 0, parent:-]

--Child created id: 816
--Creating new operations for variant [Variant id: 816, #gens: 240, #ops: 0, parent:815]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 816, #gens: 239, #ops: 1, parent:815] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 816
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-816/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(408): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (815(f=2.0), 816(f=2.0), )
Selected to next generation: IDs2--> (815(f=2.0), )
----------Running generation: 409, population size: 1

***** Generation 409 : 0
**Parent Variant: [Variant id: 817, #gens: 240, #ops: 0, parent:-]

--Child created id: 818
--Creating new operations for variant [Variant id: 818, #gens: 240, #ops: 0, parent:817]
---analyzing modificationPoint position: 100
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 89
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  startConfiguration = new double[n][n]
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 818, #gens: 241, #ops: 1, parent:817] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 818
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-818/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(409): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (817(f=2.0), 818(f=2.0), )
Selected to next generation: IDs2--> (817(f=2.0), )
----------Running generation: 410, population size: 1

***** Generation 410 : 0
**Parent Variant: [Variant id: 819, #gens: 240, #ops: 0, parent:-]

--Child created id: 820
--Creating new operations for variant [Variant id: 820, #gens: 240, #ops: 0, parent:819]
---analyzing modificationPoint position: 94
location: DirectSearchOptimizer.java152
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 820, #gens: 239, #ops: 1, parent:819] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 820
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-820/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(410): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (819(f=2.0), 820(f=3.0), )
Selected to next generation: IDs2--> (819(f=2.0), )
----------Running generation: 411, population size: 1

***** Generation 411 : 0
**Parent Variant: [Variant id: 821, #gens: 240, #ops: 0, parent:-]

--Child created id: 822
--Creating new operations for variant [Variant id: 822, #gens: 240, #ops: 0, parent:821]
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 114
location: DirectSearchOptimizer.java220
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 822, #gens: 239, #ops: 1, parent:821] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 822
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-822/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(411): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (821(f=2.0), 822(f=4.0), )
Selected to next generation: IDs2--> (821(f=2.0), )
----------Running generation: 412, population size: 1

***** Generation 412 : 0
**Parent Variant: [Variant id: 823, #gens: 240, #ops: 0, parent:-]

--Child created id: 824
--Creating new operations for variant [Variant id: 824, #gens: 240, #ops: 0, parent:823]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
vars from patch [format]
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 824, #gens: 240, #ops: 1, parent:823] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 824
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-824/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(412): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (823(f=2.0), 824(f=2.0), )
Selected to next generation: IDs2--> (823(f=2.0), )
----------Running generation: 413, population size: 1

***** Generation 413 : 0
**Parent Variant: [Variant id: 825, #gens: 240, #ops: 0, parent:-]

--Child created id: 826
--Creating new operations for variant [Variant id: 826, #gens: 240, #ops: 0, parent:825]
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Name Conflict [simplex, comparator, khi, gamma]
---modifPoint 0 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 37
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [simplex, n]
--> var from patch: simplex spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 826, #gens: 240, #ops: 1, parent:825] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 826
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-826/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(413): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (825(f=2.0), 826(f=4.0), )
Selected to next generation: IDs2--> (825(f=2.0), )
----------Running generation: 414, population size: 1

***** Generation 414 : 0
**Parent Variant: [Variant id: 827, #gens: 240, #ops: 0, parent:-]

--Child created id: 828
--Creating new operations for variant [Variant id: 828, #gens: 240, #ops: 0, parent:827]
---analyzing modificationPoint position: 38
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...]
---analyzing modificationPoint position: 89
location: DirectSearchOptimizer.java143
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 828, #gens: 239, #ops: 1, parent:827] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 828
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-828/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(414): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (827(f=2.0), 828(f=4.0), )
Selected to next generation: IDs2--> (827(f=2.0), )
----------Running generation: 415, population size: 1

***** Generation 415 : 0
**Parent Variant: [Variant id: 829, #gens: 240, #ops: 0, parent:-]

--Child created id: 830
--Creating new operations for variant [Variant id: 830, #gens: 240, #ops: 0, parent:829]
---analyzing modificationPoint position: 137
---modifPoint 0 not mutation generated in  return point
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 830, #gens: 239, #ops: 1, parent:829] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 830
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-830/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(415): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (829(f=2.0), 830(f=2.0), )
Selected to next generation: IDs2--> (829(f=2.0), )
----------Running generation: 416, population size: 1

***** Generation 416 : 0
**Parent Variant: [Variant id: 831, #gens: 240, #ops: 0, parent:-]

--Child created id: 832
--Creating new operations for variant [Variant id: 832, #gens: 240, #ops: 0, parent:831]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 20
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 1 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 89
Templates availables17
Attempts Base Ingredients  1 total 17
Attempts Base Ingredients  2 total 17
---modifPoint 2 not mutation generated in  startConfiguration = new double[n][n]
---analyzing modificationPoint position: 4
---modifPoint 3 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 4 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 165
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 5 not mutation generated in  return numerator
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 832, #gens: 241, #ops: 1, parent:831] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 832, errors: [MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(416): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (831(f=2.0), 832(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (831(f=2.0), )
----------Running generation: 417, population size: 1

***** Generation 417 : 0
**Parent Variant: [Variant id: 833, #gens: 240, #ops: 0, parent:-]

--Child created id: 834
--Creating new operations for variant [Variant id: 834, #gens: 240, #ops: 0, parent:833]
---analyzing modificationPoint position: 152
location: ProperBigFractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 834, #gens: 239, #ops: 1, parent:833] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 834
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-834/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(417): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (833(f=2.0), 834(f=2.0), )
Selected to next generation: IDs2--> (833(f=2.0), )
----------Running generation: 418, population size: 1

***** Generation 418 : 0
**Parent Variant: [Variant id: 835, #gens: 240, #ops: 0, parent:-]

--Child created id: 836
--Creating new operations for variant [Variant id: 836, #gens: 240, #ops: 0, parent:835]
---analyzing modificationPoint position: 119
---modifPoint 0 not mutation generated in  final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...]
---analyzing modificationPoint position: 24
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 5 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 23
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 69, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 836, #gens: 241, #ops: 1, parent:835] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 836, errors: [MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(418): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (835(f=2.0), 836(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (835(f=2.0), )
----------Running generation: 419, population size: 1

***** Generation 419 : 0
**Parent Variant: [Variant id: 837, #gens: 240, #ops: 0, parent:-]

--Child created id: 838
--Creating new operations for variant [Variant id: 838, #gens: 240, #ops: 0, parent:837]
---analyzing modificationPoint position: 60
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 108, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 838, #gens: 240, #ops: 1, parent:837] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 838
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-838/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(419): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (837(f=2.0), 838(f=2.0), )
Selected to next generation: IDs2--> (837(f=2.0), )
----------Running generation: 420, population size: 1

***** Generation 420 : 0
**Parent Variant: [Variant id: 839, #gens: 240, #ops: 0, parent:-]

--Child created id: 840
--Creating new operations for variant [Variant id: 840, #gens: 240, #ops: 0, parent:839]
---analyzing modificationPoint position: 30
---modifPoint 0 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 76
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 840, #gens: 239, #ops: 1, parent:839] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 840
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-840/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(420): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (839(f=2.0), 840(f=2.0), )
Selected to next generation: IDs2--> (839(f=2.0), )
----------Running generation: 421, population size: 1

***** Generation 421 : 0
**Parent Variant: [Variant id: 841, #gens: 240, #ops: 0, parent:-]

--Child created id: 842
--Creating new operations for variant [Variant id: 842, #gens: 240, #ops: 0, parent:841]
---analyzing modificationPoint position: 55
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 842, #gens: 240, #ops: 1, parent:841] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 842
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-842/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(421): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (841(f=2.0), 842(f=2.0), )
Selected to next generation: IDs2--> (841(f=2.0), )
----------Running generation: 422, population size: 1

***** Generation 422 : 0
**Parent Variant: [Variant id: 843, #gens: 240, #ops: 0, parent:-]

--Child created id: 844
--Creating new operations for variant [Variant id: 844, #gens: 240, #ops: 0, parent:843]
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 844, #gens: 240, #ops: 1, parent:843] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 844
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-844/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(422): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `getDenominatorFormat().format(den, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (843(f=2.0), 844(f=2.0), )
Selected to next generation: IDs2--> (843(f=2.0), )
----------Running generation: 423, population size: 1

***** Generation 423 : 0
**Parent Variant: [Variant id: 845, #gens: 240, #ops: 0, parent:-]

--Child created id: 846
--Creating new operations for variant [Variant id: 846, #gens: 240, #ops: 0, parent:845]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
Attempts Base Ingredients  2 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 846, #gens: 241, #ops: 1, parent:845] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 846
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-846/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(423): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (845(f=2.0), 846(f=2.0), )
Selected to next generation: IDs2--> (845(f=2.0), )
----------Running generation: 424, population size: 1

***** Generation 424 : 0
**Parent Variant: [Variant id: 847, #gens: 240, #ops: 0, parent:-]

--Child created id: 848
--Creating new operations for variant [Variant id: 848, #gens: 240, #ops: 0, parent:847]
---analyzing modificationPoint position: 120
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 286, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 848, #gens: 241, #ops: 1, parent:847] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 848
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-848/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(424): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (847(f=2.0), 848(f=4.0), )
Selected to next generation: IDs2--> (847(f=2.0), )
----------Running generation: 425, population size: 1

***** Generation 425 : 0
**Parent Variant: [Variant id: 849, #gens: 240, #ops: 0, parent:-]

--Child created id: 850
--Creating new operations for variant [Variant id: 850, #gens: 240, #ops: 0, parent:849]
---analyzing modificationPoint position: 150
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: BigFractionFormat.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 106, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 850, #gens: 240, #ops: 1, parent:849] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 850, errors: [BigFractionFormat.java:107: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.BigFractionFormat
	 */ 	public static org.apache.commons.math.fraction.BigFractionFormat getImproperInstance(final java.util.Locale locale) { 		return java.text.NumberFormat.getAvailableLocales();
	    	                                                                                                                      		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(425): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (849(f=2.0), 850(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (849(f=2.0), )
----------Running generation: 426, population size: 1

***** Generation 426 : 0
**Parent Variant: [Variant id: 851, #gens: 240, #ops: 0, parent:-]

--Child created id: 852
--Creating new operations for variant [Variant id: 852, #gens: 240, #ops: 0, parent:851]
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 852, #gens: 239, #ops: 1, parent:851] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 852
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-852/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(426): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (851(f=2.0), 852(f=4.0), )
Selected to next generation: IDs2--> (851(f=2.0), )
----------Running generation: 427, population size: 1

***** Generation 427 : 0
**Parent Variant: [Variant id: 853, #gens: 240, #ops: 0, parent:-]

--Child created id: 854
--Creating new operations for variant [Variant id: 854, #gens: 240, #ops: 0, parent:853]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 67
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 174
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 2 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 155
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 3 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 854, #gens: 239, #ops: 1, parent:853] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 854
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-854/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(427): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (853(f=2.0), 854(f=2.0), )
Selected to next generation: IDs2--> (853(f=2.0), )
----------Running generation: 428, population size: 1

***** Generation 428 : 0
**Parent Variant: [Variant id: 855, #gens: 240, #ops: 0, parent:-]

--Child created id: 856
--Creating new operations for variant [Variant id: 856, #gens: 240, #ops: 0, parent:855]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 856, #gens: 240, #ops: 1, parent:855] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 856, errors: [FractionFormat.java:274: error: reached end of file while parsing
}
 ^]
Ingredient counter is Zero
---Undoing: gnrtn(428): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (855(f=2.0), 856(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (855(f=2.0), )
----------Running generation: 429, population size: 1

***** Generation 429 : 0
**Parent Variant: [Variant id: 857, #gens: 240, #ops: 0, parent:-]

--Child created id: 858
--Creating new operations for variant [Variant id: 858, #gens: 240, #ops: 0, parent:857]
---analyzing modificationPoint position: 79
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 858, #gens: 239, #ops: 1, parent:857] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 858
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-858/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(429): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (857(f=2.0), 858(f=2.0), )
Selected to next generation: IDs2--> (857(f=2.0), )
----------Running generation: 430, population size: 1

***** Generation 430 : 0
**Parent Variant: [Variant id: 859, #gens: 240, #ops: 0, parent:-]

--Child created id: 860
--Creating new operations for variant [Variant id: 860, #gens: 240, #ops: 0, parent:859]
---analyzing modificationPoint position: 67
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java147
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 147, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 860, #gens: 241, #ops: 1, parent:859] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 860
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-860/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(430): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (859(f=2.0), 860(f=2.0), )
Selected to next generation: IDs2--> (859(f=2.0), )
----------Running generation: 431, population size: 1

***** Generation 431 : 0
**Parent Variant: [Variant id: 861, #gens: 240, #ops: 0, parent:-]

--Child created id: 862
--Creating new operations for variant [Variant id: 862, #gens: 240, #ops: 0, parent:861]
---analyzing modificationPoint position: 144
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 862, #gens: 240, #ops: 1, parent:861] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 862, errors: [AbstractFormat.java:168: error: non-static variable numeratorFormat cannot be referenced from a static context
			do { 				numeratorFormat = numeratorFormat;
			     				^, AbstractFormat.java:168: error: non-static variable numeratorFormat cannot be referenced from a static context
			do { 				numeratorFormat = numeratorFormat;
			     				                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(431): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (861(f=2.0), 862(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (861(f=2.0), )
----------Running generation: 432, population size: 1

***** Generation 432 : 0
**Parent Variant: [Variant id: 863, #gens: 240, #ops: 0, parent:-]

--Child created id: 864
--Creating new operations for variant [Variant id: 864, #gens: 240, #ops: 0, parent:863]
---analyzing modificationPoint position: 40
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch []
location: MultiDirectional.java132
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 864, #gens: 240, #ops: 1, parent:863] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 864, errors: [MultiDirectional.java:133: error: incompatible types: missing return value
		return;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(432): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (863(f=2.0), 864(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (863(f=2.0), )
----------Running generation: 433, population size: 1

***** Generation 433 : 0
**Parent Variant: [Variant id: 865, #gens: 240, #ops: 0, parent:-]

--Child created id: 866
--Creating new operations for variant [Variant id: 866, #gens: 240, #ops: 0, parent:865]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java176
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 866, #gens: 241, #ops: 1, parent:865] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 866, errors: [FractionFormat.java:177: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
			ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos); 			return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
			                                                                                    			                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(433): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (865(f=2.0), 866(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (865(f=2.0), )
----------Running generation: 434, population size: 1

***** Generation 434 : 0
**Parent Variant: [Variant id: 867, #gens: 240, #ops: 0, parent:-]

--Child created id: 868
--Creating new operations for variant [Variant id: 868, #gens: 240, #ops: 0, parent:867]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 868, #gens: 241, #ops: 1, parent:867] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 868, errors: [ProperFractionFormat.java:99: error: call to this must be first statement in constructor
		num = num % den; 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(434): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (867(f=2.0), 868(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (867(f=2.0), )
----------Running generation: 435, population size: 1

***** Generation 435 : 0
**Parent Variant: [Variant id: 869, #gens: 240, #ops: 0, parent:-]

--Child created id: 870
--Creating new operations for variant [Variant id: 870, #gens: 240, #ops: 0, parent:869]
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 870, #gens: 239, #ops: 1, parent:869] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 870
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-870/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(435): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (869(f=2.0), 870(f=2.0), )
Selected to next generation: IDs2--> (869(f=2.0), )
----------Running generation: 436, population size: 1

***** Generation 436 : 0
**Parent Variant: [Variant id: 871, #gens: 240, #ops: 0, parent:-]

--Child created id: 872
--Creating new operations for variant [Variant id: 872, #gens: 240, #ops: 0, parent:871]
---analyzing modificationPoint position: 137
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return point` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 79, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return point` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 872, #gens: 241, #ops: 1, parent:871] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 872, errors: [RealPointValuePair.java:80: error: unreachable statement
	 */ 	public double[] getPointRef() { 		return point; 		return point;
	    	                                		              		^]
Ingredient counter is Zero
---Undoing: gnrtn(436): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return point` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (871(f=2.0), 872(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (871(f=2.0), )
----------Running generation: 437, population size: 1

***** Generation 437 : 0
**Parent Variant: [Variant id: 873, #gens: 240, #ops: 0, parent:-]

--Child created id: 874
--Creating new operations for variant [Variant id: 874, #gens: 240, #ops: 0, parent:873]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 874, #gens: 241, #ops: 1, parent:873] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 874
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-874/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(437): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (873(f=2.0), 874(f=2.0), )
Selected to next generation: IDs2--> (873(f=2.0), )
----------Running generation: 438, population size: 1

***** Generation 438 : 0
**Parent Variant: [Variant id: 875, #gens: 240, #ops: 0, parent:-]

--Child created id: 876
--Creating new operations for variant [Variant id: 876, #gens: 240, #ops: 0, parent:875]
---analyzing modificationPoint position: 141
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [pos, index]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: index spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java162
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 162, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 876, #gens: 241, #ops: 1, parent:875] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 876
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-876/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(438): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `pos.setIndex(index)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (875(f=2.0), 876(f=2.0), )
Selected to next generation: IDs2--> (875(f=2.0), )
----------Running generation: 439, population size: 1

***** Generation 439 : 0
**Parent Variant: [Variant id: 877, #gens: 240, #ops: 0, parent:-]

--Child created id: 878
--Creating new operations for variant [Variant id: 878, #gens: 240, #ops: 0, parent:877]
---analyzing modificationPoint position: 38
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [simplex, n]
--> var from patch: simplex spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java127
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 127, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 878, #gens: 240, #ops: 1, parent:877] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 878
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-878/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(439): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (877(f=2.0), 878(f=4.0), )
Selected to next generation: IDs2--> (877(f=2.0), )
----------Running generation: 440, population size: 1

***** Generation 440 : 0
**Parent Variant: [Variant id: 879, #gens: 240, #ops: 0, parent:-]

--Child created id: 880
--Creating new operations for variant [Variant id: 880, #gens: 240, #ops: 0, parent:879]
---analyzing modificationPoint position: 35
---modifPoint 0 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 109
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 880, #gens: 241, #ops: 1, parent:879] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 880
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-880/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(440): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (879(f=2.0), 880(f=4.0), )
Selected to next generation: IDs2--> (879(f=2.0), )
----------Running generation: 441, population size: 1

***** Generation 441 : 0
**Parent Variant: [Variant id: 881, #gens: 240, #ops: 0, parent:-]

--Child created id: 882
--Creating new operations for variant [Variant id: 882, #gens: 240, #ops: 0, parent:881]
---analyzing modificationPoint position: 119
---modifPoint 0 not mutation generated in  final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...]
---analyzing modificationPoint position: 143
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 1 not mutation generated in  if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...]
---analyzing modificationPoint position: 109
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 2 not mutation generated in  // sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator)
---analyzing modificationPoint position: 117
Templates availables14
Attempts Base Ingredients  1 total 14
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 3 not mutation generated in  if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...]
---analyzing modificationPoint position: 98
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@e7d, search space size: 3
---modifPoint 4 not mutation generated in  final double v2 = o2.getValue()
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java118
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 118, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 882, #gens: 241, #ops: 1, parent:881] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 882
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-882/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(441): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (881(f=2.0), 882(f=2.0), )
Selected to next generation: IDs2--> (881(f=2.0), )
----------Running generation: 442, population size: 1

***** Generation 442 : 0
**Parent Variant: [Variant id: 883, #gens: 240, #ops: 0, parent:-]

--Child created id: 884
--Creating new operations for variant [Variant id: 884, #gens: 240, #ops: 0, parent:883]
---analyzing modificationPoint position: 136
location: DirectSearchOptimizer.java395
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 884, #gens: 239, #ops: 1, parent:883] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 884
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-884/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(442): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (883(f=2.0), 884(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (883(f=2.0), )
----------Running generation: 443, population size: 1

***** Generation 443 : 0
**Parent Variant: [Variant id: 885, #gens: 240, #ops: 0, parent:-]

--Child created id: 886
--Creating new operations for variant [Variant id: 886, #gens: 240, #ops: 0, parent:885]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 886, #gens: 241, #ops: 1, parent:885] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 886
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-886/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(443): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (885(f=2.0), 886(f=4.0), )
Selected to next generation: IDs2--> (885(f=2.0), )
----------Running generation: 444, population size: 1

***** Generation 444 : 0
**Parent Variant: [Variant id: 887, #gens: 240, #ops: 0, parent:-]

--Child created id: 888
--Creating new operations for variant [Variant id: 888, #gens: 240, #ops: 0, parent:887]
---analyzing modificationPoint position: 104
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  iterateSimplex(comparator)
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 888, #gens: 239, #ops: 1, parent:887] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 888
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-888/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(444): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (887(f=2.0), 888(f=2.0), )
Selected to next generation: IDs2--> (887(f=2.0), )
----------Running generation: 445, population size: 1

***** Generation 445 : 0
**Parent Variant: [Variant id: 889, #gens: 240, #ops: 0, parent:-]

--Child created id: 890
--Creating new operations for variant [Variant id: 890, #gens: 240, #ops: 0, parent:889]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 162
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  toAppendTo.append(' ')
---analyzing modificationPoint position: 37
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 890, #gens: 240, #ops: 1, parent:889] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 890, errors: [MultiDirectional.java:125: error: cannot assign a value to final variable gamma
			for (int j = 0; j < n; ++j) { 				this.gamma = 0.5;
			                              				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(445): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (889(f=2.0), 890(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (889(f=2.0), )
----------Running generation: 446, population size: 1

***** Generation 446 : 0
**Parent Variant: [Variant id: 891, #gens: 240, #ops: 0, parent:-]

--Child created id: 892
--Creating new operations for variant [Variant id: 892, #gens: 240, #ops: 0, parent:891]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 892, #gens: 239, #ops: 1, parent:891] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 892
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-892/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(446): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (891(f=2.0), 892(f=2.0), )
Selected to next generation: IDs2--> (891(f=2.0), )
----------Running generation: 447, population size: 1

***** Generation 447 : 0
**Parent Variant: [Variant id: 893, #gens: 240, #ops: 0, parent:-]

--Child created id: 894
--Creating new operations for variant [Variant id: 894, #gens: 240, #ops: 0, parent:893]
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 894, #gens: 239, #ops: 1, parent:893] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 894
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-894/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(447): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (893(f=2.0), 894(f=2.0), )
Selected to next generation: IDs2--> (893(f=2.0), )
----------Running generation: 448, population size: 1

***** Generation 448 : 0
**Parent Variant: [Variant id: 895, #gens: 240, #ops: 0, parent:-]

--Child created id: 896
--Creating new operations for variant [Variant id: 896, #gens: 240, #ops: 0, parent:895]
---analyzing modificationPoint position: 93
location: DirectSearchOptimizer.java147
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 896, #gens: 239, #ops: 1, parent:895] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 896
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-896/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(448): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (895(f=2.0), 896(f=2.0), )
Selected to next generation: IDs2--> (895(f=2.0), )
----------Running generation: 449, population size: 1

***** Generation 449 : 0
**Parent Variant: [Variant id: 897, #gens: 240, #ops: 0, parent:-]

--Child created id: 898
--Creating new operations for variant [Variant id: 898, #gens: 240, #ops: 0, parent:897]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 92
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 184
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java50
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 50, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 898, #gens: 241, #ops: 1, parent:897] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 898, errors: [RealPointValuePair.java:52: error: final parameter value may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.point = point.clone(); 		this.value = value; 		value = value;}
	    	                                                                      		                            		                    		^]
Ingredient counter is Zero
---Undoing: gnrtn(449): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (897(f=2.0), 898(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (897(f=2.0), )
----------Running generation: 450, population size: 1

***** Generation 450 : 0
**Parent Variant: [Variant id: 899, #gens: 240, #ops: 0, parent:-]

--Child created id: 900
--Creating new operations for variant [Variant id: 900, #gens: 240, #ops: 0, parent:899]
---analyzing modificationPoint position: 39
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch []
location: MultiDirectional.java131
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 900, #gens: 240, #ops: 1, parent:899] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 900
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-900/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(450): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (899(f=2.0), 900(f=4.0), )
Selected to next generation: IDs2--> (899(f=2.0), )
----------Running generation: 451, population size: 1

***** Generation 451 : 0
**Parent Variant: [Variant id: 901, #gens: 240, #ops: 0, parent:-]

--Child created id: 902
--Creating new operations for variant [Variant id: 902, #gens: 240, #ops: 0, parent:901]
---analyzing modificationPoint position: 71
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 902, #gens: 239, #ops: 1, parent:901] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 902
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-902/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(451): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (901(f=2.0), 902(f=2.0), )
Selected to next generation: IDs2--> (901(f=2.0), )
----------Running generation: 452, population size: 1

***** Generation 452 : 0
**Parent Variant: [Variant id: 903, #gens: 240, #ops: 0, parent:-]

--Child created id: 904
--Creating new operations for variant [Variant id: 904, #gens: 240, #ops: 0, parent:903]
---analyzing modificationPoint position: 95
location: RealPointValuePair.java62
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 904, #gens: 239, #ops: 1, parent:903] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 904, errors: [RealPointValuePair.java:65: error: variable point might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.value = value;}
	    	                                                                                               		                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(452): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (903(f=2.0), 904(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (903(f=2.0), )
----------Running generation: 453, population size: 1

***** Generation 453 : 0
**Parent Variant: [Variant id: 905, #gens: 240, #ops: 0, parent:-]

--Child created id: 906
--Creating new operations for variant [Variant id: 906, #gens: 240, #ops: 0, parent:905]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 906, #gens: 239, #ops: 1, parent:905] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 906
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-906/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(453): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (905(f=2.0), 906(f=4.0), )
Selected to next generation: IDs2--> (905(f=2.0), )
----------Running generation: 454, population size: 1

***** Generation 454 : 0
**Parent Variant: [Variant id: 907, #gens: 240, #ops: 0, parent:-]

--Child created id: 908
--Creating new operations for variant [Variant id: 908, #gens: 240, #ops: 0, parent:907]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 908, #gens: 241, #ops: 1, parent:907] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 908
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-908/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(454): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (907(f=2.0), 908(f=2.0), )
Selected to next generation: IDs2--> (907(f=2.0), )
----------Running generation: 455, population size: 1

***** Generation 455 : 0
**Parent Variant: [Variant id: 909, #gens: 240, #ops: 0, parent:-]

--Child created id: 910
--Creating new operations for variant [Variant id: 910, #gens: 240, #ops: 0, parent:909]
---analyzing modificationPoint position: 132
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 910, #gens: 240, #ops: 1, parent:909] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 910
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-910/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(455): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `num = num.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (909(f=2.0), 910(f=2.0), )
Selected to next generation: IDs2--> (909(f=2.0), )
----------Running generation: 456, population size: 1

***** Generation 456 : 0
**Parent Variant: [Variant id: 911, #gens: 240, #ops: 0, parent:-]

--Child created id: 912
--Creating new operations for variant [Variant id: 912, #gens: 240, #ops: 0, parent:911]
---analyzing modificationPoint position: 26
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator, reflected, best, simplex, original, khi, expanded, reflectedSimplex]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: reflected spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: best spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: expanded spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: reflectedSimplex spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 912, #gens: 240, #ops: 1, parent:911] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 912
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-912/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(456): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (911(f=2.0), 912(f=2.0), )
Selected to next generation: IDs2--> (911(f=2.0), )
----------Running generation: 457, population size: 1

***** Generation 457 : 0
**Parent Variant: [Variant id: 913, #gens: 240, #ops: 0, parent:-]

--Child created id: 914
--Creating new operations for variant [Variant id: 914, #gens: 240, #ops: 0, parent:913]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 19
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 23
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 3 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 157
location: SimpleScalarValueChecker.java52
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 914, #gens: 239, #ops: 1, parent:913] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 914, errors: [SimpleScalarValueChecker.java:54: error: variable absoluteThreshold might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(457): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (913(f=2.0), 914(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (913(f=2.0), )
----------Running generation: 458, population size: 1

***** Generation 458 : 0
**Parent Variant: [Variant id: 915, #gens: 240, #ops: 0, parent:-]

--Child created id: 916
--Creating new operations for variant [Variant id: 916, #gens: 240, #ops: 0, parent:915]
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 916, #gens: 241, #ops: 1, parent:915] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 916
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-916/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(458): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (915(f=2.0), 916(f=4.0), )
Selected to next generation: IDs2--> (915(f=2.0), )
----------Running generation: 459, population size: 1

***** Generation 459 : 0
**Parent Variant: [Variant id: 917, #gens: 240, #ops: 0, parent:-]

--Child created id: 918
--Creating new operations for variant [Variant id: 918, #gens: 240, #ops: 0, parent:917]
---analyzing modificationPoint position: 23
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java69
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 69, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 918, #gens: 240, #ops: 1, parent:917] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 918, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(459): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (917(f=2.0), 918(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (917(f=2.0), )
----------Running generation: 460, population size: 1

***** Generation 460 : 0
**Parent Variant: [Variant id: 919, #gens: 240, #ops: 0, parent:-]

--Child created id: 920
--Creating new operations for variant [Variant id: 920, #gens: 240, #ops: 0, parent:919]
---analyzing modificationPoint position: 17
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 920, #gens: 241, #ops: 1, parent:919] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 920, errors: [ProperFractionFormat.java:153: error: call to this must be first statement in constructor
			pos.setIndex(initialIndex); 			this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
			                            			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(460): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (919(f=2.0), 920(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (919(f=2.0), )
----------Running generation: 461, population size: 1

***** Generation 461 : 0
**Parent Variant: [Variant id: 921, #gens: 240, #ops: 0, parent:-]

--Child created id: 922
--Creating new operations for variant [Variant id: 922, #gens: 240, #ops: 0, parent:921]
---analyzing modificationPoint position: 108
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 31
location: MultiDirectional.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 922, #gens: 239, #ops: 1, parent:921] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 922
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-922/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(461): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (921(f=2.0), 922(f=3.0), )
Selected to next generation: IDs2--> (921(f=2.0), )
----------Running generation: 462, population size: 1

***** Generation 462 : 0
**Parent Variant: [Variant id: 923, #gens: 240, #ops: 0, parent:-]

--Child created id: 924
--Creating new operations for variant [Variant id: 924, #gens: 240, #ops: 0, parent:923]
---analyzing modificationPoint position: 174
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  // reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...]
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 924, #gens: 239, #ops: 1, parent:923] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 924
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-924/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(462): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (923(f=2.0), 924(f=2.0), )
Selected to next generation: IDs2--> (923(f=2.0), )
----------Running generation: 463, population size: 1

***** Generation 463 : 0
**Parent Variant: [Variant id: 925, #gens: 240, #ops: 0, parent:-]

--Child created id: 926
--Creating new operations for variant [Variant id: 926, #gens: 240, #ops: 0, parent:925]
---analyzing modificationPoint position: 115
location: DirectSearchOptimizer.java230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 926, #gens: 239, #ops: 1, parent:925] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 926
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-926/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(463): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (925(f=2.0), 926(f=5.0), )
Selected to next generation: IDs2--> (925(f=2.0), )
----------Running generation: 464, population size: 1

***** Generation 464 : 0
**Parent Variant: [Variant id: 927, #gens: 240, #ops: 0, parent:-]

--Child created id: 928
--Creating new operations for variant [Variant id: 928, #gens: 240, #ops: 0, parent:927]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 928, #gens: 241, #ops: 1, parent:927] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 928, errors: [AbstractFormat.java:94: error: non-static variable numeratorFormat cannot be referenced from a static context
		nf.setParseIntegerOnly(true); 		numeratorFormat = numeratorFormat;
		                              		^, AbstractFormat.java:94: error: non-static variable numeratorFormat cannot be referenced from a static context
		nf.setParseIntegerOnly(true); 		numeratorFormat = numeratorFormat;
		                              		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(464): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (927(f=2.0), 928(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (927(f=2.0), )
----------Running generation: 465, population size: 1

***** Generation 465 : 0
**Parent Variant: [Variant id: 929, #gens: 240, #ops: 0, parent:-]

--Child created id: 930
--Creating new operations for variant [Variant id: 930, #gens: 240, #ops: 0, parent:929]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 100
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
Attempts Base Ingredients  3 total 11
---modifPoint 1 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 84
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 3 not mutation generated in  return denominator
---analyzing modificationPoint position: 168
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 79, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 930, #gens: 241, #ops: 1, parent:929] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 930
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-930/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(465): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (929(f=2.0), 930(f=2.0), )
Selected to next generation: IDs2--> (929(f=2.0), )
----------Running generation: 466, population size: 1

***** Generation 466 : 0
**Parent Variant: [Variant id: 931, #gens: 240, #ops: 0, parent:-]

--Child created id: 932
--Creating new operations for variant [Variant id: 932, #gens: 240, #ops: 0, parent:931]
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 932, #gens: 241, #ops: 1, parent:931] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 932, errors: [ProperBigFractionFormat.java:92: error: call to this must be first statement in constructor
		pos.setBeginIndex(0); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(466): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (931(f=2.0), 932(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (931(f=2.0), )
----------Running generation: 467, population size: 1

***** Generation 467 : 0
**Parent Variant: [Variant id: 933, #gens: 240, #ops: 0, parent:-]

--Child created id: 934
--Creating new operations for variant [Variant id: 934, #gens: 240, #ops: 0, parent:933]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 183
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 1 not mutation generated in  this.point = point.clone()
---analyzing modificationPoint position: 92
location: DirectSearchOptimizer.java146
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 934, #gens: 239, #ops: 1, parent:933] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 934, errors: [DirectSearchOptimizer.java:146: error: variable declaration not allowed here
			final double[] vertexI = startConfiguration[i];
			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(467): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (933(f=2.0), 934(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (933(f=2.0), )
----------Running generation: 468, population size: 1

***** Generation 468 : 0
**Parent Variant: [Variant id: 935, #gens: 240, #ops: 0, parent:-]

--Child created id: 936
--Creating new operations for variant [Variant id: 936, #gens: 240, #ops: 0, parent:935]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
Attempts Base Ingredients  2 total 47
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 177
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch [numerator, java.math.BigInteger.ZERO]
--> var from patch: numerator spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: java.math.BigInteger.ZERO spoon.support.reflect.code.CtFieldReadImpl
SameName: /**
 * A fraction representing "0".
 */ public static final org.apache.commons.math.fraction.BigFraction ZERO = new org.apache.commons.math.fraction.BigFraction(0);
Transforming shadowed variable in numerator = java.math.BigInteger.ZERO
location: BigFraction.java177
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `numerator = java.math.BigInteger.ZERO` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 177, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `numerator = java.math.BigInteger.ZERO` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 936, #gens: 241, #ops: 1, parent:935] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 936, errors: [BigFraction.java:178: error: variable numerator might already have been assigned
			numerator = num;
			^]
Ingredient counter is Zero
---Undoing: gnrtn(468): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `numerator = java.math.BigInteger.ZERO` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (935(f=2.0), 936(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (935(f=2.0), )
----------Running generation: 469, population size: 1

***** Generation 469 : 0
**Parent Variant: [Variant id: 937, #gens: 240, #ops: 0, parent:-]

--Child created id: 938
--Creating new operations for variant [Variant id: 938, #gens: 240, #ops: 0, parent:937]
---analyzing modificationPoint position: 144
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [c, source, index]
--> var from patch: c spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: index spoon.support.reflect.code.CtVariableWriteImpl
location: AbstractFormat.java168
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 168, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 938, #gens: 240, #ops: 1, parent:937] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 938
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-938/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(469): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (937(f=2.0), 938(f=2.0), )
Selected to next generation: IDs2--> (937(f=2.0), )
----------Running generation: 470, population size: 1

***** Generation 470 : 0
**Parent Variant: [Variant id: 939, #gens: 240, #ops: 0, parent:-]

--Child created id: 940
--Creating new operations for variant [Variant id: 940, #gens: 240, #ops: 0, parent:939]
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 68
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 1 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 67
---modifPoint 2 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 95
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java62
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 62, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 940, #gens: 241, #ops: 1, parent:939] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 940, errors: [RealPointValuePair.java:65: error: final parameter value may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		value = value; 		this.point = (copyArray) ? point.clone() : point; 		this.value = value;}
	    	                                                                                               		^]
Ingredient counter is Zero
---Undoing: gnrtn(470): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (939(f=2.0), 940(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (939(f=2.0), )
----------Running generation: 471, population size: 1

***** Generation 471 : 0
**Parent Variant: [Variant id: 941, #gens: 240, #ops: 0, parent:-]

--Child created id: 942
--Creating new operations for variant [Variant id: 942, #gens: 240, #ops: 0, parent:941]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtFieldReadImpl
SameName: final 


































































java.text.NumberFormat denominatorFormat
SameName: final 


































































java.text.NumberFormat denominatorFormat
Transforming shadowed variable in return denominatorFormat
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 942, #gens: 241, #ops: 1, parent:941] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 942, errors: [AbstractFormat.java:103: error: incompatible types: unexpected return value
		return denominatorFormat; 		this.numeratorFormat = numeratorFormat; 		this.denominatorFormat = denominatorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(471): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return denominatorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (941(f=2.0), 942(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (941(f=2.0), )
----------Running generation: 472, population size: 1

***** Generation 472 : 0
**Parent Variant: [Variant id: 943, #gens: 240, #ops: 0, parent:-]

--Child created id: 944
--Creating new operations for variant [Variant id: 944, #gens: 240, #ops: 0, parent:943]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 944, #gens: 240, #ops: 1, parent:943] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 944
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-944/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(472): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (943(f=2.0), 944(f=2.0), )
Selected to next generation: IDs2--> (943(f=2.0), )
----------Running generation: 473, population size: 1

***** Generation 473 : 0
**Parent Variant: [Variant id: 945, #gens: 240, #ops: 0, parent:-]

--Child created id: 946
--Creating new operations for variant [Variant id: 946, #gens: 240, #ops: 0, parent:945]
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
Attempts Base Ingredients  6 total 8
Attempts Base Ingredients  7 total 8
Attempts Base Ingredients  8 total 8
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 946, #gens: 240, #ops: 1, parent:945] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 946, errors: [FractionFormat.java:226: error: variable initialIndex is already defined in method parse(java.lang.String,java.text.ParsePosition)
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		final int initialIndex = pos.getIndex();
		                                                                                       		          ^, FractionFormat.java:230: error: cannot find symbol
		if (num == null) {
		    ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(473): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (945(f=2.0), 946(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (945(f=2.0), )
----------Running generation: 474, population size: 1

***** Generation 474 : 0
**Parent Variant: [Variant id: 947, #gens: 240, #ops: 0, parent:-]

--Child created id: 948
--Creating new operations for variant [Variant id: 948, #gens: 240, #ops: 0, parent:947]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 26
location: MultiDirectional.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 948, #gens: 239, #ops: 1, parent:947] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 948
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-948/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(474): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (947(f=2.0), 948(f=3.0), )
Selected to next generation: IDs2--> (947(f=2.0), )
----------Running generation: 475, population size: 1

***** Generation 475 : 0
**Parent Variant: [Variant id: 949, #gens: 240, #ops: 0, parent:-]

--Child created id: 950
--Creating new operations for variant [Variant id: 950, #gens: 240, #ops: 0, parent:949]
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java222
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 950, #gens: 241, #ops: 1, parent:949] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 950, errors: [FractionFormat.java:223: error: variable initialIndex is already defined in method parse(java.lang.String,java.text.ParsePosition)
	 */ 	@java.lang.Override 	public org.apache.commons.math.fraction.Fraction parse(final java.lang.String source, final java.text.ParsePosition pos) { 		final int initialIndex = pos.getIndex(); 		final int initialIndex = pos.getIndex();
	    	                    	                                                                                                                           		                                         		          ^]
Ingredient counter is Zero
---Undoing: gnrtn(475): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (949(f=2.0), 950(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (949(f=2.0), )
----------Running generation: 476, population size: 1

***** Generation 476 : 0
**Parent Variant: [Variant id: 951, #gens: 240, #ops: 0, parent:-]

--Child created id: 952
--Creating new operations for variant [Variant id: 952, #gens: 240, #ops: 0, parent:951]
---analyzing modificationPoint position: 112
location: DirectSearchOptimizer.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 952, #gens: 239, #ops: 1, parent:951] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 952
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-952/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(476): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setMaxEvaluations(java.lang.Integer.MAX_VALUE) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (951(f=2.0), 952(f=5.0), )
Selected to next generation: IDs2--> (951(f=2.0), )
----------Running generation: 477, population size: 1

***** Generation 477 : 0
**Parent Variant: [Variant id: 953, #gens: 240, #ops: 0, parent:-]

--Child created id: 954
--Creating new operations for variant [Variant id: 954, #gens: 240, #ops: 0, parent:953]
---analyzing modificationPoint position: 73
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 954, #gens: 240, #ops: 1, parent:953] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 954
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-954/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(477): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (953(f=2.0), 954(f=2.0), )
Selected to next generation: IDs2--> (953(f=2.0), )
----------Running generation: 478, population size: 1

***** Generation 478 : 0
**Parent Variant: [Variant id: 955, #gens: 240, #ops: 0, parent:-]

--Child created id: 956
--Creating new operations for variant [Variant id: 956, #gens: 240, #ops: 0, parent:955]
---analyzing modificationPoint position: 153
location: ProperBigFractionFormat.java238
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 956, #gens: 239, #ops: 1, parent:955] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 956
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-956/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(478): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (955(f=2.0), 956(f=2.0), )
Selected to next generation: IDs2--> (955(f=2.0), )
----------Running generation: 479, population size: 1

***** Generation 479 : 0
**Parent Variant: [Variant id: 957, #gens: 240, #ops: 0, parent:-]

--Child created id: 958
--Creating new operations for variant [Variant id: 958, #gens: 240, #ops: 0, parent:957]
---analyzing modificationPoint position: 33
location: MultiDirectional.java121
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 958, #gens: 239, #ops: 1, parent:957] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 958
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-958/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(479): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (957(f=2.0), 958(f=4.0), )
Selected to next generation: IDs2--> (957(f=2.0), )
----------Running generation: 480, population size: 1

***** Generation 480 : 0
**Parent Variant: [Variant id: 959, #gens: 240, #ops: 0, parent:-]

--Child created id: 960
--Creating new operations for variant [Variant id: 960, #gens: 240, #ops: 0, parent:959]
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [this.checker]
--> var from patch: this.checker spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java392
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `this.checker = checker` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 392, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `this.checker = checker` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 960, #gens: 241, #ops: 1, parent:959] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 960
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-960/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(480): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `this.checker = checker` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (959(f=2.0), 960(f=2.0), )
Selected to next generation: IDs2--> (959(f=2.0), )
----------Running generation: 481, population size: 1

***** Generation 481 : 0
**Parent Variant: [Variant id: 961, #gens: 240, #ops: 0, parent:-]

--Child created id: 962
--Creating new operations for variant [Variant id: 962, #gens: 240, #ops: 0, parent:961]
---analyzing modificationPoint position: 53
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 962, #gens: 239, #ops: 1, parent:961] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 962
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-962/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(481): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (961(f=2.0), 962(f=2.0), )
Selected to next generation: IDs2--> (961(f=2.0), )
----------Running generation: 482, population size: 1

***** Generation 482 : 0
**Parent Variant: [Variant id: 963, #gens: 240, #ops: 0, parent:-]

--Child created id: 964
--Creating new operations for variant [Variant id: 964, #gens: 240, #ops: 0, parent:963]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 964, #gens: 239, #ops: 1, parent:963] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 964
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-964/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(482): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (963(f=2.0), 964(f=2.0), )
Selected to next generation: IDs2--> (963(f=2.0), )
----------Running generation: 483, population size: 1

***** Generation 483 : 0
**Parent Variant: [Variant id: 965, #gens: 240, #ops: 0, parent:-]

--Child created id: 966
--Creating new operations for variant [Variant id: 966, #gens: 240, #ops: 0, parent:965]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 966, #gens: 241, #ops: 1, parent:965] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 966
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-966/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(483): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (965(f=2.0), 966(f=2.0), )
Selected to next generation: IDs2--> (965(f=2.0), )
----------Running generation: 484, population size: 1

***** Generation 484 : 0
**Parent Variant: [Variant id: 967, #gens: 240, #ops: 0, parent:-]

--Child created id: 968
--Creating new operations for variant [Variant id: 968, #gens: 240, #ops: 0, parent:967]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 144
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  c = source.charAt(index++)
---analyzing modificationPoint position: 106
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  if ((++evaluations) > maxEvaluations) { 	throw new org.apache.commons.math.FunctionEvaluationExcepti[...]
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 132
location: DirectSearchOptimizer.java378
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 968, #gens: 239, #ops: 1, parent:967] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 968
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-968/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(484): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (967(f=2.0), 968(f=4.0), )
Selected to next generation: IDs2--> (967(f=2.0), )
----------Running generation: 485, population size: 1

***** Generation 485 : 0
**Parent Variant: [Variant id: 969, #gens: 240, #ops: 0, parent:-]

--Child created id: 970
--Creating new operations for variant [Variant id: 970, #gens: 240, #ops: 0, parent:969]
---analyzing modificationPoint position: 149
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 970, #gens: 239, #ops: 1, parent:969] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 970
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-970/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(485): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (969(f=2.0), 970(f=2.0), )
Selected to next generation: IDs2--> (969(f=2.0), )
----------Running generation: 486, population size: 1

***** Generation 486 : 0
**Parent Variant: [Variant id: 971, #gens: 240, #ops: 0, parent:-]

--Child created id: 972
--Creating new operations for variant [Variant id: 972, #gens: 240, #ops: 0, parent:971]
---analyzing modificationPoint position: 183
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java49
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 49, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 972, #gens: 241, #ops: 1, parent:971] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 972, errors: [RealPointValuePair.java:87: error: incompatible types: unexpected return value
		return value; 		this.point = point.clone(); 		this.value = value;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(486): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (971(f=2.0), 972(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (971(f=2.0), )
----------Running generation: 487, population size: 1

***** Generation 487 : 0
**Parent Variant: [Variant id: 973, #gens: 240, #ops: 0, parent:-]

--Child created id: 974
--Creating new operations for variant [Variant id: 974, #gens: 240, #ops: 0, parent:973]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 25
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 974, #gens: 240, #ops: 1, parent:973] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 974, errors: [MultiDirectional.java:71: error: variable best is already defined in method iterateSimplex(java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0]; 			final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
			                                                                                  			                                                              ^, MultiDirectional.java:75: error: cannot find symbol
			if (comparator.compare(reflected, best) < 0) {
			                       ^
  symbol:   variable reflected
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:80: error: cannot find symbol
				if (comparator.compare(reflected, expanded) <= 0) {
				                       ^
  symbol:   variable reflected
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(487): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (973(f=2.0), 974(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (973(f=2.0), )
----------Running generation: 488, population size: 1

***** Generation 488 : 0
**Parent Variant: [Variant id: 975, #gens: 240, #ops: 0, parent:-]

--Child created id: 976
--Creating new operations for variant [Variant id: 976, #gens: 240, #ops: 0, parent:975]
---analyzing modificationPoint position: 33
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
vars from patch [i, n, original, j, xTransformed, xSmallest, coeff, xOriginal, simplex, java.lang.Double.NaN]
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTransformed spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xSmallest spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: coeff spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xOriginal spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtForImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 976, #gens: 240, #ops: 1, parent:975] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 976
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-976/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(488): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (975(f=2.0), 976(f=2.0), )
Selected to next generation: IDs2--> (975(f=2.0), )
----------Running generation: 489, population size: 1

***** Generation 489 : 0
**Parent Variant: [Variant id: 977, #gens: 240, #ops: 0, parent:-]

--Child created id: 978
--Creating new operations for variant [Variant id: 978, #gens: 240, #ops: 0, parent:977]
---analyzing modificationPoint position: 109
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `evaluations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `evaluations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 978, #gens: 241, #ops: 1, parent:977] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 978
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-978/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(489): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `evaluations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (977(f=2.0), 978(f=4.0), )
Selected to next generation: IDs2--> (977(f=2.0), )
----------Running generation: 490, population size: 1

***** Generation 490 : 0
**Parent Variant: [Variant id: 979, #gens: 240, #ops: 0, parent:-]

--Child created id: 980
--Creating new operations for variant [Variant id: 980, #gens: 240, #ops: 0, parent:979]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 980, #gens: 239, #ops: 1, parent:979] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 980
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-980/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(490): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (979(f=2.0), 980(f=2.0), )
Selected to next generation: IDs2--> (979(f=2.0), )
----------Running generation: 491, population size: 1

***** Generation 491 : 0
**Parent Variant: [Variant id: 981, #gens: 240, #ops: 0, parent:-]

--Child created id: 982
--Creating new operations for variant [Variant id: 982, #gens: 240, #ops: 0, parent:981]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java176
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 982, #gens: 241, #ops: 1, parent:981] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 982
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-982/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(491): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (981(f=2.0), 982(f=2.0), )
Selected to next generation: IDs2--> (981(f=2.0), )
----------Running generation: 492, population size: 1

***** Generation 492 : 0
**Parent Variant: [Variant id: 983, #gens: 240, #ops: 0, parent:-]

--Child created id: 984
--Creating new operations for variant [Variant id: 984, #gens: 240, #ops: 0, parent:983]
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 119
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 166
---modifPoint 3 not mutation generated in  // compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]
---analyzing modificationPoint position: 164
Templates availables144
Attempts Base Ingredients  1 total 144
---modifPoint 4 not mutation generated in  return denominator
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 5 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 6 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 91, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 984, #gens: 241, #ops: 1, parent:983] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 984, errors: [ProperBigFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		return wholeFormat; 		pos.setEndIndex(0); 		java.math.BigInteger num = fraction.getNumerator(); 		java.math.BigInteger den = fraction.getDenominator(); 		java.math.BigInteger whole = num.divide(den); 		num = num.remainder(den); 		if (!java.math.BigInteger.ZERO.equals(whole)) { 			getWholeFormat().format(whole, toAppendTo, pos); 			toAppendTo.append(' '); 			if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 				num = num.negate();}} 		getNumeratorFormat().format(num, toAppendTo, pos); 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(492): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (983(f=2.0), 984(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (983(f=2.0), )
----------Running generation: 493, population size: 1

***** Generation 493 : 0
**Parent Variant: [Variant id: 985, #gens: 240, #ops: 0, parent:-]

--Child created id: 986
--Creating new operations for variant [Variant id: 986, #gens: 240, #ops: 0, parent:985]
---analyzing modificationPoint position: 139
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java150
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 150, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 986, #gens: 241, #ops: 1, parent:985] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 986, errors: [AbstractFormat.java:150: error: non-static variable numeratorFormat cannot be referenced from a static context
	 */ 	protected static void parseAndIgnoreWhitespace(final java.lang.String source, final java.text.ParsePosition pos) { 		org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos); 		numeratorFormat = numeratorFormat;
	    	                                                                                                                   		                                                                                 		^, AbstractFormat.java:150: error: non-static variable numeratorFormat cannot be referenced from a static context
	 */ 	protected static void parseAndIgnoreWhitespace(final java.lang.String source, final java.text.ParsePosition pos) { 		org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos); 		numeratorFormat = numeratorFormat;
	    	                                                                                                                   		                                                                                 		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(493): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (985(f=2.0), 986(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (985(f=2.0), )
----------Running generation: 494, population size: 1

***** Generation 494 : 0
**Parent Variant: [Variant id: 987, #gens: 240, #ops: 0, parent:-]

--Child created id: 988
--Creating new operations for variant [Variant id: 988, #gens: 240, #ops: 0, parent:987]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 32
location: MultiDirectional.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 988, #gens: 239, #ops: 1, parent:987] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 988
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-988/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(494): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (987(f=2.0), 988(f=4.0), )
Selected to next generation: IDs2--> (987(f=2.0), )
----------Running generation: 495, population size: 1

***** Generation 495 : 0
**Parent Variant: [Variant id: 989, #gens: 240, #ops: 0, parent:-]

--Child created id: 990
--Creating new operations for variant [Variant id: 990, #gens: 240, #ops: 0, parent:989]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 990, #gens: 241, #ops: 1, parent:989] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 990, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf; 		return nf;
		           		^]
Ingredient counter is Zero
---Undoing: gnrtn(495): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (989(f=2.0), 990(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (989(f=2.0), )
----------Running generation: 496, population size: 1

***** Generation 496 : 0
**Parent Variant: [Variant id: 991, #gens: 240, #ops: 0, parent:-]

--Child created id: 992
--Creating new operations for variant [Variant id: 992, #gens: 240, #ops: 0, parent:991]
---analyzing modificationPoint position: 49
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 177
location: BigFraction.java177
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 992, #gens: 239, #ops: 1, parent:991] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 992, errors: [BigFraction.java:182: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(496): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (991(f=2.0), 992(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (991(f=2.0), )
----------Running generation: 497, population size: 1

***** Generation 497 : 0
**Parent Variant: [Variant id: 993, #gens: 240, #ops: 0, parent:-]

--Child created id: 994
--Creating new operations for variant [Variant id: 994, #gens: 240, #ops: 0, parent:993]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 994, #gens: 241, #ops: 1, parent:993] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 994, errors: [MultiDirectional.java:124: error: incompatible types: missing return value
			return; 			final double[] xTransformed = new double[n];
			^]
Ingredient counter is Zero
---Undoing: gnrtn(497): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (993(f=2.0), 994(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (993(f=2.0), )
----------Running generation: 498, population size: 1

***** Generation 498 : 0
**Parent Variant: [Variant id: 995, #gens: 240, #ops: 0, parent:-]

--Child created id: 996
--Creating new operations for variant [Variant id: 996, #gens: 240, #ops: 0, parent:995]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 996, #gens: 239, #ops: 1, parent:995] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 996
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-996/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(498): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (995(f=2.0), 996(f=2.0), )
Selected to next generation: IDs2--> (995(f=2.0), )
----------Running generation: 499, population size: 1

***** Generation 499 : 0
**Parent Variant: [Variant id: 997, #gens: 240, #ops: 0, parent:-]

--Child created id: 998
--Creating new operations for variant [Variant id: 998, #gens: 240, #ops: 0, parent:997]
---analyzing modificationPoint position: 53
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 26
location: MultiDirectional.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 998, #gens: 239, #ops: 1, parent:997] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 998
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-998/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(499): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (997(f=2.0), 998(f=3.0), )
Selected to next generation: IDs2--> (997(f=2.0), )
----------Running generation: 500, population size: 1

***** Generation 500 : 0
**Parent Variant: [Variant id: 999, #gens: 240, #ops: 0, parent:-]

--Child created id: 1000
--Creating new operations for variant [Variant id: 1000, #gens: 240, #ops: 0, parent:999]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 60
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 108, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1000, #gens: 240, #ops: 1, parent:999] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1000
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1000/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(500): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (999(f=2.0), 1000(f=2.0), )
Selected to next generation: IDs2--> (999(f=2.0), )
----------Running generation: 501, population size: 1

***** Generation 501 : 0
**Parent Variant: [Variant id: 1001, #gens: 240, #ops: 0, parent:-]

--Child created id: 1002
--Creating new operations for variant [Variant id: 1002, #gens: 240, #ops: 0, parent:1001]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 170
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java84
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 84, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1002, #gens: 241, #ops: 1, parent:1001] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1002, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(501): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1001(f=2.0), 1002(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1001(f=2.0), )
----------Running generation: 502, population size: 1

***** Generation 502 : 0
**Parent Variant: [Variant id: 1003, #gens: 240, #ops: 0, parent:-]

--Child created id: 1004
--Creating new operations for variant [Variant id: 1004, #gens: 240, #ops: 0, parent:1003]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [i, n, original, j, xTransformed, xSmallest, coeff, xOriginal, simplex, java.lang.Double.NaN]
--> var from patch: i spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: j spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xTransformed spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xSmallest spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: coeff spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: xOriginal spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtForImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 

--Summary Creation: for variant [Variant id: 1004, #gens: 241, #ops: 1, parent:1003] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1004
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1004/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(502): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]` (spoon.support.reflect.code.CtForImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1003(f=2.0), 1004(f=2.0), )
Selected to next generation: IDs2--> (1003(f=2.0), )
----------Running generation: 503, population size: 1

***** Generation 503 : 0
**Parent Variant: [Variant id: 1005, #gens: 240, #ops: 0, parent:-]

--Child created id: 1006
--Creating new operations for variant [Variant id: 1006, #gens: 240, #ops: 0, parent:1005]
---analyzing modificationPoint position: 76
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 97
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 1 not mutation generated in  final double v1 = o1.getValue()
---analyzing modificationPoint position: 77
---modifPoint 2 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch []
location: ProperFractionFormat.java118
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 118, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1006, #gens: 240, #ops: 1, parent:1005] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1006, errors: [ProperFractionFormat.java:170: error: cannot find symbol
		if (num.intValue() < 0) {
		    ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:172: error: cannot find symbol
			pos.setIndex(initialIndex);
			             ^
  symbol:   variable initialIndex
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:183: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:191: error: cannot find symbol
				pos.setIndex(initialIndex);
				             ^
  symbol:   variable initialIndex
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:205: error: cannot find symbol
			pos.setIndex(initialIndex);
			             ^
  symbol:   variable initialIndex
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:211: error: cannot find symbol
			pos.setIndex(initialIndex);
			             ^
  symbol:   variable initialIndex
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:215: error: cannot find symbol
		int w = whole.intValue();
		        ^
  symbol:   variable whole
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:216: error: cannot find symbol
		int n = num.intValue();
		        ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.ProperFractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(503): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return wholeFormat ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1005(f=2.0), 1006(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1005(f=2.0), )
----------Running generation: 504, population size: 1

***** Generation 504 : 0
**Parent Variant: [Variant id: 1007, #gens: 240, #ops: 0, parent:-]

--Child created id: 1008
--Creating new operations for variant [Variant id: 1008, #gens: 240, #ops: 0, parent:1007]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1008, #gens: 239, #ops: 1, parent:1007] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1008
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1008/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(504): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1007(f=2.0), 1008(f=2.0), )
Selected to next generation: IDs2--> (1007(f=2.0), )
----------Running generation: 505, population size: 1

***** Generation 505 : 0
**Parent Variant: [Variant id: 1009, #gens: 240, #ops: 0, parent:-]

--Child created id: 1010
--Creating new operations for variant [Variant id: 1010, #gens: 240, #ops: 0, parent:1009]
---analyzing modificationPoint position: 79
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1010, #gens: 241, #ops: 1, parent:1009] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1010
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1010/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(505): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1009(f=2.0), 1010(f=2.0), )
Selected to next generation: IDs2--> (1009(f=2.0), )
----------Running generation: 506, population size: 1

***** Generation 506 : 0
**Parent Variant: [Variant id: 1011, #gens: 240, #ops: 0, parent:-]

--Child created id: 1012
--Creating new operations for variant [Variant id: 1012, #gens: 240, #ops: 0, parent:1011]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 53
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1012, #gens: 239, #ops: 1, parent:1011] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1012
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1012/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(506): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1011(f=2.0), 1012(f=2.0), )
Selected to next generation: IDs2--> (1011(f=2.0), )
----------Running generation: 507, population size: 1

***** Generation 507 : 0
**Parent Variant: [Variant id: 1013, #gens: 240, #ops: 0, parent:-]

--Child created id: 1014
--Creating new operations for variant [Variant id: 1014, #gens: 240, #ops: 0, parent:1013]
---analyzing modificationPoint position: 29
---modifPoint 0 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 165
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 121
location: DirectSearchOptimizer.java287
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1014, #gens: 239, #ops: 1, parent:1013] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1014
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1014/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(507): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1013(f=2.0), 1014(f=2.0), )
Selected to next generation: IDs2--> (1013(f=2.0), )
----------Running generation: 508, population size: 1

***** Generation 508 : 0
**Parent Variant: [Variant id: 1015, #gens: 240, #ops: 0, parent:-]

--Child created id: 1016
--Creating new operations for variant [Variant id: 1016, #gens: 240, #ops: 0, parent:1015]
---analyzing modificationPoint position: 15
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 27
---modifPoint 2 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 129
---modifPoint 3 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 171
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1016, #gens: 240, #ops: 1, parent:1015] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1016, errors: [MultiDirectional.java:148: error: reached end of file while parsing
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(508): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1015(f=2.0), 1016(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1015(f=2.0), )
----------Running generation: 509, population size: 1

***** Generation 509 : 0
**Parent Variant: [Variant id: 1017, #gens: 240, #ops: 0, parent:-]

--Child created id: 1018
--Creating new operations for variant [Variant id: 1018, #gens: 240, #ops: 0, parent:1017]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1018, #gens: 239, #ops: 1, parent:1017] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1018
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1018/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(509): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1017(f=2.0), 1018(f=2.0), )
Selected to next generation: IDs2--> (1017(f=2.0), )
----------Running generation: 510, population size: 1

***** Generation 510 : 0
**Parent Variant: [Variant id: 1019, #gens: 240, #ops: 0, parent:-]

--Child created id: 1020
--Creating new operations for variant [Variant id: 1020, #gens: 240, #ops: 0, parent:1019]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1020, #gens: 241, #ops: 1, parent:1019] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1020, errors: [AbstractFormat.java:92: error: variable nf is already defined in method getDefaultNumberFormat(java.util.Locale)
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		                                                                                    		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(510): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1019(f=2.0), 1020(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1019(f=2.0), )
----------Running generation: 511, population size: 1

***** Generation 511 : 0
**Parent Variant: [Variant id: 1021, #gens: 240, #ops: 0, parent:-]

--Child created id: 1022
--Creating new operations for variant [Variant id: 1022, #gens: 240, #ops: 0, parent:1021]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 50
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [whole]
--> var from patch: whole spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1022, #gens: 241, #ops: 1, parent:1021] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1022, errors: [ProperBigFractionFormat.java:237: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:240: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:243: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:244: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:245: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:245: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:246: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:246: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:247: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:247: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(511): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1021(f=2.0), 1022(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1021(f=2.0), )
----------Running generation: 512, population size: 1

***** Generation 512 : 0
**Parent Variant: [Variant id: 1023, #gens: 240, #ops: 0, parent:-]

--Child created id: 1024
--Creating new operations for variant [Variant id: 1024, #gens: 240, #ops: 0, parent:1023]
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1024, #gens: 239, #ops: 1, parent:1023] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1024
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1024/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(512): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1023(f=2.0), 1024(f=2.0), )
Selected to next generation: IDs2--> (1023(f=2.0), )
----------Running generation: 513, population size: 1

***** Generation 513 : 0
**Parent Variant: [Variant id: 1025, #gens: 240, #ops: 0, parent:-]

--Child created id: 1026
--Creating new operations for variant [Variant id: 1026, #gens: 240, #ops: 0, parent:1025]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 38
location: MultiDirectional.java127
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1026, #gens: 239, #ops: 1, parent:1025] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1026
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1026/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(513): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1025(f=2.0), 1026(f=4.0), )
Selected to next generation: IDs2--> (1025(f=2.0), )
----------Running generation: 514, population size: 1

***** Generation 514 : 0
**Parent Variant: [Variant id: 1027, #gens: 240, #ops: 0, parent:-]

--Child created id: 1028
--Creating new operations for variant [Variant id: 1028, #gens: 240, #ops: 0, parent:1027]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `java.math.BigInteger whole = num.divide(den)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `java.math.BigInteger whole = num.divide(den)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1028, #gens: 241, #ops: 1, parent:1027] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1028, errors: [ProperBigFractionFormat.java:107: error: variable whole is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		getNumeratorFormat().format(num, toAppendTo, pos); 		java.math.BigInteger whole = num.divide(den);
		                                                   		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(514): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `java.math.BigInteger whole = num.divide(den)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1027(f=2.0), 1028(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1027(f=2.0), )
----------Running generation: 515, population size: 1

***** Generation 515 : 0
**Parent Variant: [Variant id: 1029, #gens: 240, #ops: 0, parent:-]

--Child created id: 1030
--Creating new operations for variant [Variant id: 1030, #gens: 240, #ops: 0, parent:1029]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 67
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 31
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1030, #gens: 240, #ops: 1, parent:1029] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1030, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable khi
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		this.khi = khi;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(515): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1029(f=2.0), 1030(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1029(f=2.0), )
----------Running generation: 516, population size: 1

***** Generation 516 : 0
**Parent Variant: [Variant id: 1031, #gens: 240, #ops: 0, parent:-]

--Child created id: 1032
--Creating new operations for variant [Variant id: 1032, #gens: 240, #ops: 0, parent:1031]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1032, #gens: 241, #ops: 1, parent:1031] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1032
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1032/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(516): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1031(f=2.0), 1032(f=2.0), )
Selected to next generation: IDs2--> (1031(f=2.0), )
----------Running generation: 517, population size: 1

***** Generation 517 : 0
**Parent Variant: [Variant id: 1033, #gens: 240, #ops: 0, parent:-]

--Child created id: 1034
--Creating new operations for variant [Variant id: 1034, #gens: 240, #ops: 0, parent:1033]
---analyzing modificationPoint position: 156
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
vars from patch [this.relativeThreshold, org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD]
--> var from patch: this.relativeThreshold spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD spoon.support.reflect.code.CtFieldReadImpl
location: SimpleScalarValueChecker.java51
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 51, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1034, #gens: 240, #ops: 1, parent:1033] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1034
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1034/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(517): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1033(f=2.0), 1034(f=2.0), )
Selected to next generation: IDs2--> (1033(f=2.0), )
----------Running generation: 518, population size: 1

***** Generation 518 : 0
**Parent Variant: [Variant id: 1035, #gens: 240, #ops: 0, parent:-]

--Child created id: 1036
--Creating new operations for variant [Variant id: 1036, #gens: 240, #ops: 0, parent:1035]
---analyzing modificationPoint position: 27
---modifPoint 0 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 62
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 126
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java369
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 369, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1036, #gens: 241, #ops: 1, parent:1035] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1036, errors: [DirectSearchOptimizer.java:370: error: incompatible types: unexpected return value
		simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Double.NaN); 		return evaluations;
		                                                                                                            		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(518): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1035(f=2.0), 1036(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1035(f=2.0), )
----------Running generation: 519, population size: 1

***** Generation 519 : 0
**Parent Variant: [Variant id: 1037, #gens: 240, #ops: 0, parent:-]

--Child created id: 1038
--Creating new operations for variant [Variant id: 1038, #gens: 240, #ops: 0, parent:1037]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 88
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  // only the relative position of the n final vertices with respect // to the first one are stored fi[...]
---analyzing modificationPoint position: 176
location: BigFraction.java171
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1038, #gens: 239, #ops: 1, parent:1037] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1038
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1038/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(519): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1037(f=2.0), 1038(f=2.0), )
Selected to next generation: IDs2--> (1037(f=2.0), )
----------Running generation: 520, population size: 1

***** Generation 520 : 0
**Parent Variant: [Variant id: 1039, #gens: 240, #ops: 0, parent:-]

--Child created id: 1040
--Creating new operations for variant [Variant id: 1040, #gens: 240, #ops: 0, parent:1039]
---analyzing modificationPoint position: 175
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); }
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
Attempts Base Ingredients  2 total 38
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 130
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 2 not mutation generated in  for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; }
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 77
---modifPoint 4 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 65
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 5 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 172
---modifPoint 6 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 61
---modifPoint 7 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 102
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 8 not mutation generated in  if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...]
---analyzing modificationPoint position: 73
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch [ret, ((java.math.BigInteger) (obj)), toAppendTo, pos]
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: ((java.math.BigInteger) (obj)) spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java180
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 180, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1040, #gens: 241, #ops: 1, parent:1039] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child does NOT compile: 1040, errors: [BigFractionFormat.java:179: error: variable ret might already have been assigned
		} 		ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toAppendTo, pos);
		  		^]
Ingredient counter is Zero
---Undoing: gnrtn(520): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `ret = format(new org.apache.commons.math.fraction.BigFraction(((java.math.BigInteger) (obj))), toApp[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1039(f=2.0), 1040(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1039(f=2.0), )
----------Running generation: 521, population size: 1

***** Generation 521 : 0
**Parent Variant: [Variant id: 1041, #gens: 240, #ops: 0, parent:-]

--Child created id: 1042
--Creating new operations for variant [Variant id: 1042, #gens: 240, #ops: 0, parent:1041]
---analyzing modificationPoint position: 79
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1042, #gens: 239, #ops: 1, parent:1041] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1042
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1042/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(521): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1041(f=2.0), 1042(f=2.0), )
Selected to next generation: IDs2--> (1041(f=2.0), )
----------Running generation: 522, population size: 1

***** Generation 522 : 0
**Parent Variant: [Variant id: 1043, #gens: 240, #ops: 0, parent:-]

--Child created id: 1044
--Creating new operations for variant [Variant id: 1044, #gens: 240, #ops: 0, parent:1043]
---analyzing modificationPoint position: 175
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); }
---analyzing modificationPoint position: 81
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1044, #gens: 239, #ops: 1, parent:1043] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1044
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1044/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(522): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1043(f=2.0), 1044(f=2.0), )
Selected to next generation: IDs2--> (1043(f=2.0), )
----------Running generation: 523, population size: 1

***** Generation 523 : 0
**Parent Variant: [Variant id: 1045, #gens: 240, #ops: 0, parent:-]

--Child created id: 1046
--Creating new operations for variant [Variant id: 1046, #gens: 240, #ops: 0, parent:1045]
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1046, #gens: 241, #ops: 1, parent:1045] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1046
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1046/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(523): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1045(f=2.0), 1046(f=2.0), )
Selected to next generation: IDs2--> (1045(f=2.0), )
----------Running generation: 524, population size: 1

***** Generation 524 : 0
**Parent Variant: [Variant id: 1047, #gens: 240, #ops: 0, parent:-]

--Child created id: 1048
--Creating new operations for variant [Variant id: 1048, #gens: 240, #ops: 0, parent:1047]
---analyzing modificationPoint position: 62
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 20
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java46
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 46, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1048, #gens: 240, #ops: 1, parent:1047] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1048, errors: [MultiDirectional.java:48: error: variable gamma might already have been assigned
		this.gamma = 0.5; 		this.gamma = 0.5;
		                  		    ^, MultiDirectional.java:49: error: variable khi might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(524): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1047(f=2.0), 1048(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1047(f=2.0), )
----------Running generation: 525, population size: 1

***** Generation 525 : 0
**Parent Variant: [Variant id: 1049, #gens: 240, #ops: 0, parent:-]

--Child created id: 1050
--Creating new operations for variant [Variant id: 1050, #gens: 240, #ops: 0, parent:1049]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 137
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 79, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1050, #gens: 241, #ops: 1, parent:1049] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1050, errors: [RealPointValuePair.java:80: error: cannot assign a value to final variable value
	 */ 	public double[] getPointRef() { 		value = value; 		return point;
	    	                                		^]
Ingredient counter is Zero
---Undoing: gnrtn(525): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1049(f=2.0), 1050(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1049(f=2.0), )
----------Running generation: 526, population size: 1

***** Generation 526 : 0
**Parent Variant: [Variant id: 1051, #gens: 240, #ops: 0, parent:-]

--Child created id: 1052
--Creating new operations for variant [Variant id: 1052, #gens: 240, #ops: 0, parent:1051]
---analyzing modificationPoint position: 76
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1052, #gens: 239, #ops: 1, parent:1051] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1052
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1052/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(526): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1051(f=2.0), 1052(f=2.0), )
Selected to next generation: IDs2--> (1051(f=2.0), )
----------Running generation: 527, population size: 1

***** Generation 527 : 0
**Parent Variant: [Variant id: 1053, #gens: 240, #ops: 0, parent:-]

--Child created id: 1054
--Creating new operations for variant [Variant id: 1054, #gens: 240, #ops: 0, parent:1053]
---analyzing modificationPoint position: 50
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1054, #gens: 239, #ops: 1, parent:1053] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1054
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1054/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(527): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1053(f=2.0), 1054(f=2.0), )
Selected to next generation: IDs2--> (1053(f=2.0), )
----------Running generation: 528, population size: 1

***** Generation 528 : 0
**Parent Variant: [Variant id: 1055, #gens: 240, #ops: 0, parent:-]

--Child created id: 1056
--Creating new operations for variant [Variant id: 1056, #gens: 240, #ops: 0, parent:1055]
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 139
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: AbstractFormat.java150
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 150, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1056, #gens: 240, #ops: 1, parent:1055] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1056, errors: [AbstractFormat.java:150: error: call to this must be first statement in constructor
	 */ 	protected static void parseAndIgnoreWhitespace(final java.lang.String source, final java.text.ParsePosition pos) { 		org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                                   		                                                                                 		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(528): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1055(f=2.0), 1056(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1055(f=2.0), )
----------Running generation: 529, population size: 1

***** Generation 529 : 0
**Parent Variant: [Variant id: 1057, #gens: 240, #ops: 0, parent:-]

--Child created id: 1058
--Creating new operations for variant [Variant id: 1058, #gens: 240, #ops: 0, parent:1057]
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java225
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 225, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1058, #gens: 240, #ops: 1, parent:1057] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1058, errors: [FractionFormat.java:241: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), FractionFormat.java:259: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(529): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1057(f=2.0), 1058(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1057(f=2.0), )
----------Running generation: 530, population size: 1

***** Generation 530 : 0
**Parent Variant: [Variant id: 1059, #gens: 240, #ops: 0, parent:-]

--Child created id: 1060
--Creating new operations for variant [Variant id: 1060, #gens: 240, #ops: 0, parent:1059]
---analyzing modificationPoint position: 99
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 0 not mutation generated in  return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 142
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 23
---modifPoint 3 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 18
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1060, #gens: 239, #ops: 1, parent:1059] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1060
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1060/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(530): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1059(f=2.0), 1060(f=2.0), )
Selected to next generation: IDs2--> (1059(f=2.0), )
----------Running generation: 531, population size: 1

***** Generation 531 : 0
**Parent Variant: [Variant id: 1061, #gens: 240, #ops: 0, parent:-]

--Child created id: 1062
--Creating new operations for variant [Variant id: 1062, #gens: 240, #ops: 0, parent:1061]
---analyzing modificationPoint position: 108
Templates availables17
Attempts Base Ingredients  1 total 17
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...]
---analyzing modificationPoint position: 22
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch []
location: MultiDirectional.java66
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1062, #gens: 240, #ops: 1, parent:1061] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1062
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1062/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(531): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1061(f=2.0), 1062(f=2.0), )
Selected to next generation: IDs2--> (1061(f=2.0), )
----------Running generation: 532, population size: 1

***** Generation 532 : 0
**Parent Variant: [Variant id: 1063, #gens: 240, #ops: 0, parent:-]

--Child created id: 1064
--Creating new operations for variant [Variant id: 1064, #gens: 240, #ops: 0, parent:1063]
---analyzing modificationPoint position: 22
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 25
---modifPoint 1 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1064, #gens: 239, #ops: 1, parent:1063] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1064
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1064/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(532): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1063(f=2.0), 1064(f=2.0), )
Selected to next generation: IDs2--> (1063(f=2.0), )
----------Running generation: 533, population size: 1

***** Generation 533 : 0
**Parent Variant: [Variant id: 1065, #gens: 240, #ops: 0, parent:-]

--Child created id: 1066
--Creating new operations for variant [Variant id: 1066, #gens: 240, #ops: 0, parent:1065]
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java273
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.f = f ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 273, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.f = f ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1066, #gens: 241, #ops: 1, parent:1065] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1066
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1066/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(533): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.f = f ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1065(f=2.0), 1066(f=2.0), )
Selected to next generation: IDs2--> (1065(f=2.0), )
----------Running generation: 534, population size: 1

***** Generation 534 : 0
**Parent Variant: [Variant id: 1067, #gens: 240, #ops: 0, parent:-]

--Child created id: 1068
--Creating new operations for variant [Variant id: 1068, #gens: 240, #ops: 0, parent:1067]
---analyzing modificationPoint position: 60
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 78
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 116
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java250
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 250, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1068, #gens: 241, #ops: 1, parent:1067] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1068
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1068/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(534): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1067(f=2.0), 1068(f=2.0), )
Selected to next generation: IDs2--> (1067(f=2.0), )
----------Running generation: 535, population size: 1

***** Generation 535 : 0
**Parent Variant: [Variant id: 1069, #gens: 240, #ops: 0, parent:-]

--Child created id: 1070
--Creating new operations for variant [Variant id: 1070, #gens: 240, #ops: 0, parent:1069]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 127
location: DirectSearchOptimizer.java372
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1070, #gens: 239, #ops: 1, parent:1069] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1070
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1070/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(535): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1069(f=2.0), 1070(f=4.0), )
Selected to next generation: IDs2--> (1069(f=2.0), )
----------Running generation: 536, population size: 1

***** Generation 536 : 0
**Parent Variant: [Variant id: 1071, #gens: 240, #ops: 0, parent:-]

--Child created id: 1072
--Creating new operations for variant [Variant id: 1072, #gens: 240, #ops: 0, parent:1071]
---analyzing modificationPoint position: 21
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java47
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1072, #gens: 240, #ops: 1, parent:1071] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1072, errors: [MultiDirectional.java:56: error: variable khi might already have been assigned
		this.khi = khi;} 	/**
		    ^, MultiDirectional.java:56: error: variable gamma might not have been initialized
		this.khi = khi;} 	/**
		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(536): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1071(f=2.0), 1072(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1071(f=2.0), )
----------Running generation: 537, population size: 1

***** Generation 537 : 0
**Parent Variant: [Variant id: 1073, #gens: 240, #ops: 0, parent:-]

--Child created id: 1074
--Creating new operations for variant [Variant id: 1074, #gens: 240, #ops: 0, parent:1073]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 29
---modifPoint 2 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 219
Templates availables259
Attempts Base Ingredients  1 total 259
---modifPoint 3 not mutation generated in  // B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]
---analyzing modificationPoint position: 15
---modifPoint 4 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 140
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 5 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 25
Templates availables30
Attempts Base Ingredients  1 total 30
Name Conflict [simplex, comparator, khi, gamma]
---modifPoint 6 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 18
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 7 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 8 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 9 not mutation generated in  simplex[0] = original[0]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 10 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [this.denominatorFormat]
--> var from patch: this.denominatorFormat spoon.support.reflect.code.CtFieldWriteImpl
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this.denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this.denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1074, #gens: 241, #ops: 1, parent:1073] gen mutated: 1 , gen not mut: 11, gen not applied  0
-The child compiles: id 1074
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1074/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(537): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this.denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1073(f=2.0), 1074(f=2.0), )
Selected to next generation: IDs2--> (1073(f=2.0), )
----------Running generation: 538, population size: 1

***** Generation 538 : 0
**Parent Variant: [Variant id: 1075, #gens: 240, #ops: 0, parent:-]

--Child created id: 1076
--Creating new operations for variant [Variant id: 1076, #gens: 240, #ops: 0, parent:1075]
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1076, #gens: 241, #ops: 1, parent:1075] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1076, errors: [MultiDirectional.java:124: error: cannot assign a value to final variable khi
			final double[] xTransformed = new double[n]; 			this.khi = khi;
			                                             			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(538): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1075(f=2.0), 1076(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1075(f=2.0), )
----------Running generation: 539, population size: 1

***** Generation 539 : 0
**Parent Variant: [Variant id: 1077, #gens: 240, #ops: 0, parent:-]

--Child created id: 1078
--Creating new operations for variant [Variant id: 1078, #gens: 240, #ops: 0, parent:1077]
---analyzing modificationPoint position: 66
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1078, #gens: 240, #ops: 1, parent:1077] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1078, errors: [ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(539): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1077(f=2.0), 1078(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1077(f=2.0), )
----------Running generation: 540, population size: 1

***** Generation 540 : 0
**Parent Variant: [Variant id: 1079, #gens: 240, #ops: 0, parent:-]

--Child created id: 1080
--Creating new operations for variant [Variant id: 1080, #gens: 240, #ops: 0, parent:1079]
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  this.f = f
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 183
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java49
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 49, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1080, #gens: 241, #ops: 1, parent:1079] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1080, errors: [RealPointValuePair.java:71: error: incompatible types: unexpected return value
		return point.clone(); 		this.point = point.clone(); 		this.value = value;} 	/**
		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(540): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1079(f=2.0), 1080(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1079(f=2.0), )
----------Running generation: 541, population size: 1

***** Generation 541 : 0
**Parent Variant: [Variant id: 1081, #gens: 240, #ops: 0, parent:-]

--Child created id: 1082
--Creating new operations for variant [Variant id: 1082, #gens: 240, #ops: 0, parent:1081]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1082, #gens: 239, #ops: 1, parent:1081] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1082
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1082/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(541): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1081(f=2.0), 1082(f=2.0), )
Selected to next generation: IDs2--> (1081(f=2.0), )
----------Running generation: 542, population size: 1

***** Generation 542 : 0
**Parent Variant: [Variant id: 1083, #gens: 240, #ops: 0, parent:-]

--Child created id: 1084
--Creating new operations for variant [Variant id: 1084, #gens: 240, #ops: 0, parent:1083]
---analyzing modificationPoint position: 103
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  // we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length)
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 20
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 2 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1084, #gens: 239, #ops: 1, parent:1083] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1084
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1084/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(542): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1083(f=2.0), 1084(f=2.0), )
Selected to next generation: IDs2--> (1083(f=2.0), )
----------Running generation: 543, population size: 1

***** Generation 543 : 0
**Parent Variant: [Variant id: 1085, #gens: 240, #ops: 0, parent:-]

--Child created id: 1086
--Creating new operations for variant [Variant id: 1086, #gens: 240, #ops: 0, parent:1085]
---analyzing modificationPoint position: 74
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 213
Templates availables71
Attempts Base Ingredients  1 total 71
---modifPoint 1 not mutation generated in  // keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...]
---analyzing modificationPoint position: 86
Templates availables37
Attempts Base Ingredients  1 total 37
---modifPoint 2 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 25
---modifPoint 3 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 52
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1086, #gens: 239, #ops: 1, parent:1085] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1086
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1086/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(543): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1085(f=2.0), 1086(f=2.0), )
Selected to next generation: IDs2--> (1085(f=2.0), )
----------Running generation: 544, population size: 1

***** Generation 544 : 0
**Parent Variant: [Variant id: 1087, #gens: 240, #ops: 0, parent:-]

--Child created id: 1088
--Creating new operations for variant [Variant id: 1088, #gens: 240, #ops: 0, parent:1087]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
Name Conflict [simplex, comparator, khi, gamma]
---modifPoint 0 not mutation generated in  // create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]
---analyzing modificationPoint position: 186
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [maxIterations]
--> var from patch: maxIterations spoon.support.reflect.code.CtVariableReadImpl
location: MaxIterationsExceededException.java44
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.MaxIterationsExceededException line: 44, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1088, #gens: 241, #ops: 1, parent:1087] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1088, errors: [MaxIterationsExceededException.java:45: error: final parameter maxIterations may not be assigned
		this.maxIterations = maxIterations; 		maxIterations = maxIterations;
		                                    		^]
Ingredient counter is Zero
---Undoing: gnrtn(544): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1087(f=2.0), 1088(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1087(f=2.0), )
----------Running generation: 545, population size: 1

***** Generation 545 : 0
**Parent Variant: [Variant id: 1089, #gens: 240, #ops: 0, parent:-]

--Child created id: 1090
--Creating new operations for variant [Variant id: 1090, #gens: 240, #ops: 0, parent:1089]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1090, #gens: 241, #ops: 1, parent:1089] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1090, errors: [FractionFormat.java:121: error: unreachable statement
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getProperInstance(final java.util.Locale locale) { 		return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale)); 		return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale));
	    	                                                                                                                 		                                                                                                                                            		^]
Ingredient counter is Zero
---Undoing: gnrtn(545): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1089(f=2.0), 1090(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1089(f=2.0), )
----------Running generation: 546, population size: 1

***** Generation 546 : 0
**Parent Variant: [Variant id: 1091, #gens: 240, #ops: 0, parent:-]

--Child created id: 1092
--Creating new operations for variant [Variant id: 1092, #gens: 240, #ops: 0, parent:1091]
---analyzing modificationPoint position: 43
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1092, #gens: 239, #ops: 1, parent:1091] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1092
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1092/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(546): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1091(f=2.0), 1092(f=2.0), )
Selected to next generation: IDs2--> (1091(f=2.0), )
----------Running generation: 547, population size: 1

***** Generation 547 : 0
**Parent Variant: [Variant id: 1093, #gens: 240, #ops: 0, parent:-]

--Child created id: 1094
--Creating new operations for variant [Variant id: 1094, #gens: 240, #ops: 0, parent:1093]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1094, #gens: 241, #ops: 1, parent:1093] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1094, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(547): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1093(f=2.0), 1094(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1093(f=2.0), )
----------Running generation: 548, population size: 1

***** Generation 548 : 0
**Parent Variant: [Variant id: 1095, #gens: 240, #ops: 0, parent:-]

--Child created id: 1096
--Creating new operations for variant [Variant id: 1096, #gens: 240, #ops: 0, parent:1095]
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1096, #gens: 240, #ops: 1, parent:1095] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1096
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1096/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(548): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1095(f=2.0), 1096(f=2.0), )
Selected to next generation: IDs2--> (1095(f=2.0), )
----------Running generation: 549, population size: 1

***** Generation 549 : 0
**Parent Variant: [Variant id: 1097, #gens: 240, #ops: 0, parent:-]

--Child created id: 1098
--Creating new operations for variant [Variant id: 1098, #gens: 240, #ops: 0, parent:1097]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1098, #gens: 239, #ops: 1, parent:1097] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1098
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1098/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(549): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1097(f=2.0), 1098(f=2.0), )
Selected to next generation: IDs2--> (1097(f=2.0), )
----------Running generation: 550, population size: 1

***** Generation 550 : 0
**Parent Variant: [Variant id: 1099, #gens: 240, #ops: 0, parent:-]

--Child created id: 1100
--Creating new operations for variant [Variant id: 1100, #gens: 240, #ops: 0, parent:1099]
---analyzing modificationPoint position: 95
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java62
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 62, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1100, #gens: 241, #ops: 1, parent:1099] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1100, errors: [RealPointValuePair.java:65: error: final parameter point may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		point = point.clone(); 		this.point = (copyArray) ? point.clone() : point; 		this.value = value;}
	    	                                                                                               		^]
Ingredient counter is Zero
---Undoing: gnrtn(550): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1099(f=2.0), 1100(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1099(f=2.0), )
----------Running generation: 551, population size: 1

***** Generation 551 : 0
**Parent Variant: [Variant id: 1101, #gens: 240, #ops: 0, parent:-]

--Child created id: 1102
--Creating new operations for variant [Variant id: 1102, #gens: 240, #ops: 0, parent:1101]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
vars from patch [this.denominatorFormat]
--> var from patch: this.denominatorFormat spoon.support.reflect.code.CtFieldWriteImpl
SameName: final 


































































java.text.NumberFormat denominatorFormat
SameName: final 


































































java.text.NumberFormat denominatorFormat
Transforming shadowed variable in denominatorFormat = denominatorFormat
location: AbstractFormat.java70
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1102, #gens: 240, #ops: 1, parent:1101] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1102, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(551): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1101(f=2.0), 1102(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1101(f=2.0), )
----------Running generation: 552, population size: 1

***** Generation 552 : 0
**Parent Variant: [Variant id: 1103, #gens: 240, #ops: 0, parent:-]

--Child created id: 1104
--Creating new operations for variant [Variant id: 1104, #gens: 240, #ops: 0, parent:1103]
---analyzing modificationPoint position: 45
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java89
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 89, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1104, #gens: 241, #ops: 1, parent:1103] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1104
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1104/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(552): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1103(f=2.0), 1104(f=2.0), )
Selected to next generation: IDs2--> (1103(f=2.0), )
----------Running generation: 553, population size: 1

***** Generation 553 : 0
**Parent Variant: [Variant id: 1105, #gens: 240, #ops: 0, parent:-]

--Child created id: 1106
--Creating new operations for variant [Variant id: 1106, #gens: 240, #ops: 0, parent:1105]
---analyzing modificationPoint position: 37
location: MultiDirectional.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1106, #gens: 239, #ops: 1, parent:1105] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1106
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1106/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(553): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1105(f=2.0), 1106(f=4.0), )
Selected to next generation: IDs2--> (1105(f=2.0), )
----------Running generation: 554, population size: 1

***** Generation 554 : 0
**Parent Variant: [Variant id: 1107, #gens: 240, #ops: 0, parent:-]

--Child created id: 1108
--Creating new operations for variant [Variant id: 1108, #gens: 240, #ops: 0, parent:1107]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java225
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 225, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1108, #gens: 240, #ops: 1, parent:1107] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1108
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1108/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(554): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1107(f=2.0), 1108(f=2.0), )
Selected to next generation: IDs2--> (1107(f=2.0), )
----------Running generation: 555, population size: 1

***** Generation 555 : 0
**Parent Variant: [Variant id: 1109, #gens: 240, #ops: 0, parent:-]

--Child created id: 1110
--Creating new operations for variant [Variant id: 1110, #gens: 240, #ops: 0, parent:1109]
---analyzing modificationPoint position: 211
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [p, c]
--> var from patch: p spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: SimpleScalarValueChecker.java77
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double difference = java.lang.Math.abs(p - c)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 77, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double difference = java.lang.Math.abs(p - c)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1110, #gens: 240, #ops: 1, parent:1109] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1110, errors: [SimpleScalarValueChecker.java:77: error: variable difference is already defined in method converged(int,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
		final double difference = java.lang.Math.abs(p - c); 		final double difference = java.lang.Math.abs(p - c);
		                                                     		             ^, SimpleScalarValueChecker.java:79: error: cannot find symbol
		return (difference <= (size * relativeThreshold)) || (difference <= absoluteThreshold);
		                       ^
  symbol:   variable size
  location: class org.apache.commons.math.optimization.SimpleScalarValueChecker]
Ingredient counter is Zero
---Undoing: gnrtn(555): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double difference = java.lang.Math.abs(p - c)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1109(f=2.0), 1110(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1109(f=2.0), )
----------Running generation: 556, population size: 1

***** Generation 556 : 0
**Parent Variant: [Variant id: 1111, #gens: 240, #ops: 0, parent:-]

--Child created id: 1112
--Creating new operations for variant [Variant id: 1112, #gens: 240, #ops: 0, parent:1111]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 5
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 136
location: DirectSearchOptimizer.java395
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1112, #gens: 239, #ops: 1, parent:1111] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1112
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1112/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(556): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1111(f=2.0), 1112(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1111(f=2.0), )
----------Running generation: 557, population size: 1

***** Generation 557 : 0
**Parent Variant: [Variant id: 1113, #gens: 240, #ops: 0, parent:-]

--Child created id: 1114
--Creating new operations for variant [Variant id: 1114, #gens: 240, #ops: 0, parent:1113]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 111
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  setMaxIterations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 18
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1114, #gens: 239, #ops: 1, parent:1113] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1114
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1114/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(557): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1113(f=2.0), 1114(f=2.0), )
Selected to next generation: IDs2--> (1113(f=2.0), )
----------Running generation: 558, population size: 1

***** Generation 558 : 0
**Parent Variant: [Variant id: 1115, #gens: 240, #ops: 0, parent:-]

--Child created id: 1116
--Creating new operations for variant [Variant id: 1116, #gens: 240, #ops: 0, parent:1115]
---analyzing modificationPoint position: 228
Templates availables20
Attempts Base Ingredients  1 total 20
---modifPoint 0 not mutation generated in  this.arguments = new java.lang.Object[0]
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 151
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 176
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 3 not mutation generated in  // move sign to numerator if (java.math.BigInteger.ZERO.compareTo(den) > 0) { 	num = num.negate(); 	[...]
---analyzing modificationPoint position: 17
---modifPoint 4 not mutation generated in  return null
---analyzing modificationPoint position: 15
---modifPoint 5 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 55
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1116, #gens: 239, #ops: 1, parent:1115] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 1116
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1116/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(558): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1115(f=2.0), 1116(f=2.0), )
Selected to next generation: IDs2--> (1115(f=2.0), )
----------Running generation: 559, population size: 1

***** Generation 559 : 0
**Parent Variant: [Variant id: 1117, #gens: 240, #ops: 0, parent:-]

--Child created id: 1118
--Creating new operations for variant [Variant id: 1118, #gens: 240, #ops: 0, parent:1117]
---analyzing modificationPoint position: 146
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
---modifPoint 0 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 160
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1118, #gens: 239, #ops: 1, parent:1117] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1118
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1118/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(559): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1117(f=2.0), 1118(f=2.0), )
Selected to next generation: IDs2--> (1117(f=2.0), )
----------Running generation: 560, population size: 1

***** Generation 560 : 0
**Parent Variant: [Variant id: 1119, #gens: 240, #ops: 0, parent:-]

--Child created id: 1120
--Creating new operations for variant [Variant id: 1120, #gens: 240, #ops: 0, parent:1119]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1120, #gens: 240, #ops: 1, parent:1119] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1120
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1120/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(560): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1119(f=2.0), 1120(f=2.0), )
Selected to next generation: IDs2--> (1119(f=2.0), )
----------Running generation: 561, population size: 1

***** Generation 561 : 0
**Parent Variant: [Variant id: 1121, #gens: 240, #ops: 0, parent:-]

--Child created id: 1122
--Creating new operations for variant [Variant id: 1122, #gens: 240, #ops: 0, parent:1121]
---analyzing modificationPoint position: 30
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1122, #gens: 240, #ops: 1, parent:1121] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1122, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(561): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1121(f=2.0), 1122(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1121(f=2.0), )
----------Running generation: 562, population size: 1

***** Generation 562 : 0
**Parent Variant: [Variant id: 1123, #gens: 240, #ops: 0, parent:-]

--Child created id: 1124
--Creating new operations for variant [Variant id: 1124, #gens: 240, #ops: 0, parent:1123]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1124, #gens: 241, #ops: 1, parent:1123] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1124, errors: [ProperFractionFormat.java:149: error: variable initialIndex is already defined in method parse(java.lang.String,java.text.ParsePosition)
		if (whole == null) { 			int initialIndex = pos.getIndex();
		                     			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(562): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1123(f=2.0), 1124(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1123(f=2.0), )
----------Running generation: 563, population size: 1

***** Generation 563 : 0
**Parent Variant: [Variant id: 1125, #gens: 240, #ops: 0, parent:-]

--Child created id: 1126
--Creating new operations for variant [Variant id: 1126, #gens: 240, #ops: 0, parent:1125]
---analyzing modificationPoint position: 93
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 156
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Attempts Base Ingredients  3 total 4
Attempts Base Ingredients  4 total 4
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 4
---modifPoint 1 not mutation generated in  this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1126, #gens: 240, #ops: 1, parent:1125] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1126, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(563): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1125(f=2.0), 1126(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1125(f=2.0), )
----------Running generation: 564, population size: 1

***** Generation 564 : 0
**Parent Variant: [Variant id: 1127, #gens: 240, #ops: 0, parent:-]

--Child created id: 1128
--Creating new operations for variant [Variant id: 1128, #gens: 240, #ops: 0, parent:1127]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 116
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 3 not mutation generated in  this.checker = checker
---analyzing modificationPoint position: 53
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 4 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 160
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 101, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1128, #gens: 241, #ops: 1, parent:1127] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1128
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1128/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(564): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1127(f=2.0), 1128(f=2.0), )
Selected to next generation: IDs2--> (1127(f=2.0), )
----------Running generation: 565, population size: 1

***** Generation 565 : 0
**Parent Variant: [Variant id: 1129, #gens: 240, #ops: 0, parent:-]

--Child created id: 1130
--Creating new operations for variant [Variant id: 1130, #gens: 240, #ops: 0, parent:1129]
---analyzing modificationPoint position: 49
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 376, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1130, #gens: 241, #ops: 1, parent:1129] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1130
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1130/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(565): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1129(f=2.0), 1130(f=2.0), )
Selected to next generation: IDs2--> (1129(f=2.0), )
----------Running generation: 566, population size: 1

***** Generation 566 : 0
**Parent Variant: [Variant id: 1131, #gens: 240, #ops: 0, parent:-]

--Child created id: 1132
--Creating new operations for variant [Variant id: 1132, #gens: 240, #ops: 0, parent:1131]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1132, #gens: 239, #ops: 1, parent:1131] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1132
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1132/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(566): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1131(f=2.0), 1132(f=2.0), )
Selected to next generation: IDs2--> (1131(f=2.0), )
----------Running generation: 567, population size: 1

***** Generation 567 : 0
**Parent Variant: [Variant id: 1133, #gens: 240, #ops: 0, parent:-]

--Child created id: 1134
--Creating new operations for variant [Variant id: 1134, #gens: 240, #ops: 0, parent:1133]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 33
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 2 not mutation generated in  for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...]
---analyzing modificationPoint position: 75
---modifPoint 3 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, toAppendTo, pos]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1134, #gens: 241, #ops: 1, parent:1133] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1134
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1134/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(567): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `getWholeFormat().format(whole, toAppendTo, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1133(f=2.0), 1134(f=2.0), )
Selected to next generation: IDs2--> (1133(f=2.0), )
----------Running generation: 568, population size: 1

***** Generation 568 : 0
**Parent Variant: [Variant id: 1135, #gens: 240, #ops: 0, parent:-]

--Child created id: 1136
--Creating new operations for variant [Variant id: 1136, #gens: 240, #ops: 0, parent:1135]
---analyzing modificationPoint position: 114
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  this.maxIterations = maxIterations
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1136, #gens: 241, #ops: 1, parent:1135] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1136
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1136/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(568): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1135(f=2.0), 1136(f=2.0), )
Selected to next generation: IDs2--> (1135(f=2.0), )
----------Running generation: 569, population size: 1

***** Generation 569 : 0
**Parent Variant: [Variant id: 1137, #gens: 240, #ops: 0, parent:-]

--Child created id: 1138
--Creating new operations for variant [Variant id: 1138, #gens: 240, #ops: 0, parent:1137]
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1138, #gens: 240, #ops: 1, parent:1137] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1138, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(569): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1137(f=2.0), 1138(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1137(f=2.0), )
----------Running generation: 570, population size: 1

***** Generation 570 : 0
**Parent Variant: [Variant id: 1139, #gens: 240, #ops: 0, parent:-]

--Child created id: 1140
--Creating new operations for variant [Variant id: 1140, #gens: 240, #ops: 0, parent:1139]
---analyzing modificationPoint position: 161
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [whole]
--> var from patch: whole spoon.support.reflect.code.CtVariableWriteImpl
location: ProperBigFractionFormat.java102
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 102, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1140, #gens: 241, #ops: 1, parent:1139] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1140, errors: [ProperBigFractionFormat.java:237: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:240: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:240: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:242: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:243: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:243: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:244: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:245: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:245: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:245: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:246: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:246: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:246: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:247: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:247: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:247: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:247: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(570): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (num.compareTo(java.math.BigInteger.ZERO) < 0) { 	num = num.negate(); } ` -topatch--> `whole = whole.negate()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1139(f=2.0), 1140(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1139(f=2.0), )
----------Running generation: 571, population size: 1

***** Generation 571 : 0
**Parent Variant: [Variant id: 1141, #gens: 240, #ops: 0, parent:-]

--Child created id: 1142
--Creating new operations for variant [Variant id: 1142, #gens: 240, #ops: 0, parent:1141]
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java273
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.f = f ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 273, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.f = f ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1142, #gens: 241, #ops: 1, parent:1141] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1142, errors: [DirectSearchOptimizer.java:307: error: <identifier> expected
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                          ^, DirectSearchOptimizer.java:307: error: <identifier> expected
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                                  ^, DirectSearchOptimizer.java:307: error: illegal start of type
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                                    ^, DirectSearchOptimizer.java:308: error: invalid method declaration; return type required
			iterateSimplex(comparator);
			^, DirectSearchOptimizer.java:308: error: <identifier> expected
			iterateSimplex(comparator);
			                         ^, DirectSearchOptimizer.java:312: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:322: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:337: error: class, interface, or enum expected
	 */ 	protected abstract void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException; 	/**
	    	                   ^, DirectSearchOptimizer.java:337: error: class, interface, or enum expected
	 */ 	protected abstract void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException; 	/**
	    	                                             ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	          ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	                                ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	                                                                                                                                             		                                        			                                                                                                                                              ^, DirectSearchOptimizer.java:351: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:361: error: class, interface, or enum expected
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length;
	    	                                ^, DirectSearchOptimizer.java:361: error: class, interface, or enum expected
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length;
	    	                                                                                                 		      ^, DirectSearchOptimizer.java:362: error: class, interface, or enum expected
		if (n != startConfiguration.length) {
		^, DirectSearchOptimizer.java:366: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:370: error: class, interface, or enum expected
		simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Double.NaN);
		^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		                ^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		                       ^, DirectSearchOptimizer.java:374: error: class, interface, or enum expected
			final double[] confI = startConfiguration[i];
			      ^, DirectSearchOptimizer.java:375: error: class, interface, or enum expected
			final double[] vertexI = new double[n];
			      ^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			                ^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			                       ^, DirectSearchOptimizer.java:378: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:380: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:393: error: class, interface, or enum expected
	 */ 	protected void evaluateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		// evaluate the objective function at all non-evaluated simplex points
	    	                                     ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                                    ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                                           			      ^, DirectSearchOptimizer.java:395: error: class, interface, or enum expected
			final double[] point = vertex.getPointRef();
			      ^, DirectSearchOptimizer.java:396: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(vertex.getValue())) {
			^, DirectSearchOptimizer.java:398: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:404: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                               ^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		                ^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		                       ^, DirectSearchOptimizer.java:416: error: class, interface, or enum expected
				simplex[i] = pointValuePair;
				^, DirectSearchOptimizer.java:417: error: class, interface, or enum expected
				pointValuePair = tmp;
				^, DirectSearchOptimizer.java:418: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:421: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(571): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.f = f ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1141(f=2.0), 1142(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1141(f=2.0), )
----------Running generation: 572, population size: 1

***** Generation 572 : 0
**Parent Variant: [Variant id: 1143, #gens: 240, #ops: 0, parent:-]

--Child created id: 1144
--Creating new operations for variant [Variant id: 1144, #gens: 240, #ops: 0, parent:1143]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 59
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1144, #gens: 240, #ops: 1, parent:1143] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1144, errors: [ProperFractionFormat.java:107: error: call to this must be first statement in constructor
		toAppendTo.append(" / "); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                          		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(572): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1143(f=2.0), 1144(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1143(f=2.0), )
----------Running generation: 573, population size: 1

***** Generation 573 : 0
**Parent Variant: [Variant id: 1145, #gens: 240, #ops: 0, parent:-]

--Child created id: 1146
--Creating new operations for variant [Variant id: 1146, #gens: 240, #ops: 0, parent:1145]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1146, #gens: 239, #ops: 1, parent:1145] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1146
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1146/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(573): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1145(f=2.0), 1146(f=2.0), )
Selected to next generation: IDs2--> (1145(f=2.0), )
----------Running generation: 574, population size: 1

***** Generation 574 : 0
**Parent Variant: [Variant id: 1147, #gens: 240, #ops: 0, parent:-]

--Child created id: 1148
--Creating new operations for variant [Variant id: 1148, #gens: 240, #ops: 0, parent:1147]
---analyzing modificationPoint position: 150
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 110
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 117
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 3 not mutation generated in  if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...]
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1148, #gens: 241, #ops: 1, parent:1147] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1148, errors: [ProperFractionFormat.java:158: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:158: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:158: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:162: error: illegal start of type
		if (num == null) {
		^, ProperFractionFormat.java:162: error: <identifier> expected
		if (num == null) {
		       ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                ^, ProperFractionFormat.java:170: error: ';' expected
		if (num.intValue() < 0) {
		                  ^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                    ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		                     ^, ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(574): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1147(f=2.0), 1148(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1147(f=2.0), )
----------Running generation: 575, population size: 1

***** Generation 575 : 0
**Parent Variant: [Variant id: 1149, #gens: 240, #ops: 0, parent:-]

--Child created id: 1150
--Creating new operations for variant [Variant id: 1150, #gens: 240, #ops: 0, parent:1149]
---analyzing modificationPoint position: 96
Templates availables6
Attempts Base Ingredients  1 total 6
---modifPoint 0 not mutation generated in  this.value = value
---analyzing modificationPoint position: 78
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 21
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 2 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 15
---modifPoint 3 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 79
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
---modifPoint 4 not mutation generated in  if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]
---analyzing modificationPoint position: 109
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1150, #gens: 240, #ops: 1, parent:1149] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1150
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1150/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(575): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1149(f=2.0), 1150(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1149(f=2.0), )
----------Running generation: 576, population size: 1

***** Generation 576 : 0
**Parent Variant: [Variant id: 1151, #gens: 240, #ops: 0, parent:-]

--Child created id: 1152
--Creating new operations for variant [Variant id: 1152, #gens: 240, #ops: 0, parent:1151]
---analyzing modificationPoint position: 160
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 101, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1152, #gens: 240, #ops: 1, parent:1151] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1152
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1152/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(576): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1151(f=2.0), 1152(f=2.0), )
Selected to next generation: IDs2--> (1151(f=2.0), )
----------Running generation: 577, population size: 1

***** Generation 577 : 0
**Parent Variant: [Variant id: 1153, #gens: 240, #ops: 0, parent:-]

--Child created id: 1154
--Creating new operations for variant [Variant id: 1154, #gens: 240, #ops: 0, parent:1153]
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 210
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [previous]
--> var from patch: previous spoon.support.reflect.code.CtVariableReadImpl
location: SimpleScalarValueChecker.java76
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double difference = java.lang.Math.abs(p - c) ` -topatch--> `final double p = previous.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 76, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double difference = java.lang.Math.abs(p - c) ` -topatch--> `final double p = previous.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1154, #gens: 240, #ops: 1, parent:1153] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1154, errors: [SimpleScalarValueChecker.java:76: error: variable p is already defined in method converged(int,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
		final double c = current.getValue(); 		final double p = previous.getValue();
		                                     		             ^, SimpleScalarValueChecker.java:79: error: cannot find symbol
		return (difference <= (size * relativeThreshold)) || (difference <= absoluteThreshold);
		        ^
  symbol:   variable difference
  location: class org.apache.commons.math.optimization.SimpleScalarValueChecker, SimpleScalarValueChecker.java:79: error: cannot find symbol
		return (difference <= (size * relativeThreshold)) || (difference <= absoluteThreshold);
		                                                      ^
  symbol:   variable difference
  location: class org.apache.commons.math.optimization.SimpleScalarValueChecker]
Ingredient counter is Zero
---Undoing: gnrtn(577): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double difference = java.lang.Math.abs(p - c) ` -topatch--> `final double p = previous.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1153(f=2.0), 1154(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1153(f=2.0), )
----------Running generation: 578, population size: 1

***** Generation 578 : 0
**Parent Variant: [Variant id: 1155, #gens: 240, #ops: 0, parent:-]

--Child created id: 1156
--Creating new operations for variant [Variant id: 1156, #gens: 240, #ops: 0, parent:1155]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 130
location: DirectSearchOptimizer.java375
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1156, #gens: 239, #ops: 1, parent:1155] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1156
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1156/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(578): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1155(f=2.0), 1156(f=3.0), )
Selected to next generation: IDs2--> (1155(f=2.0), )
----------Running generation: 579, population size: 1

***** Generation 579 : 0
**Parent Variant: [Variant id: 1157, #gens: 240, #ops: 0, parent:-]

--Child created id: 1158
--Creating new operations for variant [Variant id: 1158, #gens: 240, #ops: 0, parent:1157]
---analyzing modificationPoint position: 141
---modifPoint 0 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 166
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java77
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 77, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1158, #gens: 241, #ops: 1, parent:1157] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1158, errors: [MultiDirectional.java:117: error: illegal start of expression
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(579): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1157(f=2.0), 1158(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1157(f=2.0), )
----------Running generation: 580, population size: 1

***** Generation 580 : 0
**Parent Variant: [Variant id: 1159, #gens: 240, #ops: 0, parent:-]

--Child created id: 1160
--Creating new operations for variant [Variant id: 1160, #gens: 240, #ops: 0, parent:1159]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
Attempts Base Ingredients  3 total 32
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1160, #gens: 241, #ops: 1, parent:1159] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1160, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		return numeratorFormat;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(580): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1159(f=2.0), 1160(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1159(f=2.0), )
----------Running generation: 581, population size: 1

***** Generation 581 : 0
**Parent Variant: [Variant id: 1161, #gens: 240, #ops: 0, parent:-]

--Child created id: 1162
--Creating new operations for variant [Variant id: 1162, #gens: 240, #ops: 0, parent:1161]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 30
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1162, #gens: 240, #ops: 1, parent:1161] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1162, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(581): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1161(f=2.0), 1162(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1161(f=2.0), )
----------Running generation: 582, population size: 1

***** Generation 582 : 0
**Parent Variant: [Variant id: 1163, #gens: 240, #ops: 0, parent:-]

--Child created id: 1164
--Creating new operations for variant [Variant id: 1164, #gens: 240, #ops: 0, parent:1163]
---analyzing modificationPoint position: 117
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java265
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 265, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1164, #gens: 241, #ops: 1, parent:1163] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1164, errors: [DirectSearchOptimizer.java:272: error: incompatible types: int cannot be converted to org.apache.commons.math.optimization.RealPointValuePair
		} 		return iterations;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(582): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (startConfiguration == null) { 	// no initial configuration has been set up for simplex 	// build[...] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1163(f=2.0), 1164(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1163(f=2.0), )
----------Running generation: 583, population size: 1

***** Generation 583 : 0
**Parent Variant: [Variant id: 1165, #gens: 240, #ops: 0, parent:-]

--Child created id: 1166
--Creating new operations for variant [Variant id: 1166, #gens: 240, #ops: 0, parent:1165]
---analyzing modificationPoint position: 128
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  final double[] confI = startConfiguration[i]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  vertexI[k] = startPoint[k] + confI[k]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1166, #gens: 241, #ops: 1, parent:1165] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1166
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1166/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(583): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1165(f=2.0), 1166(f=2.0), )
Selected to next generation: IDs2--> (1165(f=2.0), )
----------Running generation: 584, population size: 1

***** Generation 584 : 0
**Parent Variant: [Variant id: 1167, #gens: 240, #ops: 0, parent:-]

--Child created id: 1168
--Creating new operations for variant [Variant id: 1168, #gens: 240, #ops: 0, parent:1167]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1168, #gens: 239, #ops: 1, parent:1167] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1168
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1168/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(584): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1167(f=2.0), 1168(f=2.0), )
Selected to next generation: IDs2--> (1167(f=2.0), )
----------Running generation: 585, population size: 1

***** Generation 585 : 0
**Parent Variant: [Variant id: 1169, #gens: 240, #ops: 0, parent:-]

--Child created id: 1170
--Creating new operations for variant [Variant id: 1170, #gens: 240, #ops: 0, parent:1169]
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1170, #gens: 240, #ops: 1, parent:1169] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1170
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1170/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(585): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1169(f=2.0), 1170(f=2.0), )
Selected to next generation: IDs2--> (1169(f=2.0), )
----------Running generation: 586, population size: 1

***** Generation 586 : 0
**Parent Variant: [Variant id: 1171, #gens: 240, #ops: 0, parent:-]

--Child created id: 1172
--Creating new operations for variant [Variant id: 1172, #gens: 240, #ops: 0, parent:1171]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 135
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 4 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1172, #gens: 239, #ops: 1, parent:1171] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 1172
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1172/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(586): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1171(f=2.0), 1172(f=2.0), )
Selected to next generation: IDs2--> (1171(f=2.0), )
----------Running generation: 587, population size: 1

***** Generation 587 : 0
**Parent Variant: [Variant id: 1173, #gens: 240, #ops: 0, parent:-]

--Child created id: 1174
--Creating new operations for variant [Variant id: 1174, #gens: 240, #ops: 0, parent:1173]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch []
location: AbstractFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1174, #gens: 241, #ops: 1, parent:1173] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1174, errors: [AbstractFormat.java:111: error: unreachable statement
		return numeratorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(587): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1173(f=2.0), 1174(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1173(f=2.0), )
----------Running generation: 588, population size: 1

***** Generation 588 : 0
**Parent Variant: [Variant id: 1175, #gens: 240, #ops: 0, parent:-]

--Child created id: 1176
--Creating new operations for variant [Variant id: 1176, #gens: 240, #ops: 0, parent:1175]
---analyzing modificationPoint position: 18
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 1 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 120
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [simplex, startPoint, java.lang.Double.NaN]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: startPoint spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.lang.Double.NaN spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 286, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1176, #gens: 240, #ops: 1, parent:1175] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1176, errors: [DirectSearchOptimizer.java:372: error: illegal start of expression
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:372: error: ';' expected
	 * Increment the iterations counter by 1.
	            ^, DirectSearchOptimizer.java:372: error: ';' expected
	 * Increment the iterations counter by 1.
	                           ^, DirectSearchOptimizer.java:372: error: ';' expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:374: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:375: error: '(' expected
	 * 		if the maximal number
	   		  ^, DirectSearchOptimizer.java:375: error: ')' expected
	 * 		if the maximal number
	   		      ^, DirectSearchOptimizer.java:375: error: ';' expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:375: error: variable declaration not allowed here
	 * 		if the maximal number
	   		               ^, DirectSearchOptimizer.java:376: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:376: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^, DirectSearchOptimizer.java:377: error: illegal start of expression
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		if ((++iterations) > maxIterations) { 			throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.MaxIterationsExceededException(maxIterations));}} 	/**
	    	^, DirectSearchOptimizer.java:422: error: illegal start of expression
	 * Replace the worst point of the simplex by a new point.
	 ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	          ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                    ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                             ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                         ^, DirectSearchOptimizer.java:422: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                              ^, DirectSearchOptimizer.java:422: error: <identifier> expected
	 * Replace the worst point of the simplex by a new point.
	                                                         ^, DirectSearchOptimizer.java:423: error: '(' or '[' expected
	 *
	 ^, DirectSearchOptimizer.java:424: error: illegal start of expression
	 * @param pointValuePair
	 ^, DirectSearchOptimizer.java:424: error: illegal start of expression
	 * @param pointValuePair
	   ^, DirectSearchOptimizer.java:425: error: not a statement
	 * 		point to insert
	 ^, DirectSearchOptimizer.java:425: error: ';' expected
	 * 		point to insert
	   		     ^, DirectSearchOptimizer.java:425: error: ';' expected
	 * 		point to insert
	   		               ^, DirectSearchOptimizer.java:426: error: <identifier> expected
	 * @param comparator
	                    ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		             ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                    ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                 ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                               ^, DirectSearchOptimizer.java:427: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                                       ^, DirectSearchOptimizer.java:428: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	  ^, DirectSearchOptimizer.java:428: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(588): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1175(f=2.0), 1176(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1175(f=2.0), )
----------Running generation: 589, population size: 1

***** Generation 589 : 0
**Parent Variant: [Variant id: 1177, #gens: 240, #ops: 0, parent:-]

--Child created id: 1178
--Creating new operations for variant [Variant id: 1178, #gens: 240, #ops: 0, parent:1177]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1178, #gens: 241, #ops: 1, parent:1177] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1178
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1178/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(589): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1177(f=2.0), 1178(f=2.0), )
Selected to next generation: IDs2--> (1177(f=2.0), )
----------Running generation: 590, population size: 1

***** Generation 590 : 0
**Parent Variant: [Variant id: 1179, #gens: 240, #ops: 0, parent:-]

--Child created id: 1180
--Creating new operations for variant [Variant id: 1180, #gens: 240, #ops: 0, parent:1179]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 17
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 153
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 60
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1180, #gens: 239, #ops: 1, parent:1179] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1180
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1180/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(590): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1179(f=2.0), 1180(f=2.0), )
Selected to next generation: IDs2--> (1179(f=2.0), )
----------Running generation: 591, population size: 1

***** Generation 591 : 0
**Parent Variant: [Variant id: 1181, #gens: 240, #ops: 0, parent:-]

--Child created id: 1182
--Creating new operations for variant [Variant id: 1182, #gens: 240, #ops: 0, parent:1181]
---analyzing modificationPoint position: 18
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1182, #gens: 239, #ops: 1, parent:1181] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1182
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1182/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(591): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1181(f=2.0), 1182(f=2.0), )
Selected to next generation: IDs2--> (1181(f=2.0), )
----------Running generation: 592, population size: 1

***** Generation 592 : 0
**Parent Variant: [Variant id: 1183, #gens: 240, #ops: 0, parent:-]

--Child created id: 1184
--Creating new operations for variant [Variant id: 1184, #gens: 240, #ops: 0, parent:1183]
---analyzing modificationPoint position: 58
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1184, #gens: 241, #ops: 1, parent:1183] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1184, errors: [ProperBigFractionFormat.java:107: error: call to this must be first statement in constructor
		getNumeratorFormat().format(num, toAppendTo, pos); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(592): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1183(f=2.0), 1184(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1183(f=2.0), )
----------Running generation: 593, population size: 1

***** Generation 593 : 0
**Parent Variant: [Variant id: 1185, #gens: 240, #ops: 0, parent:-]

--Child created id: 1186
--Creating new operations for variant [Variant id: 1186, #gens: 240, #ops: 0, parent:1185]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 92
location: DirectSearchOptimizer.java146
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1186, #gens: 239, #ops: 1, parent:1185] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1186, errors: [DirectSearchOptimizer.java:146: error: variable declaration not allowed here
			final double[] vertexI = startConfiguration[i];
			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(593): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1185(f=2.0), 1186(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1185(f=2.0), )
----------Running generation: 594, population size: 1

***** Generation 594 : 0
**Parent Variant: [Variant id: 1187, #gens: 240, #ops: 0, parent:-]

--Child created id: 1188
--Creating new operations for variant [Variant id: 1188, #gens: 240, #ops: 0, parent:1187]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 72
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1188, #gens: 239, #ops: 1, parent:1187] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1188
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1188/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(594): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1187(f=2.0), 1188(f=2.0), )
Selected to next generation: IDs2--> (1187(f=2.0), )
----------Running generation: 595, population size: 1

***** Generation 595 : 0
**Parent Variant: [Variant id: 1189, #gens: 240, #ops: 0, parent:-]

--Child created id: 1190
--Creating new operations for variant [Variant id: 1190, #gens: 240, #ops: 0, parent:1189]
---analyzing modificationPoint position: 122
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  buildSimplex(startPoint)
---analyzing modificationPoint position: 99
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [o1]
--> var from patch: o1 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java280
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...] ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 280, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...] ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1190, #gens: 241, #ops: 1, parent:1189] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1190, errors: [DirectSearchOptimizer.java:280: error: variable v1 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v2 = o2.getValue(); 				final double v1 = o1.getValue();
				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(595): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...] ` -topatch--> `final double v1 = o1.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1189(f=2.0), 1190(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1189(f=2.0), )
----------Running generation: 596, population size: 1

***** Generation 596 : 0
**Parent Variant: [Variant id: 1191, #gens: 240, #ops: 0, parent:-]

--Child created id: 1192
--Creating new operations for variant [Variant id: 1192, #gens: 240, #ops: 0, parent:1191]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1192, #gens: 239, #ops: 1, parent:1191] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1192
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1192/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(596): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1191(f=2.0), 1192(f=2.0), )
Selected to next generation: IDs2--> (1191(f=2.0), )
----------Running generation: 597, population size: 1

***** Generation 597 : 0
**Parent Variant: [Variant id: 1193, #gens: 240, #ops: 0, parent:-]

--Child created id: 1194
--Creating new operations for variant [Variant id: 1194, #gens: 240, #ops: 0, parent:1193]
---analyzing modificationPoint position: 201
location: Fraction.java268
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (d > 1) { 	num /= d; 	den /= d; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1194, #gens: 239, #ops: 1, parent:1193] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1194
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1194/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(597): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (d > 1) { 	num /= d; 	den /= d; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1193(f=2.0), 1194(f=2.0), )
Selected to next generation: IDs2--> (1193(f=2.0), )
----------Running generation: 598, population size: 1

***** Generation 598 : 0
**Parent Variant: [Variant id: 1195, #gens: 240, #ops: 0, parent:-]

--Child created id: 1196
--Creating new operations for variant [Variant id: 1196, #gens: 240, #ops: 0, parent:1195]
---analyzing modificationPoint position: 121
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [startPoint]
--> var from patch: startPoint spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java287
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `buildSimplex(startPoint)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 287, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `buildSimplex(startPoint)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1196, #gens: 241, #ops: 1, parent:1195] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1196
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1196/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(598): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `buildSimplex(startPoint)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1195(f=2.0), 1196(f=2.0), )
Selected to next generation: IDs2--> (1195(f=2.0), )
----------Running generation: 599, population size: 1

***** Generation 599 : 0
**Parent Variant: [Variant id: 1197, #gens: 240, #ops: 0, parent:-]

--Child created id: 1198
--Creating new operations for variant [Variant id: 1198, #gens: 240, #ops: 0, parent:1197]
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1198, #gens: 241, #ops: 1, parent:1197] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1198, errors: [FractionFormat.java:234: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
			                            			                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(599): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1197(f=2.0), 1198(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1197(f=2.0), )
----------Running generation: 600, population size: 1

***** Generation 600 : 0
**Parent Variant: [Variant id: 1199, #gens: 240, #ops: 0, parent:-]

--Child created id: 1200
--Creating new operations for variant [Variant id: 1200, #gens: 240, #ops: 0, parent:1199]
---analyzing modificationPoint position: 30
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1200, #gens: 240, #ops: 1, parent:1199] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1200, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(600): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1199(f=2.0), 1200(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1199(f=2.0), )
----------Running generation: 601, population size: 1

***** Generation 601 : 0
**Parent Variant: [Variant id: 1201, #gens: 240, #ops: 0, parent:-]

--Child created id: 1202
--Creating new operations for variant [Variant id: 1202, #gens: 240, #ops: 0, parent:1201]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  // evaluate it evaluateSimplex(comparator)
---analyzing modificationPoint position: 84
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  return denominator
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1202, #gens: 241, #ops: 1, parent:1201] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1202
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1202/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(601): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1201(f=2.0), 1202(f=2.0), )
Selected to next generation: IDs2--> (1201(f=2.0), )
----------Running generation: 602, population size: 1

***** Generation 602 : 0
**Parent Variant: [Variant id: 1203, #gens: 240, #ops: 0, parent:-]

--Child created id: 1204
--Creating new operations for variant [Variant id: 1204, #gens: 240, #ops: 0, parent:1203]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java206
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1204, #gens: 241, #ops: 1, parent:1203] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1204, errors: [FractionFormat.java:246: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' :
				                                                                         			^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(602): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1203(f=2.0), 1204(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1203(f=2.0), )
----------Running generation: 603, population size: 1

***** Generation 603 : 0
**Parent Variant: [Variant id: 1205, #gens: 240, #ops: 0, parent:-]

--Child created id: 1206
--Creating new operations for variant [Variant id: 1206, #gens: 240, #ops: 0, parent:1205]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 31
location: MultiDirectional.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1206, #gens: 239, #ops: 1, parent:1205] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1206
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1206/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(603): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1205(f=2.0), 1206(f=3.0), )
Selected to next generation: IDs2--> (1205(f=2.0), )
----------Running generation: 604, population size: 1

***** Generation 604 : 0
**Parent Variant: [Variant id: 1207, #gens: 240, #ops: 0, parent:-]

--Child created id: 1208
--Creating new operations for variant [Variant id: 1208, #gens: 240, #ops: 0, parent:1207]
---analyzing modificationPoint position: 169
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java81
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 81, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1208, #gens: 241, #ops: 1, parent:1207] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1208, errors: [MultiDirectional.java:148: error: illegal start of expression
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	^, MultiDirectional.java:148: error: reached end of file while parsing
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(604): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1207(f=2.0), 1208(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1207(f=2.0), )
----------Running generation: 605, population size: 1

***** Generation 605 : 0
**Parent Variant: [Variant id: 1209, #gens: 240, #ops: 0, parent:-]

--Child created id: 1210
--Creating new operations for variant [Variant id: 1210, #gens: 240, #ops: 0, parent:1209]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 178
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 3 not mutation generated in  denominator = den
---analyzing modificationPoint position: 184
location: RealPointValuePair.java50
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1210, #gens: 239, #ops: 1, parent:1209] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1210, errors: [RealPointValuePair.java:52: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.point = point.clone();}
	    	                                                                      		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(605): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1209(f=2.0), 1210(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1209(f=2.0), )
----------Running generation: 606, population size: 1

***** Generation 606 : 0
**Parent Variant: [Variant id: 1211, #gens: 240, #ops: 0, parent:-]

--Child created id: 1212
--Creating new operations for variant [Variant id: 1212, #gens: 240, #ops: 0, parent:1211]
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java141
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 141, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1212, #gens: 241, #ops: 1, parent:1211] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1212, errors: [ProperFractionFormat.java:142: error: unreachable statement
		int initialIndex = pos.getIndex();
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(606): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int initialIndex = pos.getIndex() ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1211(f=2.0), 1212(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1211(f=2.0), )
----------Running generation: 607, population size: 1

***** Generation 607 : 0
**Parent Variant: [Variant id: 1213, #gens: 240, #ops: 0, parent:-]

--Child created id: 1214
--Creating new operations for variant [Variant id: 1214, #gens: 240, #ops: 0, parent:1213]
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1214, #gens: 241, #ops: 1, parent:1213] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1214
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1214/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(607): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1213(f=2.0), 1214(f=2.0), )
Selected to next generation: IDs2--> (1213(f=2.0), )
----------Running generation: 608, population size: 1

***** Generation 608 : 0
**Parent Variant: [Variant id: 1215, #gens: 240, #ops: 0, parent:-]

--Child created id: 1216
--Creating new operations for variant [Variant id: 1216, #gens: 240, #ops: 0, parent:1215]
---analyzing modificationPoint position: 150
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 60
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 100
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxEvaluations]
--> var from patch: maxEvaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java289
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 289, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1216, #gens: 241, #ops: 1, parent:1215] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1216, errors: [DirectSearchOptimizer.java:290: error: incompatible types: int cannot be converted to org.apache.commons.math.optimization.RealPointValuePair
		evaluateSimplex(comparator); 		return maxEvaluations;
		                             		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(608): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1215(f=2.0), 1216(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1215(f=2.0), )
----------Running generation: 609, population size: 1

***** Generation 609 : 0
**Parent Variant: [Variant id: 1217, #gens: 240, #ops: 0, parent:-]

--Child created id: 1218
--Creating new operations for variant [Variant id: 1218, #gens: 240, #ops: 0, parent:1217]
---analyzing modificationPoint position: 111
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  setMaxIterations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java116
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1218, #gens: 241, #ops: 1, parent:1217] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1218
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1218/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(609): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1217(f=2.0), 1218(f=2.0), )
Selected to next generation: IDs2--> (1217(f=2.0), )
----------Running generation: 610, population size: 1

***** Generation 610 : 0
**Parent Variant: [Variant id: 1219, #gens: 240, #ops: 0, parent:-]

--Child created id: 1220
--Creating new operations for variant [Variant id: 1220, #gens: 240, #ops: 0, parent:1219]
---analyzing modificationPoint position: 167
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 23
Templates availables10
Attempts Base Ingredients  1 total 10
---modifPoint 2 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 144
location: AbstractFormat.java168
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1220, #gens: 239, #ops: 1, parent:1219] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1220, errors: [AbstractFormat.java:170: error: variable c might not have been initialized
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(610): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1219(f=2.0), 1220(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1219(f=2.0), )
----------Running generation: 611, population size: 1

***** Generation 611 : 0
**Parent Variant: [Variant id: 1221, #gens: 240, #ops: 0, parent:-]

--Child created id: 1222
--Creating new operations for variant [Variant id: 1222, #gens: 240, #ops: 0, parent:1221]
---analyzing modificationPoint position: 62
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, toAppendTo, pos, num]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 110, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1222, #gens: 241, #ops: 1, parent:1221] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1222
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1222/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(611): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1221(f=2.0), 1222(f=2.0), )
Selected to next generation: IDs2--> (1221(f=2.0), )
----------Running generation: 612, population size: 1

***** Generation 612 : 0
**Parent Variant: [Variant id: 1223, #gens: 240, #ops: 0, parent:-]

--Child created id: 1224
--Creating new operations for variant [Variant id: 1224, #gens: 240, #ops: 0, parent:1223]
---analyzing modificationPoint position: 110
Templates availables11
Attempts Base Ingredients  1 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 87
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 2 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 135
---modifPoint 3 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 40
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java132
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1224, #gens: 241, #ops: 1, parent:1223] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 1224, errors: [MultiDirectional.java:132: error: incompatible types: missing return value
		evaluateSimplex(comparator); 		return;
		                             		^]
Ingredient counter is Zero
---Undoing: gnrtn(612): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1223(f=2.0), 1224(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1223(f=2.0), )
----------Running generation: 613, population size: 1

***** Generation 613 : 0
**Parent Variant: [Variant id: 1225, #gens: 240, #ops: 0, parent:-]

--Child created id: 1226
--Creating new operations for variant [Variant id: 1226, #gens: 240, #ops: 0, parent:1225]
---analyzing modificationPoint position: 40
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java132
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1226, #gens: 241, #ops: 1, parent:1225] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1226
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1226/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(613): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1225(f=2.0), 1226(f=2.0), )
Selected to next generation: IDs2--> (1225(f=2.0), )
----------Running generation: 614, population size: 1

***** Generation 614 : 0
**Parent Variant: [Variant id: 1227, #gens: 240, #ops: 0, parent:-]

--Child created id: 1228
--Creating new operations for variant [Variant id: 1228, #gens: 240, #ops: 0, parent:1227]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 163
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 103, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1228, #gens: 241, #ops: 1, parent:1227] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1228
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1228/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(614): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = java.lang.Math.abs(num) ` -topatch--> `num = num % den` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1227(f=2.0), 1228(f=2.0), )
Selected to next generation: IDs2--> (1227(f=2.0), )
----------Running generation: 615, population size: 1

***** Generation 615 : 0
**Parent Variant: [Variant id: 1229, #gens: 240, #ops: 0, parent:-]

--Child created id: 1230
--Creating new operations for variant [Variant id: 1230, #gens: 240, #ops: 0, parent:1229]
---analyzing modificationPoint position: 66
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1230, #gens: 239, #ops: 1, parent:1229] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1230
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1230/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(615): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1229(f=2.0), 1230(f=2.0), )
Selected to next generation: IDs2--> (1229(f=2.0), )
----------Running generation: 616, population size: 1

***** Generation 616 : 0
**Parent Variant: [Variant id: 1231, #gens: 240, #ops: 0, parent:-]

--Child created id: 1232
--Creating new operations for variant [Variant id: 1232, #gens: 240, #ops: 0, parent:1231]
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 376, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1232, #gens: 241, #ops: 1, parent:1231] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1232
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1232/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(616): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1231(f=2.0), 1232(f=2.0), )
Selected to next generation: IDs2--> (1231(f=2.0), )
----------Running generation: 617, population size: 1

***** Generation 617 : 0
**Parent Variant: [Variant id: 1233, #gens: 240, #ops: 0, parent:-]

--Child created id: 1234
--Creating new operations for variant [Variant id: 1234, #gens: 240, #ops: 0, parent:1233]
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1234, #gens: 239, #ops: 1, parent:1233] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1234
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1234/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(617): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1233(f=2.0), 1234(f=2.0), )
Selected to next generation: IDs2--> (1233(f=2.0), )
----------Running generation: 618, population size: 1

***** Generation 618 : 0
**Parent Variant: [Variant id: 1235, #gens: 240, #ops: 0, parent:-]

--Child created id: 1236
--Creating new operations for variant [Variant id: 1236, #gens: 240, #ops: 0, parent:1235]
---analyzing modificationPoint position: 170
location: MultiDirectional.java84
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1236, #gens: 239, #ops: 1, parent:1235] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1236
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1236/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(618): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1235(f=2.0), 1236(f=3.0), )
Selected to next generation: IDs2--> (1235(f=2.0), )
----------Running generation: 619, population size: 1

***** Generation 619 : 0
**Parent Variant: [Variant id: 1237, #gens: 240, #ops: 0, parent:-]

--Child created id: 1238
--Creating new operations for variant [Variant id: 1238, #gens: 240, #ops: 0, parent:1237]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 23
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1238, #gens: 239, #ops: 1, parent:1237] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1238
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1238/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(619): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1237(f=2.0), 1238(f=2.0), )
Selected to next generation: IDs2--> (1237(f=2.0), )
----------Running generation: 620, population size: 1

***** Generation 620 : 0
**Parent Variant: [Variant id: 1239, #gens: 240, #ops: 0, parent:-]

--Child created id: 1240
--Creating new operations for variant [Variant id: 1240, #gens: 240, #ops: 0, parent:1239]
---analyzing modificationPoint position: 128
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] confI = startConfiguration[i]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1240, #gens: 241, #ops: 1, parent:1239] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1240
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1240/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(620): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1239(f=2.0), 1240(f=2.0), )
Selected to next generation: IDs2--> (1239(f=2.0), )
----------Running generation: 621, population size: 1

***** Generation 621 : 0
**Parent Variant: [Variant id: 1241, #gens: 240, #ops: 0, parent:-]

--Child created id: 1242
--Creating new operations for variant [Variant id: 1242, #gens: 240, #ops: 0, parent:1241]
---analyzing modificationPoint position: 114
Templates availables17
Attempts Base Ingredients  1 total 17
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  this.maxIterations = maxIterations
---analyzing modificationPoint position: 133
location: DirectSearchOptimizer.java392
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1242, #gens: 239, #ops: 1, parent:1241] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1242
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1242/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(621): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1241(f=2.0), 1242(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1241(f=2.0), )
----------Running generation: 622, population size: 1

***** Generation 622 : 0
**Parent Variant: [Variant id: 1243, #gens: 240, #ops: 0, parent:-]

--Child created id: 1244
--Creating new operations for variant [Variant id: 1244, #gens: 240, #ops: 0, parent:1243]
---analyzing modificationPoint position: 15
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 87
---modifPoint 1 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 24
Templates availables10
Attempts Base Ingredients  1 total 10
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1244, #gens: 240, #ops: 1, parent:1243] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1244, errors: [MultiDirectional.java:132: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	        ^, MultiDirectional.java:132: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	                                                                                         ^, MultiDirectional.java:132: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	                                                                                                                                                                   ^, MultiDirectional.java:132: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	                                                                                                                                                                                       ^, MultiDirectional.java:132: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:132: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(622): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1243(f=2.0), 1244(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1243(f=2.0), )
----------Running generation: 623, population size: 1

***** Generation 623 : 0
**Parent Variant: [Variant id: 1245, #gens: 240, #ops: 0, parent:-]

--Child created id: 1246
--Creating new operations for variant [Variant id: 1246, #gens: 240, #ops: 0, parent:1245]
---analyzing modificationPoint position: 113
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java173
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 173, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1246, #gens: 241, #ops: 1, parent:1245] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1246, errors: [AbstractFormat.java:173: error: variable n is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
			if (index < n) { 				final int n = source.length();
			                 				          ^]
Ingredient counter is Zero
---Undoing: gnrtn(623): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1245(f=2.0), 1246(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1245(f=2.0), )
----------Running generation: 624, population size: 1

***** Generation 624 : 0
**Parent Variant: [Variant id: 1247, #gens: 240, #ops: 0, parent:-]

--Child created id: 1248
--Creating new operations for variant [Variant id: 1248, #gens: 240, #ops: 0, parent:1247]
---analyzing modificationPoint position: 60
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo, pos)
---analyzing modificationPoint position: 165
---modifPoint 1 not mutation generated in  return numerator
---analyzing modificationPoint position: 31
location: MultiDirectional.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1248, #gens: 239, #ops: 1, parent:1247] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1248
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1248/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(624): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1247(f=2.0), 1248(f=3.0), )
Selected to next generation: IDs2--> (1247(f=2.0), )
----------Running generation: 625, population size: 1

***** Generation 625 : 0
**Parent Variant: [Variant id: 1249, #gens: 240, #ops: 0, parent:-]

--Child created id: 1250
--Creating new operations for variant [Variant id: 1250, #gens: 240, #ops: 0, parent:1249]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
Attempts Base Ingredients  2 total 38
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 54
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 172
---modifPoint 4 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 139
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 5 not mutation generated in  pos.setIndex(pos.getIndex() - 1)
---analyzing modificationPoint position: 57
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1250, #gens: 240, #ops: 1, parent:1249] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 1250
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1250/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(625): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1249(f=2.0), 1250(f=2.0), )
Selected to next generation: IDs2--> (1249(f=2.0), )
----------Running generation: 626, population size: 1

***** Generation 626 : 0
**Parent Variant: [Variant id: 1251, #gens: 240, #ops: 0, parent:-]

--Child created id: 1252
--Creating new operations for variant [Variant id: 1252, #gens: 240, #ops: 0, parent:1251]
---analyzing modificationPoint position: 109
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  // sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator)
---analyzing modificationPoint position: 19
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1252, #gens: 239, #ops: 1, parent:1251] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1252
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1252/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(626): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1251(f=2.0), 1252(f=2.0), )
Selected to next generation: IDs2--> (1251(f=2.0), )
----------Running generation: 627, population size: 1

***** Generation 627 : 0
**Parent Variant: [Variant id: 1253, #gens: 240, #ops: 0, parent:-]

--Child created id: 1254
--Creating new operations for variant [Variant id: 1254, #gens: 240, #ops: 0, parent:1253]
---analyzing modificationPoint position: 124
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [checker]
--> var from patch: checker spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java361
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 361, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1254, #gens: 241, #ops: 1, parent:1253] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1254, errors: [DirectSearchOptimizer.java:361: error: incompatible types: unexpected return value
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length; 		return checker;
	    	                                                                                                 		                                 		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(627): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1253(f=2.0), 1254(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1253(f=2.0), )
----------Running generation: 628, population size: 1

***** Generation 628 : 0
**Parent Variant: [Variant id: 1255, #gens: 240, #ops: 0, parent:-]

--Child created id: 1256
--Creating new operations for variant [Variant id: 1256, #gens: 240, #ops: 0, parent:1255]
---analyzing modificationPoint position: 67
---modifPoint 0 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 92
location: DirectSearchOptimizer.java146
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1256, #gens: 239, #ops: 1, parent:1255] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1256, errors: [DirectSearchOptimizer.java:146: error: variable declaration not allowed here
			final double[] vertexI = startConfiguration[i];
			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(628): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1255(f=2.0), 1256(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1255(f=2.0), )
----------Running generation: 629, population size: 1

***** Generation 629 : 0
**Parent Variant: [Variant id: 1257, #gens: 240, #ops: 0, parent:-]

--Child created id: 1258
--Creating new operations for variant [Variant id: 1258, #gens: 240, #ops: 0, parent:1257]
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1258, #gens: 241, #ops: 1, parent:1257] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1258
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1258/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(629): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1257(f=2.0), 1258(f=2.0), )
Selected to next generation: IDs2--> (1257(f=2.0), )
----------Running generation: 630, population size: 1

***** Generation 630 : 0
**Parent Variant: [Variant id: 1259, #gens: 240, #ops: 0, parent:-]

--Child created id: 1260
--Creating new operations for variant [Variant id: 1260, #gens: 240, #ops: 0, parent:1259]
---analyzing modificationPoint position: 216
Templates availables42
Attempts Base Ingredients  1 total 42
vars from patch [u, v]
--> var from patch: u spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: v spoon.support.reflect.code.CtVariableReadImpl
location: MathUtils.java628
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// B1. [Find power of 2] int k = 0 ` -topatch--> `// B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 628, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// B1. [Find power of 2] int k = 0 ` -topatch--> `// B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1260, #gens: 240, #ops: 1, parent:1259] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1260, errors: [MathUtils.java:643: error: cannot find symbol
		/* B3 */ 		int t = ((u & 1) == 1) ? v : -(u / 2); 		while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 			// while u and v are 			// both even... 			u /= 2; 			v /= 2; 			k++;// cast out twos.
		         		                                       		                                              ^
  symbol:   variable k
  location: class org.apache.commons.math.util.MathUtils, MathUtils.java:644: error: cannot find symbol
		} 		if (k == 31) { 			throw org.apache.commons.math.MathRuntimeException.createArithmeticException("overflow: gcd({0}, {1}) is 2^31", p, q);} 		// B2. Initialize: u and v have been divided by 2^k and at least 		// one is odd. 		/* B3 */ 		int t = ((u & 1) == 1) ? v : -(u / 2); 		// t negative: u was odd, v may be even (t replaces v)
		  		    ^
  symbol:   variable k
  location: class org.apache.commons.math.util.MathUtils, MathUtils.java:663: error: cannot find symbol
		return (-u) * (1 << k);// gcd is u*2^k
		                    ^
  symbol:   variable k
  location: class org.apache.commons.math.util.MathUtils, MathUtils.java:673: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(630): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// B1. [Find power of 2] int k = 0 ` -topatch--> `// B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1259(f=2.0), 1260(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1259(f=2.0), )
----------Running generation: 631, population size: 1

***** Generation 631 : 0
**Parent Variant: [Variant id: 1261, #gens: 240, #ops: 0, parent:-]

--Child created id: 1262
--Creating new operations for variant [Variant id: 1262, #gens: 240, #ops: 0, parent:1261]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1262, #gens: 239, #ops: 1, parent:1261] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1262
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1262/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(631): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1261(f=2.0), 1262(f=2.0), )
Selected to next generation: IDs2--> (1261(f=2.0), )
----------Running generation: 632, population size: 1

***** Generation 632 : 0
**Parent Variant: [Variant id: 1263, #gens: 240, #ops: 0, parent:-]

--Child created id: 1264
--Creating new operations for variant [Variant id: 1264, #gens: 240, #ops: 0, parent:1263]
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java175
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 175, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1264, #gens: 241, #ops: 1, parent:1263] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1264
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1264/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(632): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1263(f=2.0), 1264(f=2.0), )
Selected to next generation: IDs2--> (1263(f=2.0), )
----------Running generation: 633, population size: 1

***** Generation 633 : 0
**Parent Variant: [Variant id: 1265, #gens: 240, #ops: 0, parent:-]

--Child created id: 1266
--Creating new operations for variant [Variant id: 1266, #gens: 240, #ops: 0, parent:1265]
---analyzing modificationPoint position: 69
location: FractionFormat.java206
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1266, #gens: 239, #ops: 1, parent:1265] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1266
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1266/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(633): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1265(f=2.0), 1266(f=2.0), )
Selected to next generation: IDs2--> (1265(f=2.0), )
----------Running generation: 634, population size: 1

***** Generation 634 : 0
**Parent Variant: [Variant id: 1267, #gens: 240, #ops: 0, parent:-]

--Child created id: 1268
--Creating new operations for variant [Variant id: 1268, #gens: 240, #ops: 0, parent:1267]
---analyzing modificationPoint position: 87
Templates availables37
Attempts Base Ingredients  1 total 37
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 76
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1268, #gens: 239, #ops: 1, parent:1267] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1268
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1268/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(634): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1267(f=2.0), 1268(f=2.0), )
Selected to next generation: IDs2--> (1267(f=2.0), )
----------Running generation: 635, population size: 1

***** Generation 635 : 0
**Parent Variant: [Variant id: 1269, #gens: 240, #ops: 0, parent:-]

--Child created id: 1270
--Creating new operations for variant [Variant id: 1270, #gens: 240, #ops: 0, parent:1269]
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 23
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 4 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 146
location: AbstractFormat.java172
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1270, #gens: 239, #ops: 1, parent:1269] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1270
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1270/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(635): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1269(f=2.0), 1270(f=2.0), )
Selected to next generation: IDs2--> (1269(f=2.0), )
----------Running generation: 636, population size: 1

***** Generation 636 : 0
**Parent Variant: [Variant id: 1271, #gens: 240, #ops: 0, parent:-]

--Child created id: 1272
--Creating new operations for variant [Variant id: 1272, #gens: 240, #ops: 0, parent:1271]
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 134
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java393
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i] ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 393, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i] ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1272, #gens: 241, #ops: 1, parent:1271] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1272
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1272/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(636): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i] ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1271(f=2.0), 1272(f=4.0), )
Selected to next generation: IDs2--> (1271(f=2.0), )
----------Running generation: 637, population size: 1

***** Generation 637 : 0
**Parent Variant: [Variant id: 1273, #gens: 240, #ops: 0, parent:-]

--Child created id: 1274
--Creating new operations for variant [Variant id: 1274, #gens: 240, #ops: 0, parent:1273]
---analyzing modificationPoint position: 46
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 32
location: MultiDirectional.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1274, #gens: 239, #ops: 1, parent:1273] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1274
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1274/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(637): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1273(f=2.0), 1274(f=4.0), )
Selected to next generation: IDs2--> (1273(f=2.0), )
----------Running generation: 638, population size: 1

***** Generation 638 : 0
**Parent Variant: [Variant id: 1275, #gens: 240, #ops: 0, parent:-]

--Child created id: 1276
--Creating new operations for variant [Variant id: 1276, #gens: 240, #ops: 0, parent:1275]
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [startConfiguration, n]
--> var from patch: startConfiguration spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `startConfiguration = new double[n][n]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 376, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `startConfiguration = new double[n][n]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1276, #gens: 241, #ops: 1, parent:1275] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1276
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1276/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(638): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `startConfiguration = new double[n][n]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1275(f=2.0), 1276(f=3.0), )
Selected to next generation: IDs2--> (1275(f=2.0), )
----------Running generation: 639, population size: 1

***** Generation 639 : 0
**Parent Variant: [Variant id: 1277, #gens: 240, #ops: 0, parent:-]

--Child created id: 1278
--Creating new operations for variant [Variant id: 1278, #gens: 240, #ops: 0, parent:1277]
---analyzing modificationPoint position: 29
---modifPoint 0 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 131
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 376, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1278, #gens: 240, #ops: 1, parent:1277] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1278
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1278/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(639): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1277(f=2.0), 1278(f=3.0), )
Selected to next generation: IDs2--> (1277(f=2.0), )
----------Running generation: 640, population size: 1

***** Generation 640 : 0
**Parent Variant: [Variant id: 1279, #gens: 240, #ops: 0, parent:-]

--Child created id: 1280
--Creating new operations for variant [Variant id: 1280, #gens: 240, #ops: 0, parent:1279]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1280, #gens: 241, #ops: 1, parent:1279] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1280
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1280/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(640): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1279(f=2.0), 1280(f=2.0), )
Selected to next generation: IDs2--> (1279(f=2.0), )
----------Running generation: 641, population size: 1

***** Generation 641 : 0
**Parent Variant: [Variant id: 1281, #gens: 240, #ops: 0, parent:-]

--Child created id: 1282
--Creating new operations for variant [Variant id: 1282, #gens: 240, #ops: 0, parent:1281]
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 26
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtIfImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]
---analyzing modificationPoint position: 150
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.BigFractionFormat(org.apache.commons.math.fraction.Abstr[...]
---analyzing modificationPoint position: 10
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 56
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1282, #gens: 239, #ops: 1, parent:1281] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1282
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1282/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(641): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1281(f=2.0), 1282(f=2.0), )
Selected to next generation: IDs2--> (1281(f=2.0), )
----------Running generation: 642, population size: 1

***** Generation 642 : 0
**Parent Variant: [Variant id: 1283, #gens: 240, #ops: 0, parent:-]

--Child created id: 1284
--Creating new operations for variant [Variant id: 1284, #gens: 240, #ops: 0, parent:1283]
---analyzing modificationPoint position: 155
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 140
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java161
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1284, #gens: 240, #ops: 1, parent:1283] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1284
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1284/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(642): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `int index = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1283(f=2.0), 1284(f=2.0), )
Selected to next generation: IDs2--> (1283(f=2.0), )
----------Running generation: 643, population size: 1

***** Generation 643 : 0
**Parent Variant: [Variant id: 1285, #gens: 240, #ops: 0, parent:-]

--Child created id: 1286
--Creating new operations for variant [Variant id: 1286, #gens: 240, #ops: 0, parent:1285]
---analyzing modificationPoint position: 198
Templates availables144
Attempts Base Ingredients  1 total 144
---modifPoint 0 not mutation generated in  if (den == 0) { 	throw org.apache.commons.math.MathRuntimeException.createArithmeticException("zero [...]
---analyzing modificationPoint position: 59
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1286, #gens: 240, #ops: 1, parent:1285] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1286
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1286/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(643): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1285(f=2.0), 1286(f=2.0), )
Selected to next generation: IDs2--> (1285(f=2.0), )
----------Running generation: 644, population size: 1

***** Generation 644 : 0
**Parent Variant: [Variant id: 1287, #gens: 240, #ops: 0, parent:-]

--Child created id: 1288
--Creating new operations for variant [Variant id: 1288, #gens: 240, #ops: 0, parent:1287]
---analyzing modificationPoint position: 44
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1288, #gens: 240, #ops: 1, parent:1287] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1288
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1288/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(644): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1287(f=2.0), 1288(f=2.0), )
Selected to next generation: IDs2--> (1287(f=2.0), )
----------Running generation: 645, population size: 1

***** Generation 645 : 0
**Parent Variant: [Variant id: 1289, #gens: 240, #ops: 0, parent:-]

--Child created id: 1290
--Creating new operations for variant [Variant id: 1290, #gens: 240, #ops: 0, parent:1289]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 73
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java180
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 180, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1290, #gens: 240, #ops: 1, parent:1289] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1290
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1290/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(645): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1289(f=2.0), 1290(f=2.0), )
Selected to next generation: IDs2--> (1289(f=2.0), )
----------Running generation: 646, population size: 1

***** Generation 646 : 0
**Parent Variant: [Variant id: 1291, #gens: 240, #ops: 0, parent:-]

--Child created id: 1292
--Creating new operations for variant [Variant id: 1292, #gens: 240, #ops: 0, parent:1291]
---analyzing modificationPoint position: 75
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java136
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 136, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1292, #gens: 240, #ops: 1, parent:1291] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1292, errors: [ProperFractionFormat.java:203: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(646): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...] ` -topatch--> `// parse denominator java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1291(f=2.0), 1292(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1291(f=2.0), )
----------Running generation: 647, population size: 1

***** Generation 647 : 0
**Parent Variant: [Variant id: 1293, #gens: 240, #ops: 0, parent:-]

--Child created id: 1294
--Creating new operations for variant [Variant id: 1294, #gens: 240, #ops: 0, parent:1293]
---analyzing modificationPoint position: 48
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1294, #gens: 239, #ops: 1, parent:1293] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1294
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1294/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(647): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1293(f=2.0), 1294(f=2.0), )
Selected to next generation: IDs2--> (1293(f=2.0), )
----------Running generation: 648, population size: 1

***** Generation 648 : 0
**Parent Variant: [Variant id: 1295, #gens: 240, #ops: 0, parent:-]

--Child created id: 1296
--Creating new operations for variant [Variant id: 1296, #gens: 240, #ops: 0, parent:1295]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1296, #gens: 240, #ops: 1, parent:1295] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1296, errors: [AbstractFormat.java:164: error: cannot find symbol
		char ret = 0; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		              		^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:164: error: cannot find symbol
		char ret = 0; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		              		                                		^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.AbstractFormat, AbstractFormat.java:164: error: cannot find symbol
		char ret = 0; 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		              		                                		                              		       ^
  symbol:   variable nf
  location: class org.apache.commons.math.fraction.AbstractFormat]
Ingredient counter is Zero
---Undoing: gnrtn(648): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1295(f=2.0), 1296(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1295(f=2.0), )
----------Running generation: 649, population size: 1

***** Generation 649 : 0
**Parent Variant: [Variant id: 1297, #gens: 240, #ops: 0, parent:-]

--Child created id: 1298
--Creating new operations for variant [Variant id: 1298, #gens: 240, #ops: 0, parent:1297]
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
Attempts Base Ingredients  3 total 10
Attempts Base Ingredients  4 total 10
Attempts Base Ingredients  5 total 10
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1298, #gens: 240, #ops: 1, parent:1297] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1298, errors: [MultiDirectional.java:122: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
		for (int i = 1; i <= n; ++i) { 			final double[] xSmallest = original[0].getPointRef();
		                               			               ^, MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(649): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1297(f=2.0), 1298(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1297(f=2.0), )
----------Running generation: 650, population size: 1

***** Generation 650 : 0
**Parent Variant: [Variant id: 1299, #gens: 240, #ops: 0, parent:-]

--Child created id: 1300
--Creating new operations for variant [Variant id: 1300, #gens: 240, #ops: 0, parent:1299]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 81
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 159
location: ProperBigFractionFormat.java101
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1300, #gens: 239, #ops: 1, parent:1299] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1300
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1300/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(650): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(' ') ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1299(f=2.0), 1300(f=2.0), )
Selected to next generation: IDs2--> (1299(f=2.0), )
----------Running generation: 651, population size: 1

***** Generation 651 : 0
**Parent Variant: [Variant id: 1301, #gens: 240, #ops: 0, parent:-]

--Child created id: 1302
--Creating new operations for variant [Variant id: 1302, #gens: 240, #ops: 0, parent:1301]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1302, #gens: 241, #ops: 1, parent:1301] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1302
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1302/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(651): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1301(f=2.0), 1302(f=2.0), )
Selected to next generation: IDs2--> (1301(f=2.0), )
----------Running generation: 652, population size: 1

***** Generation 652 : 0
**Parent Variant: [Variant id: 1303, #gens: 240, #ops: 0, parent:-]

--Child created id: 1304
--Creating new operations for variant [Variant id: 1304, #gens: 240, #ops: 0, parent:1303]
---analyzing modificationPoint position: 35
---modifPoint 0 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java229
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 229, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1304, #gens: 241, #ops: 1, parent:1303] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1304, errors: [FractionFormat.java:229: error: variable initialIndex is already defined in method parse(java.lang.String,java.text.ParsePosition)
		final java.lang.Number num = getNumeratorFormat().parse(source, pos); 		final int initialIndex = pos.getIndex();
		                                                                      		          ^]
Ingredient counter is Zero
---Undoing: gnrtn(652): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1303(f=2.0), 1304(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1303(f=2.0), )
----------Running generation: 653, population size: 1

***** Generation 653 : 0
**Parent Variant: [Variant id: 1305, #gens: 240, #ops: 0, parent:-]

--Child created id: 1306
--Creating new operations for variant [Variant id: 1306, #gens: 240, #ops: 0, parent:1305]
---analyzing modificationPoint position: 74
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1306, #gens: 240, #ops: 1, parent:1305] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1306, errors: [FractionFormat.java:190: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
		} 		return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefault());
		  		                                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(653): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1305(f=2.0), 1306(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1305(f=2.0), )
----------Running generation: 654, population size: 1

***** Generation 654 : 0
**Parent Variant: [Variant id: 1307, #gens: 240, #ops: 0, parent:-]

--Child created id: 1308
--Creating new operations for variant [Variant id: 1308, #gens: 240, #ops: 0, parent:1307]
---analyzing modificationPoint position: 110
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java222
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 222, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1308, #gens: 241, #ops: 1, parent:1307] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1308, errors: [FractionFormat.java:245: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat, FractionFormat.java:271: error: cannot find symbol
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.FractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(654): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int initialIndex = pos.getIndex() ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1307(f=2.0), 1308(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1307(f=2.0), )
----------Running generation: 655, population size: 1

***** Generation 655 : 0
**Parent Variant: [Variant id: 1309, #gens: 240, #ops: 0, parent:-]

--Child created id: 1310
--Creating new operations for variant [Variant id: 1310, #gens: 240, #ops: 0, parent:1309]
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1310, #gens: 241, #ops: 1, parent:1309] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1310, errors: [FractionFormat.java:104: error: unreachable statement
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getImproperInstance(final java.util.Locale locale) { 		return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale)); 		return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale));
	    	                                                                                                                   		                                                                                                                                            		^]
Ingredient counter is Zero
---Undoing: gnrtn(655): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1309(f=2.0), 1310(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1309(f=2.0), )
----------Running generation: 656, population size: 1

***** Generation 656 : 0
**Parent Variant: [Variant id: 1311, #gens: 240, #ops: 0, parent:-]

--Child created id: 1312
--Creating new operations for variant [Variant id: 1312, #gens: 240, #ops: 0, parent:1311]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 99
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...]
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 5
---modifPoint 3 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 4 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 80
---modifPoint 5 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 55
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1312, #gens: 240, #ops: 1, parent:1311] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 1312
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1312/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(656): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1311(f=2.0), 1312(f=2.0), )
Selected to next generation: IDs2--> (1311(f=2.0), )
----------Running generation: 657, population size: 1

***** Generation 657 : 0
**Parent Variant: [Variant id: 1313, #gens: 240, #ops: 0, parent:-]

--Child created id: 1314
--Creating new operations for variant [Variant id: 1314, #gens: 240, #ops: 0, parent:1313]
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1314, #gens: 241, #ops: 1, parent:1313] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1314, errors: [MultiDirectional.java:137: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:137: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:137: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:137: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:137: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:137: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(657): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1313(f=2.0), 1314(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1313(f=2.0), )
----------Running generation: 658, population size: 1

***** Generation 658 : 0
**Parent Variant: [Variant id: 1315, #gens: 240, #ops: 0, parent:-]

--Child created id: 1316
--Creating new operations for variant [Variant id: 1316, #gens: 240, #ops: 0, parent:1315]
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1316, #gens: 240, #ops: 1, parent:1315] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1316
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1316/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(658): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1315(f=2.0), 1316(f=2.0), )
Selected to next generation: IDs2--> (1315(f=2.0), )
----------Running generation: 659, population size: 1

***** Generation 659 : 0
**Parent Variant: [Variant id: 1317, #gens: 240, #ops: 0, parent:-]

--Child created id: 1318
--Creating new operations for variant [Variant id: 1318, #gens: 240, #ops: 0, parent:1317]
---analyzing modificationPoint position: 87
Templates availables37
Attempts Base Ingredients  1 total 37
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 37
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1318, #gens: 240, #ops: 1, parent:1317] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1318, errors: [MultiDirectional.java:125: error: cannot assign a value to final variable khi
			for (int j = 0; j < n; ++j) { 				this.khi = 2.0;
			                              				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(659): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1317(f=2.0), 1318(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1317(f=2.0), )
----------Running generation: 660, population size: 1

***** Generation 660 : 0
**Parent Variant: [Variant id: 1319, #gens: 240, #ops: 0, parent:-]

--Child created id: 1320
--Creating new operations for variant [Variant id: 1320, #gens: 240, #ops: 0, parent:1319]
---analyzing modificationPoint position: 79
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1320, #gens: 239, #ops: 1, parent:1319] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1320
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1320/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(660): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1319(f=2.0), 1320(f=2.0), )
Selected to next generation: IDs2--> (1319(f=2.0), )
----------Running generation: 661, population size: 1

***** Generation 661 : 0
**Parent Variant: [Variant id: 1321, #gens: 240, #ops: 0, parent:-]

--Child created id: 1322
--Creating new operations for variant [Variant id: 1322, #gens: 240, #ops: 0, parent:1321]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java176
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 176, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1322, #gens: 241, #ops: 1, parent:1321] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1322, errors: [FractionFormat.java:177: error: variable ret is already defined in method format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
			ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos); 			java.lang.StringBuffer ret = null;
			                                                                                    			                       ^]
Ingredient counter is Zero
---Undoing: gnrtn(661): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `java.lang.StringBuffer ret = null` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1321(f=2.0), 1322(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1321(f=2.0), )
----------Running generation: 662, population size: 1

***** Generation 662 : 0
**Parent Variant: [Variant id: 1323, #gens: 240, #ops: 0, parent:-]

--Child created id: 1324
--Creating new operations for variant [Variant id: 1324, #gens: 240, #ops: 0, parent:1323]
---analyzing modificationPoint position: 124
Templates availables14
Attempts Base Ingredients  1 total 14
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 103, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1324, #gens: 241, #ops: 1, parent:1323] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1324
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1324/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(662): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.negate() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1323(f=2.0), 1324(f=2.0), )
Selected to next generation: IDs2--> (1323(f=2.0), )
----------Running generation: 663, population size: 1

***** Generation 663 : 0
**Parent Variant: [Variant id: 1325, #gens: 240, #ops: 0, parent:-]

--Child created id: 1326
--Creating new operations for variant [Variant id: 1326, #gens: 240, #ops: 0, parent:1325]
---analyzing modificationPoint position: 153
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [format]
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java238
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 238, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1326, #gens: 241, #ops: 1, parent:1325] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1326
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1326/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(663): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1325(f=2.0), 1326(f=2.0), )
Selected to next generation: IDs2--> (1325(f=2.0), )
----------Running generation: 664, population size: 1

***** Generation 664 : 0
**Parent Variant: [Variant id: 1327, #gens: 240, #ops: 0, parent:-]

--Child created id: 1328
--Creating new operations for variant [Variant id: 1328, #gens: 240, #ops: 0, parent:1327]
---analyzing modificationPoint position: 96
location: RealPointValuePair.java63
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1328, #gens: 239, #ops: 1, parent:1327] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1328, errors: [RealPointValuePair.java:65: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point;}
	    	                                                                                               		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(664): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1327(f=2.0), 1328(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1327(f=2.0), )
----------Running generation: 665, population size: 1

***** Generation 665 : 0
**Parent Variant: [Variant id: 1329, #gens: 240, #ops: 0, parent:-]

--Child created id: 1330
--Creating new operations for variant [Variant id: 1330, #gens: 240, #ops: 0, parent:1329]
---analyzing modificationPoint position: 55
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 74
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1330, #gens: 240, #ops: 1, parent:1329] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1330, errors: [FractionFormat.java:190: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
		} 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		  		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(665): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1329(f=2.0), 1330(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1329(f=2.0), )
----------Running generation: 666, population size: 1

***** Generation 666 : 0
**Parent Variant: [Variant id: 1331, #gens: 240, #ops: 0, parent:-]

--Child created id: 1332
--Creating new operations for variant [Variant id: 1332, #gens: 240, #ops: 0, parent:1331]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator, reflected, best, simplex, original, khi, expanded, reflectedSimplex]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: reflected spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: best spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: expanded spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: reflectedSimplex spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1332, #gens: 241, #ops: 1, parent:1331] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1332, errors: [MultiDirectional.java:117: error: illegal start of expression
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(666): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1331(f=2.0), 1332(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1331(f=2.0), )
----------Running generation: 667, population size: 1

***** Generation 667 : 0
**Parent Variant: [Variant id: 1333, #gens: 240, #ops: 0, parent:-]

--Child created id: 1334
--Creating new operations for variant [Variant id: 1334, #gens: 240, #ops: 0, parent:1333]
---analyzing modificationPoint position: 76
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 137, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1334, #gens: 241, #ops: 1, parent:1333] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1334, errors: [ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                ^, ProperFractionFormat.java:170: error: ';' expected
		if (num.intValue() < 0) {
		                  ^, ProperFractionFormat.java:170: error: <identifier> expected
		if (num.intValue() < 0) {
		                    ^, ProperFractionFormat.java:170: error: illegal start of type
		if (num.intValue() < 0) {
		                     ^, ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(667): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1333(f=2.0), 1334(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1333(f=2.0), )
----------Running generation: 668, population size: 1

***** Generation 668 : 0
**Parent Variant: [Variant id: 1335, #gens: 240, #ops: 0, parent:-]

--Child created id: 1336
--Creating new operations for variant [Variant id: 1336, #gens: 240, #ops: 0, parent:1335]
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1336, #gens: 241, #ops: 1, parent:1335] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1336, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(668): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1335(f=2.0), 1336(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1335(f=2.0), )
----------Running generation: 669, population size: 1

***** Generation 669 : 0
**Parent Variant: [Variant id: 1337, #gens: 240, #ops: 0, parent:-]

--Child created id: 1338
--Creating new operations for variant [Variant id: 1338, #gens: 240, #ops: 0, parent:1337]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 38
location: MultiDirectional.java127
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1338, #gens: 239, #ops: 1, parent:1337] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1338
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1338/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(669): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1337(f=2.0), 1338(f=4.0), )
Selected to next generation: IDs2--> (1337(f=2.0), )
----------Running generation: 670, population size: 1

***** Generation 670 : 0
**Parent Variant: [Variant id: 1339, #gens: 240, #ops: 0, parent:-]

--Child created id: 1340
--Creating new operations for variant [Variant id: 1340, #gens: 240, #ops: 0, parent:1339]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1340, #gens: 241, #ops: 1, parent:1339] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1340, errors: [FractionFormat.java:131: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.FractionFormat
		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault()); 		return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale));} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(670): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1339(f=2.0), 1340(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1339(f=2.0), )
----------Running generation: 671, population size: 1

***** Generation 671 : 0
**Parent Variant: [Variant id: 1341, #gens: 240, #ops: 0, parent:-]

--Child created id: 1342
--Creating new operations for variant [Variant id: 1342, #gens: 240, #ops: 0, parent:1341]
---analyzing modificationPoint position: 73
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 15
---modifPoint 1 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1342, #gens: 241, #ops: 1, parent:1341] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1342
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1342/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(671): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1341(f=2.0), 1342(f=2.0), )
Selected to next generation: IDs2--> (1341(f=2.0), )
----------Running generation: 672, population size: 1

***** Generation 672 : 0
**Parent Variant: [Variant id: 1343, #gens: 240, #ops: 0, parent:-]

--Child created id: 1344
--Creating new operations for variant [Variant id: 1344, #gens: 240, #ops: 0, parent:1343]
---analyzing modificationPoint position: 63
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 155
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 24
---modifPoint 2 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 10
---modifPoint 3 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 148
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 4 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 5 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 30
---modifPoint 6 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 69
location: FractionFormat.java206
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1344, #gens: 239, #ops: 1, parent:1343] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 1344
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1344/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(672): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1343(f=2.0), 1344(f=2.0), )
Selected to next generation: IDs2--> (1343(f=2.0), )
----------Running generation: 673, population size: 1

***** Generation 673 : 0
**Parent Variant: [Variant id: 1345, #gens: 240, #ops: 0, parent:-]

--Child created id: 1346
--Creating new operations for variant [Variant id: 1346, #gens: 240, #ops: 0, parent:1345]
---analyzing modificationPoint position: 224
Templates availables259
Attempts Base Ingredients  1 total 259
---modifPoint 0 not mutation generated in  int u = p
---analyzing modificationPoint position: 58
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1346, #gens: 239, #ops: 1, parent:1345] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1346
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1346/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(673): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1345(f=2.0), 1346(f=2.0), )
Selected to next generation: IDs2--> (1345(f=2.0), )
----------Running generation: 674, population size: 1

***** Generation 674 : 0
**Parent Variant: [Variant id: 1347, #gens: 240, #ops: 0, parent:-]

--Child created id: 1348
--Creating new operations for variant [Variant id: 1348, #gens: 240, #ops: 0, parent:1347]
---analyzing modificationPoint position: 101
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch []
location: DirectSearchOptimizer.java291
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 291, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1348, #gens: 240, #ops: 1, parent:1347] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1348, errors: [DirectSearchOptimizer.java:296: error: variable converged is already defined in method optimize(org.apache.commons.math.analysis.MultivariateRealFunction,org.apache.commons.math.optimization.GoalType,double[])
		boolean converged = true; 		while (true) { 			if (iterations > 0) { 				boolean converged = true;
		                          		               			                      				        ^, DirectSearchOptimizer.java:298: error: cannot find symbol
					converged &= checker.converged(iterations, previous[i], simplex[i]);
					                                           ^
  symbol:   variable previous
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:307: error: cannot find symbol
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                                       ^
  symbol:   variable previous
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer]
Ingredient counter is Zero
---Undoing: gnrtn(674): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1347(f=2.0), 1348(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1347(f=2.0), )
----------Running generation: 675, population size: 1

***** Generation 675 : 0
**Parent Variant: [Variant id: 1349, #gens: 240, #ops: 0, parent:-]

--Child created id: 1350
--Creating new operations for variant [Variant id: 1350, #gens: 240, #ops: 0, parent:1349]
---analyzing modificationPoint position: 213
Templates availables259
Attempts Base Ingredients  1 total 259
---modifPoint 0 not mutation generated in  // keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...]
---analyzing modificationPoint position: 51
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 22
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 2
---modifPoint 2 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 3 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 4 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 0
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1350, #gens: 241, #ops: 1, parent:1349] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 1350, errors: [AbstractFormat.java:92: error: non-static variable numeratorFormat cannot be referenced from a static context
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		numeratorFormat = numeratorFormat;
	    	                                                                                                		                                                                                    		^, AbstractFormat.java:92: error: non-static variable numeratorFormat cannot be referenced from a static context
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		numeratorFormat = numeratorFormat;
	    	                                                                                                		                                                                                    		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(675): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1349(f=2.0), 1350(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1349(f=2.0), )
----------Running generation: 676, population size: 1

***** Generation 676 : 0
**Parent Variant: [Variant id: 1351, #gens: 240, #ops: 0, parent:-]

--Child created id: 1352
--Creating new operations for variant [Variant id: 1352, #gens: 240, #ops: 0, parent:1351]
---analyzing modificationPoint position: 40
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java132
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1352, #gens: 241, #ops: 1, parent:1351] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1352, errors: [MultiDirectional.java:132: error: cannot assign a value to final variable khi
		evaluateSimplex(comparator); 		this.khi = 2.0;
		                             		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(676): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1351(f=2.0), 1352(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1351(f=2.0), )
----------Running generation: 677, population size: 1

***** Generation 677 : 0
**Parent Variant: [Variant id: 1353, #gens: 240, #ops: 0, parent:-]

--Child created id: 1354
--Creating new operations for variant [Variant id: 1354, #gens: 240, #ops: 0, parent:1353]
---analyzing modificationPoint position: 167
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, reflectedSimplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: reflectedSimplex spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java78
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...] ` -topatch--> `// accept the reflected simplex simplex = reflectedSimplex` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 78, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...] ` -topatch--> `// accept the reflected simplex simplex = reflectedSimplex` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1354, #gens: 241, #ops: 1, parent:1353] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1354
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1354/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(677): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...] ` -topatch--> `// accept the reflected simplex simplex = reflectedSimplex` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1353(f=2.0), 1354(f=4.0), )
Selected to next generation: IDs2--> (1353(f=2.0), )
----------Running generation: 678, population size: 1

***** Generation 678 : 0
**Parent Variant: [Variant id: 1355, #gens: 240, #ops: 0, parent:-]

--Child created id: 1356
--Creating new operations for variant [Variant id: 1356, #gens: 240, #ops: 0, parent:1355]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 27
---modifPoint 1 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 2 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1356, #gens: 241, #ops: 1, parent:1355] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1356, errors: [MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:148: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(678): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1355(f=2.0), 1356(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1355(f=2.0), )
----------Running generation: 679, population size: 1

***** Generation 679 : 0
**Parent Variant: [Variant id: 1357, #gens: 240, #ops: 0, parent:-]

--Child created id: 1358
--Creating new operations for variant [Variant id: 1358, #gens: 240, #ops: 0, parent:1357]
---analyzing modificationPoint position: 58
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1358, #gens: 241, #ops: 1, parent:1357] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1358, errors: [ProperBigFractionFormat.java:111: error: unreachable statement
		return toAppendTo; 		toAppendTo.append(" / "); 		getDenominatorFormat().format(den, toAppendTo, pos); 		return toAppendTo;
		                   		^]
Ingredient counter is Zero
---Undoing: gnrtn(679): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1357(f=2.0), 1358(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1357(f=2.0), )
----------Running generation: 680, population size: 1

***** Generation 680 : 0
**Parent Variant: [Variant id: 1359, #gens: 240, #ops: 0, parent:-]

--Child created id: 1360
--Creating new operations for variant [Variant id: 1360, #gens: 240, #ops: 0, parent:1359]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 76
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java137
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 137, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1360, #gens: 241, #ops: 1, parent:1359] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1360, errors: [ProperFractionFormat.java:233: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:236: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperFractionFormat.java:236: error: ';' expected
	 * Modify the whole format.
	         ^, ProperFractionFormat.java:236: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperFractionFormat.java:236: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperFractionFormat.java:238: error: illegal start of expression
	 * @param format
	 ^, ProperFractionFormat.java:238: error: illegal start of expression
	 * @param format
	   ^, ProperFractionFormat.java:239: error: not a statement
	 * 		The new whole format value.
	 ^, ProperFractionFormat.java:239: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperFractionFormat.java:239: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperFractionFormat.java:239: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperFractionFormat.java:240: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperFractionFormat.java:241: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperFractionFormat.java:241: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperFractionFormat.java:241: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperFractionFormat.java:241: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperFractionFormat.java:241: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperFractionFormat.java:241: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperFractionFormat.java:242: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperFractionFormat.java:241: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperFractionFormat.java:242: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperFractionFormat.java:242: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperFractionFormat.java:242: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperFractionFormat.java:243: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                               ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                    ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                          ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		   ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		    ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		           ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		              ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                    ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			      ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			         ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			          ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                 ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                        ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                         ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                             ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                              ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                   ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                 ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                  ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                ^, ProperFractionFormat.java:243: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                 ^, ProperFractionFormat.java:243: error: illegal start of type
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		^, ProperFractionFormat.java:243: error: ';' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		    ^, ProperFractionFormat.java:243: error: <identifier> expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		                ^, ProperFractionFormat.java:243: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(680): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (ret != null) { 	return ret; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1359(f=2.0), 1360(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1359(f=2.0), )
----------Running generation: 681, population size: 1

***** Generation 681 : 0
**Parent Variant: [Variant id: 1361, #gens: 240, #ops: 0, parent:-]

--Child created id: 1362
--Creating new operations for variant [Variant id: 1362, #gens: 240, #ops: 0, parent:1361]
---analyzing modificationPoint position: 38
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 0 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
---modifPoint 2 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 78
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java204
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 204, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1362, #gens: 241, #ops: 1, parent:1361] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1362, errors: [FractionFormat.java:246: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' :
				                                                                         			^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, FractionFormat.java:259: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, FractionFormat.java:263: error: illegal start of type
		if (den == null) {
		^, FractionFormat.java:263: error: <identifier> expected
		if (den == null) {
		       ^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(681): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition) ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1361(f=2.0), 1362(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1361(f=2.0), )
----------Running generation: 682, population size: 1

***** Generation 682 : 0
**Parent Variant: [Variant id: 1363, #gens: 240, #ops: 0, parent:-]

--Child created id: 1364
--Creating new operations for variant [Variant id: 1364, #gens: 240, #ops: 0, parent:1363]
---analyzing modificationPoint position: 87
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 51
---modifPoint 1 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 146
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java172
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 172, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1364, #gens: 241, #ops: 1, parent:1363] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1364, errors: [AbstractFormat.java:171: error: variable n is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
			pos.setIndex(index); 			final int n = source.length();
			                     			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(682): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1363(f=2.0), 1364(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1363(f=2.0), )
----------Running generation: 683, population size: 1

***** Generation 683 : 0
**Parent Variant: [Variant id: 1365, #gens: 240, #ops: 0, parent:-]

--Child created id: 1366
--Creating new operations for variant [Variant id: 1366, #gens: 240, #ops: 0, parent:1365]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 32
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1366, #gens: 240, #ops: 1, parent:1365] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1366, errors: [MultiDirectional.java:120: error: cannot assign a value to final variable khi
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		this.khi = khi;
		                                                                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(683): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1365(f=2.0), 1366(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1365(f=2.0), )
----------Running generation: 684, population size: 1

***** Generation 684 : 0
**Parent Variant: [Variant id: 1367, #gens: 240, #ops: 0, parent:-]

--Child created id: 1368
--Creating new operations for variant [Variant id: 1368, #gens: 240, #ops: 0, parent:1367]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 175
Templates availables31
Attempts Base Ingredients  1 total 31
---modifPoint 3 not mutation generated in  if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); }
---analyzing modificationPoint position: 67
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java147
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 147, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1368, #gens: 240, #ops: 1, parent:1367] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1368, errors: [ProperFractionFormat.java:161: error: cannot find symbol
		java.lang.Number num = getNumeratorFormat().parse(source, pos); 		if (whole == null) { 			// invalid integer number 			// set index back to initial, error index should already be set 			// character examined. 			pos.setIndex(initialIndex); 			return null;} 		// parse whitespace
		                                                                		    ^
  symbol:   variable whole
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:215: error: cannot find symbol
		int w = whole.intValue();
		        ^
  symbol:   variable whole
  location: class org.apache.commons.math.fraction.ProperFractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(684): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `// parse numerator java.lang.Number num = getNumeratorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1367(f=2.0), 1368(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1367(f=2.0), )
----------Running generation: 685, population size: 1

***** Generation 685 : 0
**Parent Variant: [Variant id: 1369, #gens: 240, #ops: 0, parent:-]

--Child created id: 1370
--Creating new operations for variant [Variant id: 1370, #gens: 240, #ops: 0, parent:1369]
---analyzing modificationPoint position: 137
---modifPoint 0 not mutation generated in  return point
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1370, #gens: 241, #ops: 1, parent:1369] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1370, errors: [FractionFormat.java:263: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:271: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                    ^, FractionFormat.java:271: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());
		                                                                 ^, FractionFormat.java:274: error: class, interface, or enum expected
}
^]
Ingredient counter is Zero
---Undoing: gnrtn(685): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1369(f=2.0), 1370(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1369(f=2.0), )
----------Running generation: 686, population size: 1

***** Generation 686 : 0
**Parent Variant: [Variant id: 1371, #gens: 240, #ops: 0, parent:-]

--Child created id: 1372
--Creating new operations for variant [Variant id: 1372, #gens: 240, #ops: 0, parent:1371]
---analyzing modificationPoint position: 153
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1372, #gens: 241, #ops: 1, parent:1371] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1372, errors: [ProperFractionFormat.java:155: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		} 		return wholeFormat;
		  		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(686): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1371(f=2.0), 1372(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1371(f=2.0), )
----------Running generation: 687, population size: 1

***** Generation 687 : 0
**Parent Variant: [Variant id: 1373, #gens: 240, #ops: 0, parent:-]

--Child created id: 1374
--Creating new operations for variant [Variant id: 1374, #gens: 240, #ops: 0, parent:1373]
---analyzing modificationPoint position: 66
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1374, #gens: 241, #ops: 1, parent:1373] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1374, errors: [ProperFractionFormat.java:179: error: cannot find symbol
		switch (c) {
		        ^
  symbol:   variable c
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:183: error: cannot find symbol
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1);
				                                                     ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:215: error: cannot find symbol
		int w = whole.intValue();
		        ^
  symbol:   variable whole
  location: class org.apache.commons.math.fraction.ProperFractionFormat, ProperFractionFormat.java:216: error: cannot find symbol
		int n = num.intValue();
		        ^
  symbol:   variable num
  location: class org.apache.commons.math.fraction.ProperFractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(687): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse '/' int startIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1373(f=2.0), 1374(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1373(f=2.0), )
----------Running generation: 688, population size: 1

***** Generation 688 : 0
**Parent Variant: [Variant id: 1375, #gens: 240, #ops: 0, parent:-]

--Child created id: 1376
--Creating new operations for variant [Variant id: 1376, #gens: 240, #ops: 0, parent:1375]
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java175
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 175, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1376, #gens: 241, #ops: 1, parent:1375] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1376, errors: [FractionFormat.java:255: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(688): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1375(f=2.0), 1376(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1375(f=2.0), )
----------Running generation: 689, population size: 1

***** Generation 689 : 0
**Parent Variant: [Variant id: 1377, #gens: 240, #ops: 0, parent:-]

--Child created id: 1378
--Creating new operations for variant [Variant id: 1378, #gens: 240, #ops: 0, parent:1377]
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 175
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch []
location: BigFraction.java165
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 165, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1378, #gens: 241, #ops: 1, parent:1377] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1378, errors: [BigFraction.java:1132: error: illegal start of expression
	 * Create a fraction given the double value.
	 ^, BigFraction.java:1132: error: ';' expected
	 * Create a fraction given the double value.
	         ^, BigFraction.java:1132: error: ';' expected
	 * Create a fraction given the double value.
	                    ^, BigFraction.java:1132: error: ';' expected
	 * Create a fraction given the double value.
	                              ^, BigFraction.java:1132: error: ';' expected
	 * Create a fraction given the double value.
	                                           ^, BigFraction.java:1134: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	 ^, BigFraction.java:1134: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	       ^, BigFraction.java:1134: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	                           ^, BigFraction.java:1134: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	                                ^, BigFraction.java:1134: error: illegal start of type
	 * This constructor behaves <em>differently</em> from
	                                            ^, BigFraction.java:1134: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                           ^, BigFraction.java:1135: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	   ^, BigFraction.java:1134: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                               ^, BigFraction.java:1135: error: illegal character: '#'
	 * {@link #BigFraction(double, double, int)}. It converts the
	          ^, BigFraction.java:1135: error: illegal start of type
	 * {@link #BigFraction(double, double, int)}. It converts the
	                      ^, BigFraction.java:1135: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                       ^, BigFraction.java:1135: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                             ^, BigFraction.java:1135: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                               ^, BigFraction.java:1135: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                     ^, BigFraction.java:1135: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                       ^, BigFraction.java:1135: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                          ^, BigFraction.java:1135: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                            ^, BigFraction.java:1135: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                                         ^, BigFraction.java:1136: error: '.class' expected
	 * double value exactly, considering its internal bits representation.
	          ^, BigFraction.java:1136: error: not a statement
	 * double value exactly, considering its internal bits representation.
	 ^, BigFraction.java:1136: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                    ^, BigFraction.java:1136: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                 ^, BigFraction.java:1136: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                                     ^, BigFraction.java:1137: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	            ^, BigFraction.java:1137: error: not a statement
	 * This does work for all values except NaN and infinities and does
	             ^, BigFraction.java:1137: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                 ^, BigFraction.java:1137: error: '(' expected
	 * This does work for all values except NaN and infinities and does
	                     ^, BigFraction.java:1137: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                ^, BigFraction.java:1137: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                       ^, BigFraction.java:1137: error: not a statement
	 * This does work for all values except NaN and infinities and does
	                                        ^, BigFraction.java:1137: error: ')' expected
	 * This does work for all values except NaN and infinities and does
	                                           ^, BigFraction.java:1137: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                          ^, BigFraction.java:1137: error: variable declaration not allowed here
	 * This does work for all values except NaN and infinities and does
	                                                ^, BigFraction.java:1137: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                                   ^, BigFraction.java:1138: error: ';' expected
	 * not requires any loop or convergence threshold.
	               ^, BigFraction.java:1138: error: ';' expected
	 * not requires any loop or convergence threshold.
	                        ^, BigFraction.java:1138: error: ';' expected
	 * not requires any loop or convergence threshold.
	                                       ^, BigFraction.java:1138: error: <identifier> expected
	 * not requires any loop or convergence threshold.
	                                                  ^, BigFraction.java:1139: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:1140: error: illegal start of expression
	 * <p>
	 ^, BigFraction.java:1141: error: illegal start of expression
	 * Since this conversion is exact and since double numbers are sometimes
	 ^, BigFraction.java:1139: error: not a statement
	 * </p>
	      ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	        ^, BigFraction.java:1141: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	         ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	             ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                           ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                     ^, BigFraction.java:1141: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	                                      ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                           ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                          ^, BigFraction.java:1141: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                                        ^, BigFraction.java:1142: error: not a statement
	 * approximated, the fraction created may seem strange in some cases. For example
	   ^, BigFraction.java:1142: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	               ^, BigFraction.java:1142: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                             ^, BigFraction.java:1142: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                         ^, BigFraction.java:1142: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                      ^, BigFraction.java:1142: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                              ^, BigFraction.java:1142: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                                                 ^, BigFraction.java:1143: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	           ^, BigFraction.java:1143: error: ';' expected
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                 ^, BigFraction.java:1143: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                            ^, BigFraction.java:1143: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                ^, BigFraction.java:1143: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                   ^, BigFraction.java:1144: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	      ^, BigFraction.java:1144: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	       ^, BigFraction.java:1144: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	               ^, BigFraction.java:1144: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                           ^, BigFraction.java:1144: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                            ^, BigFraction.java:1144: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                                    ^, BigFraction.java:1145: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	              ^, BigFraction.java:1145: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                            ^, BigFraction.java:1145: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                      ^, BigFraction.java:1145: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                      ^, BigFraction.java:1145: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                             ^, BigFraction.java:1145: error: not a statement
	 * because the double number passed to the constructor is not exactly 1/3
	                                                              ^, BigFraction.java:1145: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                                     ^, BigFraction.java:1146: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	    ^, BigFraction.java:1146: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	        ^, BigFraction.java:1146: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                      ^, BigFraction.java:1146: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                ^, BigFraction.java:1146: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                           ^, BigFraction.java:1146: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	                                            ^, BigFraction.java:1146: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                                   ^, BigFraction.java:1147: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:1148: error: illegal start of expression
	 *
	 ^, BigFraction.java:1149: error: illegal start of expression
	 * @see #BigFraction(double, double, int)
	 ^, BigFraction.java:1149: error: illegal character: '#'
	 * @see #BigFraction(double, double, int)
	        ^, BigFraction.java:1147: error: not a statement
	 * </p>
	      ^, BigFraction.java:1149: error: ';' expected
	 * @see #BigFraction(double, double, int)
	       ^, BigFraction.java:1149: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                           ^, BigFraction.java:1149: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                   ^, BigFraction.java:1149: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                        ^, BigFraction.java:1150: error: illegal start of expression
	 * @param value
	   ^, BigFraction.java:1151: error: not a statement
	 * 		the double value to convert to a fraction.
	 ^, BigFraction.java:1151: error: ';' expected
	 * 		the double value to convert to a fraction.
	   		   ^]
Ingredient counter is Zero
---Undoing: gnrtn(689): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ONE.compareTo(gcd) < 0) { 	num = num.divide(gcd); 	den = den.divide(gcd); } ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1377(f=2.0), 1378(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1377(f=2.0), )
----------Running generation: 690, population size: 1

***** Generation 690 : 0
**Parent Variant: [Variant id: 1379, #gens: 240, #ops: 0, parent:-]

--Child created id: 1380
--Creating new operations for variant [Variant id: 1380, #gens: 240, #ops: 0, parent:1379]
---analyzing modificationPoint position: 162
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  toAppendTo.append(' ')
---analyzing modificationPoint position: 67
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 77
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 3 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]
---analyzing modificationPoint position: 101
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 6 not mutation generated in  org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...]
---analyzing modificationPoint position: 92
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 7 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 8 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 9 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 10 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 53
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1380, #gens: 239, #ops: 1, parent:1379] gen mutated: 1 , gen not mut: 11, gen not applied  0
-The child compiles: id 1380
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1380/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(690): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1379(f=2.0), 1380(f=2.0), )
Selected to next generation: IDs2--> (1379(f=2.0), )
----------Running generation: 691, population size: 1

***** Generation 691 : 0
**Parent Variant: [Variant id: 1381, #gens: 240, #ops: 0, parent:-]

--Child created id: 1382
--Creating new operations for variant [Variant id: 1382, #gens: 240, #ops: 0, parent:1381]
---analyzing modificationPoint position: 17
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 28
Templates availables3
Attempts Base Ingredients  1 total 3
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator, contracted, best]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: contracted spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: best spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java90
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 90, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1382, #gens: 240, #ops: 1, parent:1381] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1382
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1382/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(691): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1381(f=2.0), 1382(f=2.0), )
Selected to next generation: IDs2--> (1381(f=2.0), )
----------Running generation: 692, population size: 1

***** Generation 692 : 0
**Parent Variant: [Variant id: 1383, #gens: 240, #ops: 0, parent:-]

--Child created id: 1384
--Creating new operations for variant [Variant id: 1384, #gens: 240, #ops: 0, parent:1383]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1384, #gens: 241, #ops: 1, parent:1383] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1384, errors: [MultiDirectional.java:67: error: cannot assign a value to final variable gamma
			incrementIterationsCounter(); 			this.gamma = 0.5;
			                              			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(692): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1383(f=2.0), 1384(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1383(f=2.0), )
----------Running generation: 693, population size: 1

***** Generation 693 : 0
**Parent Variant: [Variant id: 1385, #gens: 240, #ops: 0, parent:-]

--Child created id: 1386
--Creating new operations for variant [Variant id: 1386, #gens: 240, #ops: 0, parent:1385]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 1
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 74
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
vars from patch []
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1386, #gens: 240, #ops: 1, parent:1385] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1386, errors: [FractionFormat.java:190: error: incompatible types: java.util.Locale[] cannot be converted to java.lang.StringBuffer
		} 		return java.text.NumberFormat.getAvailableLocales();
		  		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(693): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1385(f=2.0), 1386(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1385(f=2.0), )
----------Running generation: 694, population size: 1

***** Generation 694 : 0
**Parent Variant: [Variant id: 1387, #gens: 240, #ops: 0, parent:-]

--Child created id: 1388
--Creating new operations for variant [Variant id: 1388, #gens: 240, #ops: 0, parent:1387]
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java96
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger whole = num.divide(den)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 96, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger whole = num.divide(den)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1388, #gens: 241, #ops: 1, parent:1387] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1388, errors: [ProperBigFractionFormat.java:97: error: variable whole is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		java.math.BigInteger whole = num.divide(den); 		java.math.BigInteger whole = num.divide(den);
		                                              		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(694): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger whole = num.divide(den)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1387(f=2.0), 1388(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1387(f=2.0), )
----------Running generation: 695, population size: 1

***** Generation 695 : 0
**Parent Variant: [Variant id: 1389, #gens: 240, #ops: 0, parent:-]

--Child created id: 1390
--Creating new operations for variant [Variant id: 1390, #gens: 240, #ops: 0, parent:1389]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
Attempts Base Ingredients  2 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 63
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 2 not mutation generated in  ret = format(((org.apache.commons.math.fraction.BigFraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1390, #gens: 241, #ops: 1, parent:1389] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1390, errors: [AbstractFormat.java:93: error: non-static variable denominatorFormat cannot be referenced from a static context
		nf.setMaximumFractionDigits(0); 		denominatorFormat = denominatorFormat;
		                                		^, AbstractFormat.java:93: error: non-static variable denominatorFormat cannot be referenced from a static context
		nf.setMaximumFractionDigits(0); 		denominatorFormat = denominatorFormat;
		                                		                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(695): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1389(f=2.0), 1390(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1389(f=2.0), )
----------Running generation: 696, population size: 1

***** Generation 696 : 0
**Parent Variant: [Variant id: 1391, #gens: 240, #ops: 0, parent:-]

--Child created id: 1392
--Creating new operations for variant [Variant id: 1392, #gens: 240, #ops: 0, parent:1391]
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
---modifPoint 0 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 26
location: MultiDirectional.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1392, #gens: 239, #ops: 1, parent:1391] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1392
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1392/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(696): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1391(f=2.0), 1392(f=3.0), )
Selected to next generation: IDs2--> (1391(f=2.0), )
----------Running generation: 697, population size: 1

***** Generation 697 : 0
**Parent Variant: [Variant id: 1393, #gens: 240, #ops: 0, parent:-]

--Child created id: 1394
--Creating new operations for variant [Variant id: 1394, #gens: 240, #ops: 0, parent:1393]
---analyzing modificationPoint position: 85
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 121
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 1 not mutation generated in  evaluations = 0
---analyzing modificationPoint position: 23
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1394, #gens: 241, #ops: 1, parent:1393] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1394, errors: [ProperFractionFormat.java:106: error: variable whole is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		getNumeratorFormat().format(num, toAppendTo, pos); 		int whole = num / den;
		                                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(697): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `int whole = num / den` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1393(f=2.0), 1394(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1393(f=2.0), )
----------Running generation: 698, population size: 1

***** Generation 698 : 0
**Parent Variant: [Variant id: 1395, #gens: 240, #ops: 0, parent:-]

--Child created id: 1396
--Creating new operations for variant [Variant id: 1396, #gens: 240, #ops: 0, parent:1395]
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1396, #gens: 239, #ops: 1, parent:1395] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1396
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1396/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(698): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1395(f=2.0), 1396(f=4.0), )
Selected to next generation: IDs2--> (1395(f=2.0), )
----------Running generation: 699, population size: 1

***** Generation 699 : 0
**Parent Variant: [Variant id: 1397, #gens: 240, #ops: 0, parent:-]

--Child created id: 1398
--Creating new operations for variant [Variant id: 1398, #gens: 240, #ops: 0, parent:1397]
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java47
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 47, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1398, #gens: 241, #ops: 1, parent:1397] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1398, errors: [MultiDirectional.java:56: error: variable khi might already have been assigned
		this.khi = khi; 		this.gamma = 0.5;} 	/**
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(699): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1397(f=2.0), 1398(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1397(f=2.0), )
----------Running generation: 700, population size: 1

***** Generation 700 : 0
**Parent Variant: [Variant id: 1399, #gens: 240, #ops: 0, parent:-]

--Child created id: 1400
--Creating new operations for variant [Variant id: 1400, #gens: 240, #ops: 0, parent:1399]
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1400, #gens: 241, #ops: 1, parent:1399] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1400
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1400/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(700): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1399(f=2.0), 1400(f=2.0), )
Selected to next generation: IDs2--> (1399(f=2.0), )
----------Running generation: 701, population size: 1

***** Generation 701 : 0
**Parent Variant: [Variant id: 1401, #gens: 240, #ops: 0, parent:-]

--Child created id: 1402
--Creating new operations for variant [Variant id: 1402, #gens: 240, #ops: 0, parent:1401]
---analyzing modificationPoint position: 74
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1402, #gens: 240, #ops: 1, parent:1401] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1402
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1402/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(701): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1401(f=2.0), 1402(f=2.0), )
Selected to next generation: IDs2--> (1401(f=2.0), )
----------Running generation: 702, population size: 1

***** Generation 702 : 0
**Parent Variant: [Variant id: 1403, #gens: 240, #ops: 0, parent:-]

--Child created id: 1404
--Creating new operations for variant [Variant id: 1404, #gens: 240, #ops: 0, parent:1403]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 43
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 80
---modifPoint 3 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 4 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 5 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1404, #gens: 241, #ops: 1, parent:1403] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 1404
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1404/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(702): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1403(f=2.0), 1404(f=2.0), )
Selected to next generation: IDs2--> (1403(f=2.0), )
----------Running generation: 703, population size: 1

***** Generation 703 : 0
**Parent Variant: [Variant id: 1405, #gens: 240, #ops: 0, parent:-]

--Child created id: 1406
--Creating new operations for variant [Variant id: 1406, #gens: 240, #ops: 0, parent:1405]
---analyzing modificationPoint position: 144
location: AbstractFormat.java168
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1406, #gens: 239, #ops: 1, parent:1405] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1406, errors: [AbstractFormat.java:170: error: variable c might not have been initialized
			} while (java.lang.Character.isWhitespace(c) && (index < n) );
			                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(703): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `c = source.charAt(index++) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1405(f=2.0), 1406(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1405(f=2.0), )
----------Running generation: 704, population size: 1

***** Generation 704 : 0
**Parent Variant: [Variant id: 1407, #gens: 240, #ops: 0, parent:-]

--Child created id: 1408
--Creating new operations for variant [Variant id: 1408, #gens: 240, #ops: 0, parent:1407]
---analyzing modificationPoint position: 49
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 87
---modifPoint 2 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 162
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  toAppendTo.append(' ')
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 4 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 188
---modifPoint 5 not mutation generated in  // no initial configuration has been set up for simplex // build a default one from a unit hypercube[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 6 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 157
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [this.relativeThreshold, org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD]
--> var from patch: this.relativeThreshold spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD spoon.support.reflect.code.CtFieldReadImpl
location: SimpleScalarValueChecker.java52
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 52, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1408, #gens: 240, #ops: 1, parent:1407] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 1408, errors: [SimpleScalarValueChecker.java:52: error: variable relativeThreshold might already have been assigned
		this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD; 		this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD;
		                                                                                                                   		    ^, SimpleScalarValueChecker.java:54: error: variable absoluteThreshold might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(704): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1407(f=2.0), 1408(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1407(f=2.0), )
----------Running generation: 705, population size: 1

***** Generation 705 : 0
**Parent Variant: [Variant id: 1409, #gens: 240, #ops: 0, parent:-]

--Child created id: 1410
--Creating new operations for variant [Variant id: 1410, #gens: 240, #ops: 0, parent:1409]
---analyzing modificationPoint position: 48
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java96
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 96, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1410, #gens: 240, #ops: 1, parent:1409] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1410, errors: [ProperBigFractionFormat.java:96: error: variable den is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		java.math.BigInteger den = fraction.getDenominator(); 		java.math.BigInteger den = fraction.getDenominator();
		                                                      		                     ^, ProperBigFractionFormat.java:100: error: cannot find symbol
		if (!java.math.BigInteger.ZERO.equals(whole)) {
		                                      ^
  symbol:   variable whole
  location: class org.apache.commons.math.fraction.ProperBigFractionFormat, ProperBigFractionFormat.java:101: error: cannot find symbol
			getWholeFormat().format(whole, toAppendTo, pos);
			                        ^
  symbol:   variable whole
  location: class org.apache.commons.math.fraction.ProperBigFractionFormat]
Ingredient counter is Zero
---Undoing: gnrtn(705): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger whole = num.divide(den) ` -topatch--> `java.math.BigInteger den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1409(f=2.0), 1410(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1409(f=2.0), )
----------Running generation: 706, population size: 1

***** Generation 706 : 0
**Parent Variant: [Variant id: 1411, #gens: 240, #ops: 0, parent:-]

--Child created id: 1412
--Creating new operations for variant [Variant id: 1412, #gens: 240, #ops: 0, parent:1411]
---analyzing modificationPoint position: 137
---modifPoint 0 not mutation generated in  return point
---analyzing modificationPoint position: 220
Templates availables259
Attempts Base Ingredients  1 total 259
---modifPoint 1 not mutation generated in  /* assert u<0 && v<0; */ // B4/B3: cast out twos from t. while ((t & 1) == 0) { 	// while t is even.[...]
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  num = num.negate()
---analyzing modificationPoint position: 97
---modifPoint 3 not mutation generated in  final double v1 = o1.getValue()
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 4 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 25
---modifPoint 5 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 6 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 7 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 83
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 8 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 148
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch []
location: ProperBigFractionFormat.java60
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1412, #gens: 240, #ops: 1, parent:1411] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child does NOT compile: 1412, errors: [ProperBigFractionFormat.java:51: error: recursive constructor invocation
		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		^]
Ingredient counter is Zero
---Undoing: gnrtn(706): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1411(f=2.0), 1412(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1411(f=2.0), )
----------Running generation: 707, population size: 1

***** Generation 707 : 0
**Parent Variant: [Variant id: 1413, #gens: 240, #ops: 0, parent:-]

--Child created id: 1414
--Creating new operations for variant [Variant id: 1414, #gens: 240, #ops: 0, parent:1413]
---analyzing modificationPoint position: 85
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java95
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 95, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1414, #gens: 241, #ops: 1, parent:1413] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1414, errors: [ProperBigFractionFormat.java:96: error: call to this must be first statement in constructor
		java.math.BigInteger den = fraction.getDenominator(); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(707): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1413(f=2.0), 1414(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1413(f=2.0), )
----------Running generation: 708, population size: 1

***** Generation 708 : 0
**Parent Variant: [Variant id: 1415, #gens: 240, #ops: 0, parent:-]

--Child created id: 1416
--Creating new operations for variant [Variant id: 1416, #gens: 240, #ops: 0, parent:1415]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1416, #gens: 241, #ops: 1, parent:1415] gen mutated: 1 , gen not mut: 2, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 1416
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1416/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(708): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1415(f=2.0), 1416(f=2.0), )
Selected to next generation: IDs2--> (1415(f=2.0), )
----------Running generation: 709, population size: 1

***** Generation 709 : 0
**Parent Variant: [Variant id: 1417, #gens: 240, #ops: 0, parent:-]

--Child created id: 1418
--Creating new operations for variant [Variant id: 1418, #gens: 240, #ops: 0, parent:1417]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1418, #gens: 241, #ops: 1, parent:1417] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1418, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable gamma
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		this.gamma = gamma; 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(709): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.gamma = gamma` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1417(f=2.0), 1418(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1417(f=2.0), )
----------Running generation: 710, population size: 1

***** Generation 710 : 0
**Parent Variant: [Variant id: 1419, #gens: 240, #ops: 0, parent:-]

--Child created id: 1420
--Creating new operations for variant [Variant id: 1420, #gens: 240, #ops: 0, parent:1419]
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  num = num.negate()
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1420, #gens: 241, #ops: 1, parent:1419] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1420
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1420/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(710): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1419(f=2.0), 1420(f=2.0), )
Selected to next generation: IDs2--> (1419(f=2.0), )
----------Running generation: 711, population size: 1

***** Generation 711 : 0
**Parent Variant: [Variant id: 1421, #gens: 240, #ops: 0, parent:-]

--Child created id: 1422
--Creating new operations for variant [Variant id: 1422, #gens: 240, #ops: 0, parent:1421]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1422, #gens: 241, #ops: 1, parent:1421] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1422, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat; 		this.denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(711): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1421(f=2.0), 1422(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1421(f=2.0), )
----------Running generation: 712, population size: 1

***** Generation 712 : 0
**Parent Variant: [Variant id: 1423, #gens: 240, #ops: 0, parent:-]

--Child created id: 1424
--Creating new operations for variant [Variant id: 1424, #gens: 240, #ops: 0, parent:1423]
---analyzing modificationPoint position: 15
Templates availables7
Attempts Base Ingredients  1 total 7
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1424, #gens: 241, #ops: 1, parent:1423] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1424
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1424/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(712): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1423(f=2.0), 1424(f=2.0), )
Selected to next generation: IDs2--> (1423(f=2.0), )
----------Running generation: 713, population size: 1

***** Generation 713 : 0
**Parent Variant: [Variant id: 1425, #gens: 240, #ops: 0, parent:-]

--Child created id: 1426
--Creating new operations for variant [Variant id: 1426, #gens: 240, #ops: 0, parent:1425]
---analyzing modificationPoint position: 31
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1426, #gens: 240, #ops: 1, parent:1425] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1426, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable gamma
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		this.gamma = 0.5;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(713): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1425(f=2.0), 1426(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1425(f=2.0), )
----------Running generation: 714, population size: 1

***** Generation 714 : 0
**Parent Variant: [Variant id: 1427, #gens: 240, #ops: 0, parent:-]

--Child created id: 1428
--Creating new operations for variant [Variant id: 1428, #gens: 240, #ops: 0, parent:1427]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 195
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [this.maxEvaluations]
--> var from patch: this.maxEvaluations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java299
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (converged) { 	// we have found an optimum 	return simplex[0]; } ` -topatch--> `this.maxEvaluations = maxEvaluations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 299, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (converged) { 	// we have found an optimum 	return simplex[0]; } ` -topatch--> `this.maxEvaluations = maxEvaluations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1428, #gens: 241, #ops: 1, parent:1427] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1428
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1428/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(714): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (converged) { 	// we have found an optimum 	return simplex[0]; } ` -topatch--> `this.maxEvaluations = maxEvaluations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1427(f=2.0), 1428(f=2.0), )
Selected to next generation: IDs2--> (1427(f=2.0), )
----------Running generation: 715, population size: 1

***** Generation 715 : 0
**Parent Variant: [Variant id: 1429, #gens: 240, #ops: 0, parent:-]

--Child created id: 1430
--Creating new operations for variant [Variant id: 1430, #gens: 240, #ops: 0, parent:1429]
---analyzing modificationPoint position: 199
location: Fraction.java258
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den < 0) { 	if ((num == java.lang.Integer.MIN_VALUE) || (den == java.lang.Integer.MIN_VALUE)) { [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1430, #gens: 239, #ops: 1, parent:1429] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1430
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1430/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(715): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (den < 0) { 	if ((num == java.lang.Integer.MIN_VALUE) || (den == java.lang.Integer.MIN_VALUE)) { [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1429(f=2.0), 1430(f=2.0), )
Selected to next generation: IDs2--> (1429(f=2.0), )
----------Running generation: 716, population size: 1

***** Generation 716 : 0
**Parent Variant: [Variant id: 1431, #gens: 240, #ops: 0, parent:-]

--Child created id: 1432
--Creating new operations for variant [Variant id: 1432, #gens: 240, #ops: 0, parent:1431]
---analyzing modificationPoint position: 112
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  setMaxEvaluations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 213
location: MathUtils.java621
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1432, #gens: 239, #ops: 1, parent:1431] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1432, errors: [MathUtils.java:673: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(716): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `// keep u and v negative, as negative integers range down to // -2^31, while positive numbers can on[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1431(f=2.0), 1432(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1431(f=2.0), )
----------Running generation: 717, population size: 1

***** Generation 717 : 0
**Parent Variant: [Variant id: 1433, #gens: 240, #ops: 0, parent:-]

--Child created id: 1434
--Creating new operations for variant [Variant id: 1434, #gens: 240, #ops: 0, parent:1433]
---analyzing modificationPoint position: 32
location: MultiDirectional.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1434, #gens: 239, #ops: 1, parent:1433] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1434
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1434/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(717): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1433(f=2.0), 1434(f=4.0), )
Selected to next generation: IDs2--> (1433(f=2.0), )
----------Running generation: 718, population size: 1

***** Generation 718 : 0
**Parent Variant: [Variant id: 1435, #gens: 240, #ops: 0, parent:-]

--Child created id: 1436
--Creating new operations for variant [Variant id: 1436, #gens: 240, #ops: 0, parent:1435]
---analyzing modificationPoint position: 51
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 177
location: BigFraction.java177
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1436, #gens: 239, #ops: 1, parent:1435] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1436, errors: [BigFraction.java:182: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(718): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// store the values in the final fields numerator = num ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1435(f=2.0), 1436(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1435(f=2.0), )
----------Running generation: 719, population size: 1

***** Generation 719 : 0
**Parent Variant: [Variant id: 1437, #gens: 240, #ops: 0, parent:-]

--Child created id: 1438
--Creating new operations for variant [Variant id: 1438, #gens: 240, #ops: 0, parent:1437]
---analyzing modificationPoint position: 130
Templates availables11
Attempts Base Ingredients  1 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; }
---analyzing modificationPoint position: 142
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
Attempts Base Ingredients  4 total 12
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1438, #gens: 240, #ops: 1, parent:1437] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1438
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1438/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(719): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1437(f=2.0), 1438(f=2.0), )
Selected to next generation: IDs2--> (1437(f=2.0), )
----------Running generation: 720, population size: 1

***** Generation 720 : 0
**Parent Variant: [Variant id: 1439, #gens: 240, #ops: 0, parent:-]

--Child created id: 1440
--Creating new operations for variant [Variant id: 1440, #gens: 240, #ops: 0, parent:1439]
---analyzing modificationPoint position: 96
location: RealPointValuePair.java63
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1440, #gens: 239, #ops: 1, parent:1439] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1440, errors: [RealPointValuePair.java:65: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point;}
	    	                                                                                               		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(720): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1439(f=2.0), 1440(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1439(f=2.0), )
----------Running generation: 721, population size: 1

***** Generation 721 : 0
**Parent Variant: [Variant id: 1441, #gens: 240, #ops: 0, parent:-]

--Child created id: 1442
--Creating new operations for variant [Variant id: 1442, #gens: 240, #ops: 0, parent:1441]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 40
---modifPoint 1 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 62
---modifPoint 2 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 88
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 3 not mutation generated in  // only the relative position of the n final vertices with respect // to the first one are stored fi[...]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 4 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 30
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1442, #gens: 240, #ops: 1, parent:1441] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 1442, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(721): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1441(f=2.0), 1442(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1441(f=2.0), )
----------Running generation: 722, population size: 1

***** Generation 722 : 0
**Parent Variant: [Variant id: 1443, #gens: 240, #ops: 0, parent:-]

--Child created id: 1444
--Creating new operations for variant [Variant id: 1444, #gens: 240, #ops: 0, parent:1443]
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 210
---modifPoint 1 not mutation generated in  final double difference = java.lang.Math.abs(p - c)
---analyzing modificationPoint position: 37
location: MultiDirectional.java125
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1444, #gens: 239, #ops: 1, parent:1443] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1444
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1444/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(722): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1443(f=2.0), 1444(f=4.0), )
Selected to next generation: IDs2--> (1443(f=2.0), )
----------Running generation: 723, population size: 1

***** Generation 723 : 0
**Parent Variant: [Variant id: 1445, #gens: 240, #ops: 0, parent:-]

--Child created id: 1446
--Creating new operations for variant [Variant id: 1446, #gens: 240, #ops: 0, parent:1445]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 75
---modifPoint 3 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 74
---modifPoint 4 not mutation generated in  return ret
---analyzing modificationPoint position: 25
---modifPoint 5 not mutation generated in  // perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 6 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 32
location: MultiDirectional.java120
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1446, #gens: 239, #ops: 1, parent:1445] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 1446
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1446/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(723): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1445(f=2.0), 1446(f=4.0), )
Selected to next generation: IDs2--> (1445(f=2.0), )
----------Running generation: 724, population size: 1

***** Generation 724 : 0
**Parent Variant: [Variant id: 1447, #gens: 240, #ops: 0, parent:-]

--Child created id: 1448
--Creating new operations for variant [Variant id: 1448, #gens: 240, #ops: 0, parent:1447]
---analyzing modificationPoint position: 142
---modifPoint 0 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 74
---modifPoint 2 not mutation generated in  return ret
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java120
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1448, #gens: 241, #ops: 1, parent:1447] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1448, errors: [FractionFormat.java:121: error: unreachable statement
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getProperInstance(final java.util.Locale locale) { 		return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale)); 		return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(locale));
	    	                                                                                                                 		                                                                                                                                                  		^]
Ingredient counter is Zero
---Undoing: gnrtn(724): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1447(f=2.0), 1448(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1447(f=2.0), )
----------Running generation: 725, population size: 1

***** Generation 725 : 0
**Parent Variant: [Variant id: 1449, #gens: 240, #ops: 0, parent:-]

--Child created id: 1450
--Creating new operations for variant [Variant id: 1450, #gens: 240, #ops: 0, parent:1449]
---analyzing modificationPoint position: 92
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 78
---modifPoint 1 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 126
location: DirectSearchOptimizer.java369
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1450, #gens: 239, #ops: 1, parent:1449] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1450
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1450/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(725): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1449(f=2.0), 1450(f=5.0), )
Selected to next generation: IDs2--> (1449(f=2.0), )
----------Running generation: 726, population size: 1

***** Generation 726 : 0
**Parent Variant: [Variant id: 1451, #gens: 240, #ops: 0, parent:-]

--Child created id: 1452
--Creating new operations for variant [Variant id: 1452, #gens: 240, #ops: 0, parent:1451]
---analyzing modificationPoint position: 141
---modifPoint 0 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 376, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1452, #gens: 241, #ops: 1, parent:1451] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1452, errors: [DirectSearchOptimizer.java:376: error: incompatible types: unexpected return value
			for (int k = 0; k < n; ++k) { 				return iterations;
			                              				       ^]
Ingredient counter is Zero
---Undoing: gnrtn(726): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1451(f=2.0), 1452(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1451(f=2.0), )
----------Running generation: 727, population size: 1

***** Generation 727 : 0
**Parent Variant: [Variant id: 1453, #gens: 240, #ops: 0, parent:-]

--Child created id: 1454
--Creating new operations for variant [Variant id: 1454, #gens: 240, #ops: 0, parent:1453]
---analyzing modificationPoint position: 61
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 14
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
---modifPoint 3 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1454, #gens: 241, #ops: 1, parent:1453] gen mutated: 1 , gen not mut: 4, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 1454
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1454/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(727): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "denominator form[...]` (spoon.support.reflect.code.CtThrowImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1453(f=2.0), 1454(f=2.0), )
Selected to next generation: IDs2--> (1453(f=2.0), )
----------Running generation: 728, population size: 1

***** Generation 728 : 0
**Parent Variant: [Variant id: 1455, #gens: 240, #ops: 0, parent:-]

--Child created id: 1456
--Creating new operations for variant [Variant id: 1456, #gens: 240, #ops: 0, parent:1455]
---analyzing modificationPoint position: 105
Templates availables14
Attempts Base Ingredients  1 total 14
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]
---analyzing modificationPoint position: 95
location: RealPointValuePair.java62
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1456, #gens: 239, #ops: 1, parent:1455] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1456, errors: [RealPointValuePair.java:65: error: variable point might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.value = value;}
	    	                                                                                               		                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(728): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = (copyArray) ? point.clone() : point ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1455(f=2.0), 1456(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1455(f=2.0), )
----------Running generation: 729, population size: 1

***** Generation 729 : 0
**Parent Variant: [Variant id: 1457, #gens: 240, #ops: 0, parent:-]

--Child created id: 1458
--Creating new operations for variant [Variant id: 1458, #gens: 240, #ops: 0, parent:1457]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 130
Templates availables11
Attempts Base Ingredients  1 total 11
Name Conflict [n, startConfiguration, steps]
---modifPoint 1 not mutation generated in  for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; }
---analyzing modificationPoint position: 55
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1458, #gens: 240, #ops: 1, parent:1457] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1458
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1458/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(729): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1457(f=2.0), 1458(f=2.0), )
Selected to next generation: IDs2--> (1457(f=2.0), )
----------Running generation: 730, population size: 1

***** Generation 730 : 0
**Parent Variant: [Variant id: 1459, #gens: 240, #ops: 0, parent:-]

--Child created id: 1460
--Creating new operations for variant [Variant id: 1460, #gens: 240, #ops: 0, parent:1459]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 98
Templates availables2
Attempts Base Ingredients  1 total 2
vars from patch [o2]
--> var from patch: o2 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java279
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 279, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1460, #gens: 240, #ops: 1, parent:1459] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1460
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1460/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(730): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v2 = o2.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1459(f=2.0), 1460(f=2.0), )
Selected to next generation: IDs2--> (1459(f=2.0), )
----------Running generation: 731, population size: 1

***** Generation 731 : 0
**Parent Variant: [Variant id: 1461, #gens: 240, #ops: 0, parent:-]

--Child created id: 1462
--Creating new operations for variant [Variant id: 1462, #gens: 240, #ops: 0, parent:1461]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  simplex[0] = original[0]
---analyzing modificationPoint position: 85
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  return numerator
---analyzing modificationPoint position: 139
location: AbstractFormat.java150
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1462, #gens: 239, #ops: 1, parent:1461] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1462
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1462/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(731): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(pos.getIndex() - 1) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1461(f=2.0), 1462(f=2.0), )
Selected to next generation: IDs2--> (1461(f=2.0), )
----------Running generation: 732, population size: 1

***** Generation 732 : 0
**Parent Variant: [Variant id: 1463, #gens: 240, #ops: 0, parent:-]

--Child created id: 1464
--Creating new operations for variant [Variant id: 1464, #gens: 240, #ops: 0, parent:1463]
---analyzing modificationPoint position: 91
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java145
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `final double[] vertexI = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 145, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `final double[] vertexI = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1464, #gens: 240, #ops: 1, parent:1463] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1464, errors: [DirectSearchOptimizer.java:410: error: illegal start of type
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:410: error: ';' expected
	 * Increment the iterations counter by 1.
	                ^, DirectSearchOptimizer.java:410: error: ';' expected
	 * Increment the iterations counter by 1.
	                                   ^, DirectSearchOptimizer.java:410: error: <identifier> expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:412: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:413: error: ';' expected
	 * 		if the maximal number
	   		              ^, DirectSearchOptimizer.java:413: error: <identifier> expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:414: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:414: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^, DirectSearchOptimizer.java:460: error: illegal start of expression
	 * Replace the worst point of the simplex by a new point.
	 ^, DirectSearchOptimizer.java:460: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	          ^, DirectSearchOptimizer.java:460: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                    ^, DirectSearchOptimizer.java:460: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                             ^, DirectSearchOptimizer.java:460: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                         ^, DirectSearchOptimizer.java:460: error: ';' expected
	 * Replace the worst point of the simplex by a new point.
	                                              ^, DirectSearchOptimizer.java:460: error: <identifier> expected
	 * Replace the worst point of the simplex by a new point.
	                                                         ^, DirectSearchOptimizer.java:461: error: '(' or '[' expected
	 *
	 ^, DirectSearchOptimizer.java:462: error: illegal start of expression
	 * @param pointValuePair
	 ^, DirectSearchOptimizer.java:462: error: illegal start of expression
	 * @param pointValuePair
	   ^, DirectSearchOptimizer.java:463: error: not a statement
	 * 		point to insert
	 ^, DirectSearchOptimizer.java:463: error: ';' expected
	 * 		point to insert
	   		     ^, DirectSearchOptimizer.java:463: error: ';' expected
	 * 		point to insert
	   		               ^, DirectSearchOptimizer.java:464: error: <identifier> expected
	 * @param comparator
	                    ^, DirectSearchOptimizer.java:465: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		             ^, DirectSearchOptimizer.java:465: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                    ^, DirectSearchOptimizer.java:465: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                 ^, DirectSearchOptimizer.java:465: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                               ^, DirectSearchOptimizer.java:465: error: ';' expected
	 * 		comparator to use to sort simplex vertices from best to worst
	   		                                                       ^, DirectSearchOptimizer.java:466: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	  ^, DirectSearchOptimizer.java:466: error: illegal start of expression
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) { 			if (comparator.compare(simplex[i], pointValuePair) > 0) { 				org.apache.commons.math.optimization.RealPointValuePair tmp = simplex[i]; 				simplex[i] = pointValuePair; 				pointValuePair = tmp;}} 		simplex[n] = pointValuePair;}}
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(732): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `final double[] vertexI = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1463(f=2.0), 1464(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1463(f=2.0), )
----------Running generation: 733, population size: 1

***** Generation 733 : 0
**Parent Variant: [Variant id: 1465, #gens: 240, #ops: 0, parent:-]

--Child created id: 1466
--Creating new operations for variant [Variant id: 1466, #gens: 240, #ops: 0, parent:1465]
---analyzing modificationPoint position: 103
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch []
location: DirectSearchOptimizer.java306
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 306, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1466, #gens: 240, #ops: 1, parent:1465] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1466
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1466/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(733): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1465(f=2.0), 1466(f=4.0), )
Selected to next generation: IDs2--> (1465(f=2.0), )
----------Running generation: 734, population size: 1

***** Generation 734 : 0
**Parent Variant: [Variant id: 1467, #gens: 240, #ops: 0, parent:-]

--Child created id: 1468
--Creating new operations for variant [Variant id: 1468, #gens: 240, #ops: 0, parent:1467]
---analyzing modificationPoint position: 18
location: FractionFormat.java233
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1468, #gens: 239, #ops: 1, parent:1467] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1468
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1468/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(734): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1467(f=2.0), 1468(f=2.0), )
Selected to next generation: IDs2--> (1467(f=2.0), )
----------Running generation: 735, population size: 1

***** Generation 735 : 0
**Parent Variant: [Variant id: 1469, #gens: 240, #ops: 0, parent:-]

--Child created id: 1470
--Creating new operations for variant [Variant id: 1470, #gens: 240, #ops: 0, parent:1469]
---analyzing modificationPoint position: 190
location: DirectSearchOptimizer.java270
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStartConfiguration(unit) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1470, #gens: 239, #ops: 1, parent:1469] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1470
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1470/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(735): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStartConfiguration(unit) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1469(f=2.0), 1470(f=4.0), )
Selected to next generation: IDs2--> (1469(f=2.0), )
----------Running generation: 736, population size: 1

***** Generation 736 : 0
**Parent Variant: [Variant id: 1471, #gens: 240, #ops: 0, parent:-]

--Child created id: 1472
--Creating new operations for variant [Variant id: 1472, #gens: 240, #ops: 0, parent:1471]
---analyzing modificationPoint position: 19
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1472, #gens: 239, #ops: 1, parent:1471] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1472
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1472/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(736): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1471(f=2.0), 1472(f=2.0), )
Selected to next generation: IDs2--> (1471(f=2.0), )
----------Running generation: 737, population size: 1

***** Generation 737 : 0
**Parent Variant: [Variant id: 1473, #gens: 240, #ops: 0, parent:-]

--Child created id: 1474
--Creating new operations for variant [Variant id: 1474, #gens: 240, #ops: 0, parent:1473]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 166
---modifPoint 1 not mutation generated in  // compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...]
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java175
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 175, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1474, #gens: 241, #ops: 1, parent:1473] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1474, errors: [FractionFormat.java:192: error: unreachable statement
		return ret; 		return ret;
		            		^]
Ingredient counter is Zero
---Undoing: gnrtn(737): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1473(f=2.0), 1474(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1473(f=2.0), )
----------Running generation: 738, population size: 1

***** Generation 738 : 0
**Parent Variant: [Variant id: 1475, #gens: 240, #ops: 0, parent:-]

--Child created id: 1476
--Creating new operations for variant [Variant id: 1476, #gens: 240, #ops: 0, parent:1475]
---analyzing modificationPoint position: 35
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
---modifPoint 0 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 116
location: DirectSearchOptimizer.java250
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1476, #gens: 239, #ops: 1, parent:1475] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1476
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1476/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(738): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1475(f=2.0), 1476(f=4.0), )
Selected to next generation: IDs2--> (1475(f=2.0), )
----------Running generation: 739, population size: 1

***** Generation 739 : 0
**Parent Variant: [Variant id: 1477, #gens: 240, #ops: 0, parent:-]

--Child created id: 1478
--Creating new operations for variant [Variant id: 1478, #gens: 240, #ops: 0, parent:1477]
---analyzing modificationPoint position: 60
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 108, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1478, #gens: 240, #ops: 1, parent:1477] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1478
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1478/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(739): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1477(f=2.0), 1478(f=2.0), )
Selected to next generation: IDs2--> (1477(f=2.0), )
----------Running generation: 740, population size: 1

***** Generation 740 : 0
**Parent Variant: [Variant id: 1479, #gens: 240, #ops: 0, parent:-]

--Child created id: 1480
--Creating new operations for variant [Variant id: 1480, #gens: 240, #ops: 0, parent:1479]
---analyzing modificationPoint position: 69
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [parsePosition, source]
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java206
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1480, #gens: 240, #ops: 1, parent:1479] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1480
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1480/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(740): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1479(f=2.0), 1480(f=2.0), )
Selected to next generation: IDs2--> (1479(f=2.0), )
----------Running generation: 741, population size: 1

***** Generation 741 : 0
**Parent Variant: [Variant id: 1481, #gens: 240, #ops: 0, parent:-]

--Child created id: 1482
--Creating new operations for variant [Variant id: 1482, #gens: 240, #ops: 0, parent:1481]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 43
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1482, #gens: 239, #ops: 1, parent:1481] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1482
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1482/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(741): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1481(f=2.0), 1482(f=2.0), )
Selected to next generation: IDs2--> (1481(f=2.0), )
----------Running generation: 742, population size: 1

***** Generation 742 : 0
**Parent Variant: [Variant id: 1483, #gens: 240, #ops: 0, parent:-]

--Child created id: 1484
--Creating new operations for variant [Variant id: 1484, #gens: 240, #ops: 0, parent:1483]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 16
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1484, #gens: 239, #ops: 1, parent:1483] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1484
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1484/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(742): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1483(f=2.0), 1484(f=2.0), )
Selected to next generation: IDs2--> (1483(f=2.0), )
----------Running generation: 743, population size: 1

***** Generation 743 : 0
**Parent Variant: [Variant id: 1485, #gens: 240, #ops: 0, parent:-]

--Child created id: 1486
--Creating new operations for variant [Variant id: 1486, #gens: 240, #ops: 0, parent:1485]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java206
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1486, #gens: 241, #ops: 1, parent:1485] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1486, errors: [FractionFormat.java:206: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		if (parsePosition.getIndex() == 0) { 			return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefault());
		                                     			                                                                          ^]
Ingredient counter is Zero
---Undoing: gnrtn(743): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getImproperInstance(java.util.Locale.getDefau[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1485(f=2.0), 1486(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1485(f=2.0), )
----------Running generation: 744, population size: 1

***** Generation 744 : 0
**Parent Variant: [Variant id: 1487, #gens: 240, #ops: 0, parent:-]

--Child created id: 1488
--Creating new operations for variant [Variant id: 1488, #gens: 240, #ops: 0, parent:1487]
---analyzing modificationPoint position: 42
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 47
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1488, #gens: 240, #ops: 1, parent:1487] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1488, errors: [FractionFormat.java:104: error: incompatible types: java.util.Locale[] cannot be converted to org.apache.commons.math.fraction.FractionFormat
	 */ 	public static org.apache.commons.math.fraction.FractionFormat getImproperInstance(final java.util.Locale locale) { 		return java.text.NumberFormat.getAvailableLocales();
	    	                                                                                                                   		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(744): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return java.text.NumberFormat.getAvailableLocales()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1487(f=2.0), 1488(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1487(f=2.0), )
----------Running generation: 745, population size: 1

***** Generation 745 : 0
**Parent Variant: [Variant id: 1489, #gens: 240, #ops: 0, parent:-]

--Child created id: 1490
--Creating new operations for variant [Variant id: 1490, #gens: 240, #ops: 0, parent:1489]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 82
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 142
---modifPoint 2 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 79
location: FractionFormat.java205
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1490, #gens: 239, #ops: 1, parent:1489] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1490
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1490/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(745): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1489(f=2.0), 1490(f=2.0), )
Selected to next generation: IDs2--> (1489(f=2.0), )
----------Running generation: 746, population size: 1

***** Generation 746 : 0
**Parent Variant: [Variant id: 1491, #gens: 240, #ops: 0, parent:-]

--Child created id: 1492
--Creating new operations for variant [Variant id: 1492, #gens: 240, #ops: 0, parent:1491]
---analyzing modificationPoint position: 185
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java86
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 86, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1492, #gens: 241, #ops: 1, parent:1491] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1492, errors: [RealPointValuePair.java:87: error: cannot assign a value to final variable value
	 */ 	public double getValue() { 		value = value; 		return value;
	    	                           		^]
Ingredient counter is Zero
---Undoing: gnrtn(746): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1491(f=2.0), 1492(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1491(f=2.0), )
----------Running generation: 747, population size: 1

***** Generation 747 : 0
**Parent Variant: [Variant id: 1493, #gens: 240, #ops: 0, parent:-]

--Child created id: 1494
--Creating new operations for variant [Variant id: 1494, #gens: 240, #ops: 0, parent:1493]
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1494, #gens: 241, #ops: 1, parent:1493] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1494
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1494/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(747): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1493(f=2.0), 1494(f=2.0), )
Selected to next generation: IDs2--> (1493(f=2.0), )
----------Running generation: 748, population size: 1

***** Generation 748 : 0
**Parent Variant: [Variant id: 1495, #gens: 240, #ops: 0, parent:-]

--Child created id: 1496
--Creating new operations for variant [Variant id: 1496, #gens: 240, #ops: 0, parent:1495]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1496, #gens: 241, #ops: 1, parent:1495] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1496
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1496/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(748): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1495(f=2.0), 1496(f=2.0), )
Selected to next generation: IDs2--> (1495(f=2.0), )
----------Running generation: 749, population size: 1

***** Generation 749 : 0
**Parent Variant: [Variant id: 1497, #gens: 240, #ops: 0, parent:-]

--Child created id: 1498
--Creating new operations for variant [Variant id: 1498, #gens: 240, #ops: 0, parent:1497]
---analyzing modificationPoint position: 49
---modifPoint 0 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 36
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java124
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 124, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1498, #gens: 241, #ops: 1, parent:1497] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1498, errors: [MultiDirectional.java:127: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
			} 			final double[] xSmallest = original[0].getPointRef();
			  			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(749): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1497(f=2.0), 1498(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1497(f=2.0), )
----------Running generation: 750, population size: 1

***** Generation 750 : 0
**Parent Variant: [Variant id: 1499, #gens: 240, #ops: 0, parent:-]

--Child created id: 1500
--Creating new operations for variant [Variant id: 1500, #gens: 240, #ops: 0, parent:1499]
---analyzing modificationPoint position: 166
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java77
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 77, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1500, #gens: 241, #ops: 1, parent:1499] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1500, errors: [MultiDirectional.java:75: error: cannot assign a value to final variable khi
			if (comparator.compare(reflected, best) < 0) { 				this.khi = khi;
			                                               				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(750): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the expanded simplex final org.apache.commons.math.optimization.RealPointValuePair[] refl[...] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1499(f=2.0), 1500(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1499(f=2.0), )
----------Running generation: 751, population size: 1

***** Generation 751 : 0
**Parent Variant: [Variant id: 1501, #gens: 240, #ops: 0, parent:-]

--Child created id: 1502
--Creating new operations for variant [Variant id: 1502, #gens: 240, #ops: 0, parent:1501]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 57
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 140
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 69
Templates availables3
Attempts Base Ingredients  1 total 3
---modifPoint 4 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 78
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 5 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 40
---modifPoint 6 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 170
---modifPoint 7 not mutation generated in  return
---analyzing modificationPoint position: 91
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 8 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 9 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 22
location: MultiDirectional.java66
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1502, #gens: 239, #ops: 1, parent:1501] gen mutated: 1 , gen not mut: 10, gen not applied  0
-The child compiles: id 1502
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1502/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(751): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1501(f=2.0), 1502(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1501(f=2.0), )
----------Running generation: 752, population size: 1

***** Generation 752 : 0
**Parent Variant: [Variant id: 1503, #gens: 240, #ops: 0, parent:-]

--Child created id: 1504
--Creating new operations for variant [Variant id: 1504, #gens: 240, #ops: 0, parent:1503]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 141
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 1 not mutation generated in  final int n = source.length()
---analyzing modificationPoint position: 143
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java165
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...] ` -topatch--> `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 165, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...] ` -topatch--> `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1504, #gens: 241, #ops: 1, parent:1503] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1504
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1504/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(752): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...] ` -topatch--> `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1503(f=2.0), 1504(f=2.0), )
Selected to next generation: IDs2--> (1503(f=2.0), )
----------Running generation: 753, population size: 1

***** Generation 753 : 0
**Parent Variant: [Variant id: 1505, #gens: 240, #ops: 0, parent:-]

--Child created id: 1506
--Creating new operations for variant [Variant id: 1506, #gens: 240, #ops: 0, parent:1505]
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 132
location: DirectSearchOptimizer.java378
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1506, #gens: 239, #ops: 1, parent:1505] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1506
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1506/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(753): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i + 1] = new org.apache.commons.math.optimization.RealPointValuePair(vertexI, java.lang.Doub[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1505(f=2.0), 1506(f=4.0), )
Selected to next generation: IDs2--> (1505(f=2.0), )
----------Running generation: 754, population size: 1

***** Generation 754 : 0
**Parent Variant: [Variant id: 1507, #gens: 240, #ops: 0, parent:-]

--Child created id: 1508
--Creating new operations for variant [Variant id: 1508, #gens: 240, #ops: 0, parent:1507]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 40
---modifPoint 2 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [parsePosition, source]
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java206
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 206, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1508, #gens: 241, #ops: 1, parent:1507] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1508, errors: [FractionFormat.java:209: error: unreachable statement
			"unparseable fraction number: \"{0}\"", source); 			if (parsePosition.getIndex() == 0) { 				throw org.apache.commons.math.MathRuntimeException.createParseException(parsePosition.getErrorIndex(), "unparseable fraction number: \"{0}\"", source);
			                                                 			^]
Ingredient counter is Zero
---Undoing: gnrtn(754): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1507(f=2.0), 1508(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1507(f=2.0), )
----------Running generation: 755, population size: 1

***** Generation 755 : 0
**Parent Variant: [Variant id: 1509, #gens: 240, #ops: 0, parent:-]

--Child created id: 1510
--Creating new operations for variant [Variant id: 1510, #gens: 240, #ops: 0, parent:1509]
---analyzing modificationPoint position: 147
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 145
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [c, source, index]
--> var from patch: c spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: index spoon.support.reflect.code.CtVariableWriteImpl
location: AbstractFormat.java170
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 170, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1510, #gens: 241, #ops: 1, parent:1509] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1510
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1510/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(755): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1509(f=2.0), 1510(f=2.0), )
Selected to next generation: IDs2--> (1509(f=2.0), )
----------Running generation: 756, population size: 1

***** Generation 756 : 0
**Parent Variant: [Variant id: 1511, #gens: 240, #ops: 0, parent:-]

--Child created id: 1512
--Creating new operations for variant [Variant id: 1512, #gens: 240, #ops: 0, parent:1511]
---analyzing modificationPoint position: 83
location: FractionFormat.java229
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1512, #gens: 239, #ops: 1, parent:1511] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1512
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1512/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(756): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1511(f=2.0), 1512(f=2.0), )
Selected to next generation: IDs2--> (1511(f=2.0), )
----------Running generation: 757, population size: 1

***** Generation 757 : 0
**Parent Variant: [Variant id: 1513, #gens: 240, #ops: 0, parent:-]

--Child created id: 1514
--Creating new operations for variant [Variant id: 1514, #gens: 240, #ops: 0, parent:1513]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 51
---modifPoint 1 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 3 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 38
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java127
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 127, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1514, #gens: 240, #ops: 1, parent:1513] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1514, errors: [MultiDirectional.java:127: error: cannot assign a value to final variable khi
			} 			this.khi = 2.0;
			  			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(757): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `this.khi = 2.0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1513(f=2.0), 1514(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1513(f=2.0), )
----------Running generation: 758, population size: 1

***** Generation 758 : 0
**Parent Variant: [Variant id: 1515, #gens: 240, #ops: 0, parent:-]

--Child created id: 1516
--Creating new operations for variant [Variant id: 1516, #gens: 240, #ops: 0, parent:1515]
---analyzing modificationPoint position: 11
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 17
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 23
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 3 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 34
---modifPoint 5 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 21
location: MultiDirectional.java47
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1516, #gens: 239, #ops: 1, parent:1515] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 1516, errors: [MultiDirectional.java:49: error: variable gamma might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(758): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.gamma = 0.5 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1515(f=2.0), 1516(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1515(f=2.0), )
----------Running generation: 759, population size: 1

***** Generation 759 : 0
**Parent Variant: [Variant id: 1517, #gens: 240, #ops: 0, parent:-]

--Child created id: 1518
--Creating new operations for variant [Variant id: 1518, #gens: 240, #ops: 0, parent:1517]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 107, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1518, #gens: 241, #ops: 1, parent:1517] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1518, errors: [ProperFractionFormat.java:109: error: variable den is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		pos); 		int den = fraction.getDenominator();
		      		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(759): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `int den = fraction.getDenominator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1517(f=2.0), 1518(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1517(f=2.0), )
----------Running generation: 760, population size: 1

***** Generation 760 : 0
**Parent Variant: [Variant id: 1519, #gens: 240, #ops: 0, parent:-]

--Child created id: 1520
--Creating new operations for variant [Variant id: 1520, #gens: 240, #ops: 0, parent:1519]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1520, #gens: 241, #ops: 1, parent:1519] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1520
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1520/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(760): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1519(f=2.0), 1520(f=2.0), )
Selected to next generation: IDs2--> (1519(f=2.0), )
----------Running generation: 761, population size: 1

***** Generation 761 : 0
**Parent Variant: [Variant id: 1521, #gens: 240, #ops: 0, parent:-]

--Child created id: 1522
--Creating new operations for variant [Variant id: 1522, #gens: 240, #ops: 0, parent:1521]
---analyzing modificationPoint position: 110
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java117
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 117, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1522, #gens: 240, #ops: 1, parent:1521] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1522
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1522/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(761): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1521(f=2.0), 1522(f=2.0), )
Selected to next generation: IDs2--> (1521(f=2.0), )
----------Running generation: 762, population size: 1

***** Generation 762 : 0
**Parent Variant: [Variant id: 1523, #gens: 240, #ops: 0, parent:-]

--Child created id: 1524
--Creating new operations for variant [Variant id: 1524, #gens: 240, #ops: 0, parent:1523]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1524, #gens: 239, #ops: 1, parent:1523] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1524
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1524/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(762): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1523(f=2.0), 1524(f=2.0), )
Selected to next generation: IDs2--> (1523(f=2.0), )
----------Running generation: 763, population size: 1

***** Generation 763 : 0
**Parent Variant: [Variant id: 1525, #gens: 240, #ops: 0, parent:-]

--Child created id: 1526
--Creating new operations for variant [Variant id: 1526, #gens: 240, #ops: 0, parent:1525]
---analyzing modificationPoint position: 168
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...]
---analyzing modificationPoint position: 28
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtIfImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]
---analyzing modificationPoint position: 94
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1)
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
---modifPoint 3 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 49
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [num]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java96
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int den = fraction.getDenominator() ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 96, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int den = fraction.getDenominator() ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1526, #gens: 241, #ops: 1, parent:1525] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1526
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1526/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(763): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int den = fraction.getDenominator() ` -topatch--> `num = java.lang.Math.abs(num)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1525(f=2.0), 1526(f=2.0), )
Selected to next generation: IDs2--> (1525(f=2.0), )
----------Running generation: 764, population size: 1

***** Generation 764 : 0
**Parent Variant: [Variant id: 1527, #gens: 240, #ops: 0, parent:-]

--Child created id: 1528
--Creating new operations for variant [Variant id: 1528, #gens: 240, #ops: 0, parent:1527]
---analyzing modificationPoint position: 123
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 168
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 79, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1528, #gens: 241, #ops: 1, parent:1527] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1528, errors: [MultiDirectional.java:79: error: cannot assign a value to final variable gamma
				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator); 				this.gamma = 0.5;
				                                                                                                                        				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(764): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1527(f=2.0), 1528(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1527(f=2.0), )
----------Running generation: 765, population size: 1

***** Generation 765 : 0
**Parent Variant: [Variant id: 1529, #gens: 240, #ops: 0, parent:-]

--Child created id: 1530
--Creating new operations for variant [Variant id: 1530, #gens: 240, #ops: 0, parent:1529]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 153
Templates availables47
Attempts Base Ingredients  1 total 47
Attempts Base Ingredients  2 total 47
---modifPoint 2 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 7
---modifPoint 3 not mutation generated in  return nf
---analyzing modificationPoint position: 34
---modifPoint 4 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 104
location: DirectSearchOptimizer.java307
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1530, #gens: 239, #ops: 1, parent:1529] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1530
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1530/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(765): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1529(f=2.0), 1530(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1529(f=2.0), )
----------Running generation: 766, population size: 1

***** Generation 766 : 0
**Parent Variant: [Variant id: 1531, #gens: 240, #ops: 0, parent:-]

--Child created id: 1532
--Creating new operations for variant [Variant id: 1532, #gens: 240, #ops: 0, parent:1531]
---analyzing modificationPoint position: 33
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java121
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 121, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1532, #gens: 241, #ops: 1, parent:1531] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1532
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1532/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(766): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 1; i <= n; ++i) { 	final double[] xOriginal = original[i].getPointRef(); 	final double[[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1531(f=2.0), 1532(f=4.0), )
Selected to next generation: IDs2--> (1531(f=2.0), )
----------Running generation: 767, population size: 1

***** Generation 767 : 0
**Parent Variant: [Variant id: 1533, #gens: 240, #ops: 0, parent:-]

--Child created id: 1534
--Creating new operations for variant [Variant id: 1534, #gens: 240, #ops: 0, parent:1533]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 87
---modifPoint 1 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 17
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java91
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1534, #gens: 240, #ops: 1, parent:1533] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1534
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1534/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(767): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1533(f=2.0), 1534(f=2.0), )
Selected to next generation: IDs2--> (1533(f=2.0), )
----------Running generation: 768, population size: 1

***** Generation 768 : 0
**Parent Variant: [Variant id: 1535, #gens: 240, #ops: 0, parent:-]

--Child created id: 1536
--Creating new operations for variant [Variant id: 1536, #gens: 240, #ops: 0, parent:1535]
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
Attempts Base Ingredients  2 total 47
vars from patch []
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 92, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1536, #gens: 241, #ops: 1, parent:1535] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1536, errors: [ProperBigFractionFormat.java:257: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:260: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:260: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:260: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:262: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:263: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:263: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:263: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:264: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:265: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:265: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:265: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:265: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:266: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:266: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:266: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:267: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:267: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:267: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:267: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:267: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:267: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(768): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1535(f=2.0), 1536(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1535(f=2.0), )
----------Running generation: 769, population size: 1

***** Generation 769 : 0
**Parent Variant: [Variant id: 1537, #gens: 240, #ops: 0, parent:-]

--Child created id: 1538
--Creating new operations for variant [Variant id: 1538, #gens: 240, #ops: 0, parent:1537]
---analyzing modificationPoint position: 59
location: ProperFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1538, #gens: 239, #ops: 1, parent:1537] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1538
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1538/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(769): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo,  pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1537(f=2.0), 1538(f=2.0), )
Selected to next generation: IDs2--> (1537(f=2.0), )
----------Running generation: 770, population size: 1

***** Generation 770 : 0
**Parent Variant: [Variant id: 1539, #gens: 240, #ops: 0, parent:-]

--Child created id: 1540
--Creating new operations for variant [Variant id: 1540, #gens: 240, #ops: 0, parent:1539]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1540, #gens: 241, #ops: 1, parent:1539] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1540, errors: [AbstractFormat.java:94: error: unreachable statement
		nf.setParseIntegerOnly(true);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(770): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1539(f=2.0), 1540(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1539(f=2.0), )
----------Running generation: 771, population size: 1

***** Generation 771 : 0
**Parent Variant: [Variant id: 1541, #gens: 240, #ops: 0, parent:-]

--Child created id: 1542
--Creating new operations for variant [Variant id: 1542, #gens: 240, #ops: 0, parent:1541]
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 72
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1542, #gens: 239, #ops: 1, parent:1541] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1542
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1542/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(771): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1541(f=2.0), 1542(f=2.0), )
Selected to next generation: IDs2--> (1541(f=2.0), )
----------Running generation: 772, population size: 1

***** Generation 772 : 0
**Parent Variant: [Variant id: 1543, #gens: 240, #ops: 0, parent:-]

--Child created id: 1544
--Creating new operations for variant [Variant id: 1544, #gens: 240, #ops: 0, parent:1543]
---analyzing modificationPoint position: 152
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 57
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1544, #gens: 239, #ops: 1, parent:1543] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1544
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1544/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(772): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1543(f=2.0), 1544(f=2.0), )
Selected to next generation: IDs2--> (1543(f=2.0), )
----------Running generation: 773, population size: 1

***** Generation 773 : 0
**Parent Variant: [Variant id: 1545, #gens: 240, #ops: 0, parent:-]

--Child created id: 1546
--Creating new operations for variant [Variant id: 1546, #gens: 240, #ops: 0, parent:1545]
---analyzing modificationPoint position: 22
location: MultiDirectional.java66
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1546, #gens: 239, #ops: 1, parent:1545] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1546
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1546/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(773): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1545(f=2.0), 1546(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1545(f=2.0), )
----------Running generation: 774, population size: 1

***** Generation 774 : 0
**Parent Variant: [Variant id: 1547, #gens: 240, #ops: 0, parent:-]

--Child created id: 1548
--Creating new operations for variant [Variant id: 1548, #gens: 240, #ops: 0, parent:1547]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 75, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1548, #gens: 240, #ops: 1, parent:1547] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1548
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1548/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(774): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1547(f=2.0), 1548(f=2.0), )
Selected to next generation: IDs2--> (1547(f=2.0), )
----------Running generation: 775, population size: 1

***** Generation 775 : 0
**Parent Variant: [Variant id: 1549, #gens: 240, #ops: 0, parent:-]

--Child created id: 1550
--Creating new operations for variant [Variant id: 1550, #gens: 240, #ops: 0, parent:1549]
---analyzing modificationPoint position: 10
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 102
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 1 not mutation generated in  if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...]
---analyzing modificationPoint position: 19
---modifPoint 2 not mutation generated in  return null
---analyzing modificationPoint position: 108
location: DirectSearchOptimizer.java396
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1550, #gens: 239, #ops: 1, parent:1549] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1550
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1550/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(775): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1549(f=2.0), 1550(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1549(f=2.0), )
----------Running generation: 776, population size: 1

***** Generation 776 : 0
**Parent Variant: [Variant id: 1551, #gens: 240, #ops: 0, parent:-]

--Child created id: 1552
--Creating new operations for variant [Variant id: 1552, #gens: 240, #ops: 0, parent:1551]
---analyzing modificationPoint position: 61
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1552, #gens: 240, #ops: 1, parent:1551] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1552, errors: [ProperBigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:250: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:250: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:251: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:252: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:252: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:253: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:253: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:254: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:254: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:254: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:254: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:254: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(776): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1551(f=2.0), 1552(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1551(f=2.0), )
----------Running generation: 777, population size: 1

***** Generation 777 : 0
**Parent Variant: [Variant id: 1553, #gens: 240, #ops: 0, parent:-]

--Child created id: 1554
--Creating new operations for variant [Variant id: 1554, #gens: 240, #ops: 0, parent:1553]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 123
---modifPoint 1 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java175
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 175, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1554, #gens: 241, #ops: 1, parent:1553] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1554, errors: [FractionFormat.java:174: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to java.lang.StringBuffer
	 */ 	@java.lang.Override 	public java.lang.StringBuffer format(final java.lang.Object obj, final java.lang.StringBuffer toAppendTo, final java.text.FieldPosition pos) { 		java.lang.StringBuffer ret = null; 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
	    	                    	                                                                                                                                               		                                   		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(777): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1553(f=2.0), 1554(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1553(f=2.0), )
----------Running generation: 778, population size: 1

***** Generation 778 : 0
**Parent Variant: [Variant id: 1555, #gens: 240, #ops: 0, parent:-]

--Child created id: 1556
--Creating new operations for variant [Variant id: 1556, #gens: 240, #ops: 0, parent:1555]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1556, #gens: 241, #ops: 1, parent:1555] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1556
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1556/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(778): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1555(f=2.0), 1556(f=2.0), )
Selected to next generation: IDs2--> (1555(f=2.0), )
----------Running generation: 779, population size: 1

***** Generation 779 : 0
**Parent Variant: [Variant id: 1557, #gens: 240, #ops: 0, parent:-]

--Child created id: 1558
--Creating new operations for variant [Variant id: 1558, #gens: 240, #ops: 0, parent:1557]
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java149
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 149, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1558, #gens: 241, #ops: 1, parent:1557] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1558
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1558/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(779): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1557(f=2.0), 1558(f=2.0), )
Selected to next generation: IDs2--> (1557(f=2.0), )
----------Running generation: 780, population size: 1

***** Generation 780 : 0
**Parent Variant: [Variant id: 1559, #gens: 240, #ops: 0, parent:-]

--Child created id: 1560
--Creating new operations for variant [Variant id: 1560, #gens: 240, #ops: 0, parent:1559]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 32
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `final double[] xTransformed = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `final double[] xTransformed = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1560, #gens: 241, #ops: 1, parent:1559] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1560, errors: [MultiDirectional.java:124: error: variable xTransformed is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
		final double[] xTransformed = new double[n]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n];
		                                             		                               			                                                      			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(780): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `final double[] xTransformed = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1559(f=2.0), 1560(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1559(f=2.0), )
----------Running generation: 781, population size: 1

***** Generation 781 : 0
**Parent Variant: [Variant id: 1561, #gens: 240, #ops: 0, parent:-]

--Child created id: 1562
--Creating new operations for variant [Variant id: 1562, #gens: 240, #ops: 0, parent:1561]
---analyzing modificationPoint position: 219
Templates availables259
Attempts Base Ingredients  1 total 259
vars from patch []
location: MathUtils.java642
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...] ` -topatch--> `// |v| larger: t negative (replace v)` (spoon.support.reflect.code.CtCommentImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 642, pointed element: CtCommentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...] ` -topatch--> `// |v| larger: t negative (replace v)` (spoon.support.reflect.code.CtCommentImpl) 

--Summary Creation: for variant [Variant id: 1562, #gens: 241, #ops: 1, parent:1561] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1562, errors: [MathUtils.java:666: error: while expected
	} 	/**
	 ^, MathUtils.java:672: error: illegal start of expression
	 */ 	public static int hash(double value) {
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(781): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// B2. Initialize: u and v have been divided by 2^k and at least // one is odd. /* B3 */ int t = ((u[...] ` -topatch--> `// |v| larger: t negative (replace v)` (spoon.support.reflect.code.CtCommentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1561(f=2.0), 1562(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1561(f=2.0), )
----------Running generation: 782, population size: 1

***** Generation 782 : 0
**Parent Variant: [Variant id: 1563, #gens: 240, #ops: 0, parent:-]

--Child created id: 1564
--Creating new operations for variant [Variant id: 1564, #gens: 240, #ops: 0, parent:1563]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@db9, search space size: 5
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 72
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1564, #gens: 239, #ops: 1, parent:1563] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1564
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1564/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(782): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1563(f=2.0), 1564(f=2.0), )
Selected to next generation: IDs2--> (1563(f=2.0), )
----------Running generation: 783, population size: 1

***** Generation 783 : 0
**Parent Variant: [Variant id: 1565, #gens: 240, #ops: 0, parent:-]

--Child created id: 1566
--Creating new operations for variant [Variant id: 1566, #gens: 240, #ops: 0, parent:1565]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 157
Templates availables9
Attempts Base Ingredients  1 total 9
---modifPoint 1 not mutation generated in  this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
Attempts Base Ingredients  3 total 32
vars from patch []
location: AbstractFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1566, #gens: 241, #ops: 1, parent:1565] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1566, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(783): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return nf ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1565(f=2.0), 1566(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1565(f=2.0), )
----------Running generation: 784, population size: 1

***** Generation 784 : 0
**Parent Variant: [Variant id: 1567, #gens: 240, #ops: 0, parent:-]

--Child created id: 1568
--Creating new operations for variant [Variant id: 1568, #gens: 240, #ops: 0, parent:1567]
---analyzing modificationPoint position: 156
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.relativeThreshold, org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD]
--> var from patch: this.relativeThreshold spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD spoon.support.reflect.code.CtFieldReadImpl
location: SimpleScalarValueChecker.java51
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 51, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1568, #gens: 241, #ops: 1, parent:1567] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1568, errors: [SimpleScalarValueChecker.java:52: error: variable relativeThreshold might already have been assigned
		this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD; 		this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELATIVE_THRESHOLD;
		                                                                                                                   		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(784): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...] ` -topatch--> `this.relativeThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_RELAT[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1567(f=2.0), 1568(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1567(f=2.0), )
----------Running generation: 785, population size: 1

***** Generation 785 : 0
**Parent Variant: [Variant id: 1569, #gens: 240, #ops: 0, parent:-]

--Child created id: 1570
--Creating new operations for variant [Variant id: 1570, #gens: 240, #ops: 0, parent:1569]
---analyzing modificationPoint position: 193
location: DirectSearchOptimizer.java296
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < simplex.length; ++i) { 	converged &= checker.converged(iterations, previous[i], [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1570, #gens: 239, #ops: 1, parent:1569] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1570
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1570/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(785): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < simplex.length; ++i) { 	converged &= checker.converged(iterations, previous[i], [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1569(f=2.0), 1570(f=4.0), )
Selected to next generation: IDs2--> (1569(f=2.0), )
----------Running generation: 786, population size: 1

***** Generation 786 : 0
**Parent Variant: [Variant id: 1571, #gens: 240, #ops: 0, parent:-]

--Child created id: 1572
--Creating new operations for variant [Variant id: 1572, #gens: 240, #ops: 0, parent:1571]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1572, #gens: 241, #ops: 1, parent:1571] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1572, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(786): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1571(f=2.0), 1572(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1571(f=2.0), )
----------Running generation: 787, population size: 1

***** Generation 787 : 0
**Parent Variant: [Variant id: 1573, #gens: 240, #ops: 0, parent:-]

--Child created id: 1574
--Creating new operations for variant [Variant id: 1574, #gens: 240, #ops: 0, parent:1573]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1574, #gens: 241, #ops: 1, parent:1573] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1574
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1574/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(787): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `toAppendTo.append(" / ")` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1573(f=2.0), 1574(f=2.0), )
Selected to next generation: IDs2--> (1573(f=2.0), )
----------Running generation: 788, population size: 1

***** Generation 788 : 0
**Parent Variant: [Variant id: 1575, #gens: 240, #ops: 0, parent:-]

--Child created id: 1576
--Creating new operations for variant [Variant id: 1576, #gens: 240, #ops: 0, parent:1575]
---analyzing modificationPoint position: 19
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 94
Templates availables11
Attempts Base Ingredients  1 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1)
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 2 not mutation generated in  this.f = f
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
Attempts Base Ingredients  6 total 8
---modifPoint 3 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1576, #gens: 241, #ops: 1, parent:1575] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1576, errors: [ProperFractionFormat.java:232: error: incompatible types: unexpected return value
		this.wholeFormat = format; 		return null;
		                           		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(788): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1575(f=2.0), 1576(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1575(f=2.0), )
----------Running generation: 789, population size: 1

***** Generation 789 : 0
**Parent Variant: [Variant id: 1577, #gens: 240, #ops: 0, parent:-]

--Child created id: 1578
--Creating new operations for variant [Variant id: 1578, #gens: 240, #ops: 0, parent:1577]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  // evaluate it evaluateSimplex(comparator)
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1578, #gens: 239, #ops: 1, parent:1577] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1578
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1578/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(789): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1577(f=2.0), 1578(f=2.0), )
Selected to next generation: IDs2--> (1577(f=2.0), )
----------Running generation: 790, population size: 1

***** Generation 790 : 0
**Parent Variant: [Variant id: 1579, #gens: 240, #ops: 0, parent:-]

--Child created id: 1580
--Creating new operations for variant [Variant id: 1580, #gens: 240, #ops: 0, parent:1579]
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1580, #gens: 241, #ops: 1, parent:1579] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1580, errors: [MultiDirectional.java:123: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
			final double[] xOriginal = original[i].getPointRef(); 			final double[] xSmallest = original[0].getPointRef();
			                                                      			               ^]
Ingredient counter is Zero
---Undoing: gnrtn(790): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1579(f=2.0), 1580(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1579(f=2.0), )
----------Running generation: 791, population size: 1

***** Generation 791 : 0
**Parent Variant: [Variant id: 1581, #gens: 240, #ops: 0, parent:-]

--Child created id: 1582
--Creating new operations for variant [Variant id: 1582, #gens: 240, #ops: 0, parent:1581]
---analyzing modificationPoint position: 82
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java228
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1582, #gens: 241, #ops: 1, parent:1581] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1582, errors: [FractionFormat.java:229: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
		final java.lang.Number num = getNumeratorFormat().parse(source, pos); 		return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
		                                                                      		                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(791): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1581(f=2.0), 1582(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1581(f=2.0), )
----------Running generation: 792, population size: 1

***** Generation 792 : 0
**Parent Variant: [Variant id: 1583, #gens: 240, #ops: 0, parent:-]

--Child created id: 1584
--Creating new operations for variant [Variant id: 1584, #gens: 240, #ops: 0, parent:1583]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 104
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  iterateSimplex(comparator)
---analyzing modificationPoint position: 31
Templates availables9
Attempts Base Ingredients  1 total 9
Attempts Base Ingredients  2 total 9
---modifPoint 2 not mutation generated in  // create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]
---analyzing modificationPoint position: 4
---modifPoint 3 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1584, #gens: 239, #ops: 1, parent:1583] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1584
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1584/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(792): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1583(f=2.0), 1584(f=2.0), )
Selected to next generation: IDs2--> (1583(f=2.0), )
----------Running generation: 793, population size: 1

***** Generation 793 : 0
**Parent Variant: [Variant id: 1585, #gens: 240, #ops: 0, parent:-]

--Child created id: 1586
--Creating new operations for variant [Variant id: 1586, #gens: 240, #ops: 0, parent:1585]
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 37
Templates availables9
Attempts Base Ingredients  1 total 9
Attempts Base Ingredients  2 total 9
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1586, #gens: 240, #ops: 1, parent:1585] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1586, errors: [MultiDirectional.java:125: error: cannot assign a value to final variable khi
			for (int j = 0; j < n; ++j) { 				this.khi = khi;
			                              				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(793): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1585(f=2.0), 1586(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1585(f=2.0), )
----------Running generation: 794, population size: 1

***** Generation 794 : 0
**Parent Variant: [Variant id: 1587, #gens: 240, #ops: 0, parent:-]

--Child created id: 1588
--Creating new operations for variant [Variant id: 1588, #gens: 240, #ops: 0, parent:1587]
---analyzing modificationPoint position: 64
location: FractionFormat.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1588, #gens: 239, #ops: 1, parent:1587] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1588
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1588/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(794): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1587(f=2.0), 1588(f=2.0), )
Selected to next generation: IDs2--> (1587(f=2.0), )
----------Running generation: 795, population size: 1

***** Generation 795 : 0
**Parent Variant: [Variant id: 1589, #gens: 240, #ops: 0, parent:-]

--Child created id: 1590
--Creating new operations for variant [Variant id: 1590, #gens: 240, #ops: 0, parent:1589]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1590, #gens: 241, #ops: 1, parent:1589] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1590
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1590/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(795): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `char ret = 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1589(f=2.0), 1590(f=2.0), )
Selected to next generation: IDs2--> (1589(f=2.0), )
----------Running generation: 796, population size: 1

***** Generation 796 : 0
**Parent Variant: [Variant id: 1591, #gens: 240, #ops: 0, parent:-]

--Child created id: 1592
--Creating new operations for variant [Variant id: 1592, #gens: 240, #ops: 0, parent:1591]
---analyzing modificationPoint position: 51
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 0 not mutation generated in  int whole = num / den
---analyzing modificationPoint position: 60
location: ProperBigFractionFormat.java108
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1592, #gens: 239, #ops: 1, parent:1591] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1592
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1592/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(796): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getDenominatorFormat().format(den, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1591(f=2.0), 1592(f=2.0), )
Selected to next generation: IDs2--> (1591(f=2.0), )
----------Running generation: 797, population size: 1

***** Generation 797 : 0
**Parent Variant: [Variant id: 1593, #gens: 240, #ops: 0, parent:-]

--Child created id: 1594
--Creating new operations for variant [Variant id: 1594, #gens: 240, #ops: 0, parent:1593]
---analyzing modificationPoint position: 125
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  // set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]
---analyzing modificationPoint position: 114
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  this.maxIterations = maxIterations
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch []
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 60, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1594, #gens: 241, #ops: 1, parent:1593] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1594, errors: [ProperFractionFormat.java:61: error: call to this must be first statement in constructor
	 */ 	public ProperFractionFormat(java.text.NumberFormat format) { 		this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone()))); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
	    	                                                             		                                                                                                        		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(797): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1593(f=2.0), 1594(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1593(f=2.0), )
----------Running generation: 798, population size: 1

***** Generation 798 : 0
**Parent Variant: [Variant id: 1595, #gens: 240, #ops: 0, parent:-]

--Child created id: 1596
--Creating new operations for variant [Variant id: 1596, #gens: 240, #ops: 0, parent:1595]
---analyzing modificationPoint position: 149
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 46
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1596, #gens: 241, #ops: 1, parent:1595] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1596, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf; 		nf.setParseIntegerOnly(true); 		return nf;
		           		^]
Ingredient counter is Zero
---Undoing: gnrtn(798): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1595(f=2.0), 1596(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1595(f=2.0), )
----------Running generation: 799, population size: 1

***** Generation 799 : 0
**Parent Variant: [Variant id: 1597, #gens: 240, #ops: 0, parent:-]

--Child created id: 1598
--Creating new operations for variant [Variant id: 1598, #gens: 240, #ops: 0, parent:1597]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1598, #gens: 240, #ops: 1, parent:1597] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1598, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat; 		this.denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(799): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1597(f=2.0), 1598(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1597(f=2.0), )
----------Running generation: 800, population size: 1

***** Generation 800 : 0
**Parent Variant: [Variant id: 1599, #gens: 240, #ops: 0, parent:-]

--Child created id: 1600
--Creating new operations for variant [Variant id: 1600, #gens: 240, #ops: 0, parent:1599]
---analyzing modificationPoint position: 58
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1600, #gens: 239, #ops: 1, parent:1599] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1600
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1600/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(800): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1599(f=2.0), 1600(f=2.0), )
Selected to next generation: IDs2--> (1599(f=2.0), )
----------Running generation: 801, population size: 1

***** Generation 801 : 0
**Parent Variant: [Variant id: 1601, #gens: 240, #ops: 0, parent:-]

--Child created id: 1602
--Creating new operations for variant [Variant id: 1602, #gens: 240, #ops: 0, parent:1601]
---analyzing modificationPoint position: 50
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java97
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 97, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1602, #gens: 241, #ops: 1, parent:1601] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1602, errors: [ProperBigFractionFormat.java:98: error: variable num is already defined in method format(org.apache.commons.math.fraction.BigFraction,java.lang.StringBuffer,java.text.FieldPosition)
		num = num.remainder(den); 		java.math.BigInteger num = fraction.getNumerator();
		                          		                     ^]
Ingredient counter is Zero
---Undoing: gnrtn(801): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num.remainder(den) ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1601(f=2.0), 1602(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1601(f=2.0), )
----------Running generation: 802, population size: 1

***** Generation 802 : 0
**Parent Variant: [Variant id: 1603, #gens: 240, #ops: 0, parent:-]

--Child created id: 1604
--Creating new operations for variant [Variant id: 1604, #gens: 240, #ops: 0, parent:1603]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
Attempts Base Ingredients  6 total 8
Attempts Base Ingredients  7 total 8
Attempts Base Ingredients  8 total 8
--- no mutation left to apply in element spoon.support.reflect.code.CtIfImpl@1, search space size: 8
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 99
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 1
---modifPoint 2 not mutation generated in  return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 15
---modifPoint 4 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 113
location: AbstractFormat.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1604, #gens: 239, #ops: 1, parent:1603] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1604
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1604/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(802): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1603(f=2.0), 1604(f=2.0), )
Selected to next generation: IDs2--> (1603(f=2.0), )
----------Running generation: 803, population size: 1

***** Generation 803 : 0
**Parent Variant: [Variant id: 1605, #gens: 240, #ops: 0, parent:-]

--Child created id: 1606
--Creating new operations for variant [Variant id: 1606, #gens: 240, #ops: 0, parent:1605]
---analyzing modificationPoint position: 66
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 11
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 52
location: ProperFractionFormat.java98
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1606, #gens: 239, #ops: 1, parent:1605] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1606
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1606/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(803): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `num = num % den ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1605(f=2.0), 1606(f=2.0), )
Selected to next generation: IDs2--> (1605(f=2.0), )
----------Running generation: 804, population size: 1

***** Generation 804 : 0
**Parent Variant: [Variant id: 1607, #gens: 240, #ops: 0, parent:-]

--Child created id: 1608
--Creating new operations for variant [Variant id: 1608, #gens: 240, #ops: 0, parent:1607]
---analyzing modificationPoint position: 71
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1608, #gens: 241, #ops: 1, parent:1607] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1608, errors: [AbstractFormat.java:111: error: incompatible types: unexpected return value
		return numeratorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(804): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1607(f=2.0), 1608(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1607(f=2.0), )
----------Running generation: 805, population size: 1

***** Generation 805 : 0
**Parent Variant: [Variant id: 1609, #gens: 240, #ops: 0, parent:-]

--Child created id: 1610
--Creating new operations for variant [Variant id: 1610, #gens: 240, #ops: 0, parent:1609]
---analyzing modificationPoint position: 77
Templates availables8
Attempts Base Ingredients  1 total 8
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 191
location: DirectSearchOptimizer.java301
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an optimum return simplex[0] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1610, #gens: 239, #ops: 1, parent:1609] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1610
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1610/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(805): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `// we have found an optimum return simplex[0] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1609(f=2.0), 1610(f=4.0), )
Selected to next generation: IDs2--> (1609(f=2.0), )
----------Running generation: 806, population size: 1

***** Generation 806 : 0
**Parent Variant: [Variant id: 1611, #gens: 240, #ops: 0, parent:-]

--Child created id: 1612
--Creating new operations for variant [Variant id: 1612, #gens: 240, #ops: 0, parent:1611]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 4
---modifPoint 1 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1612, #gens: 241, #ops: 1, parent:1611] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1612, errors: [MultiDirectional.java:117: error: incompatible types: missing return value
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		return;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		^]
Ingredient counter is Zero
---Undoing: gnrtn(806): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1611(f=2.0), 1612(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1611(f=2.0), )
----------Running generation: 807, population size: 1

***** Generation 807 : 0
**Parent Variant: [Variant id: 1613, #gens: 240, #ops: 0, parent:-]

--Child created id: 1614
--Creating new operations for variant [Variant id: 1614, #gens: 240, #ops: 0, parent:1613]
---analyzing modificationPoint position: 43
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1614, #gens: 240, #ops: 1, parent:1613] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1614
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1614/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(807): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `toAppendTo.append(' ')` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1613(f=2.0), 1614(f=2.0), )
Selected to next generation: IDs2--> (1613(f=2.0), )
----------Running generation: 808, population size: 1

***** Generation 808 : 0
**Parent Variant: [Variant id: 1615, #gens: 240, #ops: 0, parent:-]

--Child created id: 1616
--Creating new operations for variant [Variant id: 1616, #gens: 240, #ops: 0, parent:1615]
---analyzing modificationPoint position: 184
location: RealPointValuePair.java50
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1616, #gens: 239, #ops: 1, parent:1615] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1616, errors: [RealPointValuePair.java:52: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.point = point.clone();}
	    	                                                                      		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(808): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1615(f=2.0), 1616(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1615(f=2.0), )
----------Running generation: 809, population size: 1

***** Generation 809 : 0
**Parent Variant: [Variant id: 1617, #gens: 240, #ops: 0, parent:-]

--Child created id: 1618
--Creating new operations for variant [Variant id: 1618, #gens: 240, #ops: 0, parent:1617]
---analyzing modificationPoint position: 100
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 94
location: DirectSearchOptimizer.java152
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1618, #gens: 239, #ops: 1, parent:1617] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1618
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1618/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(809): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1617(f=2.0), 1618(f=3.0), )
Selected to next generation: IDs2--> (1617(f=2.0), )
----------Running generation: 810, population size: 1

***** Generation 810 : 0
**Parent Variant: [Variant id: 1619, #gens: 240, #ops: 0, parent:-]

--Child created id: 1620
--Creating new operations for variant [Variant id: 1620, #gens: 240, #ops: 0, parent:1619]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1620, #gens: 241, #ops: 1, parent:1619] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1620, errors: [AbstractFormat.java:137: error: unreachable statement
		"numerator format can not be null"); 		this.denominatorFormat = denominatorFormat;} 	/**
		                                     		^]
Ingredient counter is Zero
---Undoing: gnrtn(810): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "numerator format[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1619(f=2.0), 1620(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1619(f=2.0), )
----------Running generation: 811, population size: 1

***** Generation 811 : 0
**Parent Variant: [Variant id: 1621, #gens: 240, #ops: 0, parent:-]

--Child created id: 1622
--Creating new operations for variant [Variant id: 1622, #gens: 240, #ops: 0, parent:1621]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1622, #gens: 239, #ops: 1, parent:1621] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1622
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1622/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(811): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1621(f=2.0), 1622(f=2.0), )
Selected to next generation: IDs2--> (1621(f=2.0), )
----------Running generation: 812, population size: 1

***** Generation 812 : 0
**Parent Variant: [Variant id: 1623, #gens: 240, #ops: 0, parent:-]

--Child created id: 1624
--Creating new operations for variant [Variant id: 1624, #gens: 240, #ops: 0, parent:1623]
---analyzing modificationPoint position: 78
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 81
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 145
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  pos.setIndex(index)
---analyzing modificationPoint position: 185
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java86
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 86, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1624, #gens: 241, #ops: 1, parent:1623] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1624, errors: [RealPointValuePair.java:87: error: incompatible types: double[] cannot be converted to double
	 */ 	public double getValue() { 		return point.clone(); 		return value;
	    	                           		                  ^]
Ingredient counter is Zero
---Undoing: gnrtn(812): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1623(f=2.0), 1624(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1623(f=2.0), )
----------Running generation: 813, population size: 1

***** Generation 813 : 0
**Parent Variant: [Variant id: 1625, #gens: 240, #ops: 0, parent:-]

--Child created id: 1626
--Creating new operations for variant [Variant id: 1626, #gens: 240, #ops: 0, parent:1625]
---analyzing modificationPoint position: 59
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  getNumeratorFormat().format(num, toAppendTo, pos)
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1626, #gens: 241, #ops: 1, parent:1625] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1626, errors: [AbstractFormat.java:71: error: final parameter denominatorFormat may not be assigned
		denominatorFormat = denominatorFormat; 		this.denominatorFormat = denominatorFormat;
		^]
Ingredient counter is Zero
---Undoing: gnrtn(813): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1625(f=2.0), 1626(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1625(f=2.0), )
----------Running generation: 814, population size: 1

***** Generation 814 : 0
**Parent Variant: [Variant id: 1627, #gens: 240, #ops: 0, parent:-]

--Child created id: 1628
--Creating new operations for variant [Variant id: 1628, #gens: 240, #ops: 0, parent:1627]
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1628, #gens: 239, #ops: 1, parent:1627] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1628
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1628/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(814): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1627(f=2.0), 1628(f=2.0), )
Selected to next generation: IDs2--> (1627(f=2.0), )
----------Running generation: 815, population size: 1

***** Generation 815 : 0
**Parent Variant: [Variant id: 1629, #gens: 240, #ops: 0, parent:-]

--Child created id: 1630
--Creating new operations for variant [Variant id: 1630, #gens: 240, #ops: 0, parent:1629]
---analyzing modificationPoint position: 193
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  for (int i = 0; i < simplex.length; ++i) { 	converged &= checker.converged(iterations, previous[i], [...]
---analyzing modificationPoint position: 70
Templates availables46
Attempts Base Ingredients  1 total 46
vars from patch []
location: BigFractionFormat.java168
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `final java.lang.StringBuffer ret` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 168, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `final java.lang.StringBuffer ret` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1630, #gens: 241, #ops: 1, parent:1629] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1630, errors: [BigFractionFormat.java:179: error: variable ret is already defined in method format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)
		} 		final java.lang.StringBuffer ret;
		  		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(815): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `final java.lang.StringBuffer ret` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1629(f=2.0), 1630(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1629(f=2.0), )
----------Running generation: 816, population size: 1

***** Generation 816 : 0
**Parent Variant: [Variant id: 1631, #gens: 240, #ops: 0, parent:-]

--Child created id: 1632
--Creating new operations for variant [Variant id: 1632, #gens: 240, #ops: 0, parent:1631]
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 7
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 2 not mutation generated in  return nf
---analyzing modificationPoint position: 35
---modifPoint 3 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 4 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 12
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
Attempts Base Ingredients  6 total 8
Attempts Base Ingredients  7 total 8
Attempts Base Ingredients  8 total 8
--- no mutation left to apply in element spoon.support.reflect.code.CtIfImpl@1, search space size: 8
---modifPoint 5 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 34
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
Attempts Base Ingredients  3 total 10
Attempts Base Ingredients  4 total 10
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1632, #gens: 240, #ops: 1, parent:1631] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 1632, errors: [MultiDirectional.java:126: error: cannot find symbol
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));
				                                                          ^
  symbol:   variable xOriginal
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(816): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1631(f=2.0), 1632(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1631(f=2.0), )
----------Running generation: 817, population size: 1

***** Generation 817 : 0
**Parent Variant: [Variant id: 1633, #gens: 240, #ops: 0, parent:-]

--Child created id: 1634
--Creating new operations for variant [Variant id: 1634, #gens: 240, #ops: 0, parent:1633]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 40
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 3
---modifPoint 1 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1634, #gens: 241, #ops: 1, parent:1633] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1634, errors: [MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	        ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                         ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                   ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                       ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:117: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(817): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1633(f=2.0), 1634(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1633(f=2.0), )
----------Running generation: 818, population size: 1

***** Generation 818 : 0
**Parent Variant: [Variant id: 1635, #gens: 240, #ops: 0, parent:-]

--Child created id: 1636
--Creating new operations for variant [Variant id: 1636, #gens: 240, #ops: 0, parent:1635]
---analyzing modificationPoint position: 188
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  // no initial configuration has been set up for simplex // build a default one from a unit hypercube[...]
---analyzing modificationPoint position: 35
---modifPoint 1 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 68
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1636, #gens: 239, #ops: 1, parent:1635] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1636
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1636/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(818): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1635(f=2.0), 1636(f=2.0), )
Selected to next generation: IDs2--> (1635(f=2.0), )
----------Running generation: 819, population size: 1

***** Generation 819 : 0
**Parent Variant: [Variant id: 1637, #gens: 240, #ops: 0, parent:-]

--Child created id: 1638
--Creating new operations for variant [Variant id: 1638, #gens: 240, #ops: 0, parent:1637]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 88
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 1 not mutation generated in  // only the relative position of the n final vertices with respect // to the first one are stored fi[...]
---analyzing modificationPoint position: 77
---modifPoint 2 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 101
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 4 not mutation generated in  org.apache.commons.math.optimization.RealPointValuePair[] previous = new org.apache.commons.math.opt[...]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 5 not mutation generated in  // create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]
---analyzing modificationPoint position: 96
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java63
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 63, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1638, #gens: 240, #ops: 1, parent:1637] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child does NOT compile: 1638, errors: [RealPointValuePair.java:65: error: final parameter point may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point; 		point = point.clone();}
	    	                                                                                               		                                                  		^, RealPointValuePair.java:65: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point; 		point = point.clone();}
	    	                                                                                               		                                                  		                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(819): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1637(f=2.0), 1638(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1637(f=2.0), )
----------Running generation: 820, population size: 1

***** Generation 820 : 0
**Parent Variant: [Variant id: 1639, #gens: 240, #ops: 0, parent:-]

--Child created id: 1640
--Creating new operations for variant [Variant id: 1640, #gens: 240, #ops: 0, parent:1639]
---analyzing modificationPoint position: 2
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java69
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1640, #gens: 240, #ops: 1, parent:1639] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1640, errors: [AbstractFormat.java:70: error: final parameter numeratorFormat may not be assigned
	 */ 	protected AbstractFormat(final java.text.NumberFormat numeratorFormat, final java.text.NumberFormat denominatorFormat) { 		numeratorFormat = numeratorFormat;
	    	                                                                                                                         		^]
Ingredient counter is Zero
---Undoing: gnrtn(820): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1639(f=2.0), 1640(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1639(f=2.0), )
----------Running generation: 821, population size: 1

***** Generation 821 : 0
**Parent Variant: [Variant id: 1641, #gens: 240, #ops: 0, parent:-]

--Child created id: 1642
--Creating new operations for variant [Variant id: 1642, #gens: 240, #ops: 0, parent:1641]
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 149
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 169
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java81
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 81, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1642, #gens: 241, #ops: 1, parent:1641] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1642, errors: [MultiDirectional.java:132: error: illegal start of expression
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator);
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(821): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1641(f=2.0), 1642(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1641(f=2.0), )
----------Running generation: 822, population size: 1

***** Generation 822 : 0
**Parent Variant: [Variant id: 1643, #gens: 240, #ops: 0, parent:-]

--Child created id: 1644
--Creating new operations for variant [Variant id: 1644, #gens: 240, #ops: 0, parent:1643]
---analyzing modificationPoint position: 69
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...]
---analyzing modificationPoint position: 26
location: MultiDirectional.java74
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1644, #gens: 239, #ops: 1, parent:1643] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1644
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1644/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(822): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1643(f=2.0), 1644(f=3.0), )
Selected to next generation: IDs2--> (1643(f=2.0), )
----------Running generation: 823, population size: 1

***** Generation 823 : 0
**Parent Variant: [Variant id: 1645, #gens: 240, #ops: 0, parent:-]

--Child created id: 1646
--Creating new operations for variant [Variant id: 1646, #gens: 240, #ops: 0, parent:1645]
---analyzing modificationPoint position: 87
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 72
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 135
---modifPoint 3 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 4 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 6 not mutation generated in  return null
---analyzing modificationPoint position: 121
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 7 not mutation generated in  evaluations = 0
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 8 not mutation generated in  if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...]
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1646, #gens: 241, #ops: 1, parent:1645] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child does NOT compile: 1646, errors: [AbstractFormat.java:95: error: unreachable statement
		return nf; 		nf.setParseIntegerOnly(true); 		return nf;
		           		^]
Ingredient counter is Zero
---Undoing: gnrtn(823): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `return nf` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1645(f=2.0), 1646(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1645(f=2.0), )
----------Running generation: 824, population size: 1

***** Generation 824 : 0
**Parent Variant: [Variant id: 1647, #gens: 240, #ops: 0, parent:-]

--Child created id: 1648
--Creating new operations for variant [Variant id: 1648, #gens: 240, #ops: 0, parent:1647]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1648, #gens: 241, #ops: 1, parent:1647] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1648
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1648/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(824): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1647(f=2.0), 1648(f=4.0), )
Selected to next generation: IDs2--> (1647(f=2.0), )
----------Running generation: 825, population size: 1

***** Generation 825 : 0
**Parent Variant: [Variant id: 1649, #gens: 240, #ops: 0, parent:-]

--Child created id: 1650
--Creating new operations for variant [Variant id: 1650, #gens: 240, #ops: 0, parent:1649]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 122
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  buildSimplex(startPoint)
---analyzing modificationPoint position: 10
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 3 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 202
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 4 not mutation generated in  // move sign to numerator. if (den < 0) { 	num = -num; 	den = -den; }
---analyzing modificationPoint position: 14
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 5 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 11
---modifPoint 6 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 40
---modifPoint 7 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 8 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 100
location: DirectSearchOptimizer.java289
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1650, #gens: 239, #ops: 1, parent:1649] gen mutated: 1 , gen not mut: 9, gen not applied  0
-The child compiles: id 1650
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1650/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(825): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `evaluateSimplex(comparator) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1649(f=2.0), 1650(f=3.0), )
Selected to next generation: IDs2--> (1649(f=2.0), )
----------Running generation: 826, population size: 1

***** Generation 826 : 0
**Parent Variant: [Variant id: 1651, #gens: 240, #ops: 0, parent:-]

--Child created id: 1652
--Creating new operations for variant [Variant id: 1652, #gens: 240, #ops: 0, parent:1651]
---analyzing modificationPoint position: 113
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  ret = c
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 155
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 2 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1652, #gens: 241, #ops: 1, parent:1651] gen mutated: 1 , gen not mut: 3, gen not applied  0
Error at InsertBeforeOp appplying: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
-The child compiles: id 1652
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1652/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(826): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
Error at InsertBeforeOp undoing: Cannot insert before an Super or this: this(format, ((java.text.NumberFormat) (format.clone())))
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1651(f=2.0), 1652(f=2.0), )
Selected to next generation: IDs2--> (1651(f=2.0), )
----------Running generation: 827, population size: 1

***** Generation 827 : 0
**Parent Variant: [Variant id: 1653, #gens: 240, #ops: 0, parent:-]

--Child created id: 1654
--Creating new operations for variant [Variant id: 1654, #gens: 240, #ops: 0, parent:1653]
---analyzing modificationPoint position: 74
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1654, #gens: 240, #ops: 1, parent:1653] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1654
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1654/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(827): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return ret` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1653(f=2.0), 1654(f=2.0), )
Selected to next generation: IDs2--> (1653(f=2.0), )
----------Running generation: 828, population size: 1

***** Generation 828 : 0
**Parent Variant: [Variant id: 1655, #gens: 240, #ops: 0, parent:-]

--Child created id: 1656
--Creating new operations for variant [Variant id: 1656, #gens: 240, #ops: 0, parent:1655]
---analyzing modificationPoint position: 89
location: DirectSearchOptimizer.java143
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1656, #gens: 239, #ops: 1, parent:1655] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1656
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1656/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(828): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1655(f=2.0), 1656(f=4.0), )
Selected to next generation: IDs2--> (1655(f=2.0), )
----------Running generation: 829, population size: 1

***** Generation 829 : 0
**Parent Variant: [Variant id: 1657, #gens: 240, #ops: 0, parent:-]

--Child created id: 1658
--Creating new operations for variant [Variant id: 1658, #gens: 240, #ops: 0, parent:1657]
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java89
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 89, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1658, #gens: 241, #ops: 1, parent:1657] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1658
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1658/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(829): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1657(f=2.0), 1658(f=2.0), )
Selected to next generation: IDs2--> (1657(f=2.0), )
----------Running generation: 830, population size: 1

***** Generation 830 : 0
**Parent Variant: [Variant id: 1659, #gens: 240, #ops: 0, parent:-]

--Child created id: 1660
--Creating new operations for variant [Variant id: 1660, #gens: 240, #ops: 0, parent:1659]
---analyzing modificationPoint position: 141
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java162
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 162, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1660, #gens: 241, #ops: 1, parent:1659] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1660, errors: [AbstractFormat.java:162: error: call to this must be first statement in constructor
	 */ 	protected static char parseNextCharacter(final java.lang.String source, final java.text.ParsePosition pos) { 		int index = pos.getIndex(); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                             		                            		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(830): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1659(f=2.0), 1660(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1659(f=2.0), )
----------Running generation: 831, population size: 1

***** Generation 831 : 0
**Parent Variant: [Variant id: 1661, #gens: 240, #ops: 0, parent:-]

--Child created id: 1662
--Creating new operations for variant [Variant id: 1662, #gens: 240, #ops: 0, parent:1661]
---analyzing modificationPoint position: 77
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 184
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java50
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 50, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1662, #gens: 241, #ops: 1, parent:1661] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1662, errors: [RealPointValuePair.java:52: error: final parameter point may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.point = point.clone(); 		this.value = value; 		point = point.clone();}
	    	                                                                      		                            		                    		^]
Ingredient counter is Zero
---Undoing: gnrtn(831): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `point = point.clone()` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1661(f=2.0), 1662(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1661(f=2.0), )
----------Running generation: 832, population size: 1

***** Generation 832 : 0
**Parent Variant: [Variant id: 1663, #gens: 240, #ops: 0, parent:-]

--Child created id: 1664
--Creating new operations for variant [Variant id: 1664, #gens: 240, #ops: 0, parent:1663]
---analyzing modificationPoint position: 81
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1664, #gens: 239, #ops: 1, parent:1663] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1664
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1664/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(832): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1663(f=2.0), 1664(f=2.0), )
Selected to next generation: IDs2--> (1663(f=2.0), )
----------Running generation: 833, population size: 1

***** Generation 833 : 0
**Parent Variant: [Variant id: 1665, #gens: 240, #ops: 0, parent:-]

--Child created id: 1666
--Creating new operations for variant [Variant id: 1666, #gens: 240, #ops: 0, parent:1665]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@db9, search space size: 5
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1666, #gens: 241, #ops: 1, parent:1665] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1666, errors: [AbstractFormat.java:102: error: call to this must be first statement in constructor
	 */ 	public java.text.NumberFormat getDenominatorFormat() { 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                       		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(833): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1665(f=2.0), 1666(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1665(f=2.0), )
----------Running generation: 834, population size: 1

***** Generation 834 : 0
**Parent Variant: [Variant id: 1667, #gens: 240, #ops: 0, parent:-]

--Child created id: 1668
--Creating new operations for variant [Variant id: 1668, #gens: 240, #ops: 0, parent:1667]
---analyzing modificationPoint position: 66
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 28
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 105
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [maxEvaluations]
--> var from patch: maxEvaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java319
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...] ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 319, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...] ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1668, #gens: 241, #ops: 1, parent:1667] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1668, errors: [DirectSearchOptimizer.java:320: error: incompatible types: unexpected return value
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		return maxEvaluations; 		if ((++iterations) > maxIterations) {
	    	                                                                                                                		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(834): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...] ` -topatch--> `return maxEvaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1667(f=2.0), 1668(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1667(f=2.0), )
----------Running generation: 835, population size: 1

***** Generation 835 : 0
**Parent Variant: [Variant id: 1669, #gens: 240, #ops: 0, parent:-]

--Child created id: 1670
--Creating new operations for variant [Variant id: 1670, #gens: 240, #ops: 0, parent:1669]
---analyzing modificationPoint position: 89
location: DirectSearchOptimizer.java143
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1670, #gens: 239, #ops: 1, parent:1669] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1670
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1670/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(835): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1669(f=2.0), 1670(f=4.0), )
Selected to next generation: IDs2--> (1669(f=2.0), )
----------Running generation: 836, population size: 1

***** Generation 836 : 0
**Parent Variant: [Variant id: 1671, #gens: 240, #ops: 0, parent:-]

--Child created id: 1672
--Creating new operations for variant [Variant id: 1672, #gens: 240, #ops: 0, parent:1671]
---analyzing modificationPoint position: 171
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch []
location: MultiDirectional.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 94, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1672, #gens: 240, #ops: 1, parent:1671] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1672
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1672/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(836): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1671(f=2.0), 1672(f=2.0), )
Selected to next generation: IDs2--> (1671(f=2.0), )
----------Running generation: 837, population size: 1

***** Generation 837 : 0
**Parent Variant: [Variant id: 1673, #gens: 240, #ops: 0, parent:-]

--Child created id: 1674
--Creating new operations for variant [Variant id: 1674, #gens: 240, #ops: 0, parent:1673]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 136
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...]
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1674, #gens: 239, #ops: 1, parent:1673] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1674
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1674/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(837): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1673(f=2.0), 1674(f=2.0), )
Selected to next generation: IDs2--> (1673(f=2.0), )
----------Running generation: 838, population size: 1

***** Generation 838 : 0
**Parent Variant: [Variant id: 1675, #gens: 240, #ops: 0, parent:-]

--Child created id: 1676
--Creating new operations for variant [Variant id: 1676, #gens: 240, #ops: 0, parent:1675]
---analyzing modificationPoint position: 84
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 71
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 1 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 116
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java250
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 250, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1676, #gens: 241, #ops: 1, parent:1675] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1676
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1676/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(838): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1675(f=2.0), 1676(f=2.0), )
Selected to next generation: IDs2--> (1675(f=2.0), )
----------Running generation: 839, population size: 1

***** Generation 839 : 0
**Parent Variant: [Variant id: 1677, #gens: 240, #ops: 0, parent:-]

--Child created id: 1678
--Creating new operations for variant [Variant id: 1678, #gens: 240, #ops: 0, parent:1677]
---analyzing modificationPoint position: 61
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 189
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  java.util.Arrays.fill(unit, 1.0)
---analyzing modificationPoint position: 81
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  // parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 70, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1678, #gens: 241, #ops: 1, parent:1677] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1678, errors: [AbstractFormat.java:111: error: incompatible types: unexpected return value
		return numeratorFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(839): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1677(f=2.0), 1678(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1677(f=2.0), )
----------Running generation: 840, population size: 1

***** Generation 840 : 0
**Parent Variant: [Variant id: 1679, #gens: 240, #ops: 0, parent:-]

--Child created id: 1680
--Creating new operations for variant [Variant id: 1680, #gens: 240, #ops: 0, parent:1679]
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1680, #gens: 241, #ops: 1, parent:1679] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1680
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1680/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(840): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1679(f=2.0), 1680(f=2.0), )
Selected to next generation: IDs2--> (1679(f=2.0), )
----------Running generation: 841, population size: 1

***** Generation 841 : 0
**Parent Variant: [Variant id: 1681, #gens: 240, #ops: 0, parent:-]

--Child created id: 1682
--Creating new operations for variant [Variant id: 1682, #gens: 240, #ops: 0, parent:1681]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1682, #gens: 241, #ops: 1, parent:1681] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1682, errors: [MultiDirectional.java:117: error: cannot assign a value to final variable khi
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		this.khi = khi;
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(841): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1681(f=2.0), 1682(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1681(f=2.0), )
----------Running generation: 842, population size: 1

***** Generation 842 : 0
**Parent Variant: [Variant id: 1683, #gens: 240, #ops: 0, parent:-]

--Child created id: 1684
--Creating new operations for variant [Variant id: 1684, #gens: 240, #ops: 0, parent:1683]
---analyzing modificationPoint position: 124
location: DirectSearchOptimizer.java361
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1684, #gens: 239, #ops: 1, parent:1683] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1684
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1684/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(842): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1683(f=2.0), 1684(f=2.0), )
Selected to next generation: IDs2--> (1683(f=2.0), )
----------Running generation: 843, population size: 1

***** Generation 843 : 0
**Parent Variant: [Variant id: 1685, #gens: 240, #ops: 0, parent:-]

--Child created id: 1686
--Creating new operations for variant [Variant id: 1686, #gens: 240, #ops: 0, parent:1685]
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1686, #gens: 241, #ops: 1, parent:1685] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1686, errors: [MultiDirectional.java:123: error: incompatible types: missing return value
			final double[] xOriginal = original[i].getPointRef(); 			return;
			                                                      			^]
Ingredient counter is Zero
---Undoing: gnrtn(843): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1685(f=2.0), 1686(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1685(f=2.0), )
----------Running generation: 844, population size: 1

***** Generation 844 : 0
**Parent Variant: [Variant id: 1687, #gens: 240, #ops: 0, parent:-]

--Child created id: 1688
--Creating new operations for variant [Variant id: 1688, #gens: 240, #ops: 0, parent:1687]
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1688, #gens: 241, #ops: 1, parent:1687] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1688
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1688/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(844): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1687(f=2.0), 1688(f=2.0), )
Selected to next generation: IDs2--> (1687(f=2.0), )
----------Running generation: 845, population size: 1

***** Generation 845 : 0
**Parent Variant: [Variant id: 1689, #gens: 240, #ops: 0, parent:-]

--Child created id: 1690
--Creating new operations for variant [Variant id: 1690, #gens: 240, #ops: 0, parent:1689]
---analyzing modificationPoint position: 47
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 94
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java152
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1690, #gens: 240, #ops: 1, parent:1689] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1690
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1690/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(845): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1689(f=2.0), 1690(f=3.0), )
Selected to next generation: IDs2--> (1689(f=2.0), )
----------Running generation: 846, population size: 1

***** Generation 846 : 0
**Parent Variant: [Variant id: 1691, #gens: 240, #ops: 0, parent:-]

--Child created id: 1692
--Creating new operations for variant [Variant id: 1692, #gens: 240, #ops: 0, parent:1691]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 56
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1692, #gens: 239, #ops: 1, parent:1691] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1692
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1692/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(846): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1691(f=2.0), 1692(f=2.0), )
Selected to next generation: IDs2--> (1691(f=2.0), )
----------Running generation: 847, population size: 1

***** Generation 847 : 0
**Parent Variant: [Variant id: 1693, #gens: 240, #ops: 0, parent:-]

--Child created id: 1694
--Creating new operations for variant [Variant id: 1694, #gens: 240, #ops: 0, parent:1693]
---analyzing modificationPoint position: 114
Templates availables17
Attempts Base Ingredients  1 total 17
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [f]
--> var from patch: f spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java220
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `f = f` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 220, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `f = f` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1694, #gens: 240, #ops: 1, parent:1693] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1694, errors: [DirectSearchOptimizer.java:320: error: illegal start of expression
	 */ 	protected void incrementIterationsCounter() throws org.apache.commons.math.optimization.OptimizationException { 		if ((++iterations) > maxIterations) {
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(847): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `f = f` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1693(f=2.0), 1694(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1693(f=2.0), )
----------Running generation: 848, population size: 1

***** Generation 848 : 0
**Parent Variant: [Variant id: 1695, #gens: 240, #ops: 0, parent:-]

--Child created id: 1696
--Creating new operations for variant [Variant id: 1696, #gens: 240, #ops: 0, parent:1695]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 100
Templates availables89
Attempts Base Ingredients  1 total 89
Attempts Base Ingredients  2 total 89
---modifPoint 3 not mutation generated in  evaluateSimplex(comparator)
---analyzing modificationPoint position: 30
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java116
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 116, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1696, #gens: 240, #ops: 1, parent:1695] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1696, errors: [MultiDirectional.java:120: error: cannot find symbol
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
		                                                                      ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:122: error: cannot find symbol
		for (int i = 1; i <= n; ++i) {
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:124: error: cannot find symbol
			final double[] xTransformed = new double[n];
			                                         ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:125: error: cannot find symbol
			for (int j = 0; j < n; ++j) {
			                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(848): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = xSmallest.length ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1695(f=2.0), 1696(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1695(f=2.0), )
----------Running generation: 849, population size: 1

***** Generation 849 : 0
**Parent Variant: [Variant id: 1697, #gens: 240, #ops: 0, parent:-]

--Child created id: 1698
--Creating new operations for variant [Variant id: 1698, #gens: 240, #ops: 0, parent:1697]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1698, #gens: 241, #ops: 1, parent:1697] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1698
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1698/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(849): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1697(f=2.0), 1698(f=2.0), )
Selected to next generation: IDs2--> (1697(f=2.0), )
----------Running generation: 850, population size: 1

***** Generation 850 : 0
**Parent Variant: [Variant id: 1699, #gens: 240, #ops: 0, parent:-]

--Child created id: 1700
--Creating new operations for variant [Variant id: 1700, #gens: 240, #ops: 0, parent:1699]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 146
Templates availables4
Attempts Base Ingredients  1 total 4
Attempts Base Ingredients  2 total 4
Name Conflict [index, n, source, pos, ret]
---modifPoint 1 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 79
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [parsePosition, source]
--> var from patch: parsePosition spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java205
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 205, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1700, #gens: 240, #ops: 1, parent:1699] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1700
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1700/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(850): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...] ` -topatch--> `if (parsePosition.getIndex() == 0) { 	throw org.apache.commons.math.MathRuntimeException.createParse[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1699(f=2.0), 1700(f=2.0), )
Selected to next generation: IDs2--> (1699(f=2.0), )
----------Running generation: 851, population size: 1

***** Generation 851 : 0
**Parent Variant: [Variant id: 1701, #gens: 240, #ops: 0, parent:-]

--Child created id: 1702
--Creating new operations for variant [Variant id: 1702, #gens: 240, #ops: 0, parent:1701]
---analyzing modificationPoint position: 13
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1702, #gens: 239, #ops: 1, parent:1701] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1702
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1702/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(851): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1701(f=2.0), 1702(f=2.0), )
Selected to next generation: IDs2--> (1701(f=2.0), )
----------Running generation: 852, population size: 1

***** Generation 852 : 0
**Parent Variant: [Variant id: 1703, #gens: 240, #ops: 0, parent:-]

--Child created id: 1704
--Creating new operations for variant [Variant id: 1704, #gens: 240, #ops: 0, parent:1703]
---analyzing modificationPoint position: 137
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [point]
--> var from patch: point spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java79
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 79, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1704, #gens: 240, #ops: 1, parent:1703] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1704
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1704/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(852): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return point.clone()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1703(f=2.0), 1704(f=2.0), )
Selected to next generation: IDs2--> (1703(f=2.0), )
----------Running generation: 853, population size: 1

***** Generation 853 : 0
**Parent Variant: [Variant id: 1705, #gens: 240, #ops: 0, parent:-]

--Child created id: 1706
--Creating new operations for variant [Variant id: 1706, #gens: 240, #ops: 0, parent:1705]
---analyzing modificationPoint position: 75
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 153
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 182
location: BigFraction.java158
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ZERO.equals(num)) { 	numerator = java.math.BigInteger.ZERO; 	denominator = [...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1706, #gens: 239, #ops: 1, parent:1705] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1706, errors: [BigFraction.java:182: error: variable numerator might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(853): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.math.BigInteger.ZERO.equals(num)) { 	numerator = java.math.BigInteger.ZERO; 	denominator = [...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1705(f=2.0), 1706(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1705(f=2.0), )
----------Running generation: 854, population size: 1

***** Generation 854 : 0
**Parent Variant: [Variant id: 1707, #gens: 240, #ops: 0, parent:-]

--Child created id: 1708
--Creating new operations for variant [Variant id: 1708, #gens: 240, #ops: 0, parent:1707]
---analyzing modificationPoint position: 15
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1708, #gens: 239, #ops: 1, parent:1707] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1708
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1708/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(854): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1707(f=2.0), 1708(f=2.0), )
Selected to next generation: IDs2--> (1707(f=2.0), )
----------Running generation: 855, population size: 1

***** Generation 855 : 0
**Parent Variant: [Variant id: 1709, #gens: 240, #ops: 0, parent:-]

--Child created id: 1710
--Creating new operations for variant [Variant id: 1710, #gens: 240, #ops: 0, parent:1709]
---analyzing modificationPoint position: 99
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [o2]
--> var from patch: o2 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java280
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...] ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 280, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...] ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1710, #gens: 241, #ops: 1, parent:1709] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1710, errors: [DirectSearchOptimizer.java:280: error: variable v2 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v2 = o2.getValue(); 				final double v2 = o2.getValue();
				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(855): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return goalType == org.apache.commons.math.optimization.GoalType.MINIMIZE ?  java.lang.Double.compar[...] ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1709(f=2.0), 1710(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1709(f=2.0), )
----------Running generation: 856, population size: 1

***** Generation 856 : 0
**Parent Variant: [Variant id: 1711, #gens: 240, #ops: 0, parent:-]

--Child created id: 1712
--Creating new operations for variant [Variant id: 1712, #gens: 240, #ops: 0, parent:1711]
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 151
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 15
---modifPoint 2 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1712, #gens: 239, #ops: 1, parent:1711] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1712
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1712/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(856): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1711(f=2.0), 1712(f=2.0), )
Selected to next generation: IDs2--> (1711(f=2.0), )
----------Running generation: 857, population size: 1

***** Generation 857 : 0
**Parent Variant: [Variant id: 1713, #gens: 240, #ops: 0, parent:-]

--Child created id: 1714
--Creating new operations for variant [Variant id: 1714, #gens: 240, #ops: 0, parent:1713]
---analyzing modificationPoint position: 127
location: DirectSearchOptimizer.java372
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1714, #gens: 239, #ops: 1, parent:1713] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1714
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1714/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(857): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1713(f=2.0), 1714(f=4.0), )
Selected to next generation: IDs2--> (1713(f=2.0), )
----------Running generation: 858, population size: 1

***** Generation 858 : 0
**Parent Variant: [Variant id: 1715, #gens: 240, #ops: 0, parent:-]

--Child created id: 1716
--Creating new operations for variant [Variant id: 1716, #gens: 240, #ops: 0, parent:1715]
---analyzing modificationPoint position: 234
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  // the locale is not supported or the resource is unknown // don't translate and fall back to using [...]
---analyzing modificationPoint position: 44
location: ProperFractionFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1716, #gens: 239, #ops: 1, parent:1715] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1716
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1716/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(858): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1715(f=2.0), 1716(f=2.0), )
Selected to next generation: IDs2--> (1715(f=2.0), )
----------Running generation: 859, population size: 1

***** Generation 859 : 0
**Parent Variant: [Variant id: 1717, #gens: 240, #ops: 0, parent:-]

--Child created id: 1718
--Creating new operations for variant [Variant id: 1718, #gens: 240, #ops: 0, parent:1717]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 211
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [p, c]
--> var from patch: p spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: c spoon.support.reflect.code.CtVariableReadImpl
location: SimpleScalarValueChecker.java77
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double difference = java.lang.Math.abs(p - c)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 77, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double difference = java.lang.Math.abs(p - c)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1718, #gens: 241, #ops: 1, parent:1717] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1718, errors: [SimpleScalarValueChecker.java:78: error: variable difference is already defined in method converged(int,org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
		final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)); 		final double difference = java.lang.Math.abs(p - c);
		                                                                                      		             ^]
Ingredient counter is Zero
---Undoing: gnrtn(859): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double size = java.lang.Math.max(java.lang.Math.abs(p), java.lang.Math.abs(c)) ` -topatch--> `final double difference = java.lang.Math.abs(p - c)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1717(f=2.0), 1718(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1717(f=2.0), )
----------Running generation: 860, population size: 1

***** Generation 860 : 0
**Parent Variant: [Variant id: 1719, #gens: 240, #ops: 0, parent:-]

--Child created id: 1720
--Creating new operations for variant [Variant id: 1720, #gens: 240, #ops: 0, parent:1719]
---analyzing modificationPoint position: 177
Templates availables39
Attempts Base Ingredients  1 total 39
---modifPoint 0 not mutation generated in  // store the values in the final fields numerator = num
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
vars from patch [this.khi]
--> var from patch: this.khi spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1720, #gens: 241, #ops: 1, parent:1719] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1720, errors: [MultiDirectional.java:71: error: cannot assign a value to final variable khi
			final org.apache.commons.math.optimization.RealPointValuePair best = original[0]; 			this.khi = khi;
			                                                                                  			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(860): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `this.khi = khi` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1719(f=2.0), 1720(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1719(f=2.0), )
----------Running generation: 861, population size: 1

***** Generation 861 : 0
**Parent Variant: [Variant id: 1721, #gens: 240, #ops: 0, parent:-]

--Child created id: 1722
--Creating new operations for variant [Variant id: 1722, #gens: 240, #ops: 0, parent:1721]
---analyzing modificationPoint position: 110
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java117
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 117, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1722, #gens: 240, #ops: 1, parent:1721] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1722
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1722/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(861): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `setMaxEvaluations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1721(f=2.0), 1722(f=2.0), )
Selected to next generation: IDs2--> (1721(f=2.0), )
----------Running generation: 862, population size: 1

***** Generation 862 : 0
**Parent Variant: [Variant id: 1723, #gens: 240, #ops: 0, parent:-]

--Child created id: 1724
--Creating new operations for variant [Variant id: 1724, #gens: 240, #ops: 0, parent:1723]
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 1 not mutation generated in  num = num % den
---analyzing modificationPoint position: 78
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1724, #gens: 241, #ops: 1, parent:1723] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1724
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1724/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(862): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1723(f=2.0), 1724(f=2.0), )
Selected to next generation: IDs2--> (1723(f=2.0), )
----------Running generation: 863, population size: 1

***** Generation 863 : 0
**Parent Variant: [Variant id: 1725, #gens: 240, #ops: 0, parent:-]

--Child created id: 1726
--Creating new operations for variant [Variant id: 1726, #gens: 240, #ops: 0, parent:1725]
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 73
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 1 not mutation generated in  return ret
---analyzing modificationPoint position: 65
---modifPoint 2 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 115
location: DirectSearchOptimizer.java230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1726, #gens: 239, #ops: 1, parent:1725] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1726
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1726/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(863): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1725(f=2.0), 1726(f=5.0), )
Selected to next generation: IDs2--> (1725(f=2.0), )
----------Running generation: 864, population size: 1

***** Generation 864 : 0
**Parent Variant: [Variant id: 1727, #gens: 240, #ops: 0, parent:-]

--Child created id: 1728
--Creating new operations for variant [Variant id: 1728, #gens: 240, #ops: 0, parent:1727]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 34
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java122
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 122, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1728, #gens: 241, #ops: 1, parent:1727] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1728
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1728/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(864): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xOriginal = original[i].getPointRef() ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1727(f=2.0), 1728(f=2.0), )
Selected to next generation: IDs2--> (1727(f=2.0), )
----------Running generation: 865, population size: 1

***** Generation 865 : 0
**Parent Variant: [Variant id: 1729, #gens: 240, #ops: 0, parent:-]

--Child created id: 1730
--Creating new operations for variant [Variant id: 1730, #gens: 240, #ops: 0, parent:1729]
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 64
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 2
---modifPoint 1 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 49
---modifPoint 2 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 130
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java375
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 375, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1730, #gens: 241, #ops: 1, parent:1729] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1730, errors: [DirectSearchOptimizer.java:376: error: unreachable statement
			for (int k = 0; k < n; ++k) {
			^]
Ingredient counter is Zero
---Undoing: gnrtn(865): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1729(f=2.0), 1730(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1729(f=2.0), )
----------Running generation: 866, population size: 1

***** Generation 866 : 0
**Parent Variant: [Variant id: 1731, #gens: 240, #ops: 0, parent:-]

--Child created id: 1732
--Creating new operations for variant [Variant id: 1732, #gens: 240, #ops: 0, parent:1731]
---analyzing modificationPoint position: 40
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 3
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 88
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  // only the relative position of the n final vertices with respect // to the first one are stored fi[...]
---analyzing modificationPoint position: 9
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 2 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 36
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java124
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 124, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1732, #gens: 241, #ops: 1, parent:1731] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1732
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1732/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(866): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1731(f=2.0), 1732(f=2.0), )
Selected to next generation: IDs2--> (1731(f=2.0), )
----------Running generation: 867, population size: 1

***** Generation 867 : 0
**Parent Variant: [Variant id: 1733, #gens: 240, #ops: 0, parent:-]

--Child created id: 1734
--Creating new operations for variant [Variant id: 1734, #gens: 240, #ops: 0, parent:1733]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 17
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 72
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 2 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 28
location: MultiDirectional.java90
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1734, #gens: 239, #ops: 1, parent:1733] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1734
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1734/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(867): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1733(f=2.0), 1734(f=2.0), )
Selected to next generation: IDs2--> (1733(f=2.0), )
----------Running generation: 868, population size: 1

***** Generation 868 : 0
**Parent Variant: [Variant id: 1735, #gens: 240, #ops: 0, parent:-]

--Child created id: 1736
--Creating new operations for variant [Variant id: 1736, #gens: 240, #ops: 0, parent:1735]
---analyzing modificationPoint position: 138
location: AbstractFormat.java149
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1736, #gens: 239, #ops: 1, parent:1735] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1736
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1736/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(868): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1735(f=2.0), 1736(f=2.0), )
Selected to next generation: IDs2--> (1735(f=2.0), )
----------Running generation: 869, population size: 1

***** Generation 869 : 0
**Parent Variant: [Variant id: 1737, #gens: 240, #ops: 0, parent:-]

--Child created id: 1738
--Creating new operations for variant [Variant id: 1738, #gens: 240, #ops: 0, parent:1737]
---analyzing modificationPoint position: 116
location: DirectSearchOptimizer.java250
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1738, #gens: 239, #ops: 1, parent:1737] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1738
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1738/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(869): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.checker = checker ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1737(f=2.0), 1738(f=4.0), )
Selected to next generation: IDs2--> (1737(f=2.0), )
----------Running generation: 870, population size: 1

***** Generation 870 : 0
**Parent Variant: [Variant id: 1739, #gens: 240, #ops: 0, parent:-]

--Child created id: 1740
--Creating new operations for variant [Variant id: 1740, #gens: 240, #ops: 0, parent:1739]
---analyzing modificationPoint position: 45
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java94
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 94, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1740, #gens: 240, #ops: 1, parent:1739] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1740
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1740/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(870): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `java.math.BigInteger num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1739(f=2.0), 1740(f=2.0), )
Selected to next generation: IDs2--> (1739(f=2.0), )
----------Running generation: 871, population size: 1

***** Generation 871 : 0
**Parent Variant: [Variant id: 1741, #gens: 240, #ops: 0, parent:-]

--Child created id: 1742
--Creating new operations for variant [Variant id: 1742, #gens: 240, #ops: 0, parent:1741]
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1742, #gens: 240, #ops: 1, parent:1741] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1742
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1742/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(871): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1741(f=2.0), 1742(f=2.0), )
Selected to next generation: IDs2--> (1741(f=2.0), )
----------Running generation: 872, population size: 1

***** Generation 872 : 0
**Parent Variant: [Variant id: 1743, #gens: 240, #ops: 0, parent:-]

--Child created id: 1744
--Creating new operations for variant [Variant id: 1744, #gens: 240, #ops: 0, parent:1743]
---analyzing modificationPoint position: 145
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java170
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 170, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1744, #gens: 241, #ops: 1, parent:1743] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1744, errors: [AbstractFormat.java:171: error: incompatible types: java.text.NumberFormat cannot be converted to char
			pos.setIndex(index); 			return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
			                     			                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(872): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1743(f=2.0), 1744(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1743(f=2.0), )
----------Running generation: 873, population size: 1

***** Generation 873 : 0
**Parent Variant: [Variant id: 1745, #gens: 240, #ops: 0, parent:-]

--Child created id: 1746
--Creating new operations for variant [Variant id: 1746, #gens: 240, #ops: 0, parent:1745]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 145
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java170
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 170, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1746, #gens: 241, #ops: 1, parent:1745] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1746, errors: [AbstractFormat.java:171: error: variable c is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
			pos.setIndex(index); 			char c;
			                     			     ^]
Ingredient counter is Zero
---Undoing: gnrtn(873): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setIndex(index) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1745(f=2.0), 1746(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1745(f=2.0), )
----------Running generation: 874, population size: 1

***** Generation 874 : 0
**Parent Variant: [Variant id: 1747, #gens: 240, #ops: 0, parent:-]

--Child created id: 1748
--Creating new operations for variant [Variant id: 1748, #gens: 240, #ops: 0, parent:1747]
---analyzing modificationPoint position: 68
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1748, #gens: 239, #ops: 1, parent:1747] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1748
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1748/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(874): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1747(f=2.0), 1748(f=2.0), )
Selected to next generation: IDs2--> (1747(f=2.0), )
----------Running generation: 875, population size: 1

***** Generation 875 : 0
**Parent Variant: [Variant id: 1749, #gens: 240, #ops: 0, parent:-]

--Child created id: 1750
--Creating new operations for variant [Variant id: 1750, #gens: 240, #ops: 0, parent:1749]
---analyzing modificationPoint position: 67
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 0
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 2 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 87
---modifPoint 3 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 62
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 4 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 58
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1750, #gens: 241, #ops: 1, parent:1749] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1750
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1750/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(875): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `num = num.remainder(den)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1749(f=2.0), 1750(f=2.0), )
Selected to next generation: IDs2--> (1749(f=2.0), )
----------Running generation: 876, population size: 1

***** Generation 876 : 0
**Parent Variant: [Variant id: 1751, #gens: 240, #ops: 0, parent:-]

--Child created id: 1752
--Creating new operations for variant [Variant id: 1752, #gens: 240, #ops: 0, parent:1751]
---analyzing modificationPoint position: 108
location: DirectSearchOptimizer.java396
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1752, #gens: 239, #ops: 1, parent:1751] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1752
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1752/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(876): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1751(f=2.0), 1752(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1751(f=2.0), )
----------Running generation: 877, population size: 1

***** Generation 877 : 0
**Parent Variant: [Variant id: 1753, #gens: 240, #ops: 0, parent:-]

--Child created id: 1754
--Creating new operations for variant [Variant id: 1754, #gens: 240, #ops: 0, parent:1753]
---analyzing modificationPoint position: 56
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1754, #gens: 239, #ops: 1, parent:1753] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1754
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1754/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(877): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1753(f=2.0), 1754(f=2.0), )
Selected to next generation: IDs2--> (1753(f=2.0), )
----------Running generation: 878, population size: 1

***** Generation 878 : 0
**Parent Variant: [Variant id: 1755, #gens: 240, #ops: 0, parent:-]

--Child created id: 1756
--Creating new operations for variant [Variant id: 1756, #gens: 240, #ops: 0, parent:1755]
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1756, #gens: 241, #ops: 1, parent:1755] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1756, errors: [AbstractFormat.java:92: error: call to this must be first statement in constructor
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                                                		                                                                                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(878): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1755(f=2.0), 1756(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1755(f=2.0), )
----------Running generation: 879, population size: 1

***** Generation 879 : 0
**Parent Variant: [Variant id: 1757, #gens: 240, #ops: 0, parent:-]

--Child created id: 1758
--Creating new operations for variant [Variant id: 1758, #gens: 240, #ops: 0, parent:1757]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())))
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
Name Conflict [simplex, comparator, khi, gamma]
---modifPoint 1 not mutation generated in  // create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]
---analyzing modificationPoint position: 64
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 2 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 59
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  getDenominatorFormat().format(den, toAppendTo,  pos)
---analyzing modificationPoint position: 104
Templates availables11
Attempts Base Ingredients  1 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java307
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `iterateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 307, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `iterateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1758, #gens: 240, #ops: 1, parent:1757] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1758
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1758/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(879): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `iterateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1757(f=2.0), 1758(f=2.0), )
Selected to next generation: IDs2--> (1757(f=2.0), )
----------Running generation: 880, population size: 1

***** Generation 880 : 0
**Parent Variant: [Variant id: 1759, #gens: 240, #ops: 0, parent:-]

--Child created id: 1760
--Creating new operations for variant [Variant id: 1760, #gens: 240, #ops: 0, parent:1759]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 136
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 46
---modifPoint 3 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 86
---modifPoint 4 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 134
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 5 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i]
---analyzing modificationPoint position: 7
---modifPoint 6 not mutation generated in  return nf
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1760, #gens: 241, #ops: 1, parent:1759] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 1760
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1760/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(880): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setMaximumFractionDigits(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1759(f=2.0), 1760(f=2.0), )
Selected to next generation: IDs2--> (1759(f=2.0), )
----------Running generation: 881, population size: 1

***** Generation 881 : 0
**Parent Variant: [Variant id: 1761, #gens: 240, #ops: 0, parent:-]

--Child created id: 1762
--Creating new operations for variant [Variant id: 1762, #gens: 240, #ops: 0, parent:1761]
---analyzing modificationPoint position: 142
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  char ret = 0
---analyzing modificationPoint position: 128
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch [n]
--> var from patch: n spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java373
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] confI = startConfiguration[i] ` -topatch--> `final double[] vertexI = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 373, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] confI = startConfiguration[i] ` -topatch--> `final double[] vertexI = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1762, #gens: 240, #ops: 1, parent:1761] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1762, errors: [DirectSearchOptimizer.java:375: error: variable vertexI is already defined in method buildSimplex(double[])
			final double[] vertexI = new double[n]; 			final double[] vertexI = new double[n];
			                                        			               ^, DirectSearchOptimizer.java:377: error: cannot find symbol
				vertexI[k] = startPoint[k] + confI[k];
				                             ^
  symbol:   variable confI
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer]
Ingredient counter is Zero
---Undoing: gnrtn(881): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] confI = startConfiguration[i] ` -topatch--> `final double[] vertexI = new double[n]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1761(f=2.0), 1762(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1761(f=2.0), )
----------Running generation: 882, population size: 1

***** Generation 882 : 0
**Parent Variant: [Variant id: 1763, #gens: 240, #ops: 0, parent:-]

--Child created id: 1764
--Creating new operations for variant [Variant id: 1764, #gens: 240, #ops: 0, parent:1763]
---analyzing modificationPoint position: 67
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java147
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 147, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1764, #gens: 241, #ops: 1, parent:1763] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1764, errors: [ProperFractionFormat.java:145: error: call to this must be first statement in constructor
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                                                                                       		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(882): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1763(f=2.0), 1764(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1763(f=2.0), )
----------Running generation: 883, population size: 1

***** Generation 883 : 0
**Parent Variant: [Variant id: 1765, #gens: 240, #ops: 0, parent:-]

--Child created id: 1766
--Creating new operations for variant [Variant id: 1766, #gens: 240, #ops: 0, parent:1765]
---analyzing modificationPoint position: 72
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 40
Templates availables3
Attempts Base Ingredients  1 total 3
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java132
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1766, #gens: 240, #ops: 1, parent:1765] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1766
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1766/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(883): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1765(f=2.0), 1766(f=2.0), )
Selected to next generation: IDs2--> (1765(f=2.0), )
----------Running generation: 884, population size: 1

***** Generation 884 : 0
**Parent Variant: [Variant id: 1767, #gens: 240, #ops: 0, parent:-]

--Child created id: 1768
--Creating new operations for variant [Variant id: 1768, #gens: 240, #ops: 0, parent:1767]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
Attempts Base Ingredients  4 total 12
Attempts Base Ingredients  5 total 12
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 89
location: DirectSearchOptimizer.java143
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1768, #gens: 239, #ops: 1, parent:1767] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1768
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1768/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(884): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `startConfiguration = new double[n][n] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1767(f=2.0), 1768(f=4.0), )
Selected to next generation: IDs2--> (1767(f=2.0), )
----------Running generation: 885, population size: 1

***** Generation 885 : 0
**Parent Variant: [Variant id: 1769, #gens: 240, #ops: 0, parent:-]

--Child created id: 1770
--Creating new operations for variant [Variant id: 1770, #gens: 240, #ops: 0, parent:1769]
---analyzing modificationPoint position: 102
Templates availables14
Attempts Base Ingredients  1 total 14
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...]
---analyzing modificationPoint position: 45
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java94
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 94, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1770, #gens: 241, #ops: 1, parent:1769] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1770
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1770/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(885): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger num = fraction.getNumerator() ` -topatch--> `setWholeFormat(wholeFormat)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1769(f=2.0), 1770(f=2.0), )
Selected to next generation: IDs2--> (1769(f=2.0), )
----------Running generation: 886, population size: 1

***** Generation 886 : 0
**Parent Variant: [Variant id: 1771, #gens: 240, #ops: 0, parent:-]

--Child created id: 1772
--Creating new operations for variant [Variant id: 1772, #gens: 240, #ops: 0, parent:1771]
---analyzing modificationPoint position: 178
Templates availables39
Attempts Base Ingredients  1 total 39
---modifPoint 0 not mutation generated in  denominator = den
---analyzing modificationPoint position: 53
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1772, #gens: 239, #ops: 1, parent:1771] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1772
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1772/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(886): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1771(f=2.0), 1772(f=2.0), )
Selected to next generation: IDs2--> (1771(f=2.0), )
----------Running generation: 887, population size: 1

***** Generation 887 : 0
**Parent Variant: [Variant id: 1773, #gens: 240, #ops: 0, parent:-]

--Child created id: 1774
--Creating new operations for variant [Variant id: 1774, #gens: 240, #ops: 0, parent:1773]
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
Attempts Base Ingredients  4 total 8
Attempts Base Ingredients  5 total 8
Attempts Base Ingredients  6 total 8
Attempts Base Ingredients  7 total 8
Attempts Base Ingredients  8 total 8
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@1ab87, search space size: 8
---modifPoint 0 not mutation generated in  // parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos)
---analyzing modificationPoint position: 35
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java123
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 123, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1774, #gens: 241, #ops: 1, parent:1773] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1774
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1774/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(887): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] xTransformed = new double[n] ` -topatch--> `// evaluate it evaluateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1773(f=2.0), 1774(f=4.0), )
Selected to next generation: IDs2--> (1773(f=2.0), )
----------Running generation: 888, population size: 1

***** Generation 888 : 0
**Parent Variant: [Variant id: 1775, #gens: 240, #ops: 0, parent:-]

--Child created id: 1776
--Creating new operations for variant [Variant id: 1776, #gens: 240, #ops: 0, parent:1775]
---analyzing modificationPoint position: 74
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch [toAppendTo]
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java191
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 191, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1776, #gens: 240, #ops: 1, parent:1775] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1776
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1776/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(888): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return toAppendTo` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1775(f=2.0), 1776(f=2.0), )
Selected to next generation: IDs2--> (1775(f=2.0), )
----------Running generation: 889, population size: 1

***** Generation 889 : 0
**Parent Variant: [Variant id: 1777, #gens: 240, #ops: 0, parent:-]

--Child created id: 1778
--Creating new operations for variant [Variant id: 1778, #gens: 240, #ops: 0, parent:1777]
---analyzing modificationPoint position: 61
---modifPoint 0 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 11
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 66
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1778, #gens: 239, #ops: 1, parent:1777] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1778
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1778/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(889): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1777(f=2.0), 1778(f=2.0), )
Selected to next generation: IDs2--> (1777(f=2.0), )
----------Running generation: 890, population size: 1

***** Generation 890 : 0
**Parent Variant: [Variant id: 1779, #gens: 240, #ops: 0, parent:-]

--Child created id: 1780
--Creating new operations for variant [Variant id: 1780, #gens: 240, #ops: 0, parent:1779]
---analyzing modificationPoint position: 165
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 7
---modifPoint 1 not mutation generated in  return nf
---analyzing modificationPoint position: 146
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  if (index < n) { 	ret = c; }
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 3 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1780, #gens: 239, #ops: 1, parent:1779] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1780
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1780/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(890): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1779(f=2.0), 1780(f=2.0), )
Selected to next generation: IDs2--> (1779(f=2.0), )
----------Running generation: 891, population size: 1

***** Generation 891 : 0
**Parent Variant: [Variant id: 1781, #gens: 240, #ops: 0, parent:-]

--Child created id: 1782
--Creating new operations for variant [Variant id: 1782, #gens: 240, #ops: 0, parent:1781]
---analyzing modificationPoint position: 38
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java127
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 127, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1782, #gens: 241, #ops: 1, parent:1781] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1782, errors: [MultiDirectional.java:127: error: incompatible types: missing return value
			} 			return;
			  			^]
Ingredient counter is Zero
---Undoing: gnrtn(891): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Dou[...] ` -topatch--> `return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1781(f=2.0), 1782(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1781(f=2.0), )
----------Running generation: 892, population size: 1

***** Generation 892 : 0
**Parent Variant: [Variant id: 1783, #gens: 240, #ops: 0, parent:-]

--Child created id: 1784
--Creating new operations for variant [Variant id: 1784, #gens: 240, #ops: 0, parent:1783]
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1784, #gens: 241, #ops: 1, parent:1783] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1784
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1784/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(892): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1783(f=2.0), 1784(f=2.0), )
Selected to next generation: IDs2--> (1783(f=2.0), )
----------Running generation: 893, population size: 1

***** Generation 893 : 0
**Parent Variant: [Variant id: 1785, #gens: 240, #ops: 0, parent:-]

--Child created id: 1786
--Creating new operations for variant [Variant id: 1786, #gens: 240, #ops: 0, parent:1785]
---analyzing modificationPoint position: 73
Templates availables12
Attempts Base Ingredients  1 total 12
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 152
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 135
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 2 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 3 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 4 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 35
---modifPoint 5 not mutation generated in  final double[] xTransformed = new double[n]
---analyzing modificationPoint position: 131
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1786, #gens: 239, #ops: 1, parent:1785] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 1786
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1786/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(893): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1785(f=2.0), 1786(f=3.0), )
Selected to next generation: IDs2--> (1785(f=2.0), )
----------Running generation: 894, population size: 1

***** Generation 894 : 0
**Parent Variant: [Variant id: 1787, #gens: 240, #ops: 0, parent:-]

--Child created id: 1788
--Creating new operations for variant [Variant id: 1788, #gens: 240, #ops: 0, parent:1787]
---analyzing modificationPoint position: 72
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtIfImpl@1, search space size: 5
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...]
---analyzing modificationPoint position: 194
Templates availables1
Attempts Base Ingredients  1 total 1
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  converged &= checker.converged(iterations, previous[i], simplex[i])
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java110
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 110, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1788, #gens: 241, #ops: 1, parent:1787] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1788
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1788/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(894): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return numeratorFormat ` -topatch--> `numeratorFormat = numeratorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1787(f=2.0), 1788(f=2.0), )
Selected to next generation: IDs2--> (1787(f=2.0), )
----------Running generation: 895, population size: 1

***** Generation 895 : 0
**Parent Variant: [Variant id: 1789, #gens: 240, #ops: 0, parent:-]

--Child created id: 1790
--Creating new operations for variant [Variant id: 1790, #gens: 240, #ops: 0, parent:1789]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 2 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 3 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 25
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, khi, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: khi spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java73
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 73, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1790, #gens: 240, #ops: 1, parent:1789] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1790, errors: [MultiDirectional.java:79: error: cannot find symbol
			final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator); 			if (comparator.compare(reflected, best) < 0) { 				// compute the expanded simplex 				final org.apache.commons.math.optimization.RealPointValuePair[] reflectedSimplex = simplex; 				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator);
			                                                                                                                        			                       ^
  symbol:   variable reflected
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:80: error: cannot find symbol
				if (comparator.compare(reflected, expanded) <= 0) {
				                       ^
  symbol:   variable reflected
  location: class org.apache.commons.math.optimization.direct.MultiDirectional, MultiDirectional.java:82: error: cannot find symbol
					simplex = reflectedSimplex;
					          ^
  symbol:   variable reflectedSimplex
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(895): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1789(f=2.0), 1790(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1789(f=2.0), )
----------Running generation: 896, population size: 1

***** Generation 896 : 0
**Parent Variant: [Variant id: 1791, #gens: 240, #ops: 0, parent:-]

--Child created id: 1792
--Creating new operations for variant [Variant id: 1792, #gens: 240, #ops: 0, parent:1791]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 72
location: FractionFormat.java175
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1792, #gens: 239, #ops: 1, parent:1791] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1792
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1792/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(896): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.Fraction) { 	ret = format(((org.apache.commons.m[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1791(f=2.0), 1792(f=2.0), )
Selected to next generation: IDs2--> (1791(f=2.0), )
----------Running generation: 897, population size: 1

***** Generation 897 : 0
**Parent Variant: [Variant id: 1793, #gens: 240, #ops: 0, parent:-]

--Child created id: 1794
--Creating new operations for variant [Variant id: 1794, #gens: 240, #ops: 0, parent:1793]
---analyzing modificationPoint position: 194
Templates availables1
Attempts Base Ingredients  1 total 1
--- no mutation left to apply in element spoon.support.reflect.code.CtOperatorAssignmentImpl@1, search space size: 1
---modifPoint 0 not mutation generated in  converged &= checker.converged(iterations, previous[i], simplex[i])
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java66
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 66, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1794, #gens: 241, #ops: 1, parent:1793] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1794
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1794/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(897): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `incrementIterationsCounter() ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1793(f=2.0), 1794(f=2.0), )
Selected to next generation: IDs2--> (1793(f=2.0), )
----------Running generation: 898, population size: 1

***** Generation 898 : 0
**Parent Variant: [Variant id: 1795, #gens: 240, #ops: 0, parent:-]

--Child created id: 1796
--Creating new operations for variant [Variant id: 1796, #gens: 240, #ops: 0, parent:1795]
---analyzing modificationPoint position: 70
Templates availables46
Attempts Base Ingredients  1 total 46
---modifPoint 0 not mutation generated in  if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...]
---analyzing modificationPoint position: 157
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.relativeThreshold]
--> var from patch: this.relativeThreshold spoon.support.reflect.code.CtFieldWriteImpl
location: SimpleScalarValueChecker.java52
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.relativeThreshold = relativeThreshold` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 52, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.relativeThreshold = relativeThreshold` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1796, #gens: 241, #ops: 1, parent:1795] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1796, errors: [SimpleScalarValueChecker.java:67: error: variable relativeThreshold might already have been assigned
		this.relativeThreshold = relativeThreshold;} 	/**
		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(898): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.relativeThreshold = relativeThreshold` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1795(f=2.0), 1796(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1795(f=2.0), )
----------Running generation: 899, population size: 1

***** Generation 899 : 0
**Parent Variant: [Variant id: 1797, #gens: 240, #ops: 0, parent:-]

--Child created id: 1798
--Creating new operations for variant [Variant id: 1798, #gens: 240, #ops: 0, parent:1797]
---analyzing modificationPoint position: 57
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1798, #gens: 239, #ops: 1, parent:1797] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1798
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1798/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(899): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1797(f=2.0), 1798(f=2.0), )
Selected to next generation: IDs2--> (1797(f=2.0), )
----------Running generation: 900, population size: 1

***** Generation 900 : 0
**Parent Variant: [Variant id: 1799, #gens: 240, #ops: 0, parent:-]

--Child created id: 1800
--Creating new operations for variant [Variant id: 1800, #gens: 240, #ops: 0, parent:1799]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 96
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java63
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 63, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1800, #gens: 241, #ops: 1, parent:1799] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1800, errors: [RealPointValuePair.java:65: error: final parameter value may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point; 		this.value = value; 		value = value;}
	    	                                                                                               		                                                  		                    		^]
Ingredient counter is Zero
---Undoing: gnrtn(900): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1799(f=2.0), 1800(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1799(f=2.0), )
----------Running generation: 901, population size: 1

***** Generation 901 : 0
**Parent Variant: [Variant id: 1801, #gens: 240, #ops: 0, parent:-]

--Child created id: 1802
--Creating new operations for variant [Variant id: 1802, #gens: 240, #ops: 0, parent:1801]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1802, #gens: 239, #ops: 1, parent:1801] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1802
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1802/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(901): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1801(f=2.0), 1802(f=2.0), )
Selected to next generation: IDs2--> (1801(f=2.0), )
----------Running generation: 902, population size: 1

***** Generation 902 : 0
**Parent Variant: [Variant id: 1803, #gens: 240, #ops: 0, parent:-]

--Child created id: 1804
--Creating new operations for variant [Variant id: 1804, #gens: 240, #ops: 0, parent:1803]
---analyzing modificationPoint position: 128
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] confI = startConfiguration[i]
---analyzing modificationPoint position: 83
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java229
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 229, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1804, #gens: 241, #ops: 1, parent:1803] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1804
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1804/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(902): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (num == null) { 	// invalid integer number 	// set index back to initial, error index should alre[...] ` -topatch--> `// invalid integer number // set index back to initial, error index should already be set // charact[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1803(f=2.0), 1804(f=2.0), )
Selected to next generation: IDs2--> (1803(f=2.0), )
----------Running generation: 903, population size: 1

***** Generation 903 : 0
**Parent Variant: [Variant id: 1805, #gens: 240, #ops: 0, parent:-]

--Child created id: 1806
--Creating new operations for variant [Variant id: 1806, #gens: 240, #ops: 0, parent:1805]
---analyzing modificationPoint position: 40
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java132
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 132, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1806, #gens: 241, #ops: 1, parent:1805] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1806
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1806/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(903): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return simplex[0] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1805(f=2.0), 1806(f=2.0), )
Selected to next generation: IDs2--> (1805(f=2.0), )
----------Running generation: 904, population size: 1

***** Generation 904 : 0
**Parent Variant: [Variant id: 1807, #gens: 240, #ops: 0, parent:-]

--Child created id: 1808
--Creating new operations for variant [Variant id: 1808, #gens: 240, #ops: 0, parent:1807]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 5
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 153
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 86
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 2 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 62
Templates availables5
Attempts Base Ingredients  1 total 5
vars from patch [wholeFormat]
--> var from patch: wholeFormat spoon.support.reflect.code.CtFieldReadImpl
location: ProperFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1808, #gens: 240, #ops: 1, parent:1807] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1808, errors: [ProperFractionFormat.java:119: error: incompatible types: java.text.NumberFormat cannot be converted to java.lang.StringBuffer
		return wholeFormat;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(904): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return wholeFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1807(f=2.0), 1808(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1807(f=2.0), )
----------Running generation: 905, population size: 1

***** Generation 905 : 0
**Parent Variant: [Variant id: 1809, #gens: 240, #ops: 0, parent:-]

--Child created id: 1810
--Creating new operations for variant [Variant id: 1810, #gens: 240, #ops: 0, parent:1809]
---analyzing modificationPoint position: 17
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch []
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 153, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1810, #gens: 240, #ops: 1, parent:1809] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1810
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1810/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(905): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1809(f=2.0), 1810(f=2.0), )
Selected to next generation: IDs2--> (1809(f=2.0), )
----------Running generation: 906, population size: 1

***** Generation 906 : 0
**Parent Variant: [Variant id: 1811, #gens: 240, #ops: 0, parent:-]

--Child created id: 1812
--Creating new operations for variant [Variant id: 1812, #gens: 240, #ops: 0, parent:1811]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [fraction]
--> var from patch: fraction spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1812, #gens: 241, #ops: 1, parent:1811] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1812, errors: [ProperFractionFormat.java:96: error: variable num is already defined in method format(org.apache.commons.math.fraction.Fraction,java.lang.StringBuffer,java.text.FieldPosition)
		int num = fraction.getNumerator(); 		pos.setBeginIndex(0); 		pos.setEndIndex(0); 		int num = fraction.getNumerator();
		                                   		                      		                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(906): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `int num = fraction.getNumerator()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1811(f=2.0), 1812(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1811(f=2.0), )
----------Running generation: 907, population size: 1

***** Generation 907 : 0
**Parent Variant: [Variant id: 1813, #gens: 240, #ops: 0, parent:-]

--Child created id: 1814
--Creating new operations for variant [Variant id: 1814, #gens: 240, #ops: 0, parent:1813]
---analyzing modificationPoint position: 147
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 121
location: DirectSearchOptimizer.java287
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1814, #gens: 239, #ops: 1, parent:1813] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1814
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1814/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(907): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `evaluations = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1813(f=2.0), 1814(f=2.0), )
Selected to next generation: IDs2--> (1813(f=2.0), )
----------Running generation: 908, population size: 1

***** Generation 908 : 0
**Parent Variant: [Variant id: 1815, #gens: 240, #ops: 0, parent:-]

--Child created id: 1816
--Creating new operations for variant [Variant id: 1816, #gens: 240, #ops: 0, parent:1815]
---analyzing modificationPoint position: 8
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 155
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 1 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 46
---modifPoint 3 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 130
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java375
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 375, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1816, #gens: 241, #ops: 1, parent:1815] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1816, errors: [DirectSearchOptimizer.java:378: error: incompatible types: unexpected return value
			} 			return iterations;
			  			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(908): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1815(f=2.0), 1816(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1815(f=2.0), )
----------Running generation: 909, population size: 1

***** Generation 909 : 0
**Parent Variant: [Variant id: 1817, #gens: 240, #ops: 0, parent:-]

--Child created id: 1818
--Creating new operations for variant [Variant id: 1818, #gens: 240, #ops: 0, parent:1817]
---analyzing modificationPoint position: 125
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java368
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 368, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1818, #gens: 241, #ops: 1, parent:1817] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1818, errors: [DirectSearchOptimizer.java:369: error: incompatible types: unexpected return value
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		return evaluations;
		                                                                              		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(909): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1817(f=2.0), 1818(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1817(f=2.0), )
----------Running generation: 910, population size: 1

***** Generation 910 : 0
**Parent Variant: [Variant id: 1819, #gens: 240, #ops: 0, parent:-]

--Child created id: 1820
--Creating new operations for variant [Variant id: 1820, #gens: 240, #ops: 0, parent:1819]
---analyzing modificationPoint position: 165
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 0 not mutation generated in  return numerator
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1820, #gens: 241, #ops: 1, parent:1819] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1820, errors: [ProperBigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:250: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:250: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:251: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:252: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:252: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:253: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:253: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:254: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:254: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:254: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:254: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:254: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(910): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1819(f=2.0), 1820(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1819(f=2.0), )
----------Running generation: 911, population size: 1

***** Generation 911 : 0
**Parent Variant: [Variant id: 1821, #gens: 240, #ops: 0, parent:-]

--Child created id: 1822
--Creating new operations for variant [Variant id: 1822, #gens: 240, #ops: 0, parent:1821]
---analyzing modificationPoint position: 89
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  startConfiguration = new double[n][n]
---analyzing modificationPoint position: 41
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 2 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 58
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 3 not mutation generated in  toAppendTo.append(" / ")
---analyzing modificationPoint position: 119
Templates availables19
Attempts Base Ingredients  1 total 19
vars from patch []
location: DirectSearchOptimizer.java274
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...] ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 274, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...] ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1822, #gens: 240, #ops: 1, parent:1821] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child does NOT compile: 1822, errors: [DirectSearchOptimizer.java:290: error: cannot find symbol
		evaluateSimplex(comparator);
		                ^
  symbol:   variable comparator
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:308: error: cannot find symbol
			iterateSimplex(comparator);
			               ^
  symbol:   variable comparator
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer]
Ingredient counter is Zero
---Undoing: gnrtn(911): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...] ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1821(f=2.0), 1822(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1821(f=2.0), )
----------Running generation: 912, population size: 1

***** Generation 912 : 0
**Parent Variant: [Variant id: 1823, #gens: 240, #ops: 0, parent:-]

--Child created id: 1824
--Creating new operations for variant [Variant id: 1824, #gens: 240, #ops: 0, parent:1823]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 75, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1824, #gens: 241, #ops: 1, parent:1823] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1824, errors: [ProperFractionFormat.java:76: error: call to this must be first statement in constructor
		setWholeFormat(wholeFormat); 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat());
		                             		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(912): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1823(f=2.0), 1824(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1823(f=2.0), )
----------Running generation: 913, population size: 1

***** Generation 913 : 0
**Parent Variant: [Variant id: 1825, #gens: 240, #ops: 0, parent:-]

--Child created id: 1826
--Creating new operations for variant [Variant id: 1826, #gens: 240, #ops: 0, parent:1825]
---analyzing modificationPoint position: 37
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java125
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 125, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1826, #gens: 241, #ops: 1, parent:1825] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1826, errors: [MultiDirectional.java:126: error: cannot assign a value to final variable gamma
				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])); 				this.gamma = 0.5;
				                                                                          				    ^]
Ingredient counter is Zero
---Undoing: gnrtn(913): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j])) ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1825(f=2.0), 1826(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1825(f=2.0), )
----------Running generation: 914, population size: 1

***** Generation 914 : 0
**Parent Variant: [Variant id: 1827, #gens: 240, #ops: 0, parent:-]

--Child created id: 1828
--Creating new operations for variant [Variant id: 1828, #gens: 240, #ops: 0, parent:1827]
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 0 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 6
location: AbstractFormat.java93
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1828, #gens: 239, #ops: 1, parent:1827] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1828
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1828/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(914): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1827(f=2.0), 1828(f=2.0), )
Selected to next generation: IDs2--> (1827(f=2.0), )
----------Running generation: 915, population size: 1

***** Generation 915 : 0
**Parent Variant: [Variant id: 1829, #gens: 240, #ops: 0, parent:-]

--Child created id: 1830
--Creating new operations for variant [Variant id: 1830, #gens: 240, #ops: 0, parent:1829]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...]
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 130
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [checker]
--> var from patch: checker spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java375
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 375, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1830, #gens: 241, #ops: 1, parent:1829] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1830, errors: [DirectSearchOptimizer.java:375: error: incompatible types: unexpected return value
			final double[] vertexI = new double[n]; 			return checker;
			                                        			       ^]
Ingredient counter is Zero
---Undoing: gnrtn(915): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `for (int k = 0; k < n; ++k) { 	vertexI[k] = startPoint[k] + confI[k]; } ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1829(f=2.0), 1830(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1829(f=2.0), )
----------Running generation: 916, population size: 1

***** Generation 916 : 0
**Parent Variant: [Variant id: 1831, #gens: 240, #ops: 0, parent:-]

--Child created id: 1832
--Creating new operations for variant [Variant id: 1832, #gens: 240, #ops: 0, parent:1831]
---analyzing modificationPoint position: 174
Templates availables166
Attempts Base Ingredients  1 total 166
vars from patch [numerator, denominator]
--> var from patch: numerator spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: denominator spoon.support.reflect.code.CtFieldReadImpl
location: BigFraction.java164
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(numerator.negate(), denominator)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 164, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(numerator.negate(), denominator)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1832, #gens: 241, #ops: 1, parent:1831] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1832, errors: [BigFraction.java:920: error: illegal start of expression
	 * Create a fraction given the double value.
	 ^, BigFraction.java:920: error: ';' expected
	 * Create a fraction given the double value.
	         ^, BigFraction.java:920: error: ';' expected
	 * Create a fraction given the double value.
	                    ^, BigFraction.java:920: error: ';' expected
	 * Create a fraction given the double value.
	                              ^, BigFraction.java:920: error: ';' expected
	 * Create a fraction given the double value.
	                                           ^, BigFraction.java:922: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	 ^, BigFraction.java:922: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	       ^, BigFraction.java:922: error: ';' expected
	 * This constructor behaves <em>differently</em> from
	                           ^, BigFraction.java:922: error: illegal start of expression
	 * This constructor behaves <em>differently</em> from
	                                ^, BigFraction.java:922: error: illegal start of type
	 * This constructor behaves <em>differently</em> from
	                                            ^, BigFraction.java:922: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                           ^, BigFraction.java:923: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	   ^, BigFraction.java:922: error: not a statement
	 * This constructor behaves <em>differently</em> from
	                                               ^, BigFraction.java:923: error: illegal character: '#'
	 * {@link #BigFraction(double, double, int)}. It converts the
	          ^, BigFraction.java:923: error: illegal start of type
	 * {@link #BigFraction(double, double, int)}. It converts the
	                      ^, BigFraction.java:923: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                       ^, BigFraction.java:923: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                             ^, BigFraction.java:923: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                               ^, BigFraction.java:923: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                     ^, BigFraction.java:923: error: not a statement
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                       ^, BigFraction.java:923: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                          ^, BigFraction.java:923: error: illegal start of expression
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                            ^, BigFraction.java:923: error: ';' expected
	 * {@link #BigFraction(double, double, int)}. It converts the
	                                                         ^, BigFraction.java:924: error: '.class' expected
	 * double value exactly, considering its internal bits representation.
	          ^, BigFraction.java:924: error: not a statement
	 * double value exactly, considering its internal bits representation.
	 ^, BigFraction.java:924: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                    ^, BigFraction.java:924: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                 ^, BigFraction.java:924: error: ';' expected
	 * double value exactly, considering its internal bits representation.
	                                                                     ^, BigFraction.java:925: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	            ^, BigFraction.java:925: error: not a statement
	 * This does work for all values except NaN and infinities and does
	             ^, BigFraction.java:925: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                 ^, BigFraction.java:925: error: '(' expected
	 * This does work for all values except NaN and infinities and does
	                     ^, BigFraction.java:925: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                ^, BigFraction.java:925: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                       ^, BigFraction.java:925: error: not a statement
	 * This does work for all values except NaN and infinities and does
	                                        ^, BigFraction.java:925: error: ')' expected
	 * This does work for all values except NaN and infinities and does
	                                           ^, BigFraction.java:925: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                          ^, BigFraction.java:925: error: variable declaration not allowed here
	 * This does work for all values except NaN and infinities and does
	                                                ^, BigFraction.java:925: error: ';' expected
	 * This does work for all values except NaN and infinities and does
	                                                                   ^, BigFraction.java:926: error: ';' expected
	 * not requires any loop or convergence threshold.
	               ^, BigFraction.java:926: error: ';' expected
	 * not requires any loop or convergence threshold.
	                        ^, BigFraction.java:926: error: ';' expected
	 * not requires any loop or convergence threshold.
	                                       ^, BigFraction.java:926: error: <identifier> expected
	 * not requires any loop or convergence threshold.
	                                                  ^, BigFraction.java:927: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:928: error: illegal start of expression
	 * <p>
	 ^, BigFraction.java:929: error: illegal start of expression
	 * Since this conversion is exact and since double numbers are sometimes
	 ^, BigFraction.java:927: error: not a statement
	 * </p>
	      ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	        ^, BigFraction.java:929: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	         ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	             ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                           ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                     ^, BigFraction.java:929: error: not a statement
	 * Since this conversion is exact and since double numbers are sometimes
	                                      ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                           ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                          ^, BigFraction.java:929: error: ';' expected
	 * Since this conversion is exact and since double numbers are sometimes
	                                                                        ^, BigFraction.java:930: error: not a statement
	 * approximated, the fraction created may seem strange in some cases. For example
	   ^, BigFraction.java:930: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	               ^, BigFraction.java:930: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                             ^, BigFraction.java:930: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                         ^, BigFraction.java:930: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                      ^, BigFraction.java:930: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                              ^, BigFraction.java:930: error: ';' expected
	 * approximated, the fraction created may seem strange in some cases. For example
	                                                                                 ^, BigFraction.java:931: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	           ^, BigFraction.java:931: error: ';' expected
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                 ^, BigFraction.java:931: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                            ^, BigFraction.java:931: error: illegal start of expression
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                ^, BigFraction.java:931: error: not a statement
	 * calling <code>new BigFraction(1.0 / 3.0)</code> does <em>not</em> create
	                                                                   ^, BigFraction.java:932: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	      ^, BigFraction.java:932: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	       ^, BigFraction.java:932: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	               ^, BigFraction.java:932: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                           ^, BigFraction.java:932: error: not a statement
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                            ^, BigFraction.java:932: error: ';' expected
	 * the fraction 1/3 but the fraction 6004799503160661 / 18014398509481984
	                                    ^, BigFraction.java:933: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	              ^, BigFraction.java:933: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                            ^, BigFraction.java:933: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                      ^, BigFraction.java:933: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                      ^, BigFraction.java:933: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                             ^, BigFraction.java:933: error: not a statement
	 * because the double number passed to the constructor is not exactly 1/3
	                                                              ^, BigFraction.java:933: error: ';' expected
	 * because the double number passed to the constructor is not exactly 1/3
	                                                                     ^, BigFraction.java:934: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	    ^, BigFraction.java:934: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	        ^, BigFraction.java:934: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                      ^, BigFraction.java:934: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                ^, BigFraction.java:934: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                           ^, BigFraction.java:934: error: not a statement
	 * (this number cannot be stored exactly in IEEE754).
	                                            ^, BigFraction.java:934: error: ';' expected
	 * (this number cannot be stored exactly in IEEE754).
	                                                   ^, BigFraction.java:935: error: illegal start of type
	 * </p>
	    ^, BigFraction.java:936: error: illegal start of expression
	 *
	 ^, BigFraction.java:937: error: illegal start of expression
	 * @see #BigFraction(double, double, int)
	 ^, BigFraction.java:937: error: illegal character: '#'
	 * @see #BigFraction(double, double, int)
	        ^, BigFraction.java:935: error: not a statement
	 * </p>
	      ^, BigFraction.java:937: error: ';' expected
	 * @see #BigFraction(double, double, int)
	       ^, BigFraction.java:937: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                           ^, BigFraction.java:937: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                   ^, BigFraction.java:937: error: '.class' expected
	 * @see #BigFraction(double, double, int)
	                                        ^, BigFraction.java:938: error: illegal start of expression
	 * @param value
	   ^, BigFraction.java:939: error: not a statement
	 * 		the double value to convert to a fraction.
	 ^, BigFraction.java:939: error: ';' expected
	 * 		the double value to convert to a fraction.
	   		   ^]
Ingredient counter is Zero
---Undoing: gnrtn(916): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// reduce numerator and denominator by greatest common denominator final java.math.BigInteger gcd = [...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(numerator.negate(), denominator)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1831(f=2.0), 1832(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1831(f=2.0), )
----------Running generation: 917, population size: 1

***** Generation 917 : 0
**Parent Variant: [Variant id: 1833, #gens: 240, #ops: 0, parent:-]

--Child created id: 1834
--Creating new operations for variant [Variant id: 1834, #gens: 240, #ops: 0, parent:1833]
---analyzing modificationPoint position: 75
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // try to parse improper fraction org.apache.commons.math.fraction.Fraction ret = super.parse(source[...]
---analyzing modificationPoint position: 120
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  // initialize search iterations = 0
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 2 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 54
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]
---analyzing modificationPoint position: 169
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java81
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 81, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1834, #gens: 241, #ops: 1, parent:1833] gen mutated: 1 , gen not mut: 4, gen not applied  0
-The child compiles: id 1834
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1834/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(917): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1833(f=2.0), 1834(f=2.0), )
Selected to next generation: IDs2--> (1833(f=2.0), )
----------Running generation: 918, population size: 1

***** Generation 918 : 0
**Parent Variant: [Variant id: 1835, #gens: 240, #ops: 0, parent:-]

--Child created id: 1836
--Creating new operations for variant [Variant id: 1836, #gens: 240, #ops: 0, parent:1835]
---analyzing modificationPoint position: 7
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 113
location: AbstractFormat.java173
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1836, #gens: 239, #ops: 1, parent:1835] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1836
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1836/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(918): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1835(f=2.0), 1836(f=2.0), )
Selected to next generation: IDs2--> (1835(f=2.0), )
----------Running generation: 919, population size: 1

***** Generation 919 : 0
**Parent Variant: [Variant id: 1837, #gens: 240, #ops: 0, parent:-]

--Child created id: 1838
--Creating new operations for variant [Variant id: 1838, #gens: 240, #ops: 0, parent:1837]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 84
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: BigFraction.java743
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFraction line: 743, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1838, #gens: 240, #ops: 1, parent:1837] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1838, errors: [BigFraction.java:1130: error: incompatible types: org.apache.commons.math.fraction.BigFractionField cannot be converted to java.math.BigInteger
		return org.apache.commons.math.fraction.BigFractionField.getInstance();} 	/**
		                                                                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(919): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return denominator ` -topatch--> `return org.apache.commons.math.fraction.BigFractionField.getInstance()` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1837(f=2.0), 1838(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1837(f=2.0), )
----------Running generation: 920, population size: 1

***** Generation 920 : 0
**Parent Variant: [Variant id: 1839, #gens: 240, #ops: 0, parent:-]

--Child created id: 1840
--Creating new operations for variant [Variant id: 1840, #gens: 240, #ops: 0, parent:1839]
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1840, #gens: 241, #ops: 1, parent:1839] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1840, errors: [ProperFractionFormat.java:158: error: unreachable statement
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		^]
Ingredient counter is Zero
---Undoing: gnrtn(920): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1839(f=2.0), 1840(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1839(f=2.0), )
----------Running generation: 921, population size: 1

***** Generation 921 : 0
**Parent Variant: [Variant id: 1841, #gens: 240, #ops: 0, parent:-]

--Child created id: 1842
--Creating new operations for variant [Variant id: 1842, #gens: 240, #ops: 0, parent:1841]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java145
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `// we have found an optimum return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 145, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `// we have found an optimum return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1842, #gens: 241, #ops: 1, parent:1841] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1842, errors: [DirectSearchOptimizer.java:337: error: illegal start of type
	 * Increment the iterations counter by 1.
	 ^, DirectSearchOptimizer.java:337: error: ';' expected
	 * Increment the iterations counter by 1.
	                ^, DirectSearchOptimizer.java:337: error: ';' expected
	 * Increment the iterations counter by 1.
	                                   ^, DirectSearchOptimizer.java:337: error: <identifier> expected
	 * Increment the iterations counter by 1.
	                                      ^, DirectSearchOptimizer.java:339: error: <identifier> expected
	 * @exception OptimizationException
	                                   ^, DirectSearchOptimizer.java:340: error: ';' expected
	 * 		if the maximal number
	   		              ^, DirectSearchOptimizer.java:340: error: <identifier> expected
	 * 		if the maximal number
	   		                     ^, DirectSearchOptimizer.java:341: error: ';' expected
	 * 		of iterations is exceeded
	   		             ^, DirectSearchOptimizer.java:341: error: ';' expected
	 * 		of iterations is exceeded
	   		                         ^]
Ingredient counter is Zero
---Undoing: gnrtn(921): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `// we have found an optimum return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1841(f=2.0), 1842(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1841(f=2.0), )
----------Running generation: 922, population size: 1

***** Generation 922 : 0
**Parent Variant: [Variant id: 1843, #gens: 240, #ops: 0, parent:-]

--Child created id: 1844
--Creating new operations for variant [Variant id: 1844, #gens: 240, #ops: 0, parent:1843]
---analyzing modificationPoint position: 88
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [this.maxIterations]
--> var from patch: this.maxIterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java142
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// only the relative position of the n final vertices with respect // to the first one are stored fi[...] ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 142, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// only the relative position of the n final vertices with respect // to the first one are stored fi[...] ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1844, #gens: 241, #ops: 1, parent:1843] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1844, errors: [DirectSearchOptimizer.java:222: error: illegal start of expression
	 * Set start configuration for simplex.
	 ^, DirectSearchOptimizer.java:222: error: ';' expected
	 * Set start configuration for simplex.
	      ^, DirectSearchOptimizer.java:222: error: ';' expected
	 * Set start configuration for simplex.
	                          ^, DirectSearchOptimizer.java:222: error: '(' expected
	 * Set start configuration for simplex.
	                              ^, DirectSearchOptimizer.java:222: error: <identifier> expected
	 * Set start configuration for simplex.
	                                       ^, DirectSearchOptimizer.java:223: error: illegal start of expression
	 * <p>The real initial simplex will be set up by moving the reference
	      ^, DirectSearchOptimizer.java:223: error: not a statement
	 * <p>The real initial simplex will be set up by moving the reference
	 ^, DirectSearchOptimizer.java:223: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	         ^, DirectSearchOptimizer.java:223: error: not a statement
	 * <p>The real initial simplex will be set up by moving the reference
	          ^, DirectSearchOptimizer.java:223: error: ')' expected
	 * <p>The real initial simplex will be set up by moving the reference
	              ^, DirectSearchOptimizer.java:223: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                              ^, DirectSearchOptimizer.java:223: error: variable declaration not allowed here
	 * <p>The real initial simplex will be set up by moving the reference
	                       ^, DirectSearchOptimizer.java:223: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                      ^, DirectSearchOptimizer.java:223: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                             ^, DirectSearchOptimizer.java:223: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                                       ^, DirectSearchOptimizer.java:223: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                                                     ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	               ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                        ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                    ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                               ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                      ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                                  ^, DirectSearchOptimizer.java:224: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                                         ^, DirectSearchOptimizer.java:225: error: illegal start of type
	 * optimization.</p>
	                 ^, DirectSearchOptimizer.java:226: error: illegal start of expression
	 *
	 ^, DirectSearchOptimizer.java:227: error: illegal start of expression
	 * @param referenceSimplex
	 ^, DirectSearchOptimizer.java:227: error: illegal start of expression
	 * @param referenceSimplex
	   ^, DirectSearchOptimizer.java:225: error: not a statement
	 * optimization.</p>
	                   ^, DirectSearchOptimizer.java:228: error: ';' expected
	 * 		reference simplex
	   		         ^, DirectSearchOptimizer.java:229: error: illegal start of expression
	 * @exception IllegalArgumentException
	   ^, DirectSearchOptimizer.java:230: error: illegal start of expression
	 * 		if the reference simplex does not
	   		^, DirectSearchOptimizer.java:230: error: not a statement
	 * 		if the reference simplex does not
	 ^, DirectSearchOptimizer.java:230: error: '(' expected
	 * 		if the reference simplex does not
	   		  ^, DirectSearchOptimizer.java:230: error: ')' expected
	 * 		if the reference simplex does not
	   		      ^, DirectSearchOptimizer.java:230: error: ';' expected
	 * 		if the reference simplex does not
	   		                        ^, DirectSearchOptimizer.java:230: error: variable declaration not allowed here
	 * 		if the reference simplex does not
	   		                 ^, DirectSearchOptimizer.java:230: error: ';' expected
	 * 		if the reference simplex does not
	   		                                 ^, DirectSearchOptimizer.java:231: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		          ^, DirectSearchOptimizer.java:231: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                    ^, DirectSearchOptimizer.java:231: error: not a statement
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                     ^, DirectSearchOptimizer.java:231: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                          ^, DirectSearchOptimizer.java:231: error: not a statement
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                            ^, DirectSearchOptimizer.java:231: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                              ^, DirectSearchOptimizer.java:231: error: '(' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                 ^, DirectSearchOptimizer.java:231: error: ')' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                       ^, DirectSearchOptimizer.java:231: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                            ^, DirectSearchOptimizer.java:231: error: variable declaration not allowed here
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                           ^, DirectSearchOptimizer.java:231: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                                               ^, DirectSearchOptimizer.java:232: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		      ^, DirectSearchOptimizer.java:232: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                        ^, DirectSearchOptimizer.java:232: error: not a statement
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                         ^, DirectSearchOptimizer.java:232: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                           ^, DirectSearchOptimizer.java:232: error: '(' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                              ^, DirectSearchOptimizer.java:232: error: ')' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                  ^, DirectSearchOptimizer.java:232: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                         ^, DirectSearchOptimizer.java:232: error: variable declaration not allowed here
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                      ^, DirectSearchOptimizer.java:232: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                                     ^, DirectSearchOptimizer.java:233: error: illegal start of expression
	 */ 	public void setStartConfiguration(final double[][] referenceSimplex) throws java.lang.IllegalArgumentException { 		// only the relative position of the n final vertices with respect 		// to the first one are stored 		final int n = referenceSimplex.length - 1; 		if (n < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");} 		startConfiguration = new double[n][n]; 		final double[] ref0 = referenceSimplex[0]; 		// vertices loop
	  ^, DirectSearchOptimizer.java:233: error: illegal start of expression
	 */ 	public void setStartConfiguration(final double[][] referenceSimplex) throws java.lang.IllegalArgumentException { 		// only the relative position of the n final vertices with respect 		// to the first one are stored 		final int n = referenceSimplex.length - 1; 		if (n < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");} 		startConfiguration = new double[n][n]; 		final double[] ref0 = referenceSimplex[0]; 		// vertices loop
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(922): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// only the relative position of the n final vertices with respect // to the first one are stored fi[...] ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1843(f=2.0), 1844(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1843(f=2.0), )
----------Running generation: 923, population size: 1

***** Generation 923 : 0
**Parent Variant: [Variant id: 1845, #gens: 240, #ops: 0, parent:-]

--Child created id: 1846
--Creating new operations for variant [Variant id: 1846, #gens: 240, #ops: 0, parent:1845]
---analyzing modificationPoint position: 162
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  toAppendTo.append(' ')
---analyzing modificationPoint position: 96
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java63
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 63, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1846, #gens: 240, #ops: 1, parent:1845] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1846, errors: [RealPointValuePair.java:65: error: final parameter value may not be assigned
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point; 		value = value;}
	    	                                                                                               		                                                  		^, RealPointValuePair.java:65: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point; 		value = value;}
	    	                                                                                               		                                                  		              ^]
Ingredient counter is Zero
---Undoing: gnrtn(923): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `value = value` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1845(f=2.0), 1846(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1845(f=2.0), )
----------Running generation: 924, population size: 1

***** Generation 924 : 0
**Parent Variant: [Variant id: 1847, #gens: 240, #ops: 0, parent:-]

--Child created id: 1848
--Creating new operations for variant [Variant id: 1848, #gens: 240, #ops: 0, parent:1847]
---analyzing modificationPoint position: 126
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...]
---analyzing modificationPoint position: 111
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  setMaxIterations(java.lang.Integer.MAX_VALUE)
---analyzing modificationPoint position: 0
---modifPoint 2 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 164
---modifPoint 3 not mutation generated in  return denominator
---analyzing modificationPoint position: 144
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 4 not mutation generated in  c = source.charAt(index++)
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 5 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 44
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 6 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 230
Templates availables259
Attempts Base Ingredients  1 total 259
vars from patch [t, u, v]
--> var from patch: t spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: u spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: v spoon.support.reflect.code.CtVariableWriteImpl
location: MathUtils.java649
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `// while t is even.. t /= 2// cast out twos  ` -topatch--> `// t negative: u was odd, v may be even (t replaces v) // t positive: u was even, v is odd (t replac[...]` (spoon.support.reflect.code.CtDoImpl) 
---MP=org.apache.commons.math.util.MathUtils line: 649, pointed element: CtDoImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `// while t is even.. t /= 2// cast out twos  ` -topatch--> `// t negative: u was odd, v may be even (t replaces v) // t positive: u was even, v is odd (t replac[...]` (spoon.support.reflect.code.CtDoImpl) 

--Summary Creation: for variant [Variant id: 1848, #gens: 241, #ops: 1, parent:1847] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child does NOT compile: 1848, errors: [MathUtils.java:664: error: while expected
	}
	 ^, MathUtils.java:672: error: illegal start of expression
	 */ 	public static int hash(double value) {
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(924): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `// while t is even.. t /= 2// cast out twos  ` -topatch--> `// t negative: u was odd, v may be even (t replaces v) // t positive: u was even, v is odd (t replac[...]` (spoon.support.reflect.code.CtDoImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1847(f=2.0), 1848(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1847(f=2.0), )
----------Running generation: 925, population size: 1

***** Generation 925 : 0
**Parent Variant: [Variant id: 1849, #gens: 240, #ops: 0, parent:-]

--Child created id: 1850
--Creating new operations for variant [Variant id: 1850, #gens: 240, #ops: 0, parent:1849]
---analyzing modificationPoint position: 47
---modifPoint 0 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 10
---modifPoint 1 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 148
location: ProperBigFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1850, #gens: 239, #ops: 1, parent:1849] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1850
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1850/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(925): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1849(f=2.0), 1850(f=2.0), )
Selected to next generation: IDs2--> (1849(f=2.0), )
----------Running generation: 926, population size: 1

***** Generation 926 : 0
**Parent Variant: [Variant id: 1851, #gens: 240, #ops: 0, parent:-]

--Child created id: 1852
--Creating new operations for variant [Variant id: 1852, #gens: 240, #ops: 0, parent:1851]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 96
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java63
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 63, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1852, #gens: 241, #ops: 1, parent:1851] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1852, errors: [RealPointValuePair.java:87: error: incompatible types: unexpected return value
		return value;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(926): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1851(f=2.0), 1852(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1851(f=2.0), )
----------Running generation: 927, population size: 1

***** Generation 927 : 0
**Parent Variant: [Variant id: 1853, #gens: 240, #ops: 0, parent:-]

--Child created id: 1854
--Creating new operations for variant [Variant id: 1854, #gens: 240, #ops: 0, parent:1853]
---analyzing modificationPoint position: 23
---modifPoint 0 not mutation generated in  // save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]
---analyzing modificationPoint position: 76
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  if (ret != null) { 	return ret; }
---analyzing modificationPoint position: 11
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 120, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1854, #gens: 240, #ops: 1, parent:1853] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1854, errors: [FractionFormat.java:289: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:291: error: reached end of file while parsing
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		// parse denominator 		final java.lang.Number den = getDenominatorFormat().parse(source, pos); 		if (den == null) { 			// invalid integer number 			// set index back to initial, error index should already be set 			// character examined. 			pos.setIndex(initialIndex); 			return null;} 		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());}}
		                                                                                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(927): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1853(f=2.0), 1854(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1853(f=2.0), )
----------Running generation: 928, population size: 1

***** Generation 928 : 0
**Parent Variant: [Variant id: 1855, #gens: 240, #ops: 0, parent:-]

--Child created id: 1856
--Creating new operations for variant [Variant id: 1856, #gens: 240, #ops: 0, parent:1855]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 17
location: ProperFractionFormat.java153
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1856, #gens: 239, #ops: 1, parent:1855] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1856
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1856/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(928): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1855(f=2.0), 1856(f=2.0), )
Selected to next generation: IDs2--> (1855(f=2.0), )
----------Running generation: 929, population size: 1

***** Generation 929 : 0
**Parent Variant: [Variant id: 1857, #gens: 240, #ops: 0, parent:-]

--Child created id: 1858
--Creating new operations for variant [Variant id: 1858, #gens: 240, #ops: 0, parent:1857]
---analyzing modificationPoint position: 71
---modifPoint 0 not mutation generated in  java.lang.StringBuffer ret = null
---analyzing modificationPoint position: 43
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 61
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
vars from patch []
location: ProperBigFractionFormat.java110
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 110, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1858, #gens: 240, #ops: 1, parent:1857] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1858, errors: [ProperBigFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperBigFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperBigFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperBigFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperBigFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperBigFractionFormat.java:209: error: illegal start of type
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                 ^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                           ^, ProperBigFractionFormat.java:209: error: ';' expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                            ^, ProperBigFractionFormat.java:209: error: <identifier> expected
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                              ^, ProperBigFractionFormat.java:209: error: illegal start of type
		if (den.compareTo(java.math.BigInteger.ZERO) < 0) {
		                                               ^, ProperBigFractionFormat.java:216: error: illegal start of type
		if (wholeIsNeg) {
		^, ProperBigFractionFormat.java:216: error: <identifier> expected
		if (wholeIsNeg) {
		              ^, ProperBigFractionFormat.java:219: error: <identifier> expected
		num = whole.multiply(den).add(num);
		   ^, ProperBigFractionFormat.java:220: error: illegal start of type
		if (wholeIsNeg) {
		^, ProperBigFractionFormat.java:220: error: <identifier> expected
		if (wholeIsNeg) {
		              ^, ProperBigFractionFormat.java:224: error: illegal start of type
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                       ^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                           ^, ProperBigFractionFormat.java:224: error: <identifier> expected
		return new org.apache.commons.math.fraction.BigFraction(num, den);
		                                                                ^, ProperBigFractionFormat.java:236: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperBigFractionFormat.java:236: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	                                 ^, ProperBigFractionFormat.java:238: error: class, interface, or enum expected
		}
		^, ProperBigFractionFormat.java:240: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(929): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return toAppendTo ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1857(f=2.0), 1858(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1857(f=2.0), )
----------Running generation: 930, population size: 1

***** Generation 930 : 0
**Parent Variant: [Variant id: 1859, #gens: 240, #ops: 0, parent:-]

--Child created id: 1860
--Creating new operations for variant [Variant id: 1860, #gens: 240, #ops: 0, parent:1859]
---analyzing modificationPoint position: 128
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  final double[] confI = startConfiguration[i]
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1860, #gens: 239, #ops: 1, parent:1859] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1860
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1860/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(930): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1859(f=2.0), 1860(f=2.0), )
Selected to next generation: IDs2--> (1859(f=2.0), )
----------Running generation: 931, population size: 1

***** Generation 931 : 0
**Parent Variant: [Variant id: 1861, #gens: 240, #ops: 0, parent:-]

--Child created id: 1862
--Creating new operations for variant [Variant id: 1862, #gens: 240, #ops: 0, parent:1861]
---analyzing modificationPoint position: 120
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1862, #gens: 239, #ops: 1, parent:1861] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1862
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1862/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(931): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1861(f=2.0), 1862(f=2.0), )
Selected to next generation: IDs2--> (1861(f=2.0), )
----------Running generation: 932, population size: 1

***** Generation 932 : 0
**Parent Variant: [Variant id: 1863, #gens: 240, #ops: 0, parent:-]

--Child created id: 1864
--Creating new operations for variant [Variant id: 1864, #gens: 240, #ops: 0, parent:1863]
---analyzing modificationPoint position: 31
location: MultiDirectional.java119
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1864, #gens: 239, #ops: 1, parent:1863] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1864
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1864/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(932): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1863(f=2.0), 1864(f=3.0), )
Selected to next generation: IDs2--> (1863(f=2.0), )
----------Running generation: 933, population size: 1

***** Generation 933 : 0
**Parent Variant: [Variant id: 1865, #gens: 240, #ops: 0, parent:-]

--Child created id: 1866
--Creating new operations for variant [Variant id: 1866, #gens: 240, #ops: 0, parent:1865]
---analyzing modificationPoint position: 7
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
Attempts Base Ingredients  3 total 32
Attempts Base Ingredients  4 total 32
---modifPoint 0 not mutation generated in  return nf
---analyzing modificationPoint position: 14
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 5
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 123
---modifPoint 2 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 81
location: FractionFormat.java225
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1866, #gens: 239, #ops: 1, parent:1865] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1866
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1866/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(933): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1865(f=2.0), 1866(f=2.0), )
Selected to next generation: IDs2--> (1865(f=2.0), )
----------Running generation: 934, population size: 1

***** Generation 934 : 0
**Parent Variant: [Variant id: 1867, #gens: 240, #ops: 0, parent:-]

--Child created id: 1868
--Creating new operations for variant [Variant id: 1868, #gens: 240, #ops: 0, parent:1867]
---analyzing modificationPoint position: 20
location: MultiDirectional.java46
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1868, #gens: 239, #ops: 1, parent:1867] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1868, errors: [MultiDirectional.java:49: error: variable khi might not have been initialized
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(934): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1867(f=2.0), 1868(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1867(f=2.0), )
----------Running generation: 935, population size: 1

***** Generation 935 : 0
**Parent Variant: [Variant id: 1869, #gens: 240, #ops: 0, parent:-]

--Child created id: 1870
--Creating new operations for variant [Variant id: 1870, #gens: 240, #ops: 0, parent:1869]
---analyzing modificationPoint position: 119
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [evaluations]
--> var from patch: evaluations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java274
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 274, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1870, #gens: 241, #ops: 1, parent:1869] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1870, errors: [DirectSearchOptimizer.java:284: error: incompatible types: int cannot be converted to org.apache.commons.math.optimization.RealPointValuePair
		}; 		return evaluations;
		   		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(935): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator =  ne[...] ` -topatch--> `return evaluations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1869(f=2.0), 1870(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1869(f=2.0), )
----------Running generation: 936, population size: 1

***** Generation 936 : 0
**Parent Variant: [Variant id: 1871, #gens: 240, #ops: 0, parent:-]

--Child created id: 1872
--Creating new operations for variant [Variant id: 1872, #gens: 240, #ops: 0, parent:1871]
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Attempts Base Ingredients  3 total 30
---modifPoint 0 not mutation generated in  if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]
---analyzing modificationPoint position: 64
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 2
---modifPoint 1 not mutation generated in  ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos)
---analyzing modificationPoint position: 5
location: AbstractFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1872, #gens: 239, #ops: 1, parent:1871] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1872
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1872/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(936): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1871(f=2.0), 1872(f=2.0), )
Selected to next generation: IDs2--> (1871(f=2.0), )
----------Running generation: 937, population size: 1

***** Generation 937 : 0
**Parent Variant: [Variant id: 1873, #gens: 240, #ops: 0, parent:-]

--Child created id: 1874
--Creating new operations for variant [Variant id: 1874, #gens: 240, #ops: 0, parent:1873]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
vars from patch [locale]
--> var from patch: locale spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java93
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1874, #gens: 241, #ops: 1, parent:1873] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1874, errors: [AbstractFormat.java:93: error: variable nf is already defined in method getDefaultNumberFormat(java.util.Locale)
		nf.setMaximumFractionDigits(0); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
		                                		                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(937): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1873(f=2.0), 1874(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1873(f=2.0), )
----------Running generation: 938, population size: 1

***** Generation 938 : 0
**Parent Variant: [Variant id: 1875, #gens: 240, #ops: 0, parent:-]

--Child created id: 1876
--Creating new operations for variant [Variant id: 1876, #gens: 240, #ops: 0, parent:1875]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 126
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java369
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 369, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1876, #gens: 241, #ops: 1, parent:1875] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1876
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1876/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(938): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Doubl[...] ` -topatch--> `boolean converged = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1875(f=2.0), 1876(f=2.0), )
Selected to next generation: IDs2--> (1875(f=2.0), )
----------Running generation: 939, population size: 1

***** Generation 939 : 0
**Parent Variant: [Variant id: 1877, #gens: 240, #ops: 0, parent:-]

--Child created id: 1878
--Creating new operations for variant [Variant id: 1878, #gens: 240, #ops: 0, parent:1877]
---analyzing modificationPoint position: 109
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch []
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1878, #gens: 240, #ops: 1, parent:1877] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1878
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1878/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(939): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1877(f=2.0), 1878(f=4.0), )
Selected to next generation: IDs2--> (1877(f=2.0), )
----------Running generation: 940, population size: 1

***** Generation 940 : 0
**Parent Variant: [Variant id: 1879, #gens: 240, #ops: 0, parent:-]

--Child created id: 1880
--Creating new operations for variant [Variant id: 1880, #gens: 240, #ops: 0, parent:1879]
---analyzing modificationPoint position: 80
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 92, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1880, #gens: 241, #ops: 1, parent:1879] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1880, errors: [ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(940): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setBeginIndex(0) ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1879(f=2.0), 1880(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1879(f=2.0), )
----------Running generation: 941, population size: 1

***** Generation 941 : 0
**Parent Variant: [Variant id: 1881, #gens: 240, #ops: 0, parent:-]

--Child created id: 1882
--Creating new operations for variant [Variant id: 1882, #gens: 240, #ops: 0, parent:1881]
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [num, den]
--> var from patch: num spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java99
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 99, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1882, #gens: 241, #ops: 1, parent:1881] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1882, errors: [ProperBigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:247: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:247: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:247: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:249: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:250: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:250: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:250: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:251: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:252: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:252: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:252: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:252: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:253: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:253: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:253: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:254: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:254: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:254: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:254: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:254: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:254: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(941): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...] ` -topatch--> `return new org.apache.commons.math.fraction.BigFraction(num, den)` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1881(f=2.0), 1882(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1881(f=2.0), )
----------Running generation: 942, population size: 1

***** Generation 942 : 0
**Parent Variant: [Variant id: 1883, #gens: 240, #ops: 0, parent:-]

--Child created id: 1884
--Creating new operations for variant [Variant id: 1884, #gens: 240, #ops: 0, parent:1883]
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  // create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...]
---analyzing modificationPoint position: 120
location: DirectSearchOptimizer.java286
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1884, #gens: 239, #ops: 1, parent:1883] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1884
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1884/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(942): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// initialize search iterations = 0 ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1883(f=2.0), 1884(f=2.0), )
Selected to next generation: IDs2--> (1883(f=2.0), )
----------Running generation: 943, population size: 1

***** Generation 943 : 0
**Parent Variant: [Variant id: 1885, #gens: 240, #ops: 0, parent:-]

--Child created id: 1886
--Creating new operations for variant [Variant id: 1886, #gens: 240, #ops: 0, parent:1885]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
Attempts Base Ingredients  4 total 12
Attempts Base Ingredients  5 total 12
Attempts Base Ingredients  6 total 12
Attempts Base Ingredients  7 total 12
Attempts Base Ingredients  8 total 12
Attempts Base Ingredients  9 total 12
Attempts Base Ingredients  10 total 12
Attempts Base Ingredients  11 total 12
Attempts Base Ingredients  12 total 12
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 12
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 97
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@e7c, search space size: 3
---modifPoint 1 not mutation generated in  final double v1 = o1.getValue()
---analyzing modificationPoint position: 66
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java144
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 144, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1886, #gens: 241, #ops: 1, parent:1885] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1886
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1886/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(943): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...] ` -topatch--> `// parse whitespace org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source,[...]` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1885(f=2.0), 1886(f=2.0), )
Selected to next generation: IDs2--> (1885(f=2.0), )
----------Running generation: 944, population size: 1

***** Generation 944 : 0
**Parent Variant: [Variant id: 1887, #gens: 240, #ops: 0, parent:-]

--Child created id: 1888
--Creating new operations for variant [Variant id: 1888, #gens: 240, #ops: 0, parent:1887]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
Attempts Base Ingredients  2 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1888, #gens: 241, #ops: 1, parent:1887] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1888
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1888/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(944): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1887(f=2.0), 1888(f=2.0), )
Selected to next generation: IDs2--> (1887(f=2.0), )
----------Running generation: 945, population size: 1

***** Generation 945 : 0
**Parent Variant: [Variant id: 1889, #gens: 240, #ops: 0, parent:-]

--Child created id: 1890
--Creating new operations for variant [Variant id: 1890, #gens: 240, #ops: 0, parent:1889]
---analyzing modificationPoint position: 123
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  final int n = startPoint.length
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
Attempts Base Ingredients  3 total 44
---modifPoint 1 not mutation generated in  num = num % den
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 2 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 94
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 3 not mutation generated in  java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1)
---analyzing modificationPoint position: 21
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 4 not mutation generated in  this.gamma = 0.5
---analyzing modificationPoint position: 68
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [whole, pos, initialIndex]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java148
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 148, pointed element: CtIfImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1890, #gens: 241, #ops: 1, parent:1889] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 1890, errors: [ProperFractionFormat.java:229: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	^]
Ingredient counter is Zero
---Undoing: gnrtn(945): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...] ` -topatch--> `if (whole == null) { 	// invalid integer number 	// set index back to initial, error index should al[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1889(f=2.0), 1890(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1889(f=2.0), )
----------Running generation: 946, population size: 1

***** Generation 946 : 0
**Parent Variant: [Variant id: 1891, #gens: 240, #ops: 0, parent:-]

--Child created id: 1892
--Creating new operations for variant [Variant id: 1892, #gens: 240, #ops: 0, parent:1891]
---analyzing modificationPoint position: 42
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 0 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
Attempts Base Ingredients  3 total 32
---modifPoint 1 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 127
location: DirectSearchOptimizer.java372
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1892, #gens: 239, #ops: 1, parent:1891] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1892
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1892/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(946): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `// set remaining vertices for (int i = 0; i < n; ++i) { 	final double[] confI = startConfiguration[i[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1891(f=2.0), 1892(f=4.0), )
Selected to next generation: IDs2--> (1891(f=2.0), )
----------Running generation: 947, population size: 1

***** Generation 947 : 0
**Parent Variant: [Variant id: 1893, #gens: 240, #ops: 0, parent:-]

--Child created id: 1894
--Creating new operations for variant [Variant id: 1894, #gens: 240, #ops: 0, parent:1893]
---analyzing modificationPoint position: 73
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 65
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
---modifPoint 1 not mutation generated in  int initialIndex = pos.getIndex()
---analyzing modificationPoint position: 40
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 3
---modifPoint 2 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 141
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java162
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 162, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1894, #gens: 241, #ops: 1, parent:1893] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1894, errors: [AbstractFormat.java:163: error: call to this must be first statement in constructor
		final int n = source.length(); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                               		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(947): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final int n = source.length() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1893(f=2.0), 1894(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1893(f=2.0), )
----------Running generation: 948, population size: 1

***** Generation 948 : 0
**Parent Variant: [Variant id: 1895, #gens: 240, #ops: 0, parent:-]

--Child created id: 1896
--Creating new operations for variant [Variant id: 1896, #gens: 240, #ops: 0, parent:1895]
---analyzing modificationPoint position: 157
Templates availables4
Attempts Base Ingredients  1 total 4
vars from patch [this.absoluteThreshold, org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD]
--> var from patch: this.absoluteThreshold spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOLUTE_THRESHOLD spoon.support.reflect.code.CtFieldReadImpl
location: SimpleScalarValueChecker.java52
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.SimpleScalarValueChecker line: 52, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1896, #gens: 240, #ops: 1, parent:1895] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1896
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1896/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(948): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...] ` -topatch--> `this.absoluteThreshold = org.apache.commons.math.optimization.SimpleScalarValueChecker.DEFAULT_ABSOL[...]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1895(f=2.0), 1896(f=2.0), )
Selected to next generation: IDs2--> (1895(f=2.0), )
----------Running generation: 949, population size: 1

***** Generation 949 : 0
**Parent Variant: [Variant id: 1897, #gens: 240, #ops: 0, parent:-]

--Child created id: 1898
--Creating new operations for variant [Variant id: 1898, #gens: 240, #ops: 0, parent:1897]
---analyzing modificationPoint position: 92
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 124
location: DirectSearchOptimizer.java361
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1898, #gens: 239, #ops: 1, parent:1897] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1898
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1898/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(949): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (n != startConfiguration.length) { 	throw org.apache.commons.math.MathRuntimeException.createIlle[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1897(f=2.0), 1898(f=2.0), )
Selected to next generation: IDs2--> (1897(f=2.0), )
----------Running generation: 950, population size: 1

***** Generation 950 : 0
**Parent Variant: [Variant id: 1899, #gens: 240, #ops: 0, parent:-]

--Child created id: 1900
--Creating new operations for variant [Variant id: 1900, #gens: 240, #ops: 0, parent:1899]
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java145
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 145, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1900, #gens: 241, #ops: 1, parent:1899] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1900, errors: [DirectSearchOptimizer.java:206: error: cannot find symbol
		for (int i = 0; i < (n + 1); ++i) { 			final double[] refI = referenceSimplex[i]; 			// safety checks
		                     ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:207: error: cannot find symbol
			if (refI.length != n) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}", refI.length, n);} 			for (int j = 0; j < i; ++j) { 				final double[] refJ = referenceSimplex[j]; 				boolean allEquals = true; 				for (int k = 0; k < n; ++k) { 					if (refI[k] != refJ[k]) { 						allEquals = false; 						break;}} 				if (allEquals) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", i, j);}} 			// store vertex i position relative to vertex 0 position
			                   ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:207: error: cannot find symbol
			if (refI.length != n) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}", refI.length, n);} 			for (int j = 0; j < i; ++j) { 				final double[] refJ = referenceSimplex[j]; 				boolean allEquals = true; 				for (int k = 0; k < n; ++k) { 					if (refI[k] != refJ[k]) { 						allEquals = false; 						break;}} 				if (allEquals) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", i, j);}} 			// store vertex i position relative to vertex 0 position
			                        				                                                                                                                                ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:207: error: cannot find symbol
			if (refI.length != n) { 				throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("dimension mismatch {0} != {1}", refI.length, n);} 			for (int j = 0; j < i; ++j) { 				final double[] refJ = referenceSimplex[j]; 				boolean allEquals = true; 				for (int k = 0; k < n; ++k) { 					if (refI[k] != refJ[k]) { 						allEquals = false; 						break;}} 				if (allEquals) { 					throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration", i, j);}} 			// store vertex i position relative to vertex 0 position
			                        				                                                                                                                                     			                              				                                           				                          				                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:210: error: cannot find symbol
				for (int k = 0; k < n; ++k) {
				                    ^
  symbol:   variable n
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer, DirectSearchOptimizer.java:211: error: cannot find symbol
					confI[k] = refI[k] - ref0[k];
					                     ^
  symbol:   variable ref0
  location: class org.apache.commons.math.optimization.direct.DirectSearchOptimizer]
Ingredient counter is Zero
---Undoing: gnrtn(950): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double[] vertexI = startConfiguration[i] ` -topatch--> `boolean allEquals = true` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1899(f=2.0), 1900(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1899(f=2.0), )
----------Running generation: 951, population size: 1

***** Generation 951 : 0
**Parent Variant: [Variant id: 1901, #gens: 240, #ops: 0, parent:-]

--Child created id: 1902
--Creating new operations for variant [Variant id: 1902, #gens: 240, #ops: 0, parent:1901]
---analyzing modificationPoint position: 135
---modifPoint 0 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 55
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1902, #gens: 239, #ops: 1, parent:1901] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1902
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1902/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(951): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1901(f=2.0), 1902(f=2.0), )
Selected to next generation: IDs2--> (1901(f=2.0), )
----------Running generation: 952, population size: 1

***** Generation 952 : 0
**Parent Variant: [Variant id: 1903, #gens: 240, #ops: 0, parent:-]

--Child created id: 1904
--Creating new operations for variant [Variant id: 1904, #gens: 240, #ops: 0, parent:1903]
---analyzing modificationPoint position: 36
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtForImpl@1, search space size: 2
---modifPoint 0 not mutation generated in  for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...]
---analyzing modificationPoint position: 97
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
vars from patch [o2]
--> var from patch: o2 spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java278
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 278, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1904, #gens: 241, #ops: 1, parent:1903] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1904, errors: [DirectSearchOptimizer.java:280: error: variable v2 is already defined in method compare(org.apache.commons.math.optimization.RealPointValuePair,org.apache.commons.math.optimization.RealPointValuePair)
				final double v2 = o2.getValue(); 				final double v1 = o1.getValue(); 				final double v2 = o2.getValue();
				                                 				                                 				             ^]
Ingredient counter is Zero
---Undoing: gnrtn(952): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final double v1 = o1.getValue() ` -topatch--> `final double v2 = o2.getValue()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1903(f=2.0), 1904(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1903(f=2.0), )
----------Running generation: 953, population size: 1

***** Generation 953 : 0
**Parent Variant: [Variant id: 1905, #gens: 240, #ops: 0, parent:-]

--Child created id: 1906
--Creating new operations for variant [Variant id: 1906, #gens: 240, #ops: 0, parent:1905]
---analyzing modificationPoint position: 4
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 22
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  incrementIterationsCounter()
---analyzing modificationPoint position: 19
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java234
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1906, #gens: 241, #ops: 1, parent:1905] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1906, errors: [FractionFormat.java:234: error: variable initialIndex is already defined in method parse(java.lang.String,java.text.ParsePosition)
			pos.setIndex(initialIndex); 			final int initialIndex = pos.getIndex();
			                            			          ^]
Ingredient counter is Zero
---Undoing: gnrtn(953): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `final int initialIndex = pos.getIndex()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1905(f=2.0), 1906(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1905(f=2.0), )
----------Running generation: 954, population size: 1

***** Generation 954 : 0
**Parent Variant: [Variant id: 1907, #gens: 240, #ops: 0, parent:-]

--Child created id: 1908
--Creating new operations for variant [Variant id: 1908, #gens: 240, #ops: 0, parent:1907]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [ret]
--> var from patch: ret spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtIfImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 1908, #gens: 241, #ops: 1, parent:1907] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1908
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1908/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(954): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `if (ret != null) { 	return ret; }` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1907(f=2.0), 1908(f=2.0), )
Selected to next generation: IDs2--> (1907(f=2.0), )
----------Running generation: 955, population size: 1

***** Generation 955 : 0
**Parent Variant: [Variant id: 1909, #gens: 240, #ops: 0, parent:-]

--Child created id: 1910
--Creating new operations for variant [Variant id: 1910, #gens: 240, #ops: 0, parent:1909]
---analyzing modificationPoint position: 9
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 155
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 1 not mutation generated in  this(java.math.BigInteger.valueOf(num), java.math.BigInteger.valueOf(den))
---analyzing modificationPoint position: 19
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: FractionFormat.java234
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 234, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1910, #gens: 240, #ops: 1, parent:1909] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1910, errors: [FractionFormat.java:234: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());
			                            			                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(955): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1909(f=2.0), 1910(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1909(f=2.0), )
----------Running generation: 956, population size: 1

***** Generation 956 : 0
**Parent Variant: [Variant id: 1911, #gens: 240, #ops: 0, parent:-]

--Child created id: 1912
--Creating new operations for variant [Variant id: 1912, #gens: 240, #ops: 0, parent:1911]
---analyzing modificationPoint position: 194
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  converged &= checker.converged(iterations, previous[i], simplex[i])
---analyzing modificationPoint position: 39
Templates availables2
Attempts Base Ingredients  1 total 2
Attempts Base Ingredients  2 total 2
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 2
---modifPoint 1 not mutation generated in  // evaluate it evaluateSimplex(comparator)
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1912, #gens: 241, #ops: 1, parent:1911] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1912
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1912/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(956): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// perform a reflection step final org.apache.commons.math.optimization.RealPointValuePair reflected[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1911(f=2.0), 1912(f=2.0), )
Selected to next generation: IDs2--> (1911(f=2.0), )
----------Running generation: 957, population size: 1

***** Generation 957 : 0
**Parent Variant: [Variant id: 1913, #gens: 240, #ops: 0, parent:-]

--Child created id: 1914
--Creating new operations for variant [Variant id: 1914, #gens: 240, #ops: 0, parent:1913]
---analyzing modificationPoint position: 8
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
---modifPoint 0 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 73
Templates availables12
Attempts Base Ingredients  1 total 12
vars from patch []
location: BigFractionFormat.java180
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 180, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1914, #gens: 240, #ops: 1, parent:1913] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1914, errors: [BigFractionFormat.java:244: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^]
Ingredient counter is Zero
---Undoing: gnrtn(957): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return ret ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1913(f=2.0), 1914(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1913(f=2.0), )
----------Running generation: 958, population size: 1

***** Generation 958 : 0
**Parent Variant: [Variant id: 1915, #gens: 240, #ops: 0, parent:-]

--Child created id: 1916
--Creating new operations for variant [Variant id: 1916, #gens: 240, #ops: 0, parent:1915]
---analyzing modificationPoint position: 125
location: DirectSearchOptimizer.java368
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1916, #gens: 239, #ops: 1, parent:1915] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1916
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1916/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(958): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `// set first vertex simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1915(f=2.0), 1916(f=5.0), )
Selected to next generation: IDs2--> (1915(f=2.0), )
----------Running generation: 959, population size: 1

***** Generation 959 : 0
**Parent Variant: [Variant id: 1917, #gens: 240, #ops: 0, parent:-]

--Child created id: 1918
--Creating new operations for variant [Variant id: 1918, #gens: 240, #ops: 0, parent:1917]
---analyzing modificationPoint position: 40
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 47
---modifPoint 1 not mutation generated in  int num = fraction.getNumerator()
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1918, #gens: 239, #ops: 1, parent:1917] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1918
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1918/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(959): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1917(f=2.0), 1918(f=2.0), )
Selected to next generation: IDs2--> (1917(f=2.0), )
----------Running generation: 960, population size: 1

***** Generation 960 : 0
**Parent Variant: [Variant id: 1919, #gens: 240, #ops: 0, parent:-]

--Child created id: 1920
--Creating new operations for variant [Variant id: 1920, #gens: 240, #ops: 0, parent:1919]
---analyzing modificationPoint position: 140
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [source]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java161
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 161, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1920, #gens: 241, #ops: 1, parent:1919] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1920, errors: [AbstractFormat.java:163: error: variable n is already defined in method parseNextCharacter(java.lang.String,java.text.ParsePosition)
		final int n = source.length(); 		final int n = source.length();
		                               		          ^]
Ingredient counter is Zero
---Undoing: gnrtn(960): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int index = pos.getIndex() ` -topatch--> `final int n = source.length()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1919(f=2.0), 1920(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1919(f=2.0), )
----------Running generation: 961, population size: 1

***** Generation 961 : 0
**Parent Variant: [Variant id: 1921, #gens: 240, #ops: 0, parent:-]

--Child created id: 1922
--Creating new operations for variant [Variant id: 1922, #gens: 240, #ops: 0, parent:1921]
---analyzing modificationPoint position: 74
---modifPoint 0 not mutation generated in  return ret
---analyzing modificationPoint position: 29
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 1 not mutation generated in  final double[] xSmallest = original[0].getPointRef()
---analyzing modificationPoint position: 64
location: FractionFormat.java176
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1922, #gens: 239, #ops: 1, parent:1921] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1922
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1922/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(961): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = format(((org.apache.commons.math.fraction.Fraction) (obj)), toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1921(f=2.0), 1922(f=2.0), )
Selected to next generation: IDs2--> (1921(f=2.0), )
----------Running generation: 962, population size: 1

***** Generation 962 : 0
**Parent Variant: [Variant id: 1923, #gens: 240, #ops: 0, parent:-]

--Child created id: 1924
--Creating new operations for variant [Variant id: 1924, #gens: 240, #ops: 0, parent:1923]
---analyzing modificationPoint position: 151
---modifPoint 0 not mutation generated in  return new org.apache.commons.math.fraction.ProperBigFractionFormat(org.apache.commons.math.fraction[...]
---analyzing modificationPoint position: 67
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java147
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 147, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1924, #gens: 240, #ops: 1, parent:1923] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1924, errors: [ProperFractionFormat.java:180: error: orphaned case
			case 0 :
			^]
Ingredient counter is Zero
---Undoing: gnrtn(962): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse whole java.lang.Number whole = getWholeFormat().parse(source, pos) ` -topatch--> `char c = org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1923(f=2.0), 1924(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1923(f=2.0), )
----------Running generation: 963, population size: 1

***** Generation 963 : 0
**Parent Variant: [Variant id: 1925, #gens: 240, #ops: 0, parent:-]

--Child created id: 1926
--Creating new operations for variant [Variant id: 1926, #gens: 240, #ops: 0, parent:1925]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 67
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  // parse whole java.lang.Number whole = getWholeFormat().parse(source, pos)
---analyzing modificationPoint position: 53
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 2 not mutation generated in  if (!java.math.BigInteger.ZERO.equals(whole)) { 	getWholeFormat().format(whole, toAppendTo, pos); 	t[...]
---analyzing modificationPoint position: 183
location: RealPointValuePair.java49
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1926, #gens: 239, #ops: 1, parent:1925] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 1926, errors: [RealPointValuePair.java:52: error: variable point might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.value = value;}
	    	                                                                      		                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(963): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1925(f=2.0), 1926(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1925(f=2.0), )
----------Running generation: 964, population size: 1

***** Generation 964 : 0
**Parent Variant: [Variant id: 1927, #gens: 240, #ops: 0, parent:-]

--Child created id: 1928
--Creating new operations for variant [Variant id: 1928, #gens: 240, #ops: 0, parent:1927]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 173
Templates availables7
Attempts Base Ingredients  1 total 7
vars from patch []
location: DirectSearchOptimizer.java320
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.Max[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 320, pointed element: CtThrowImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.Max[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1928, #gens: 240, #ops: 1, parent:1927] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1928
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1928/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(964): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtThrowImpl) `throw new org.apache.commons.math.optimization.OptimizationException(new org.apache.commons.math.Max[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1927(f=2.0), 1928(f=2.0), )
Selected to next generation: IDs2--> (1927(f=2.0), )
----------Running generation: 965, population size: 1

***** Generation 965 : 0
**Parent Variant: [Variant id: 1929, #gens: 240, #ops: 0, parent:-]

--Child created id: 1930
--Creating new operations for variant [Variant id: 1930, #gens: 240, #ops: 0, parent:1929]
---analyzing modificationPoint position: 46
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java95
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 95, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1930, #gens: 241, #ops: 1, parent:1929] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1930, errors: [ProperBigFractionFormat.java:95: error: call to this must be first statement in constructor
		java.math.BigInteger num = fraction.getNumerator(); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                                    		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(965): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.math.BigInteger den = fraction.getDenominator() ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1929(f=2.0), 1930(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1929(f=2.0), )
----------Running generation: 966, population size: 1

***** Generation 966 : 0
**Parent Variant: [Variant id: 1931, #gens: 240, #ops: 0, parent:-]

--Child created id: 1932
--Creating new operations for variant [Variant id: 1932, #gens: 240, #ops: 0, parent:1931]
---analyzing modificationPoint position: 55
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 105, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1932, #gens: 241, #ops: 1, parent:1931] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1932
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1932/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(966): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1931(f=2.0), 1932(f=2.0), )
Selected to next generation: IDs2--> (1931(f=2.0), )
----------Running generation: 967, population size: 1

***** Generation 967 : 0
**Parent Variant: [Variant id: 1933, #gens: 240, #ops: 0, parent:-]

--Child created id: 1934
--Creating new operations for variant [Variant id: 1934, #gens: 240, #ops: 0, parent:1933]
---analyzing modificationPoint position: 32
Templates availables9
Attempts Base Ingredients  1 total 9
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java120
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 120, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1934, #gens: 240, #ops: 1, parent:1933] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1934, errors: [MultiDirectional.java:120: error: cannot assign a value to final variable gamma
		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		this.gamma = 0.5;
		                                                                              		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(967): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `simplex[0] = original[0] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1933(f=2.0), 1934(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1933(f=2.0), )
----------Running generation: 968, population size: 1

***** Generation 968 : 0
**Parent Variant: [Variant id: 1935, #gens: 240, #ops: 0, parent:-]

--Child created id: 1936
--Creating new operations for variant [Variant id: 1936, #gens: 240, #ops: 0, parent:1935]
---analyzing modificationPoint position: 140
---modifPoint 0 not mutation generated in  int index = pos.getIndex()
---analyzing modificationPoint position: 136
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  if (java.lang.Double.isNaN(vertex.getValue())) { 	simplex[i] = new org.apache.commons.math.optimizat[...]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1936, #gens: 239, #ops: 1, parent:1935] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1936
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1936/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(968): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1935(f=2.0), 1936(f=2.0), )
Selected to next generation: IDs2--> (1935(f=2.0), )
----------Running generation: 969, population size: 1

***** Generation 969 : 0
**Parent Variant: [Variant id: 1937, #gens: 240, #ops: 0, parent:-]

--Child created id: 1938
--Creating new operations for variant [Variant id: 1938, #gens: 240, #ops: 0, parent:1937]
---analyzing modificationPoint position: 170
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 0 not mutation generated in  return
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1938, #gens: 240, #ops: 1, parent:1937] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1938, errors: [FractionFormat.java:299: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, FractionFormat.java:301: error: reached end of file while parsing
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos); 		// parse denominator 		final java.lang.Number den = getDenominatorFormat().parse(source, pos); 		if (den == null) { 			// invalid integer number 			// set index back to initial, error index should already be set 			// character examined. 			pos.setIndex(initialIndex); 			return null;} 		return new org.apache.commons.math.fraction.Fraction(num.intValue(), den.intValue());}}
		                                                                                      ^]
Ingredient counter is Zero
---Undoing: gnrtn(969): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return null` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1937(f=2.0), 1938(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1937(f=2.0), )
----------Running generation: 970, population size: 1

***** Generation 970 : 0
**Parent Variant: [Variant id: 1939, #gens: 240, #ops: 0, parent:-]

--Child created id: 1940
--Creating new operations for variant [Variant id: 1940, #gens: 240, #ops: 0, parent:1939]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
Name Conflict [simplex, comparator, khi, gamma]
---modifPoint 1 not mutation generated in  if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...]
---analyzing modificationPoint position: 217
location: MathUtils.java629
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1940, #gens: 239, #ops: 1, parent:1939] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1940, errors: [MathUtils.java:673: warning: [removal] Double(double) in java.lang.Double has been deprecated and marked for removal
		return new java.lang.Double(value).hashCode();
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(970): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((((u & 1) == 0) && ((v & 1) == 0)) && (k < 31)) { 	// while u and v are 	// both even... 	u /[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1939(f=2.0), 1940(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1939(f=2.0), )
----------Running generation: 971, population size: 1

***** Generation 971 : 0
**Parent Variant: [Variant id: 1941, #gens: 240, #ops: 0, parent:-]

--Child created id: 1942
--Creating new operations for variant [Variant id: 1942, #gens: 240, #ops: 0, parent:1941]
---analyzing modificationPoint position: 3
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 61
---modifPoint 1 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 13
Templates availables3
Attempts Base Ingredients  1 total 3
Attempts Base Ingredients  2 total 3
Attempts Base Ingredients  3 total 3
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 3
---modifPoint 2 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 131
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1942, #gens: 239, #ops: 1, parent:1941] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 1942
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1942/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(971): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1941(f=2.0), 1942(f=3.0), )
Selected to next generation: IDs2--> (1941(f=2.0), )
----------Running generation: 972, population size: 1

***** Generation 972 : 0
**Parent Variant: [Variant id: 1943, #gens: 240, #ops: 0, parent:-]

--Child created id: 1944
--Creating new operations for variant [Variant id: 1944, #gens: 240, #ops: 0, parent:1943]
---analyzing modificationPoint position: 1
location: AbstractFormat.java58
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1944, #gens: 239, #ops: 1, parent:1943] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1944
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1944/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(972): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1943(f=2.0), 1944(f=2.0), )
Selected to next generation: IDs2--> (1943(f=2.0), )
----------Running generation: 973, population size: 1

***** Generation 973 : 0
**Parent Variant: [Variant id: 1945, #gens: 240, #ops: 0, parent:-]

--Child created id: 1946
--Creating new operations for variant [Variant id: 1946, #gens: 240, #ops: 0, parent:1945]
---analyzing modificationPoint position: 50
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 5
---modifPoint 0 not mutation generated in  num = num.remainder(den)
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java69
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 69, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1946, #gens: 241, #ops: 1, parent:1945] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1946, errors: [AbstractFormat.java:81: error: incompatible types: unexpected return value
		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault()); 		this.denominatorFormat = denominatorFormat;} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(973): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1945(f=2.0), 1946(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1945(f=2.0), )
----------Running generation: 974, population size: 1

***** Generation 974 : 0
**Parent Variant: [Variant id: 1947, #gens: 240, #ops: 0, parent:-]

--Child created id: 1948
--Creating new operations for variant [Variant id: 1948, #gens: 240, #ops: 0, parent:1947]
---analyzing modificationPoint position: 17
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 0
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java89
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 89, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1948, #gens: 241, #ops: 1, parent:1947] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1948, errors: [MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	        ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                         ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                   ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                       ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:149: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^]
Ingredient counter is Zero
---Undoing: gnrtn(974): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1947(f=2.0), 1948(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1947(f=2.0), )
----------Running generation: 975, population size: 1

***** Generation 975 : 0
**Parent Variant: [Variant id: 1949, #gens: 240, #ops: 0, parent:-]

--Child created id: 1950
--Creating new operations for variant [Variant id: 1950, #gens: 240, #ops: 0, parent:1949]
---analyzing modificationPoint position: 183
location: RealPointValuePair.java49
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1950, #gens: 239, #ops: 1, parent:1949] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1950, errors: [RealPointValuePair.java:52: error: variable point might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value) { 		this.value = value;}
	    	                                                                      		                   ^]
Ingredient counter is Zero
---Undoing: gnrtn(975): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.point = point.clone() ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1949(f=2.0), 1950(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1949(f=2.0), )
----------Running generation: 976, population size: 1

***** Generation 976 : 0
**Parent Variant: [Variant id: 1951, #gens: 240, #ops: 0, parent:-]

--Child created id: 1952
--Creating new operations for variant [Variant id: 1952, #gens: 240, #ops: 0, parent:1951]
---analyzing modificationPoint position: 92
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  for (int j = 0; j < (i + 1); ++j) { 	if (steps[j] == 0.0) { 		throw org.apache.commons.math.MathRunt[...]
---analyzing modificationPoint position: 113
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [c, source, index]
--> var from patch: c spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: index spoon.support.reflect.code.CtVariableWriteImpl
location: AbstractFormat.java173
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 173, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1952, #gens: 240, #ops: 1, parent:1951] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1952
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1952/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(976): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `ret = c ` -topatch--> `c = source.charAt(index++)` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1951(f=2.0), 1952(f=2.0), )
Selected to next generation: IDs2--> (1951(f=2.0), )
----------Running generation: 977, population size: 1

***** Generation 977 : 0
**Parent Variant: [Variant id: 1953, #gens: 240, #ops: 0, parent:-]

--Child created id: 1954
--Creating new operations for variant [Variant id: 1954, #gens: 240, #ops: 0, parent:1953]
---analyzing modificationPoint position: 30
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Name Conflict [simplex, comparator, khi, gamma]
---modifPoint 0 not mutation generated in  final int n = xSmallest.length
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1954, #gens: 241, #ops: 1, parent:1953] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1954, errors: [ProperFractionFormat.java:232: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^, ProperFractionFormat.java:235: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperFractionFormat.java:235: error: ';' expected
	 * Modify the whole format.
	         ^, ProperFractionFormat.java:235: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperFractionFormat.java:235: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperFractionFormat.java:237: error: illegal start of expression
	 * @param format
	 ^, ProperFractionFormat.java:237: error: illegal start of expression
	 * @param format
	   ^, ProperFractionFormat.java:238: error: not a statement
	 * 		The new whole format value.
	 ^, ProperFractionFormat.java:238: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperFractionFormat.java:238: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperFractionFormat.java:238: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperFractionFormat.java:239: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperFractionFormat.java:240: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperFractionFormat.java:240: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperFractionFormat.java:240: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperFractionFormat.java:240: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperFractionFormat.java:240: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperFractionFormat.java:240: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperFractionFormat.java:241: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperFractionFormat.java:240: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperFractionFormat.java:241: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperFractionFormat.java:241: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperFractionFormat.java:241: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperFractionFormat.java:242: error: illegal start of expression
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                               ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                    ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                  ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                          ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		   ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		    ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		           ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		              ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                  ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                    ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			      ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			         ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			          ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                 ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                        ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                         ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                             ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                              ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                  ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                   ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                 ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                  ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                ^, ProperFractionFormat.java:242: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                            		                      			                                                                                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(977): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "whole format can[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1953(f=2.0), 1954(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1953(f=2.0), )
----------Running generation: 978, population size: 1

***** Generation 978 : 0
**Parent Variant: [Variant id: 1955, #gens: 240, #ops: 0, parent:-]

--Child created id: 1956
--Creating new operations for variant [Variant id: 1956, #gens: 240, #ops: 0, parent:1955]
---analyzing modificationPoint position: 40
Templates availables30
Attempts Base Ingredients  1 total 30
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 0 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 14
---modifPoint 1 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 27
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java89
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 89, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1956, #gens: 241, #ops: 1, parent:1955] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 1956, errors: [MultiDirectional.java:149: error: reached end of file while parsing
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(978): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...] ` -topatch--> `return simplex[0]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1955(f=2.0), 1956(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1955(f=2.0), )
----------Running generation: 979, population size: 1

***** Generation 979 : 0
**Parent Variant: [Variant id: 1957, #gens: 240, #ops: 0, parent:-]

--Child created id: 1958
--Creating new operations for variant [Variant id: 1958, #gens: 240, #ops: 0, parent:1957]
---analyzing modificationPoint position: 82
Templates availables8
Attempts Base Ingredients  1 total 8
vars from patch [source, pos]
--> var from patch: source spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: FractionFormat.java228
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 228, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1958, #gens: 240, #ops: 1, parent:1957] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1958, errors: [FractionFormat.java:263: error: orphaned case
				return new org.apache.commons.math.fraction.Fraction(num.intValue(), 1); 			case '/' : 				// found '/', continue parsing denominator
				                                                                         			^]
Ingredient counter is Zero
---Undoing: gnrtn(979): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `// parse numerator final java.lang.Number num = getNumeratorFormat().parse(source, pos) ` -topatch--> `// parse denominator final java.lang.Number den = getDenominatorFormat().parse(source, pos)` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1957(f=2.0), 1958(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1957(f=2.0), )
----------Running generation: 980, population size: 1

***** Generation 980 : 0
**Parent Variant: [Variant id: 1959, #gens: 240, #ops: 0, parent:-]

--Child created id: 1960
--Creating new operations for variant [Variant id: 1960, #gens: 240, #ops: 0, parent:1959]
---analyzing modificationPoint position: 114
Templates availables17
Attempts Base Ingredients  1 total 17
---modifPoint 0 not mutation generated in  this.maxIterations = maxIterations
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1960, #gens: 239, #ops: 1, parent:1959] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1960
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1960/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(980): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1959(f=2.0), 1960(f=2.0), )
Selected to next generation: IDs2--> (1959(f=2.0), )
----------Running generation: 981, population size: 1

***** Generation 981 : 0
**Parent Variant: [Variant id: 1961, #gens: 240, #ops: 0, parent:-]

--Child created id: 1962
--Creating new operations for variant [Variant id: 1962, #gens: 240, #ops: 0, parent:1961]
---analyzing modificationPoint position: 135
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 114
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java220
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 220, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1962, #gens: 240, #ops: 1, parent:1961] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1962, errors: [DirectSearchOptimizer.java:307: error: <identifier> expected
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                          ^, DirectSearchOptimizer.java:307: error: <identifier> expected
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                                  ^, DirectSearchOptimizer.java:307: error: illegal start of type
			java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length);
			                                    ^, DirectSearchOptimizer.java:308: error: invalid method declaration; return type required
			iterateSimplex(comparator);
			^, DirectSearchOptimizer.java:308: error: <identifier> expected
			iterateSimplex(comparator);
			                         ^, DirectSearchOptimizer.java:312: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:322: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:337: error: class, interface, or enum expected
	 */ 	protected abstract void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException; 	/**
	    	                   ^, DirectSearchOptimizer.java:337: error: class, interface, or enum expected
	 */ 	protected abstract void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException; 	/**
	    	                                             ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	          ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	                                ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	                                                                                                                                             		                                        			                                                                                                                                              ^, DirectSearchOptimizer.java:351: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:361: error: class, interface, or enum expected
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length;
	    	                                ^, DirectSearchOptimizer.java:361: error: class, interface, or enum expected
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length;
	    	                                                                                                 		      ^, DirectSearchOptimizer.java:362: error: class, interface, or enum expected
		if (n != startConfiguration.length) {
		^, DirectSearchOptimizer.java:366: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:370: error: class, interface, or enum expected
		simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Double.NaN);
		^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		                ^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		                       ^, DirectSearchOptimizer.java:374: error: class, interface, or enum expected
			final double[] confI = startConfiguration[i];
			      ^, DirectSearchOptimizer.java:375: error: class, interface, or enum expected
			final double[] vertexI = new double[n];
			      ^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			                ^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			                       ^, DirectSearchOptimizer.java:378: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:380: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:393: error: class, interface, or enum expected
	 */ 	protected void evaluateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		// evaluate the objective function at all non-evaluated simplex points
	    	                                     ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                                    ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                                           			      ^, DirectSearchOptimizer.java:395: error: class, interface, or enum expected
			final double[] point = vertex.getPointRef();
			      ^, DirectSearchOptimizer.java:396: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(vertex.getValue())) {
			^, DirectSearchOptimizer.java:398: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:404: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                               ^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		                ^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		                       ^, DirectSearchOptimizer.java:416: error: class, interface, or enum expected
				simplex[i] = pointValuePair;
				^, DirectSearchOptimizer.java:417: error: class, interface, or enum expected
				pointValuePair = tmp;
				^, DirectSearchOptimizer.java:418: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:421: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(981): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxIterations = maxIterations ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1961(f=2.0), 1962(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1961(f=2.0), )
----------Running generation: 982, population size: 1

***** Generation 982 : 0
**Parent Variant: [Variant id: 1963, #gens: 240, #ops: 0, parent:-]

--Child created id: 1964
--Creating new operations for variant [Variant id: 1964, #gens: 240, #ops: 0, parent:1963]
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 17
---modifPoint 1 not mutation generated in  return null
---analyzing modificationPoint position: 49
---modifPoint 2 not mutation generated in  int den = fraction.getDenominator()
---analyzing modificationPoint position: 19
---modifPoint 3 not mutation generated in  return null
---analyzing modificationPoint position: 108
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 4 not mutation generated in  simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(point, evaluate(point), fal[...]
---analyzing modificationPoint position: 103
location: DirectSearchOptimizer.java306
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1964, #gens: 239, #ops: 1, parent:1963] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child compiles: id 1964
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1964/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(982): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1963(f=2.0), 1964(f=4.0), )
Selected to next generation: IDs2--> (1963(f=2.0), )
----------Running generation: 983, population size: 1

***** Generation 983 : 0
**Parent Variant: [Variant id: 1965, #gens: 240, #ops: 0, parent:-]

--Child created id: 1966
--Creating new operations for variant [Variant id: 1966, #gens: 240, #ops: 0, parent:1965]
---analyzing modificationPoint position: 146
location: AbstractFormat.java172
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1966, #gens: 239, #ops: 1, parent:1965] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1966
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1966/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(983): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (index < n) { 	ret = c; } ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1965(f=2.0), 1966(f=2.0), )
Selected to next generation: IDs2--> (1965(f=2.0), )
----------Running generation: 984, population size: 1

***** Generation 984 : 0
**Parent Variant: [Variant id: 1967, #gens: 240, #ops: 0, parent:-]

--Child created id: 1968
--Creating new operations for variant [Variant id: 1968, #gens: 240, #ops: 0, parent:1967]
---analyzing modificationPoint position: 104
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java307
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 307, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1968, #gens: 240, #ops: 1, parent:1967] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1968
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1968/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
java.lang.reflect.InaccessibleObjectException: Unable to make field private final int java.lang.ProcessImpl.pid accessible: module java.base does not "opens java.lang" to unnamed module @26d94d14
The Process that runs JUnit test cases did not terminate within waitTime of 10 seconds
Killed the Process that runs JUnit test cases null
**The validation 1 have not finished well**
-Valid?: null, fitness 1.7976931348623157E308
Ingredient counter is Zero
---Undoing: gnrtn(984): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `iterateSimplex(comparator) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1967(f=2.0), 1968(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1967(f=2.0), )
----------Running generation: 985, population size: 1

***** Generation 985 : 0
**Parent Variant: [Variant id: 1969, #gens: 240, #ops: 0, parent:-]

--Child created id: 1970
--Creating new operations for variant [Variant id: 1970, #gens: 240, #ops: 0, parent:1969]
---analyzing modificationPoint position: 56
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch []
location: ProperBigFractionFormat.java106
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1970, #gens: 241, #ops: 1, parent:1969] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1970, errors: [ProperBigFractionFormat.java:106: error: call to this must be first statement in constructor
		} 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		  		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(985): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1969(f=2.0), 1970(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1969(f=2.0), )
----------Running generation: 986, population size: 1

***** Generation 986 : 0
**Parent Variant: [Variant id: 1971, #gens: 240, #ops: 0, parent:-]

--Child created id: 1972
--Creating new operations for variant [Variant id: 1972, #gens: 240, #ops: 0, parent:1971]
---analyzing modificationPoint position: 149
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  setWholeFormat(wholeFormat)
---analyzing modificationPoint position: 106
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java345
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((++evaluations) > maxEvaluations) { 	throw new org.apache.commons.math.FunctionEvaluationExcepti[...] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 345, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((++evaluations) > maxEvaluations) { 	throw new org.apache.commons.math.FunctionEvaluationExcepti[...] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1972, #gens: 241, #ops: 1, parent:1971] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1972, errors: [DirectSearchOptimizer.java:350: error: unreachable statement
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return iterations; 		return f.value(x);
	    	                                                                                                                                             		                                        			                                                                                                                                                		                   		^]
Ingredient counter is Zero
---Undoing: gnrtn(986): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if ((++evaluations) > maxEvaluations) { 	throw new org.apache.commons.math.FunctionEvaluationExcepti[...] ` -topatch--> `return iterations` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1971(f=2.0), 1972(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1971(f=2.0), )
----------Running generation: 987, population size: 1

***** Generation 987 : 0
**Parent Variant: [Variant id: 1973, #gens: 240, #ops: 0, parent:-]

--Child created id: 1974
--Creating new operations for variant [Variant id: 1974, #gens: 240, #ops: 0, parent:1973]
---analyzing modificationPoint position: 18
Templates availables38
Attempts Base Ingredients  1 total 38
vars from patch []
location: FractionFormat.java233
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 233, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1974, #gens: 241, #ops: 1, parent:1973] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1974, errors: [FractionFormat.java:234: error: incompatible types: org.apache.commons.math.fraction.FractionFormat cannot be converted to org.apache.commons.math.fraction.Fraction
			pos.setIndex(initialIndex); 			return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault());
			                            			                                                                        ^]
Ingredient counter is Zero
---Undoing: gnrtn(987): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `return org.apache.commons.math.fraction.FractionFormat.getProperInstance(java.util.Locale.getDefault[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1973(f=2.0), 1974(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1973(f=2.0), )
----------Running generation: 988, population size: 1

***** Generation 988 : 0
**Parent Variant: [Variant id: 1975, #gens: 240, #ops: 0, parent:-]

--Child created id: 1976
--Creating new operations for variant [Variant id: 1976, #gens: 240, #ops: 0, parent:1975]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return denominatorFormat
---analyzing modificationPoint position: 24
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1976, #gens: 241, #ops: 1, parent:1975] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1976
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1976/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(988): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1975(f=2.0), 1976(f=2.0), )
Selected to next generation: IDs2--> (1975(f=2.0), )
----------Running generation: 989, population size: 1

***** Generation 989 : 0
**Parent Variant: [Variant id: 1977, #gens: 240, #ops: 0, parent:-]

--Child created id: 1978
--Creating new operations for variant [Variant id: 1978, #gens: 240, #ops: 0, parent:1977]
---analyzing modificationPoint position: 129
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  final double[] vertexI = new double[n]
---analyzing modificationPoint position: 131
Templates availables17
Attempts Base Ingredients  1 total 17
vars from patch [this.maxIterations]
--> var from patch: this.maxIterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java376
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 376, pointed element: CtAssignmentImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 1978, #gens: 240, #ops: 1, parent:1977] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1978
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1978/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(989): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtAssignmentImpl) `vertexI[k] = startPoint[k] + confI[k] ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1977(f=2.0), 1978(f=3.0), )
Selected to next generation: IDs2--> (1977(f=2.0), )
----------Running generation: 990, population size: 1

***** Generation 990 : 0
**Parent Variant: [Variant id: 1979, #gens: 240, #ops: 0, parent:-]

--Child created id: 1980
--Creating new operations for variant [Variant id: 1980, #gens: 240, #ops: 0, parent:1979]
---analyzing modificationPoint position: 143
Templates availables4
Attempts Base Ingredients  1 total 4
---modifPoint 0 not mutation generated in  if (index < n) { 	char c; 	do { 		c = source.charAt(index++); 	} while (java.lang.Character.isWhites[...]
---analyzing modificationPoint position: 24
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 2 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 0
---modifPoint 3 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 43
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 4 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 62
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 5 not mutation generated in  return toAppendTo
---analyzing modificationPoint position: 172
Templates availables5
Attempts Base Ingredients  1 total 5
---modifPoint 6 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 5
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [nf]
--> var from patch: nf spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java92
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 92, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1980, #gens: 241, #ops: 1, parent:1979] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 1980
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1980/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(990): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setMaximumFractionDigits(0) ` -topatch--> `nf.setParseIntegerOnly(true)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1979(f=2.0), 1980(f=2.0), )
Selected to next generation: IDs2--> (1979(f=2.0), )
----------Running generation: 991, population size: 1

***** Generation 991 : 0
**Parent Variant: [Variant id: 1981, #gens: 240, #ops: 0, parent:-]

--Child created id: 1982
--Creating new operations for variant [Variant id: 1982, #gens: 240, #ops: 0, parent:1981]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 1 not mutation generated in  setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())
---analyzing modificationPoint position: 109
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch []
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtThrowImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 

--Summary Creation: for variant [Variant id: 1982, #gens: 241, #ops: 1, parent:1981] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1982
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1982/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(991): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException( "simplex must con[...]` (spoon.support.reflect.code.CtThrowImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1981(f=2.0), 1982(f=4.0), )
Selected to next generation: IDs2--> (1981(f=2.0), )
----------Running generation: 992, population size: 1

***** Generation 992 : 0
**Parent Variant: [Variant id: 1983, #gens: 240, #ops: 0, parent:-]

--Child created id: 1984
--Creating new operations for variant [Variant id: 1984, #gens: 240, #ops: 0, parent:1983]
---analyzing modificationPoint position: 52
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  num = num % den
---analyzing modificationPoint position: 91
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 103
Templates availables11
Attempts Base Ingredients  1 total 11
vars from patch [java.lang.Integer.MAX_VALUE]
--> var from patch: java.lang.Integer.MAX_VALUE spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java306
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 306, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1984, #gens: 240, #ops: 1, parent:1983] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 1984
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1984/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(992): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// we still need to search java.lang.System.arraycopy(simplex, 0, previous, 0, simplex.length) ` -topatch--> `setMaxIterations(java.lang.Integer.MAX_VALUE)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1983(f=2.0), 1984(f=4.0), )
Selected to next generation: IDs2--> (1983(f=2.0), )
----------Running generation: 993, population size: 1

***** Generation 993 : 0
**Parent Variant: [Variant id: 1985, #gens: 240, #ops: 0, parent:-]

--Child created id: 1986
--Creating new operations for variant [Variant id: 1986, #gens: 240, #ops: 0, parent:1985]
---analyzing modificationPoint position: 228
Templates availables20
Attempts Base Ingredients  1 total 20
vars from patch [java.lang.System.err]
--> var from patch: java.lang.System.err spoon.support.reflect.code.CtFieldReadImpl
location: MathException.java121
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arguments = new java.lang.Object[0] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.MathException line: 121, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arguments = new java.lang.Object[0] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 1986, #gens: 241, #ops: 1, parent:1985] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1986, errors: [MathException.java:220: error: reached end of file while parsing
	 */ 	@java.lang.Override 	public void printStackTrace(java.io.PrintStream out) { 		synchronized(out) { 			java.io.PrintWriter pw = new java.io.PrintWriter(out, false); 			printStackTrace(pw); 			// Flush the PrintWriter before it's GC'ed. 			pw.flush();}}}
	    	                    	                                                       		                    			                                                              			                    ^]
Ingredient counter is Zero
---Undoing: gnrtn(993): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arguments = new java.lang.Object[0] ` -topatch--> `printStackTrace(java.lang.System.err)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1985(f=2.0), 1986(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1985(f=2.0), )
----------Running generation: 994, population size: 1

***** Generation 994 : 0
**Parent Variant: [Variant id: 1987, #gens: 240, #ops: 0, parent:-]

--Child created id: 1988
--Creating new operations for variant [Variant id: 1988, #gens: 240, #ops: 0, parent:1987]
---analyzing modificationPoint position: 2
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  this.numeratorFormat = numeratorFormat
---analyzing modificationPoint position: 168
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 79, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1988, #gens: 241, #ops: 1, parent:1987] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1988, errors: [MultiDirectional.java:79: error: variable best is already defined in method iterateSimplex(java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
				final org.apache.commons.math.optimization.RealPointValuePair expanded = evaluateNewSimplex(original, khi, comparator); 				final org.apache.commons.math.optimization.RealPointValuePair best = original[0];
				                                                                                                                        				                                                              ^]
Ingredient counter is Zero
---Undoing: gnrtn(994): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, expanded) <= 0) { 	// accept the reflected simplex 	simplex = refl[...] ` -topatch--> `final org.apache.commons.math.optimization.RealPointValuePair best = original[0]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1987(f=2.0), 1988(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1987(f=2.0), )
----------Running generation: 995, population size: 1

***** Generation 995 : 0
**Parent Variant: [Variant id: 1989, #gens: 240, #ops: 0, parent:-]

--Child created id: 1990
--Creating new operations for variant [Variant id: 1990, #gens: 240, #ops: 0, parent:1989]
---analyzing modificationPoint position: 3
Templates availables6
Attempts Base Ingredients  1 total 6
Attempts Base Ingredients  2 total 6
Attempts Base Ingredients  3 total 6
Attempts Base Ingredients  4 total 6
Attempts Base Ingredients  5 total 6
Attempts Base Ingredients  6 total 6
--- no mutation left to apply in element spoon.support.reflect.code.CtAssignmentImpl@1, search space size: 6
---modifPoint 0 not mutation generated in  this.denominatorFormat = denominatorFormat
---analyzing modificationPoint position: 138
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java149
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 149, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 1990, #gens: 241, #ops: 1, parent:1989] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1990
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1990/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(995): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `char c` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1989(f=2.0), 1990(f=2.0), )
Selected to next generation: IDs2--> (1989(f=2.0), )
----------Running generation: 996, population size: 1

***** Generation 996 : 0
**Parent Variant: [Variant id: 1991, #gens: 240, #ops: 0, parent:-]

--Child created id: 1992
--Creating new operations for variant [Variant id: 1992, #gens: 240, #ops: 0, parent:1991]
---analyzing modificationPoint position: 91
---modifPoint 0 not mutation generated in  final double[] vertexI = startConfiguration[i]
---analyzing modificationPoint position: 110
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [checker]
--> var from patch: checker spoon.support.reflect.code.CtFieldReadImpl
location: DirectSearchOptimizer.java117
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 117, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1992, #gens: 241, #ops: 1, parent:1991] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 1992, errors: [DirectSearchOptimizer.java:276: error: illegal start of expression
	 * Set start configuration for simplex.
	 ^, DirectSearchOptimizer.java:276: error: ';' expected
	 * Set start configuration for simplex.
	      ^, DirectSearchOptimizer.java:276: error: ';' expected
	 * Set start configuration for simplex.
	                          ^, DirectSearchOptimizer.java:276: error: '(' expected
	 * Set start configuration for simplex.
	                              ^, DirectSearchOptimizer.java:276: error: <identifier> expected
	 * Set start configuration for simplex.
	                                       ^, DirectSearchOptimizer.java:277: error: illegal start of expression
	 * <p>The real initial simplex will be set up by moving the reference
	      ^, DirectSearchOptimizer.java:277: error: not a statement
	 * <p>The real initial simplex will be set up by moving the reference
	 ^, DirectSearchOptimizer.java:277: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	         ^, DirectSearchOptimizer.java:277: error: not a statement
	 * <p>The real initial simplex will be set up by moving the reference
	          ^, DirectSearchOptimizer.java:277: error: ')' expected
	 * <p>The real initial simplex will be set up by moving the reference
	              ^, DirectSearchOptimizer.java:277: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                              ^, DirectSearchOptimizer.java:277: error: variable declaration not allowed here
	 * <p>The real initial simplex will be set up by moving the reference
	                       ^, DirectSearchOptimizer.java:277: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                      ^, DirectSearchOptimizer.java:277: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                             ^, DirectSearchOptimizer.java:277: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                                       ^, DirectSearchOptimizer.java:277: error: ';' expected
	 * <p>The real initial simplex will be set up by moving the reference
	                                                                     ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	               ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                        ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                    ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                               ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                      ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                                  ^, DirectSearchOptimizer.java:278: error: ';' expected
	 * simplex such that its first point is located at the start point of the
	                                                                         ^, DirectSearchOptimizer.java:279: error: illegal start of type
	 * optimization.</p>
	                 ^, DirectSearchOptimizer.java:280: error: illegal start of expression
	 *
	 ^, DirectSearchOptimizer.java:281: error: illegal start of expression
	 * @param referenceSimplex
	 ^, DirectSearchOptimizer.java:281: error: illegal start of expression
	 * @param referenceSimplex
	   ^, DirectSearchOptimizer.java:279: error: not a statement
	 * optimization.</p>
	                   ^, DirectSearchOptimizer.java:282: error: ';' expected
	 * 		reference simplex
	   		         ^, DirectSearchOptimizer.java:283: error: illegal start of expression
	 * @exception IllegalArgumentException
	   ^, DirectSearchOptimizer.java:284: error: illegal start of expression
	 * 		if the reference simplex does not
	   		^, DirectSearchOptimizer.java:284: error: not a statement
	 * 		if the reference simplex does not
	 ^, DirectSearchOptimizer.java:284: error: '(' expected
	 * 		if the reference simplex does not
	   		  ^, DirectSearchOptimizer.java:284: error: ')' expected
	 * 		if the reference simplex does not
	   		      ^, DirectSearchOptimizer.java:284: error: ';' expected
	 * 		if the reference simplex does not
	   		                        ^, DirectSearchOptimizer.java:284: error: variable declaration not allowed here
	 * 		if the reference simplex does not
	   		                 ^, DirectSearchOptimizer.java:284: error: ';' expected
	 * 		if the reference simplex does not
	   		                                 ^, DirectSearchOptimizer.java:285: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		          ^, DirectSearchOptimizer.java:285: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                    ^, DirectSearchOptimizer.java:285: error: not a statement
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                     ^, DirectSearchOptimizer.java:285: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                          ^, DirectSearchOptimizer.java:285: error: not a statement
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                            ^, DirectSearchOptimizer.java:285: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                              ^, DirectSearchOptimizer.java:285: error: '(' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                 ^, DirectSearchOptimizer.java:285: error: ')' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                       ^, DirectSearchOptimizer.java:285: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                            ^, DirectSearchOptimizer.java:285: error: variable declaration not allowed here
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                           ^, DirectSearchOptimizer.java:285: error: ';' expected
	 * 		contain at least one point, or if there is a dimension mismatch
	   		                                                               ^, DirectSearchOptimizer.java:286: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		      ^, DirectSearchOptimizer.java:286: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                        ^, DirectSearchOptimizer.java:286: error: not a statement
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                         ^, DirectSearchOptimizer.java:286: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                           ^, DirectSearchOptimizer.java:286: error: '(' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                              ^, DirectSearchOptimizer.java:286: error: ')' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                  ^, DirectSearchOptimizer.java:286: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                         ^, DirectSearchOptimizer.java:286: error: variable declaration not allowed here
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                      ^, DirectSearchOptimizer.java:286: error: ';' expected
	 * 		in the reference simplex or if one of its vertices is duplicated
	   		                                                     ^, DirectSearchOptimizer.java:287: error: illegal start of expression
	 */ 	public void setStartConfiguration(final double[][] referenceSimplex) throws java.lang.IllegalArgumentException { 		// only the relative position of the n final vertices with respect 		// to the first one are stored 		final int n = referenceSimplex.length - 1; 		if (n < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");} 		startConfiguration = new double[n][n]; 		final double[] ref0 = referenceSimplex[0]; 		// vertices loop
	  ^, DirectSearchOptimizer.java:287: error: illegal start of expression
	 */ 	public void setStartConfiguration(final double[][] referenceSimplex) throws java.lang.IllegalArgumentException { 		// only the relative position of the n final vertices with respect 		// to the first one are stored 		final int n = referenceSimplex.length - 1; 		if (n < 0) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");} 		startConfiguration = new double[n][n]; 		final double[] ref0 = referenceSimplex[0]; 		// vertices loop
	    	^, DirectSearchOptimizer.java:312: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:322: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:337: error: class, interface, or enum expected
	 */ 	protected abstract void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException; 	/**
	    	                   ^, DirectSearchOptimizer.java:337: error: class, interface, or enum expected
	 */ 	protected abstract void iterateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException, java.lang.IllegalArgumentException; 	/**
	    	                                             ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	          ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	                                ^, DirectSearchOptimizer.java:350: error: class, interface, or enum expected
	 */ 	protected double evaluate(final double[] x) throws org.apache.commons.math.FunctionEvaluationException, java.lang.IllegalArgumentException { 		if ((++evaluations) > maxEvaluations) { 			throw new org.apache.commons.math.FunctionEvaluationException(new org.apache.commons.math.MaxEvaluationsExceededException(maxEvaluations), x);} 		return f.value(x);
	    	                                                                                                                                             		                                        			                                                                                                                                              ^, DirectSearchOptimizer.java:351: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:361: error: class, interface, or enum expected
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length;
	    	                                ^, DirectSearchOptimizer.java:361: error: class, interface, or enum expected
	 */ 	private void buildSimplex(final double[] startPoint) throws java.lang.IllegalArgumentException { 		final int n = startPoint.length;
	    	                                                                                                 		      ^, DirectSearchOptimizer.java:362: error: class, interface, or enum expected
		if (n != startConfiguration.length) {
		^, DirectSearchOptimizer.java:366: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:370: error: class, interface, or enum expected
		simplex[0] = new org.apache.commons.math.optimization.RealPointValuePair(startPoint, java.lang.Double.NaN);
		^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		                ^, DirectSearchOptimizer.java:373: error: class, interface, or enum expected
		for (int i = 0; i < n; ++i) {
		                       ^, DirectSearchOptimizer.java:374: error: class, interface, or enum expected
			final double[] confI = startConfiguration[i];
			      ^, DirectSearchOptimizer.java:375: error: class, interface, or enum expected
			final double[] vertexI = new double[n];
			      ^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			                ^, DirectSearchOptimizer.java:376: error: class, interface, or enum expected
			for (int k = 0; k < n; ++k) {
			                       ^, DirectSearchOptimizer.java:378: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:380: error: class, interface, or enum expected
		}
		^, DirectSearchOptimizer.java:393: error: class, interface, or enum expected
	 */ 	protected void evaluateSimplex(final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		// evaluate the objective function at all non-evaluated simplex points
	    	                                     ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                                    ^, DirectSearchOptimizer.java:394: error: class, interface, or enum expected
		for (int i = 0; i < simplex.length; ++i) { 			final org.apache.commons.math.optimization.RealPointValuePair vertex = simplex[i];
		                                           			      ^, DirectSearchOptimizer.java:395: error: class, interface, or enum expected
			final double[] point = vertex.getPointRef();
			      ^, DirectSearchOptimizer.java:396: error: class, interface, or enum expected
			if (java.lang.Double.isNaN(vertex.getValue())) {
			^, DirectSearchOptimizer.java:398: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:404: error: class, interface, or enum expected
	}
	^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                               ^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		                ^, DirectSearchOptimizer.java:413: error: class, interface, or enum expected
	 */ 	protected void replaceWorstPoint(org.apache.commons.math.optimization.RealPointValuePair pointValuePair, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) { 		int n = simplex.length - 1; 		for (int i = 0; i < n; ++i) {
	    	                                                                                                                                                                                                           		                            		                       ^, DirectSearchOptimizer.java:416: error: class, interface, or enum expected
				simplex[i] = pointValuePair;
				^, DirectSearchOptimizer.java:417: error: class, interface, or enum expected
				pointValuePair = tmp;
				^, DirectSearchOptimizer.java:418: error: class, interface, or enum expected
			}
			^, DirectSearchOptimizer.java:421: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(996): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker()) ` -topatch--> `return checker` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1991(f=2.0), 1992(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1991(f=2.0), )
----------Running generation: 997, population size: 1

***** Generation 997 : 0
**Parent Variant: [Variant id: 1993, #gens: 240, #ops: 0, parent:-]

--Child created id: 1994
--Creating new operations for variant [Variant id: 1994, #gens: 240, #ops: 0, parent:1993]
---analyzing modificationPoint position: 46
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger den = fraction.getDenominator()
---analyzing modificationPoint position: 19
location: FractionFormat.java234
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1994, #gens: 239, #ops: 1, parent:1993] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 1994
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1994/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(997): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1993(f=2.0), 1994(f=2.0), )
Selected to next generation: IDs2--> (1993(f=2.0), )
----------Running generation: 998, population size: 1

***** Generation 998 : 0
**Parent Variant: [Variant id: 1995, #gens: 240, #ops: 0, parent:-]

--Child created id: 1996
--Creating new operations for variant [Variant id: 1996, #gens: 240, #ops: 0, parent:1995]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 1996, #gens: 239, #ops: 1, parent:1995] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 1996
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-1996/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(998): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1995(f=2.0), 1996(f=2.0), )
Selected to next generation: IDs2--> (1995(f=2.0), )
----------Running generation: 999, population size: 1

***** Generation 999 : 0
**Parent Variant: [Variant id: 1997, #gens: 240, #ops: 0, parent:-]

--Child created id: 1998
--Creating new operations for variant [Variant id: 1998, #gens: 240, #ops: 0, parent:1997]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
Attempts Base Ingredients  4 total 12
Attempts Base Ingredients  5 total 12
Attempts Base Ingredients  6 total 12
Attempts Base Ingredients  7 total 12
Attempts Base Ingredients  8 total 12
Attempts Base Ingredients  9 total 12
Attempts Base Ingredients  10 total 12
Attempts Base Ingredients  11 total 12
Attempts Base Ingredients  12 total 12
vars from patch []
location: FractionFormat.java103
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.FractionFormat line: 103, pointed element: CtReturnImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 1998, #gens: 240, #ops: 1, parent:1997] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 1998, errors: [FractionFormat.java:131: error: incompatible types: java.text.NumberFormat cannot be converted to org.apache.commons.math.fraction.FractionFormat
		return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDefault());} 	/**
		                                                                             ^]
Ingredient counter is Zero
---Undoing: gnrtn(999): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...] ` -topatch--> `return org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat(java.util.Locale.getDe[...]` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1997(f=2.0), 1998(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1997(f=2.0), )
----------Running generation: 1000, population size: 1

***** Generation 1000 : 0
**Parent Variant: [Variant id: 1999, #gens: 240, #ops: 0, parent:-]

--Child created id: 2000
--Creating new operations for variant [Variant id: 2000, #gens: 240, #ops: 0, parent:1999]
---analyzing modificationPoint position: 1
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java58
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 58, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2000, #gens: 241, #ops: 1, parent:1999] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 2000, errors: [AbstractFormat.java:59: error: call to this must be first statement in constructor
	 */ 	protected AbstractFormat(final java.text.NumberFormat format) { 		this(format, ((java.text.NumberFormat) (format.clone()))); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
	    	                                                                		                                                           		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(1000): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone()))) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (1999(f=2.0), 2000(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (1999(f=2.0), )
----------Running generation: 1001, population size: 1

***** Generation 1001 : 0
**Parent Variant: [Variant id: 2001, #gens: 240, #ops: 0, parent:-]

--Child created id: 2002
--Creating new operations for variant [Variant id: 2002, #gens: 240, #ops: 0, parent:2001]
---analyzing modificationPoint position: 0
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 109
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
Attempts Base Ingredients  3 total 11
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [comparator]
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: DirectSearchOptimizer.java401
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `iterateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 401, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `iterateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2002, #gens: 240, #ops: 1, parent:2001] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 2002
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2002/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(1001): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// sort the simplex from best to worst java.util.Arrays.sort(simplex, comparator) ` -topatch--> `iterateSimplex(comparator)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2001(f=2.0), 2002(f=4.0), )
Selected to next generation: IDs2--> (2001(f=2.0), )
----------Running generation: 1002, population size: 1

***** Generation 1002 : 0
**Parent Variant: [Variant id: 2003, #gens: 240, #ops: 0, parent:-]

--Child created id: 2004
--Creating new operations for variant [Variant id: 2004, #gens: 240, #ops: 0, parent:2003]
---analyzing modificationPoint position: 93
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  if (steps[j] == 0.0) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExce[...]
---analyzing modificationPoint position: 96
location: RealPointValuePair.java63
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2004, #gens: 239, #ops: 1, parent:2003] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2004, errors: [RealPointValuePair.java:65: error: variable value might not have been initialized
	 */ 	public RealPointValuePair(final double[] point, final double value, final boolean copyArray) { 		this.point = (copyArray) ? point.clone() : point;}
	    	                                                                                               		                                                 ^]
Ingredient counter is Zero
---Undoing: gnrtn(1002): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = value ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2003(f=2.0), 2004(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2003(f=2.0), )
----------Running generation: 1003, population size: 1

***** Generation 1003 : 0
**Parent Variant: [Variant id: 2005, #gens: 240, #ops: 0, parent:-]

--Child created id: 2006
--Creating new operations for variant [Variant id: 2006, #gens: 240, #ops: 0, parent:2005]
---analyzing modificationPoint position: 182
Templates availables166
Attempts Base Ingredients  1 total 166
---modifPoint 0 not mutation generated in  if (java.math.BigInteger.ZERO.equals(num)) { 	numerator = java.math.BigInteger.ZERO; 	denominator = [...]
---analyzing modificationPoint position: 42
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 28
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [this.gamma]
--> var from patch: this.gamma spoon.support.reflect.code.CtFieldWriteImpl
location: MultiDirectional.java90
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 90, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 2006, #gens: 241, #ops: 1, parent:2005] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child does NOT compile: 2006, errors: [MultiDirectional.java:90: error: cannot assign a value to final variable gamma
			final org.apache.commons.math.optimization.RealPointValuePair contracted = evaluateNewSimplex(original, gamma, comparator); 			this.gamma = 0.5;
			                                                                                                                            			    ^]
Ingredient counter is Zero
---Undoing: gnrtn(1003): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `this.gamma = 0.5` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2005(f=2.0), 2006(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2005(f=2.0), )
----------Running generation: 1004, population size: 1

***** Generation 1004 : 0
**Parent Variant: [Variant id: 2007, #gens: 240, #ops: 0, parent:-]

--Child created id: 2008
--Creating new operations for variant [Variant id: 2008, #gens: 240, #ops: 0, parent:2007]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2008, #gens: 239, #ops: 1, parent:2007] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2008
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2008/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1004): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2007(f=2.0), 2008(f=2.0), )
Selected to next generation: IDs2--> (2007(f=2.0), )
----------Running generation: 1005, population size: 1

***** Generation 1005 : 0
**Parent Variant: [Variant id: 2009, #gens: 240, #ops: 0, parent:-]

--Child created id: 2010
--Creating new operations for variant [Variant id: 2010, #gens: 240, #ops: 0, parent:2009]
---analyzing modificationPoint position: 45
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [numeratorFormat]
--> var from patch: numeratorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 2010, #gens: 241, #ops: 1, parent:2009] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2010, errors: [AbstractFormat.java:111: error: non-static variable numeratorFormat cannot be referenced from a static context
		return numeratorFormat; 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale); 		nf.setMaximumFractionDigits(0); 		nf.setParseIntegerOnly(true); 		return nf;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(1005): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `return numeratorFormat` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2009(f=2.0), 2010(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2009(f=2.0), )
----------Running generation: 1006, population size: 1

***** Generation 1006 : 0
**Parent Variant: [Variant id: 2011, #gens: 240, #ops: 0, parent:-]

--Child created id: 2012
--Creating new operations for variant [Variant id: 2012, #gens: 240, #ops: 0, parent:2011]
---analyzing modificationPoint position: 86
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 12
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch []
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 227, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2012, #gens: 241, #ops: 1, parent:2011] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2012, errors: [ProperFractionFormat.java:229: error: call to this must be first statement in constructor
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat()); 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	                                                            		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(1006): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `this(org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2011(f=2.0), 2012(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2011(f=2.0), )
----------Running generation: 1007, population size: 1

***** Generation 1007 : 0
**Parent Variant: [Variant id: 2013, #gens: 240, #ops: 0, parent:-]

--Child created id: 2014
--Creating new operations for variant [Variant id: 2014, #gens: 240, #ops: 0, parent:2013]
---analyzing modificationPoint position: 160
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [den, toAppendTo, pos]
--> var from patch: den spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java101
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 101, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2014, #gens: 240, #ops: 1, parent:2013] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2014
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2014/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1007): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `getDenominatorFormat().format(den, toAppendTo,  pos)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2013(f=2.0), 2014(f=2.0), )
Selected to next generation: IDs2--> (2013(f=2.0), )
----------Running generation: 1008, population size: 1

***** Generation 1008 : 0
**Parent Variant: [Variant id: 2015, #gens: 240, #ops: 0, parent:-]

--Child created id: 2016
--Creating new operations for variant [Variant id: 2016, #gens: 240, #ops: 0, parent:2015]
---analyzing modificationPoint position: 12
location: ProperFractionFormat.java227
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2016, #gens: 239, #ops: 1, parent:2015] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2016
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2016/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1008): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (format == null) { 	throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentExcep[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2015(f=2.0), 2016(f=2.0), )
Selected to next generation: IDs2--> (2015(f=2.0), )
----------Running generation: 1009, population size: 1

***** Generation 1009 : 0
**Parent Variant: [Variant id: 2017, #gens: 240, #ops: 0, parent:-]

--Child created id: 2018
--Creating new operations for variant [Variant id: 2018, #gens: 240, #ops: 0, parent:2017]
---analyzing modificationPoint position: 4
Templates availables5
Attempts Base Ingredients  1 total 5
Attempts Base Ingredients  2 total 5
Attempts Base Ingredients  3 total 5
Attempts Base Ingredients  4 total 5
Attempts Base Ingredients  5 total 5
--- no mutation left to apply in element spoon.support.reflect.code.CtLocalVariableImpl@db9, search space size: 5
---modifPoint 0 not mutation generated in  final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale)
---analyzing modificationPoint position: 5
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
Attempts Base Ingredients  3 total 7
Attempts Base Ingredients  4 total 7
Attempts Base Ingredients  5 total 7
Attempts Base Ingredients  6 total 7
Attempts Base Ingredients  7 total 7
--- no mutation left to apply in element spoon.support.reflect.code.CtInvocationImpl@1, search space size: 7
---modifPoint 1 not mutation generated in  nf.setMaximumFractionDigits(0)
---analyzing modificationPoint position: 138
location: AbstractFormat.java149
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2018, #gens: 239, #ops: 1, parent:2017] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 2018
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2018/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1009): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.apache.commons.math.fraction.AbstractFormat.parseNextCharacter(source, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2017(f=2.0), 2018(f=2.0), )
Selected to next generation: IDs2--> (2017(f=2.0), )
----------Running generation: 1010, population size: 1

***** Generation 1010 : 0
**Parent Variant: [Variant id: 2019, #gens: 240, #ops: 0, parent:-]

--Child created id: 2020
--Creating new operations for variant [Variant id: 2020, #gens: 240, #ops: 0, parent:2019]
---analyzing modificationPoint position: 54
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
vars from patch [whole, toAppendTo, pos, num]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: num spoon.support.reflect.code.CtVariableWriteImpl
location: ProperFractionFormat.java100
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 100, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 2020, #gens: 240, #ops: 1, parent:2019] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2020
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2020/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1010): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...] ` -topatch--> `if (whole != 0) { 	getWholeFormat().format(whole, toAppendTo, pos); 	toAppendTo.append(' '); 	num = [...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2019(f=2.0), 2020(f=2.0), )
Selected to next generation: IDs2--> (2019(f=2.0), )
----------Running generation: 1011, population size: 1

***** Generation 1011 : 0
**Parent Variant: [Variant id: 2021, #gens: 240, #ops: 0, parent:-]

--Child created id: 2022
--Creating new operations for variant [Variant id: 2022, #gens: 240, #ops: 0, parent:2021]
---analyzing modificationPoint position: 169
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java81
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 81, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2022, #gens: 241, #ops: 1, parent:2021] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2022
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2022/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1011): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// accept the reflected simplex simplex = reflectedSimplex ` -topatch--> `incrementIterationsCounter()` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2021(f=2.0), 2022(f=2.0), )
Selected to next generation: IDs2--> (2021(f=2.0), )
----------Running generation: 1012, population size: 1

***** Generation 1012 : 0
**Parent Variant: [Variant id: 2023, #gens: 240, #ops: 0, parent:-]

--Child created id: 2024
--Creating new operations for variant [Variant id: 2024, #gens: 240, #ops: 0, parent:2023]
---analyzing modificationPoint position: 133
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [iterations]
--> var from patch: iterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java392
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 392, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 2024, #gens: 241, #ops: 1, parent:2023] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2024
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2024/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1012): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtForImpl) `// evaluate the objective function at all non-evaluated simplex points for (int i = 0; i < simplex.l[...] ` -topatch--> `// initialize search iterations = 0` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2023(f=2.0), 2024(f=2.0), )
Selected to next generation: IDs2--> (2023(f=2.0), )
----------Running generation: 1013, population size: 1

***** Generation 1013 : 0
**Parent Variant: [Variant id: 2025, #gens: 240, #ops: 0, parent:-]

--Child created id: 2026
--Creating new operations for variant [Variant id: 2026, #gens: 240, #ops: 0, parent:2025]
---analyzing modificationPoint position: 2
location: AbstractFormat.java69
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2026, #gens: 239, #ops: 1, parent:2025] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2026
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2026/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1013): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numeratorFormat = numeratorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2025(f=2.0), 2026(f=2.0), )
Selected to next generation: IDs2--> (2025(f=2.0), )
----------Running generation: 1014, population size: 1

***** Generation 1014 : 0
**Parent Variant: [Variant id: 2027, #gens: 240, #ops: 0, parent:-]

--Child created id: 2028
--Creating new operations for variant [Variant id: 2028, #gens: 240, #ops: 0, parent:2027]
---analyzing modificationPoint position: 39
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java131
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 131, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 2028, #gens: 241, #ops: 1, parent:2027] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 2028, errors: [MultiDirectional.java:133: error: incompatible types: missing return value
		return; 		return simplex[0];
		^]
Ingredient counter is Zero
---Undoing: gnrtn(1014): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtInvocationImpl) `// evaluate it evaluateSimplex(comparator) ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2027(f=2.0), 2028(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2027(f=2.0), )
----------Running generation: 1015, population size: 1

***** Generation 1015 : 0
**Parent Variant: [Variant id: 2029, #gens: 240, #ops: 0, parent:-]

--Child created id: 2030
--Creating new operations for variant [Variant id: 2030, #gens: 240, #ops: 0, parent:2029]
---analyzing modificationPoint position: 90
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 1 not mutation generated in  this.wholeFormat = format
---analyzing modificationPoint position: 10
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 16
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 3 not mutation generated in  // invalid integer number // set index back to initial, error index should already be set // charact[...]
---analyzing modificationPoint position: 11
---modifPoint 4 not mutation generated in  return new org.apache.commons.math.fraction.ProperFractionFormat(org.apache.commons.math.fraction.Ab[...]
---analyzing modificationPoint position: 0
---modifPoint 5 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 6 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 42
location: ProperBigFractionFormat.java92
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2030, #gens: 239, #ops: 1, parent:2029] gen mutated: 1 , gen not mut: 7, gen not applied  0
-The child compiles: id 2030
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2030/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1015): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pos.setEndIndex(0) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2029(f=2.0), 2030(f=2.0), )
Selected to next generation: IDs2--> (2029(f=2.0), )
----------Running generation: 1016, population size: 1

***** Generation 1016 : 0
**Parent Variant: [Variant id: 2031, #gens: 240, #ops: 0, parent:-]

--Child created id: 2032
--Creating new operations for variant [Variant id: 2032, #gens: 240, #ops: 0, parent:2031]
---analyzing modificationPoint position: 0
---modifPoint 0 not mutation generated in  return numeratorFormat
---analyzing modificationPoint position: 45
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 1 not mutation generated in  java.math.BigInteger num = fraction.getNumerator()
---analyzing modificationPoint position: 203
Templates availables30
Attempts Base Ingredients  1 total 30
---modifPoint 2 not mutation generated in  this.numerator = num
---analyzing modificationPoint position: 41
Templates availables13
Attempts Base Ingredients  1 total 13
Attempts Base Ingredients  2 total 13
Attempts Base Ingredients  3 total 13
---modifPoint 3 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 78
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 4 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 31
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
vars from patch [original]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java119
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 119, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 2032, #gens: 241, #ops: 1, parent:2031] gen mutated: 1 , gen not mut: 5, gen not applied  0
-The child does NOT compile: 2032, errors: [MultiDirectional.java:117: error: variable xSmallest is already defined in method evaluateNewSimplex(org.apache.commons.math.optimization.RealPointValuePair[],double,java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair>)
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		final double[] xSmallest = original[0].getPointRef();
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                                		               ^]
Ingredient counter is Zero
---Undoing: gnrtn(1016): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `// create the linearly transformed simplex simplex = new org.apache.commons.math.optimization.RealPo[...] ` -topatch--> `final double[] xSmallest = original[0].getPointRef()` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2031(f=2.0), 2032(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2031(f=2.0), )
----------Running generation: 1017, population size: 1

***** Generation 1017 : 0
**Parent Variant: [Variant id: 2033, #gens: 240, #ops: 0, parent:-]

--Child created id: 2034
--Creating new operations for variant [Variant id: 2034, #gens: 240, #ops: 0, parent:2033]
---analyzing modificationPoint position: 84
---modifPoint 0 not mutation generated in  return denominator
---analyzing modificationPoint position: 171
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex, original]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java94
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 94, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 2034, #gens: 241, #ops: 1, parent:2033] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2034, errors: [MultiDirectional.java:137: error: reached end of file while parsing
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1]; 		simplex[0] = original[0]; 		for (int i = 1; i <= n; ++i) { 			final double[] xOriginal = original[i].getPointRef(); 			final double[] xTransformed = new double[n]; 			for (int j = 0; j < n; ++j) { 				xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j]));} 			simplex[i] = new org.apache.commons.math.optimization.RealPointValuePair(xTransformed, java.lang.Double.NaN, false);} 		// evaluate it 		evaluateSimplex(comparator); 		return simplex[0];}}
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		                               ^]
Ingredient counter is Zero
---Undoing: gnrtn(1017): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `// accept the contracted simplex  // check convergence return ` -topatch--> `simplex[0] = original[0]` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2033(f=2.0), 2034(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2033(f=2.0), )
----------Running generation: 1018, population size: 1

***** Generation 1018 : 0
**Parent Variant: [Variant id: 2035, #gens: 240, #ops: 0, parent:-]

--Child created id: 2036
--Creating new operations for variant [Variant id: 2036, #gens: 240, #ops: 0, parent:2035]
---analyzing modificationPoint position: 14
---modifPoint 0 not mutation generated in  return wholeFormat
---analyzing modificationPoint position: 24
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 69
location: FractionFormat.java206
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2036, #gens: 239, #ops: 1, parent:2035] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 2036
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2036/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1018): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2035(f=2.0), 2036(f=2.0), )
Selected to next generation: IDs2--> (2035(f=2.0), )
----------Running generation: 1019, population size: 1

***** Generation 1019 : 0
**Parent Variant: [Variant id: 2037, #gens: 240, #ops: 0, parent:-]

--Child created id: 2038
--Creating new operations for variant [Variant id: 2038, #gens: 240, #ops: 0, parent:2037]
---analyzing modificationPoint position: 36
location: MultiDirectional.java124
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2038, #gens: 239, #ops: 1, parent:2037] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2038
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2038/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(1019): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int j = 0; j < n; ++j) { 	xTransformed[j] = xSmallest[j] + (coeff * (xSmallest[j] - xOriginal[j[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2037(f=2.0), 2038(f=4.0), )
Selected to next generation: IDs2--> (2037(f=2.0), )
----------Running generation: 1020, population size: 1

***** Generation 1020 : 0
**Parent Variant: [Variant id: 2039, #gens: 240, #ops: 0, parent:-]

--Child created id: 2040
--Creating new operations for variant [Variant id: 2040, #gens: 240, #ops: 0, parent:2039]
---analyzing modificationPoint position: 94
Templates availables11
Attempts Base Ingredients  1 total 11
Attempts Base Ingredients  2 total 11
Attempts Base Ingredients  3 total 11
Attempts Base Ingredients  4 total 11
vars from patch []
location: DirectSearchOptimizer.java152
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2040, #gens: 240, #ops: 1, parent:2039] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2040
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2040/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 3, was successful: false, cases executed: 5] ,[]
-Valid?: |false|3|5|[]|, fitness 3.0
Ingredient counter is Zero
---Undoing: gnrtn(1020): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(steps, 0, vertexI, 0, j + 1) ` -topatch--> `setConvergenceChecker(new org.apache.commons.math.optimization.SimpleScalarValueChecker())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2039(f=2.0), 2040(f=3.0), )
Selected to next generation: IDs2--> (2039(f=2.0), )
----------Running generation: 1021, population size: 1

***** Generation 1021 : 0
**Parent Variant: [Variant id: 2041, #gens: 240, #ops: 0, parent:-]

--Child created id: 2042
--Creating new operations for variant [Variant id: 2042, #gens: 240, #ops: 0, parent:2041]
---analyzing modificationPoint position: 70
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [obj, ret, toAppendTo, pos]
--> var from patch: obj spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: ret spoon.support.reflect.code.CtVariableWriteImpl
--> var from patch: toAppendTo spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: BigFractionFormat.java168
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `if (obj instanceof java.math.BigInteger) { 	ret = format(new org.apache.commons.math.fraction.BigFra[...]` (spoon.support.reflect.code.CtIfImpl) 
---MP=org.apache.commons.math.fraction.BigFractionFormat line: 168, pointed element: CtIfImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `if (obj instanceof java.math.BigInteger) { 	ret = format(new org.apache.commons.math.fraction.BigFra[...]` (spoon.support.reflect.code.CtIfImpl) 

--Summary Creation: for variant [Variant id: 2042, #gens: 240, #ops: 1, parent:2041] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2042
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2042/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1021): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof org.apache.commons.math.fraction.BigFraction) { 	ret = format(((org.apache.common[...] ` -topatch--> `if (obj instanceof java.math.BigInteger) { 	ret = format(new org.apache.commons.math.fraction.BigFra[...]` (spoon.support.reflect.code.CtIfImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2041(f=2.0), 2042(f=2.0), )
Selected to next generation: IDs2--> (2041(f=2.0), )
----------Running generation: 1022, population size: 1

***** Generation 1022 : 0
**Parent Variant: [Variant id: 2043, #gens: 240, #ops: 0, parent:-]

--Child created id: 2044
--Creating new operations for variant [Variant id: 2044, #gens: 240, #ops: 0, parent:2043]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2044, #gens: 239, #ops: 1, parent:2043] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2044
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2044/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1022): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2043(f=2.0), 2044(f=2.0), )
Selected to next generation: IDs2--> (2043(f=2.0), )
----------Running generation: 1023, population size: 1

***** Generation 1023 : 0
**Parent Variant: [Variant id: 2045, #gens: 240, #ops: 0, parent:-]

--Child created id: 2046
--Creating new operations for variant [Variant id: 2046, #gens: 240, #ops: 0, parent:2045]
---analyzing modificationPoint position: 3
location: AbstractFormat.java70
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2046, #gens: 239, #ops: 1, parent:2045] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2046
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2046/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1023): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.denominatorFormat = denominatorFormat ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2045(f=2.0), 2046(f=2.0), )
Selected to next generation: IDs2--> (2045(f=2.0), )
----------Running generation: 1024, population size: 1

***** Generation 1024 : 0
**Parent Variant: [Variant id: 2047, #gens: 240, #ops: 0, parent:-]

--Child created id: 2048
--Creating new operations for variant [Variant id: 2048, #gens: 240, #ops: 0, parent:2047]
---analyzing modificationPoint position: 115
location: DirectSearchOptimizer.java230
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2048, #gens: 239, #ops: 1, parent:2047] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2048
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2048/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 5, was successful: false, cases executed: 5] ,[]
-Valid?: |false|5|5|[]|, fitness 5.0
Ingredient counter is Zero
---Undoing: gnrtn(1024): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxEvaluations = maxEvaluations ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2047(f=2.0), 2048(f=5.0), )
Selected to next generation: IDs2--> (2047(f=2.0), )
----------Running generation: 1025, population size: 1

***** Generation 1025 : 0
**Parent Variant: [Variant id: 2049, #gens: 240, #ops: 0, parent:-]

--Child created id: 2050
--Creating new operations for variant [Variant id: 2050, #gens: 240, #ops: 0, parent:2049]
---analyzing modificationPoint position: 55
location: ProperFractionFormat.java105
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2050, #gens: 239, #ops: 1, parent:2049] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2050
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2050/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1025): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `getNumeratorFormat().format(num, toAppendTo, pos) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2049(f=2.0), 2050(f=2.0), )
Selected to next generation: IDs2--> (2049(f=2.0), )
----------Running generation: 1026, population size: 1

***** Generation 1026 : 0
**Parent Variant: [Variant id: 2051, #gens: 240, #ops: 0, parent:-]

--Child created id: 2052
--Creating new operations for variant [Variant id: 2052, #gens: 240, #ops: 0, parent:2051]
---analyzing modificationPoint position: 17
---modifPoint 0 not mutation generated in  return null
---analyzing modificationPoint position: 4
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch []
location: AbstractFormat.java91
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 91, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2052, #gens: 241, #ops: 1, parent:2051] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2052, errors: [AbstractFormat.java:92: error: call to this must be first statement in constructor
	 */ 	protected static java.text.NumberFormat getDefaultNumberFormat(final java.util.Locale locale) { 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat()); 		final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale);
	    	                                                                                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(1026): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance(locale) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2051(f=2.0), 2052(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2051(f=2.0), )
----------Running generation: 1027, population size: 1

***** Generation 1027 : 0
**Parent Variant: [Variant id: 2053, #gens: 240, #ops: 0, parent:-]

--Child created id: 2054
--Creating new operations for variant [Variant id: 2054, #gens: 240, #ops: 0, parent:2053]
---analyzing modificationPoint position: 48
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 0 not mutation generated in  java.math.BigInteger whole = num.divide(den)
---analyzing modificationPoint position: 154
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  num = num.negate()
---analyzing modificationPoint position: 69
location: FractionFormat.java206
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2054, #gens: 239, #ops: 1, parent:2053] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 2054
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2054/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1027): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw org.apache.commons.math.MathRuntimeException.createParseException( parsePosition.getErrorIndex[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2053(f=2.0), 2054(f=2.0), )
Selected to next generation: IDs2--> (2053(f=2.0), )
----------Running generation: 1028, population size: 1

***** Generation 1028 : 0
**Parent Variant: [Variant id: 2055, #gens: 240, #ops: 0, parent:-]

--Child created id: 2056
--Creating new operations for variant [Variant id: 2056, #gens: 240, #ops: 0, parent:2055]
---analyzing modificationPoint position: 113
Templates availables32
Attempts Base Ingredients  1 total 32
Name Conflict [index, n, source, pos, ret]
---modifPoint 0 not mutation generated in  ret = c
---analyzing modificationPoint position: 57
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java106
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 106, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2056, #gens: 240, #ops: 1, parent:2055] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 2056
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2056/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1028): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setBeginIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2055(f=2.0), 2056(f=2.0), )
Selected to next generation: IDs2--> (2055(f=2.0), )
----------Running generation: 1029, population size: 1

***** Generation 1029 : 0
**Parent Variant: [Variant id: 2057, #gens: 240, #ops: 0, parent:-]

--Child created id: 2058
--Creating new operations for variant [Variant id: 2058, #gens: 240, #ops: 0, parent:2057]
---analyzing modificationPoint position: 16
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos, initialIndex]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: initialIndex spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java152
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 152, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2058, #gens: 240, #ops: 1, parent:2057] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 2058, errors: [ProperFractionFormat.java:179: error: switch expressions are not supported in -source 8
		switch (c) {
		^
  (use -source 14 or higher to enable switch expressions), ProperFractionFormat.java:197: error: ';' expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		   ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                        ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                               ^, ProperFractionFormat.java:197: error: <identifier> expected
		org.apache.commons.math.fraction.AbstractFormat.parseAndIgnoreWhitespace(source, pos);
		                                                                                    ^, ProperFractionFormat.java:201: error: illegal start of type
		if (den == null) {
		^, ProperFractionFormat.java:201: error: <identifier> expected
		if (den == null) {
		       ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                ^, ProperFractionFormat.java:209: error: ';' expected
		if (den.intValue() < 0) {
		                  ^, ProperFractionFormat.java:209: error: <identifier> expected
		if (den.intValue() < 0) {
		                    ^, ProperFractionFormat.java:209: error: illegal start of type
		if (den.intValue() < 0) {
		                     ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		^, ProperFractionFormat.java:218: error: <identifier> expected
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                    ^, ProperFractionFormat.java:218: error: illegal start of type
		return new org.apache.commons.math.fraction.Fraction(((java.lang.Math.abs(w) * d) + n) * org.apache.commons.math.util.MathUtils.sign(w), d);
		                                                     ^, ProperFractionFormat.java:229: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(
	    	       ^, ProperFractionFormat.java:231: error: class, interface, or enum expected
		}
		^, ProperFractionFormat.java:233: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(1029): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `// invalid integer number // set index back to initial, error index should already be set // charact[...] ` -topatch--> `// minus signs should be leading, invalid expression pos.setIndex(initialIndex)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2057(f=2.0), 2058(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2057(f=2.0), )
----------Running generation: 1030, population size: 1

***** Generation 1030 : 0
**Parent Variant: [Variant id: 2059, #gens: 240, #ops: 0, parent:-]

--Child created id: 2060
--Creating new operations for variant [Variant id: 2060, #gens: 240, #ops: 0, parent:2059]
---analyzing modificationPoint position: 77
Templates availables38
Attempts Base Ingredients  1 total 38
---modifPoint 0 not mutation generated in  final java.text.ParsePosition parsePosition = new java.text.ParsePosition(0)
---analyzing modificationPoint position: 6
Templates availables7
Attempts Base Ingredients  1 total 7
Attempts Base Ingredients  2 total 7
vars from patch []
location: AbstractFormat.java93
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 93, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2060, #gens: 240, #ops: 1, parent:2059] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2060, errors: [AbstractFormat.java:93: error: call to this must be first statement in constructor
		nf.setMaximumFractionDigits(0); 		this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat());
		                                		    ^]
Ingredient counter is Zero
---Undoing: gnrtn(1030): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `nf.setParseIntegerOnly(true) ` -topatch--> `this(org.apache.commons.math.fraction.AbstractFormat.getDefaultNumberFormat())` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2059(f=2.0), 2060(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2059(f=2.0), )
----------Running generation: 1031, population size: 1

***** Generation 1031 : 0
**Parent Variant: [Variant id: 2061, #gens: 240, #ops: 0, parent:-]

--Child created id: 2062
--Creating new operations for variant [Variant id: 2062, #gens: 240, #ops: 0, parent:2061]
---analyzing modificationPoint position: 15
Templates availables32
Attempts Base Ingredients  1 total 32
vars from patch [denominatorFormat]
--> var from patch: denominatorFormat spoon.support.reflect.code.CtVariableReadImpl
location: AbstractFormat.java102
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.AbstractFormat line: 102, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 2062, #gens: 241, #ops: 1, parent:2061] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2062
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2062/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1031): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return denominatorFormat ` -topatch--> `denominatorFormat = denominatorFormat` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2061(f=2.0), 2062(f=2.0), )
Selected to next generation: IDs2--> (2061(f=2.0), )
----------Running generation: 1032, population size: 1

***** Generation 1032 : 0
**Parent Variant: [Variant id: 2063, #gens: 240, #ops: 0, parent:-]

--Child created id: 2064
--Creating new operations for variant [Variant id: 2064, #gens: 240, #ops: 0, parent:2063]
---analyzing modificationPoint position: 135
---modifPoint 0 not mutation generated in  final double[] point = vertex.getPointRef()
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
---modifPoint 1 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 58
Templates availables13
Attempts Base Ingredients  1 total 13
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperBigFractionFormat.java107
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 107, pointed element: CtInvocationImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2064, #gens: 240, #ops: 1, parent:2063] gen mutated: 1 , gen not mut: 2, gen not applied  0
-The child compiles: id 2064
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2064/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1032): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtInvocationImpl) `toAppendTo.append(" / ") ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2063(f=2.0), 2064(f=2.0), )
Selected to next generation: IDs2--> (2063(f=2.0), )
----------Running generation: 1033, population size: 1

***** Generation 1033 : 0
**Parent Variant: [Variant id: 2065, #gens: 240, #ops: 0, parent:-]

--Child created id: 2066
--Creating new operations for variant [Variant id: 2066, #gens: 240, #ops: 0, parent:2065]
---analyzing modificationPoint position: 24
Templates availables10
Attempts Base Ingredients  1 total 10
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
vars from patch [original, gamma, comparator]
--> var from patch: original spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: gamma spoon.support.reflect.code.CtFieldReadImpl
--> var from patch: comparator spoon.support.reflect.code.CtVariableReadImpl
location: MultiDirectional.java70
operation: OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 70, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 2066, #gens: 240, #ops: 1, parent:2065] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 2066, errors: [MultiDirectional.java:91: error: cannot find symbol
			if (comparator.compare(contracted, best) < 0) {
			                                   ^
  symbol:   variable best
  location: class org.apache.commons.math.optimization.direct.MultiDirectional]
Ingredient counter is Zero
---Undoing: gnrtn(1033): OP_INSTANCE:
ReplaceOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final org.apache.commons.math.optimization.RealPointValuePair best = original[0] ` -topatch--> `// compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2065(f=2.0), 2066(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2065(f=2.0), )
----------Running generation: 1034, population size: 1

***** Generation 1034 : 0
**Parent Variant: [Variant id: 2067, #gens: 240, #ops: 0, parent:-]

--Child created id: 2068
--Creating new operations for variant [Variant id: 2068, #gens: 240, #ops: 0, parent:2067]
---analyzing modificationPoint position: 6
Templates availables32
Attempts Base Ingredients  1 total 32
Attempts Base Ingredients  2 total 32
Attempts Base Ingredients  3 total 32
---modifPoint 0 not mutation generated in  nf.setParseIntegerOnly(true)
---analyzing modificationPoint position: 24
---modifPoint 1 not mutation generated in  final org.apache.commons.math.optimization.RealPointValuePair best = original[0]
---analyzing modificationPoint position: 34
---modifPoint 2 not mutation generated in  final double[] xOriginal = original[i].getPointRef()
---analyzing modificationPoint position: 26
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch [simplex]
--> var from patch: simplex spoon.support.reflect.code.CtFieldReadImpl
location: MultiDirectional.java74
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 74, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 2068, #gens: 241, #ops: 1, parent:2067] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 2068
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2068/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1034): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(reflected, best) < 0) {  	// compute the expanded simplex 	final org.apache.c[...] ` -topatch--> `// save the original vertex final org.apache.commons.math.optimization.RealPointValuePair[] original[...]` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2067(f=2.0), 2068(f=2.0), )
Selected to next generation: IDs2--> (2067(f=2.0), )
----------Running generation: 1035, population size: 1

***** Generation 1035 : 0
**Parent Variant: [Variant id: 2069, #gens: 240, #ops: 0, parent:-]

--Child created id: 2070
--Creating new operations for variant [Variant id: 2070, #gens: 240, #ops: 0, parent:2069]
---analyzing modificationPoint position: 201
Templates availables29
Attempts Base Ingredients  1 total 29
---modifPoint 0 not mutation generated in  if (d > 1) { 	num /= d; 	den /= d; }
---analyzing modificationPoint position: 131
Templates availables89
Attempts Base Ingredients  1 total 89
Cannot load class: org.apache.commons.math.optimization.RealPointValuePair[] with class loader jdk.internal.loader.ClassLoaders$AppClassLoader@5b37e0d2
---modifPoint 1 not mutation generated in  vertexI[k] = startPoint[k] + confI[k]
---analyzing modificationPoint position: 10
Templates availables12
Attempts Base Ingredients  1 total 12
Attempts Base Ingredients  2 total 12
Attempts Base Ingredients  3 total 12
Attempts Base Ingredients  4 total 12
Attempts Base Ingredients  5 total 12
Attempts Base Ingredients  6 total 12
Attempts Base Ingredients  7 total 12
Attempts Base Ingredients  8 total 12
Attempts Base Ingredients  9 total 12
Attempts Base Ingredients  10 total 12
Attempts Base Ingredients  11 total 12
Attempts Base Ingredients  12 total 12
--- no mutation left to apply in element spoon.support.reflect.code.CtReturnImpl@1, search space size: 12
---modifPoint 2 not mutation generated in  return new org.apache.commons.math.fraction.FractionFormat(org.apache.commons.math.fraction.Abstract[...]
---analyzing modificationPoint position: 9
location: ProperFractionFormat.java75
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2070, #gens: 239, #ops: 1, parent:2069] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child compiles: id 2070
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2070/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1035): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setWholeFormat(wholeFormat) ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2069(f=2.0), 2070(f=2.0), )
Selected to next generation: IDs2--> (2069(f=2.0), )
----------Running generation: 1036, population size: 1

***** Generation 1036 : 0
**Parent Variant: [Variant id: 2071, #gens: 240, #ops: 0, parent:-]

--Child created id: 2072
--Creating new operations for variant [Variant id: 2072, #gens: 240, #ops: 0, parent:2071]
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java46
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 46, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 2072, #gens: 241, #ops: 1, parent:2071] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child does NOT compile: 2072, errors: [MultiDirectional.java:120: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
	    	        ^, MultiDirectional.java:120: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
	    	                                                                                         ^, MultiDirectional.java:120: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
	    	                                                                                                                                                                   ^, MultiDirectional.java:120: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
	    	                                                                                                                                                                                       ^, MultiDirectional.java:120: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		      ^, MultiDirectional.java:120: error: class, interface, or enum expected
	 */ 	private org.apache.commons.math.optimization.RealPointValuePair evaluateNewSimplex(final org.apache.commons.math.optimization.RealPointValuePair[] original, final double coeff, final java.util.Comparator<org.apache.commons.math.optimization.RealPointValuePair> comparator) throws org.apache.commons.math.FunctionEvaluationException, org.apache.commons.math.optimization.OptimizationException { 		final double[] xSmallest = original[0].getPointRef(); 		final int n = xSmallest.length; 		// create the linearly transformed simplex 		simplex = new org.apache.commons.math.optimization.RealPointValuePair[n + 1];
	    	                                                                                                                                                                                                                                                                                                                                                                                                          		                                                      		      ^, MultiDirectional.java:121: error: class, interface, or enum expected
		simplex[0] = original[0];
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                ^, MultiDirectional.java:122: error: class, interface, or enum expected
		for (int i = 1; i <= n; ++i) {
		                        ^, MultiDirectional.java:123: error: class, interface, or enum expected
			final double[] xOriginal = original[i].getPointRef();
			      ^, MultiDirectional.java:124: error: class, interface, or enum expected
			final double[] xTransformed = new double[n];
			      ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                ^, MultiDirectional.java:125: error: class, interface, or enum expected
			for (int j = 0; j < n; ++j) {
			                       ^, MultiDirectional.java:127: error: class, interface, or enum expected
			}
			^, MultiDirectional.java:129: error: class, interface, or enum expected
		}
		^, MultiDirectional.java:133: error: class, interface, or enum expected
		return simplex[0];
		^, MultiDirectional.java:135: error: class, interface, or enum expected
	}
	^]
Ingredient counter is Zero
---Undoing: gnrtn(1036): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.khi = 2.0 ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2071(f=2.0), 2072(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2071(f=2.0), )
----------Running generation: 1037, population size: 1

***** Generation 1037 : 0
**Parent Variant: [Variant id: 2073, #gens: 240, #ops: 0, parent:-]

--Child created id: 2074
--Creating new operations for variant [Variant id: 2074, #gens: 240, #ops: 0, parent:2073]
---analyzing modificationPoint position: 47
Templates availables44
Attempts Base Ingredients  1 total 44
vars from patch [pos]
--> var from patch: pos spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java95
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int num = fraction.getNumerator() ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 95, pointed element: CtInvocationImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int num = fraction.getNumerator() ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 

--Summary Creation: for variant [Variant id: 2074, #gens: 241, #ops: 1, parent:2073] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2074
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2074/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1037): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int num = fraction.getNumerator() ` -topatch--> `pos.setEndIndex(0)` (spoon.support.reflect.code.CtInvocationImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2073(f=2.0), 2074(f=2.0), )
Selected to next generation: IDs2--> (2073(f=2.0), )
----------Running generation: 1038, population size: 1

***** Generation 1038 : 0
**Parent Variant: [Variant id: 2075, #gens: 240, #ops: 0, parent:-]

--Child created id: 2076
--Creating new operations for variant [Variant id: 2076, #gens: 240, #ops: 0, parent:2075]
---analyzing modificationPoint position: 86
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 0 not mutation generated in  return new java.text.ParseException(org.apache.commons.math.MathRuntimeException.buildMessage(java.u[...]
---analyzing modificationPoint position: 44
Templates availables13
Attempts Base Ingredients  1 total 13
---modifPoint 1 not mutation generated in  pos.setEndIndex(0)
---analyzing modificationPoint position: 20
Templates availables30
Attempts Base Ingredients  1 total 30
Attempts Base Ingredients  2 total 30
Attempts Base Ingredients  3 total 30
Attempts Base Ingredients  4 total 30
---modifPoint 2 not mutation generated in  this.khi = 2.0
---analyzing modificationPoint position: 158
Templates availables47
Attempts Base Ingredients  1 total 47
vars from patch [whole, java.math.BigInteger.ZERO]
--> var from patch: whole spoon.support.reflect.code.CtVariableReadImpl
--> var from patch: java.math.BigInteger.ZERO spoon.support.reflect.code.CtFieldReadImpl
location: ProperBigFractionFormat.java100
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `boolean wholeIsNeg = whole.compareTo(java.math.BigInteger.ZERO) < 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
---MP=org.apache.commons.math.fraction.ProperBigFractionFormat line: 100, pointed element: CtLocalVariableImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `boolean wholeIsNeg = whole.compareTo(java.math.BigInteger.ZERO) < 0` (spoon.support.reflect.code.CtLocalVariableImpl) 

--Summary Creation: for variant [Variant id: 2076, #gens: 241, #ops: 1, parent:2075] gen mutated: 1 , gen not mut: 3, gen not applied  0
-The child does NOT compile: 2076, errors: [ProperBigFractionFormat.java:235: error: orphaned case
				return new org.apache.commons.math.fraction.BigFraction(num); 			case '/' : 				// found '/', continue parsing denominator
				                                                              			^, ProperBigFractionFormat.java:238: error: illegal start of expression
	 * Modify the whole format.
	 ^, ProperBigFractionFormat.java:238: error: ';' expected
	 * Modify the whole format.
	         ^, ProperBigFractionFormat.java:238: error: ';' expected
	 * Modify the whole format.
	                   ^, ProperBigFractionFormat.java:238: error: <identifier> expected
	 * Modify the whole format.
	                           ^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * @param format
	 ^, ProperBigFractionFormat.java:240: error: illegal start of expression
	 * @param format
	   ^, ProperBigFractionFormat.java:241: error: not a statement
	 * 		The new whole format value.
	 ^, ProperBigFractionFormat.java:241: error: ';' expected
	 * 		The new whole format value.
	   		   ^, ProperBigFractionFormat.java:241: error: '(' or '[' expected
	 * 		The new whole format value.
	   		              ^, ProperBigFractionFormat.java:241: error: ';' expected
	 * 		The new whole format value.
	   		                          ^, ProperBigFractionFormat.java:242: error: <identifier> expected
	 * @throws IllegalArgumentException
	    ^, ProperBigFractionFormat.java:243: error: illegal start of expression
	 * 		if <code>format</code> is
	   		^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		if <code>format</code> is
	 ^, ProperBigFractionFormat.java:243: error: '(' expected
	 * 		if <code>format</code> is
	   		  ^, ProperBigFractionFormat.java:243: error: illegal start of expression
	 * 		if <code>format</code> is
	   		         ^, ProperBigFractionFormat.java:243: error: illegal start of type
	 * 		if <code>format</code> is
	   		                ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		if <code>format</code> is
	   		               ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * 		<code>null</code>.
	   		      ^, ProperBigFractionFormat.java:243: error: not a statement
	 * 		if <code>format</code> is
	   		                     ^, ProperBigFractionFormat.java:244: error: illegal start of type
	 * 		<code>null</code>.
	   		           ^, ProperBigFractionFormat.java:244: error: illegal start of expression
	 * 		<code>null</code>.
	   		                 ^, ProperBigFractionFormat.java:244: error: not a statement
	 * 		<code>null</code>.
	   		                ^, ProperBigFractionFormat.java:245: error: illegal start of expression
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	       ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	            ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                          ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                           ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                 ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                     ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                      ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                          ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                           ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                        ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                              ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		   ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		    ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		           ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		              ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                  ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                    ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			      ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			         ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			          ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                 ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                        ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                         ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                             ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                              ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                  ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                   ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                 ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                  ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                ^, ProperBigFractionFormat.java:245: error: case, default, or '}' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                 ^, ProperBigFractionFormat.java:245: error: illegal start of type
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		^, ProperBigFractionFormat.java:245: error: ';' expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		    ^, ProperBigFractionFormat.java:245: error: <identifier> expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                ^, ProperBigFractionFormat.java:245: error: class, interface, or enum expected
	 */ 	public void setWholeFormat(final java.text.NumberFormat format) { 		if (format == null) { 			throw org.apache.commons.math.MathRuntimeException.createIllegalArgumentException("whole format can not be null");} 		this.wholeFormat = format;}}
	    	                                                                  		                      			                                                                                                                    		                           ^]
Ingredient counter is Zero
---Undoing: gnrtn(1038): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtInvocationImpl) `getWholeFormat().format(whole, toAppendTo, pos) ` -topatch--> `boolean wholeIsNeg = whole.compareTo(java.math.BigInteger.ZERO) < 0` (spoon.support.reflect.code.CtLocalVariableImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2075(f=2.0), 2076(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2075(f=2.0), )
----------Running generation: 1039, population size: 1

***** Generation 1039 : 0
**Parent Variant: [Variant id: 2077, #gens: 240, #ops: 0, parent:-]

--Child created id: 2078
--Creating new operations for variant [Variant id: 2078, #gens: 240, #ops: 0, parent:2077]
---analyzing modificationPoint position: 43
Templates availables44
Attempts Base Ingredients  1 total 44
---modifPoint 0 not mutation generated in  pos.setBeginIndex(0)
---analyzing modificationPoint position: 8
location: ProperFractionFormat.java60
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2078, #gens: 239, #ops: 1, parent:2077] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 2078
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2078/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1039): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2077(f=2.0), 2078(f=2.0), )
Selected to next generation: IDs2--> (2077(f=2.0), )
----------Running generation: 1040, population size: 1

***** Generation 1040 : 0
**Parent Variant: [Variant id: 2079, #gens: 240, #ops: 0, parent:-]

--Child created id: 2080
--Creating new operations for variant [Variant id: 2080, #gens: 240, #ops: 0, parent:2079]
---analyzing modificationPoint position: 90
Templates availables11
Attempts Base Ingredients  1 total 11
---modifPoint 0 not mutation generated in  for (int i = 0; i < n; ++i) { 	final double[] vertexI = startConfiguration[i]; 	for (int j = 0; j < [...]
---analyzing modificationPoint position: 148
Templates availables47
Attempts Base Ingredients  1 total 47
---modifPoint 1 not mutation generated in  this(format, ((java.text.NumberFormat) (format.clone())), ((java.text.NumberFormat) (format.clone())[...]
---analyzing modificationPoint position: 40
---modifPoint 2 not mutation generated in  return simplex[0]
---analyzing modificationPoint position: 88
Templates availables19
Attempts Base Ingredients  1 total 19
---modifPoint 3 not mutation generated in  // only the relative position of the n final vertices with respect // to the first one are stored fi[...]
---analyzing modificationPoint position: 105
Templates availables14
Attempts Base Ingredients  1 total 14
---modifPoint 4 not mutation generated in  if ((++iterations) > maxIterations) { 	throw new org.apache.commons.math.optimization.OptimizationEx[...]
---analyzing modificationPoint position: 78
Templates availables8
Attempts Base Ingredients  1 total 8
Attempts Base Ingredients  2 total 8
Attempts Base Ingredients  3 total 8
---modifPoint 5 not mutation generated in  final org.apache.commons.math.fraction.Fraction result = parse(source, parsePosition)
---analyzing modificationPoint position: 13
Templates availables44
Attempts Base Ingredients  1 total 44
Attempts Base Ingredients  2 total 44
vars from patch [this.wholeFormat, format]
--> var from patch: this.wholeFormat spoon.support.reflect.code.CtFieldWriteImpl
--> var from patch: format spoon.support.reflect.code.CtVariableReadImpl
location: ProperFractionFormat.java231
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.fraction.ProperFractionFormat line: 231, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 2080, #gens: 241, #ops: 1, parent:2079] gen mutated: 1 , gen not mut: 6, gen not applied  0
-The child compiles: id 2080
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2080/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1040): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wholeFormat = format ` -topatch--> `this.wholeFormat = format` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2079(f=2.0), 2080(f=2.0), )
Selected to next generation: IDs2--> (2079(f=2.0), )
----------Running generation: 1041, population size: 1

***** Generation 1041 : 0
**Parent Variant: [Variant id: 2081, #gens: 240, #ops: 0, parent:-]

--Child created id: 2082
--Creating new operations for variant [Variant id: 2082, #gens: 240, #ops: 0, parent:2081]
---analyzing modificationPoint position: 118
Templates availables89
Attempts Base Ingredients  1 total 89
---modifPoint 0 not mutation generated in  this.f = f
---analyzing modificationPoint position: 137
Templates availables6
Attempts Base Ingredients  1 total 6
vars from patch [value]
--> var from patch: value spoon.support.reflect.code.CtVariableReadImpl
location: RealPointValuePair.java79
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.RealPointValuePair line: 79, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 2082, #gens: 241, #ops: 1, parent:2081] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child does NOT compile: 2082, errors: [RealPointValuePair.java:87: error: incompatible types: double cannot be converted to double[]
		return value; 		return point;} 	/**
		       ^]
Ingredient counter is Zero
---Undoing: gnrtn(1041): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return point ` -topatch--> `return value` (spoon.support.reflect.code.CtReturnImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2081(f=2.0), 2082(f=1.7976931348623157E308), )
Selected to next generation: IDs2--> (2081(f=2.0), )
----------Running generation: 1042, population size: 1

***** Generation 1042 : 0
**Parent Variant: [Variant id: 2083, #gens: 240, #ops: 0, parent:-]

--Child created id: 2084
--Creating new operations for variant [Variant id: 2084, #gens: 240, #ops: 0, parent:2083]
---analyzing modificationPoint position: 102
location: DirectSearchOptimizer.java294
operation: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...] ` -topatch--> `-` (null) 

--Summary Creation: for variant [Variant id: 2084, #gens: 239, #ops: 1, parent:2083] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2084
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2084/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 4, was successful: false, cases executed: 5] ,[]
-Valid?: |false|4|5|[]|, fitness 4.0
Ingredient counter is Zero
---Undoing: gnrtn(1042): OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (iterations > 0) { 	boolean converged = true; 	for (int i = 0; i < simplex.length; ++i) { 		conve[...] ` -topatch--> `-` (null) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2083(f=2.0), 2084(f=4.0), )
Selected to next generation: IDs2--> (2083(f=2.0), )
----------Running generation: 1043, population size: 1

***** Generation 1043 : 0
**Parent Variant: [Variant id: 2085, #gens: 240, #ops: 0, parent:-]

--Child created id: 2086
--Creating new operations for variant [Variant id: 2086, #gens: 240, #ops: 0, parent:2085]
---analyzing modificationPoint position: 27
Templates availables10
Attempts Base Ingredients  1 total 10
Attempts Base Ingredients  2 total 10
---modifPoint 0 not mutation generated in  // compute the contracted simplex final org.apache.commons.math.optimization.RealPointValuePair cont[...]
---analyzing modificationPoint position: 107
Templates availables89
Attempts Base Ingredients  1 total 89
vars from patch [this.maxIterations]
--> var from patch: this.maxIterations spoon.support.reflect.code.CtFieldWriteImpl
location: DirectSearchOptimizer.java349
operation: OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
---MP=org.apache.commons.math.optimization.direct.DirectSearchOptimizer line: 349, pointed element: CtAssignmentImpl
---OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 

--Summary Creation: for variant [Variant id: 2086, #gens: 241, #ops: 1, parent:2085] gen mutated: 1 , gen not mut: 1, gen not applied  0
-The child compiles: id 2086
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2086/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: false, failTest= 2, was successful: false, cases executed: 5] ,[]
-Valid?: |false|2|5|[]|, fitness 2.0
Ingredient counter is Zero
---Undoing: gnrtn(1043): OP_INSTANCE:
InsertBeforeOp:(spoon.support.reflect.code.CtReturnImpl) `return f.value(x) ` -topatch--> `this.maxIterations = maxIterations` (spoon.support.reflect.code.CtAssignmentImpl) 
End analysis generation - Solutions found:--> ()
Variants to next generation from: 2-->IDs: (2085(f=2.0), 2086(f=2.0), )
Selected to next generation: IDs2--> (2085(f=2.0), )
----------Running generation: 1044, population size: 1

***** Generation 1044 : 0
**Parent Variant: [Variant id: 2087, #gens: 240, #ops: 0, parent:-]

--Child created id: 2088
--Creating new operations for variant [Variant id: 2088, #gens: 240, #ops: 0, parent:2087]
---analyzing modificationPoint position: 28
Templates availables30
Attempts Base Ingredients  1 total 30
vars from patch []
location: MultiDirectional.java90
operation: OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
---MP=org.apache.commons.math.optimization.direct.MultiDirectional line: 90, pointed element: CtReturnImpl
---OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex  	// check converg[...] ` -topatch--> `// accept the contracted simplex  // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 

--Summary Creation: for variant [Variant id: 2088, #gens: 241, #ops: 1, parent:2087] gen mutated: 1 , gen not mut: 0, gen not applied  0
-The child compiles: id 2088
-Running first validation
Executing process: (timeout10secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2088/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.optimization.direct.MultiDirectionalTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 5] ,[]
-Test Failing is passing, Executing regression
Executing process: (timeout209secs) 
/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/bin/java  -Xmx2048m  -Dmutnumber_0=null  -cp  "/Users/marekmazur/astor/./lib/com.gzoltar-0.1.1-jar-with-dependencies.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/variant-2088/":"/Users/marekmazur/astor/examples/libs/junit-4.4.jar":"/Users/marekmazur/astor/./output_astor/AstorMain-math-84/bin/default/":"/Users/marekmazur/astor/target/astor-2.0.0-jar-with-dependencies.jar":  fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor  org.apache.commons.math.stat.data.LotteryTest  org.apache.commons.math.linear.FieldMatrixImplTest  org.apache.commons.math.ode.sampling.StepNormalizerTest  org.apache.commons.math.stat.descriptive.AggregateSummaryStatisticsTest  org.apache.commons.math.geometry.RotationOrderTest  org.apache.commons.math.analysis.solvers.NewtonSolverTest  org.apache.commons.math.estimation.EstimatedParameterTest  org.apache.commons.math.linear.CholeskyDecompositionImplTest  org.apache.commons.math.linear.Array2DRowRealMatrixTest  org.apache.commons.math.linear.SparseRealMatrixTest  org.apache.commons.math.util.OpenIntToFieldTest  org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest  org.apache.commons.math.optimization.fitting.PolynomialFitterTest  org.apache.commons.math.linear.ArrayRealVectorTest  org.apache.commons.math.distribution.HypergeometricDistributionTest  org.apache.commons.math.random.RandomAdaptorTest  org.apache.commons.math.ode.FirstOrderConverterTest  org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest  org.apache.commons.math.stat.inference.TestUtilsTest  org.apache.commons.math.stat.data.LewTest  org.apache.commons.math.distribution.GammaDistributionTest  org.apache.commons.math.stat.descriptive.rank.MedianTest  org.apache.commons.math.distribution.ZipfDistributionTest  org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest  org.apache.commons.math.stat.CertifiedDataTest  org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest  org.apache.commons.math.complex.FrenchComplexFormatTest  org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest  org.apache.commons.math.analysis.polynomials.PolynomialsUtilsTest  org.apache.commons.math.DuplicateSampleAbscissaExceptionTest  org.apache.commons.math.estimation.MinpackTest  org.apache.commons.math.genetics.FixedGenerationCountTest  org.apache.commons.math.optimization.general.GaussNewtonOptimizerTest  org.apache.commons.math.fraction.BigFractionFormatTest  org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest  org.apache.commons.math.random.RandomDataTest  org.apache.commons.math.distribution.FDistributionTest  org.apache.commons.math.FunctionEvaluationExceptionTest  org.apache.commons.math.ode.sampling.NordsieckStepInterpolatorTest  org.apache.commons.math.stat.inference.TTestFactoryTest  org.apache.commons.math.stat.descriptive.moment.SkewnessTest  org.apache.commons.math.special.GammaTest  org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest  org.apache.commons.math.analysis.integration.RombergIntegratorTest  org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest  org.apache.commons.math.analysis.integration.LegendreGaussIntegratorTest  org.apache.commons.math.stat.descriptive.SummaryStatisticsTest  org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest  org.apache.commons.math.stat.descriptive.moment.FirstMomentTest  org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest  org.apache.commons.math.complex.ComplexTest  org.apache.commons.math.distribution.BetaDistributionTest  org.apache.commons.math.special.ErfTest  org.apache.commons.math.special.BetaTest  org.apache.commons.math.ode.nonstiff.GillIntegratorTest  org.apache.commons.math.random.EmpiricalDistributionTest  org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest  org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest  org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest  org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest  org.apache.commons.math.random.AbstractRandomGeneratorTest  org.apache.commons.math.fraction.BigFractionFieldTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest  org.apache.commons.math.genetics.GeneticAlgorithmTestBinary  org.apache.commons.math.linear.BiDiagonalTransformerTest  org.apache.commons.math.util.DefaultTransformerTest  org.apache.commons.math.linear.LUDecompositionImplTest  org.apache.commons.math.random.ValueServerTest  org.apache.commons.math.stat.descriptive.moment.MeanTest  org.apache.commons.math.util.BigRealFieldTest  org.apache.commons.math.linear.QRDecompositionImplTest  org.apache.commons.math.analysis.interpolation.NevilleInterpolatorTest  org.apache.commons.math.stat.descriptive.moment.VarianceTest  org.apache.commons.math.genetics.OnePointCrossoverTest  org.apache.commons.math.stat.ranking.NaturalRankingTest  org.apache.commons.math.optimization.linear.SimplexSolverTest  org.apache.commons.math.stat.descriptive.moment.FourthMomentTest  org.apache.commons.math.linear.BlockRealMatrixTest  org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest  org.apache.commons.math.random.MersenneTwisterTest  org.apache.commons.math.genetics.RandomKeyTest  org.apache.commons.math.stat.descriptive.summary.ProductTest  org.apache.commons.math.fraction.FractionTest  org.apache.commons.math.util.OpenIntToDoubleHashMapTest  org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest  org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionTest  org.apache.commons.math.genetics.ChromosomeTest  org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateRealOptimizerTest  org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest  org.apache.commons.math.geometry.Vector3DTest  org.apache.commons.math.stat.descriptive.rank.MinTest  org.apache.commons.math.stat.clustering.EuclideanIntegerPointTest  org.apache.commons.math.linear.FieldLUDecompositionImplTest  org.apache.commons.math.analysis.integration.TrapezoidIntegratorTest  org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest  org.apache.commons.math.transform.FastHadamardTransformerTest  org.apache.commons.math.optimization.fitting.HarmonicFitterTest  org.apache.commons.math.stat.correlation.PearsonsCorrelationTest  org.apache.commons.math.random.GaussianRandomGeneratorTest  org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest  org.apache.commons.math.linear.FrenchRealVectorFormatTest  org.apache.commons.math.fraction.BigFractionTest  org.apache.commons.math.util.ContinuedFractionTest  org.apache.commons.math.util.TransformerMapTest  org.apache.commons.math.analysis.solvers.BisectionSolverTest  org.apache.commons.math.genetics.BinaryChromosomeTest  org.apache.commons.math.linear.BlockFieldMatrixTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest  org.apache.commons.math.linear.SingularValueDecompositionImplTest  org.apache.commons.math.distribution.TDistributionTest  org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest  org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest  org.apache.commons.math.linear.InvalidMatrixExceptionTest  org.apache.commons.math.distribution.BinomialDistributionTest  org.apache.commons.math.linear.EigenSolverTest  org.apache.commons.math.stat.inference.TTestTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionNewtonFormTest  org.apache.commons.math.random.UniformRandomGeneratorTest  org.apache.commons.math.stat.descriptive.rank.PercentileTest  org.apache.commons.math.analysis.solvers.RiddersSolverTest  org.apache.commons.math.linear.ArrayFieldVectorTest  org.apache.commons.math.ode.ContinuousOutputModelTest  org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest  org.apache.commons.math.optimization.linear.SimplexTableauTest  org.apache.commons.math.ConvergenceExceptionTest  org.apache.commons.math.util.ResizableDoubleArrayTest  org.apache.commons.math.complex.ComplexFormatTest  org.apache.commons.math.linear.RealMatrixImplTest  org.apache.commons.math.stat.descriptive.summary.SumTest  org.apache.commons.math.linear.SparseFieldVectorTest  org.apache.commons.math.genetics.ElitisticListPopulationTest  org.apache.commons.math.stat.descriptive.summary.SumSqTest  org.apache.commons.math.linear.SparseRealVectorTest  org.apache.commons.math.analysis.interpolation.DividedDifferenceInterpolatorTest  org.apache.commons.math.linear.EigenDecompositionImplTest  org.apache.commons.math.analysis.integration.SimpsonIntegratorTest  org.apache.commons.math.analysis.polynomials.PolynomialSplineFunctionTest  org.apache.commons.math.genetics.GeneticAlgorithmTestPermutations  org.apache.commons.math.stat.descriptive.moment.KurtosisTest  org.apache.commons.math.transform.FastFourierTransformerTest  org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest  org.apache.commons.math.distribution.NormalDistributionTest  org.apache.commons.math.distribution.PoissonDistributionTest  org.apache.commons.math.geometry.Vector3DFormatTest  org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeFormTest  org.apache.commons.math.genetics.TournamentSelectionTest  org.apache.commons.math.optimization.general.MinpackTest  org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatisticsTest  org.apache.commons.math.analysis.solvers.BrentSolverTest  org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest  org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest  org.apache.commons.math.estimation.WeightedMeasurementTest  org.apache.commons.math.stat.inference.ChiSquareTestTest  org.apache.commons.math.analysis.interpolation.LoessInterpolatorTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest  org.apache.commons.math.linear.MatrixIndexExceptionTest  org.apache.commons.math.genetics.BinaryMutationTest  org.apache.commons.math.fraction.FractionFormatTest  org.apache.commons.math.distribution.PascalDistributionTest  org.apache.commons.math.optimization.general.NonLinearConjugateGradientOptimizerTest  org.apache.commons.math.util.MathUtilsTest  org.apache.commons.math.complex.ComplexUtilsTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverFactoryImplTest  org.apache.commons.math.optimization.direct.MultiDirectionalTest  org.apache.commons.math.genetics.FitnessCachingTest  org.apache.commons.math.linear.BigMatrixImplTest  org.apache.commons.math.stat.inference.ChiSquareFactoryTest  org.apache.commons.math.fraction.FractionFieldTest  org.apache.commons.math.stat.descriptive.InteractionTest  org.apache.commons.math.stat.correlation.CovarianceTest  org.apache.commons.math.optimization.univariate.BrentMinimizerTest  org.apache.commons.math.linear.QRSolverTest  org.apache.commons.math.linear.RealVectorFormatTest  org.apache.commons.math.analysis.solvers.LaguerreSolverTest  org.apache.commons.math.linear.CholeskySolverTest  org.apache.commons.math.distribution.WeibullDistributionTest  org.apache.commons.math.stat.StatUtilsTest  org.apache.commons.math.analysis.interpolation.SplineInterpolatorTest  org.apache.commons.math.analysis.solvers.MullerSolverTest  org.apache.commons.math.linear.TriDiagonalTransformerTest  org.apache.commons.math.distribution.ChiSquareDistributionTest  org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtilsTest  org.apache.commons.math.transform.FastSineTransformerTest  org.apache.commons.math.stat.inference.OneWayAnovaTest  org.apache.commons.math.transform.FastCosineTransformerTest  org.apache.commons.math.ArgumentOutsideDomainExceptionTest  org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest  org.apache.commons.math.ode.nonstiff.EulerIntegratorTest  org.apache.commons.math.stat.descriptive.rank.MaxTest  org.apache.commons.math.complex.ComplexFieldTest  org.apache.commons.math.stat.descriptive.ListUnivariateImplTest  org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest  org.apache.commons.math.MaxIterationsExceededExceptionTest  org.apache.commons.math.linear.MatrixUtilsTest  org.apache.commons.math.optimization.direct.NelderMeadTest  org.apache.commons.math.optimization.MultiStartDifferentiableMultivariateVectorialOptimizerTest  org.apache.commons.math.geometry.RotationTest  org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest  org.apache.commons.math.linear.SingularValueSolverTest  org.apache.commons.math.genetics.RandomKeyMutationTest  org.apache.commons.math.util.BigRealTest  org.apache.commons.math.distribution.ExponentialDistributionTest  org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest  org.apache.commons.math.geometry.FrenchVector3DFormatTest  org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest  org.apache.commons.math.stat.regression.SimpleRegressionTest  org.apache.commons.math.optimization.MultiStartMultivariateRealOptimizerTest  org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest  org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest  org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest  org.apache.commons.math.linear.LUSolverTest  org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizerTest  org.apache.commons.math.MathConfigurationExceptionTest  org.apache.commons.math.estimation.GaussNewtonEstimatorTest  org.apache.commons.math.genetics.ListPopulationTest  org.apache.commons.math.MathExceptionTest  org.apache.commons.math.distribution.CauchyDistributionTest  org.apache.commons.math.stat.correlation.SpearmansRankCorrelationTest  org.apache.commons.math.linear.SparseFieldMatrixTest  org.apache.commons.math.stat.descriptive.summary.SumLogTest  org.apache.commons.math.stat.FrequencyTest  org.apache.commons.math.stat.descriptive.moment.SecondMomentTest
Analyzing output from process
TR: Success: true, failTest= 0, was successful: true, cases executed: 2057] ,[]
-Valid?: |true|0|2057|[]|, fitness 0.0
-Found Solution, child variant #2088
Ingredient counter is Zero

Attempts to find patch Id 2088: 0, successful 0, failing 0

-Saving child on disk variant #2088 at /Users/marekmazur/astor/./output_astor/AstorMain-math-84//src//variant-2088

-Saving child on disk variant #2088 at /Users/marekmazur/astor/./output_astor/AstorMain-math-84//src//variant-2088_f
---Undoing: gnrtn(1044): OP_INSTANCE:
InsertAfterOp:(spoon.support.reflect.code.CtIfImpl) `if (comparator.compare(contracted, best) < 0) { 	// accept the contracted simplex 	// check converge[...] ` -topatch--> `// accept the contracted simplex // check convergence return` (spoon.support.reflect.code.CtReturnImpl) 
/Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/default_f/org/apache/commons/math/optimization/direct/MultiDirectional.java
/Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/variant-2088_f/org/apache/commons/math/optimization/direct/MultiDirectional.java
diff command : diff -w -b  --label=/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java --label=/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java /Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/default_f/org/apache/commons/math/optimization/direct/MultiDirectional.java /Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/variant-2088_f/org/apache/commons/math/optimization/direct/MultiDirectional.java --unified=0
/Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/default/org/apache/commons/math/optimization/direct/MultiDirectional.java
/Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/variant-2088/org/apache/commons/math/optimization/direct/MultiDirectional.java
diff command : diff -w -b  --label=/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java --label=/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java /Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/default/org/apache/commons/math/optimization/direct/MultiDirectional.java /Users/marekmazur/astor/./output_astor/AstorMain-math-84/src/variant-2088/org/apache/commons/math/optimization/direct/MultiDirectional.java --unified=0
Generation 1
Generation 2
Generation 3
Generation 4
Generation 5
Generation 6
Generation 7
Generation 8
Generation 9
Generation 10
Generation 11
Generation 12
Generation 13
Generation 14
Generation 15
Generation 16
Generation 17
Generation 18
Generation 19
Generation 20
Generation 21
Generation 22
Generation 23
Generation 24
Generation 25
Generation 26
Generation 27
Generation 28
Generation 29
Generation 30
Generation 31
Generation 32
Generation 33
Generation 34
Generation 35
Generation 36
Generation 37
Generation 38
Generation 39
Generation 40
Generation 41
Generation 42
Generation 43
Generation 44
Generation 45
Generation 46
Generation 47
Generation 48
Generation 49
Generation 50
Generation 51
Generation 52
Generation 53
Generation 54
Generation 55
Generation 56
Generation 57
Generation 58
Generation 59
Generation 60
Generation 61
Generation 62
Generation 63
Generation 64
Generation 65
Generation 66
Generation 67
Generation 68
Generation 69
Generation 70
Generation 71
Generation 72
Generation 73
Generation 74
Generation 75
Generation 76
Generation 77
Generation 78
Generation 79
Generation 80
Generation 81
Generation 82
Generation 83
Generation 84
Generation 85
Generation 86
Generation 87
Generation 88
Generation 89
Generation 90
Generation 91
Generation 92
Generation 93
Generation 94
Generation 95
Generation 96
Generation 97
Generation 98
Generation 99
Generation 100
Generation 101
Generation 102
Generation 103
Generation 104
Generation 105
Generation 106
Generation 107
Generation 108
Generation 109
Generation 110
Generation 111
Generation 112
Generation 113
Generation 114
Generation 115
Generation 116
Generation 117
Generation 118
Generation 119
Generation 120
Generation 121
Generation 122
Generation 123
Generation 124
Generation 125
Generation 126
Generation 127
Generation 128
Generation 129
Generation 130
Generation 131
Generation 132
Generation 133
Generation 134
Generation 135
Generation 136
Generation 137
Generation 138
Generation 139
Generation 140
Generation 141
Generation 142
Generation 143
Generation 144
Generation 145
Generation 146
Generation 147
Generation 148
Generation 149
Generation 150
Generation 151
Generation 152
Generation 153
Generation 154
Generation 155
Generation 156
Generation 157
Generation 158
Generation 159
Generation 160
Generation 161
Generation 162
Generation 163
Generation 164
Generation 165
Generation 166
Generation 167
Generation 168
Generation 169
Generation 170
Generation 171
Generation 172
Generation 173
Generation 174
Generation 175
Generation 176
Generation 177
Generation 178
Generation 179
Generation 180
Generation 181
Generation 182
Generation 183
Generation 184
Generation 185
Generation 186
Generation 187
Generation 188
Generation 189
Generation 190
Generation 191
Generation 192
Generation 193
Generation 194
Generation 195
Generation 196
Generation 197
Generation 198
Generation 199
Generation 200
Generation 201
Generation 202
Generation 203
Generation 204
Generation 205
Generation 206
Generation 207
Generation 208
Generation 209
Generation 210
Generation 211
Generation 212
Generation 213
Generation 214
Generation 215
Generation 216
Generation 217
Generation 218
Generation 219
Generation 220
Generation 221
Generation 222
Generation 223
Generation 224
Generation 225
Generation 226
Generation 227
Generation 228
Generation 229
Generation 230
Generation 231
Generation 232
Generation 233
Generation 234
Generation 235
Generation 236
Generation 237
Generation 238
Generation 239
Generation 240
Generation 241
Generation 242
Generation 243
Generation 244
Generation 245
Generation 246
Generation 247
Generation 248
Generation 249
Generation 250
Generation 251
Generation 252
Generation 253
Generation 254
Generation 255
Generation 256
Generation 257
Generation 258
Generation 259
Generation 260
Generation 261
Generation 262
Generation 263
Generation 264
Generation 265
Generation 266
Generation 267
Generation 268
Generation 269
Generation 270
Generation 271
Generation 272
Generation 273
Generation 274
Generation 275
Generation 276
Generation 277
Generation 278
Generation 279
Generation 280
Generation 281
Generation 282
Generation 283
Generation 284
Generation 285
Generation 286
Generation 287
Generation 288
Generation 289
Generation 290
Generation 291
Generation 292
Generation 293
Generation 294
Generation 295
Generation 296
Generation 297
Generation 298
Generation 299
Generation 300
Generation 301
Generation 302
Generation 303
Generation 304
Generation 305
Generation 306
Generation 307
Generation 308
Generation 309
Generation 310
Generation 311
Generation 312
Generation 313
Generation 314
Generation 315
Generation 316
Generation 317
Generation 318
Generation 319
Generation 320
Generation 321
Generation 322
Generation 323
Generation 324
Generation 325
Generation 326
Generation 327
Generation 328
Generation 329
Generation 330
Generation 331
Generation 332
Generation 333
Generation 334
Generation 335
Generation 336
Generation 337
Generation 338
Generation 339
Generation 340
Generation 341
Generation 342
Generation 343
Generation 344
Generation 345
Generation 346
Generation 347
Generation 348
Generation 349
Generation 350
Generation 351
Generation 352
Generation 353
Generation 354
Generation 355
Generation 356
Generation 357
Generation 358
Generation 359
Generation 360
Generation 361
Generation 362
Generation 363
Generation 364
Generation 365
Generation 366
Generation 367
Generation 368
Generation 369
Generation 370
Generation 371
Generation 372
Generation 373
Generation 374
Generation 375
Generation 376
Generation 377
Generation 378
Generation 379
Generation 380
Generation 381
Generation 382
Generation 383
Generation 384
Generation 385
Generation 386
Generation 387
Generation 388
Generation 389
Generation 390
Generation 391
Generation 392
Generation 393
Generation 394
Generation 395
Generation 396
Generation 397
Generation 398
Generation 399
Generation 400
Generation 401
Generation 402
Generation 403
Generation 404
Generation 405
Generation 406
Generation 407
Generation 408
Generation 409
Generation 410
Generation 411
Generation 412
Generation 413
Generation 414
Generation 415
Generation 416
Generation 417
Generation 418
Generation 419
Generation 420
Generation 421
Generation 422
Generation 423
Generation 424
Generation 425
Generation 426
Generation 427
Generation 428
Generation 429
Generation 430
Generation 431
Generation 432
Generation 433
Generation 434
Generation 435
Generation 436
Generation 437
Generation 438
Generation 439
Generation 440
Generation 441
Generation 442
Generation 443
Generation 444
Generation 445
Generation 446
Generation 447
Generation 448
Generation 449
Generation 450
Generation 451
Generation 452
Generation 453
Generation 454
Generation 455
Generation 456
Generation 457
Generation 458
Generation 459
Generation 460
Generation 461
Generation 462
Generation 463
Generation 464
Generation 465
Generation 466
Generation 467
Generation 468
Generation 469
Generation 470
Generation 471
Generation 472
Generation 473
Generation 474
Generation 475
Generation 476
Generation 477
Generation 478
Generation 479
Generation 480
Generation 481
Generation 482
Generation 483
Generation 484
Generation 485
Generation 486
Generation 487
Generation 488
Generation 489
Generation 490
Generation 491
Generation 492
Generation 493
Generation 494
Generation 495
Generation 496
Generation 497
Generation 498
Generation 499
Generation 500
Generation 501
Generation 502
Generation 503
Generation 504
Generation 505
Generation 506
Generation 507
Generation 508
Generation 509
Generation 510
Generation 511
Generation 512
Generation 513
Generation 514
Generation 515
Generation 516
Generation 517
Generation 518
Generation 519
Generation 520
Generation 521
Generation 522
Generation 523
Generation 524
Generation 525
Generation 526
Generation 527
Generation 528
Generation 529
Generation 530
Generation 531
Generation 532
Generation 533
Generation 534
Generation 535
Generation 536
Generation 537
Generation 538
Generation 539
Generation 540
Generation 541
Generation 542
Generation 543
Generation 544
Generation 545
Generation 546
Generation 547
Generation 548
Generation 549
Generation 550
Generation 551
Generation 552
Generation 553
Generation 554
Generation 555
Generation 556
Generation 557
Generation 558
Generation 559
Generation 560
Generation 561
Generation 562
Generation 563
Generation 564
Generation 565
Generation 566
Generation 567
Generation 568
Generation 569
Generation 570
Generation 571
Generation 572
Generation 573
Generation 574
Generation 575
Generation 576
Generation 577
Generation 578
Generation 579
Generation 580
Generation 581
Generation 582
Generation 583
Generation 584
Generation 585
Generation 586
Generation 587
Generation 588
Generation 589
Generation 590
Generation 591
Generation 592
Generation 593
Generation 594
Generation 595
Generation 596
Generation 597
Generation 598
Generation 599
Generation 600
Generation 601
Generation 602
Generation 603
Generation 604
Generation 605
Generation 606
Generation 607
Generation 608
Generation 609
Generation 610
Generation 611
Generation 612
Generation 613
Generation 614
Generation 615
Generation 616
Generation 617
Generation 618
Generation 619
Generation 620
Generation 621
Generation 622
Generation 623
Generation 624
Generation 625
Generation 626
Generation 627
Generation 628
Generation 629
Generation 630
Generation 631
Generation 632
Generation 633
Generation 634
Generation 635
Generation 636
Generation 637
Generation 638
Generation 639
Generation 640
Generation 641
Generation 642
Generation 643
Generation 644
Generation 645
Generation 646
Generation 647
Generation 648
Generation 649
Generation 650
Generation 651
Generation 652
Generation 653
Generation 654
Generation 655
Generation 656
Generation 657
Generation 658
Generation 659
Generation 660
Generation 661
Generation 662
Generation 663
Generation 664
Generation 665
Generation 666
Generation 667
Generation 668
Generation 669
Generation 670
Generation 671
Generation 672
Generation 673
Generation 674
Generation 675
Generation 676
Generation 677
Generation 678
Generation 679
Generation 680
Generation 681
Generation 682
Generation 683
Generation 684
Generation 685
Generation 686
Generation 687
Generation 688
Generation 689
Generation 690
Generation 691
Generation 692
Generation 693
Generation 694
Generation 695
Generation 696
Generation 697
Generation 698
Generation 699
Generation 700
Generation 701
Generation 702
Generation 703
Generation 704
Generation 705
Generation 706
Generation 707
Generation 708
Generation 709
Generation 710
Generation 711
Generation 712
Generation 713
Generation 714
Generation 715
Generation 716
Generation 717
Generation 718
Generation 719
Generation 720
Generation 721
Generation 722
Generation 723
Generation 724
Generation 725
Generation 726
Generation 727
Generation 728
Generation 729
Generation 730
Generation 731
Generation 732
Generation 733
Generation 734
Generation 735
Generation 736
Generation 737
Generation 738
Generation 739
Generation 740
Generation 741
Generation 742
Generation 743
Generation 744
Generation 745
Generation 746
Generation 747
Generation 748
Generation 749
Generation 750
Generation 751
Generation 752
Generation 753
Generation 754
Generation 755
Generation 756
Generation 757
Generation 758
Generation 759
Generation 760
Generation 761
Generation 762
Generation 763
Generation 764
Generation 765
Generation 766
Generation 767
Generation 768
Generation 769
Generation 770
Generation 771
Generation 772
Generation 773
Generation 774
Generation 775
Generation 776
Generation 777
Generation 778
Generation 779
Generation 780
Generation 781
Generation 782
Generation 783
Generation 784
Generation 785
Generation 786
Generation 787
Generation 788
Generation 789
Generation 790
Generation 791
Generation 792
Generation 793
Generation 794
Generation 795
Generation 796
Generation 797
Generation 798
Generation 799
Generation 800
Generation 801
Generation 802
Generation 803
Generation 804
Generation 805
Generation 806
Generation 807
Generation 808
Generation 809
Generation 810
Generation 811
Generation 812
Generation 813
Generation 814
Generation 815
Generation 816
Generation 817
Generation 818
Generation 819
Generation 820
Generation 821
Generation 822
Generation 823
Generation 824
Generation 825
Generation 826
Generation 827
Generation 828
Generation 829
Generation 830
Generation 831
Generation 832
Generation 833
Generation 834
Generation 835
Generation 836
Generation 837
Generation 838
Generation 839
Generation 840
Generation 841
Generation 842
Generation 843
Generation 844
Generation 845
Generation 846
Generation 847
Generation 848
Generation 849
Generation 850
Generation 851
Generation 852
Generation 853
Generation 854
Generation 855
Generation 856
Generation 857
Generation 858
Generation 859
Generation 860
Generation 861
Generation 862
Generation 863
Generation 864
Generation 865
Generation 866
Generation 867
Generation 868
Generation 869
Generation 870
Generation 871
Generation 872
Generation 873
Generation 874
Generation 875
Generation 876
Generation 877
Generation 878
Generation 879
Generation 880
Generation 881
Generation 882
Generation 883
Generation 884
Generation 885
Generation 886
Generation 887
Generation 888
Generation 889
Generation 890
Generation 891
Generation 892
Generation 893
Generation 894
Generation 895
Generation 896
Generation 897
Generation 898
Generation 899
Generation 900
Generation 901
Generation 902
Generation 903
Generation 904
Generation 905
Generation 906
Generation 907
Generation 908
Generation 909
Generation 910
Generation 911
Generation 912
Generation 913
Generation 914
Generation 915
Generation 916
Generation 917
Generation 918
Generation 919
Generation 920
Generation 921
Generation 922
Generation 923
Generation 924
Generation 925
Generation 926
Generation 927
Generation 928
Generation 929
Generation 930
Generation 931
Generation 932
Generation 933
Generation 934
Generation 935
Generation 936
Generation 937
Generation 938
Generation 939
Generation 940
Generation 941
Generation 942
Generation 943
Generation 944
Generation 945
Generation 946
Generation 947
Generation 948
Generation 949
Generation 950
Generation 951
Generation 952
Generation 953
Generation 954
Generation 955
Generation 956
Generation 957
Generation 958
Generation 959
Generation 960
Generation 961
Generation 962
Generation 963
Generation 964
Generation 965
Generation 966
Generation 967
Generation 968
Generation 969
Generation 970
Generation 971
Generation 972
Generation 973
Generation 974
Generation 975
Generation 976
Generation 977
Generation 978
Generation 979
Generation 980
Generation 981
Generation 982
Generation 983
Generation 984
Generation 985
Generation 986
Generation 987
Generation 988
Generation 989
Generation 990
Generation 991
Generation 992
Generation 993
Generation 994
Generation 995
Generation 996
Generation 997
Generation 998
Generation 999
Generation 1000
Generation 1001
Generation 1002
Generation 1003
Generation 1004
Generation 1005
Generation 1006
Generation 1007
Generation 1008
Generation 1009
Generation 1010
Generation 1011
Generation 1012
Generation 1013
Generation 1014
Generation 1015
Generation 1016
Generation 1017
Generation 1018
Generation 1019
Generation 1020
Generation 1021
Generation 1022
Generation 1023
Generation 1024
Generation 1025
Generation 1026
Generation 1027
Generation 1028
Generation 1029
Generation 1030
Generation 1031
Generation 1032
Generation 1033
Generation 1034
Generation 1035
Generation 1036
Generation 1037
Generation 1038
Generation 1039
Generation 1040
Generation 1041
Generation 1042
Generation 1043
Generation 1044
Storing ing JSON at ./diffSolutions/patchinfo_2088.json
./diffSolutions/patchinfo_2088.json:
{"VARIANT_ID":"2088","VALIDATION":"|true|0|2057|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.optimization.direct.MultiDirectional","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-84\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0,5","INGREDIENT_PARENT":"\\\/\\\/ accept the contracted simplex\\n\\n\\\/\\\/ check convergence\\nreturn","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (comparator.compare(contracted, best) < 0) {\\n\\t\\\/\\\/ accept the contracted simplex\\n\\n\\t\\\/\\\/ check convergence\\n\\treturn;\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-84\\\/\\\/src\\\/\\\/variant-2088\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java","LINE":"90","MP_RANKING":"28","PATCH_HUNK_CODE":"\\\/\\\/ accept the contracted simplex\\n\\n\\\/\\\/ check convergence\\nreturn"}],"TIME":"547","GENERATION":"1044","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-84\\\/\\\/src\\\/\\\/variant-2088","PATCH_DIFF_ORIG":"--- \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java\\n+++ \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java\\n@@ -95,2 +95,2 @@\\n-\\t\\t\\t}\\n-\\n+\\t\\t\\t} \\t\\t\\t\\\/\\\/ accept the contracted simplex \\t\\t\\t\\\/\\\/ check convergence\\n+\\t\\t\\treturn;\\n\\n"}
Saving patch info at ./diffSolutions/patchinfo_2088.json
Storing ing JSON at /Users/marekmazur/astor/./diffSolutions/patch_547970_2088.diff
/Users/marekmazur/astor/./diffSolutions/patch_547970_2088.diff:
{"VARIANT_ID":"2088","VALIDATION":"|true|0|2057|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.optimization.direct.MultiDirectional","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-84\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0,5","INGREDIENT_PARENT":"\\\/\\\/ accept the contracted simplex\\n\\n\\\/\\\/ check convergence\\nreturn","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (comparator.compare(contracted, best) < 0) {\\n\\t\\\/\\\/ accept the contracted simplex\\n\\n\\t\\\/\\\/ check convergence\\n\\treturn;\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-84\\\/\\\/src\\\/\\\/variant-2088\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java","LINE":"90","MP_RANKING":"28","PATCH_HUNK_CODE":"\\\/\\\/ accept the contracted simplex\\n\\n\\\/\\\/ check convergence\\nreturn"}],"TIME":"547","GENERATION":"1044","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-84\\\/\\\/src\\\/\\\/variant-2088","PATCH_DIFF_ORIG":"--- \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java\\n+++ \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java\\n@@ -95,2 +95,2 @@\\n-\\t\\t\\t}\\n-\\n+\\t\\t\\t} \\t\\t\\t\\\/\\\/ accept the contracted simplex \\t\\t\\t\\\/\\\/ check convergence\\n+\\t\\t\\treturn;\\n\\n"}
Saving patch diff at /Users/marekmazur/astor/./diffSolutions/patch_547970_2088.diff
End analysis generation - Solutions found:--> (2088(SOLUTION)(f=0.0), )
Variants to next generation from: 2-->IDs: (2088(f=0.0)[SOL], 2087(f=2.0), )
Selected to next generation: IDs2--> (2087(f=2.0), )
Max Solution found 1
Time Repair Loop (s): 547.972
generationsexecuted: 1044
----SUMMARY_EXECUTION---
End Repair Search: Found solution
Solution stored at: /Users/marekmazur/astor/./output_astor/AstorMain-math-84//src/
Number solutions:1
f (sol): 0.0, [Variant id: 2088 (SOL) , #gens: 241, #ops: 1, parent:2087]
All variants:
f 2.0, [Variant id: 2089, #gens: 240, #ops: 0, parent:-]
Number suspicious:1

 --SOLUTIONS DESCRIPTION--

 ----
ProgramVariant 2088
 
time(sec)= 547
operation: InsertAfterOp
location= org.apache.commons.math.optimization.direct.MultiDirectional
line= 90
lineSuspiciousness= 0,5
lineSuspiciousness= 28
original statement= if (comparator.compare(contracted, best) < 0) {
	// accept the contracted simplex

	// check convergence
	return;
}
buggy kind= CtIfImpl|CtBlockImpl
fixed statement= // accept the contracted simplex

// check convergence
return
Patch kind= CtReturnImpl|CtBlockImpl
generation= 1044
ingredientScope= LOCAL
validation=|true|0|2057|[]|
diffpatch=--- /src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
+++ /src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
@@ -70,0 +71,3 @@
+			// accept the contracted simplex
+			// check convergence
+			return;


diffpatchoriginal=--- /src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
+++ /src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
@@ -95,2 +95,2 @@
-			}
-
+			} 			// accept the contracted simplex 			// check convergence
+			return;



Astor Output:

General stats:
EXECUTION_IDENTIFIER=
TOTAL_TIME=547.972
NR_GENERATIONS=1044
NR_RIGHT_COMPILATIONS=597
NR_FAILLING_COMPILATIONS=447
NR_ERRONEOUS_VARIANCES=null
NR_FAILING_VALIDATION_PROCESS=null
OUTPUT_STATUS=STOP_BY_PATCH_FOUND
FAULT_LOCALIZATION=flacoco

Patch stats:

Patch 1
VARIANT_ID=2088
TIME=547
VALIDATION=|true|0|2057|[]|
GENERATION=1044
FOLDER_SOLUTION_CODE=/Users/marekmazur/astor/./output_astor/AstorMain-math-84//src//variant-2088
--Patch Hunk #1
OPERATOR=InsertAfterOp

LOCATION=org.apache.commons.math.optimization.direct.MultiDirectional

PATH=/Users/marekmazur/astor/defects4j/math-84/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java

MODIFIED_FILE_PATH=/Users/marekmazur/astor/./output_astor/AstorMain-math-84//src//variant-2088/org/apache/commons/math/optimization/direct/MultiDirectional.java

LINE=90

SUSPICIOUNESS=0,5

MP_RANKING=28

ORIGINAL_CODE=if (comparator.compare(contracted, best) < 0) {
	// accept the contracted simplex

	// check convergence
	return;
}

BUGGY_CODE_TYPE=CtIfImpl|CtBlockImpl

PATCH_HUNK_CODE=// accept the contracted simplex

// check convergence
return

PATCH_HUNK_TYPE=CtReturnImpl|CtBlockImpl

INGREDIENT_SCOPE=LOCAL

INGREDIENT_PARENT=// accept the contracted simplex

// check convergence
return

PATCH_DIFF_ORIG=--- /src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
+++ /src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional.java
@@ -95,2 +95,2 @@
-			}
-
+			} 			// accept the contracted simplex 			// check convergence
+			return;



Storing ing JSON at /Users/marekmazur/astor/./output_astor/AstorMain-math-84//astor_output.json
astor_output:
{"general":{"NR_RIGHT_COMPILATIONS":597,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"","FAULT_LOCALIZATION":"flacoco","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":447,"NR_GENERATIONS":1044,"TOTAL_TIME":547.972,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"2088","VALIDATION":"|true|0|2057|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.optimization.direct.MultiDirectional","PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/defects4j\\\/math-84\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java","INGREDIENT_SCOPE":"LOCAL","SUSPICIOUNESS":"0,5","INGREDIENT_PARENT":"\\\/\\\/ accept the contracted simplex\\n\\n\\\/\\\/ check convergence\\nreturn","PATCH_HUNK_TYPE":"CtReturnImpl|CtBlockImpl","ORIGINAL_CODE":"if (comparator.compare(contracted, best) < 0) {\\n\\t\\\/\\\/ accept the contracted simplex\\n\\n\\t\\\/\\\/ check convergence\\n\\treturn;\\n}","BUGGY_CODE_TYPE":"CtIfImpl|CtBlockImpl","OPERATOR":"InsertAfterOp","MODIFIED_FILE_PATH":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-84\\\/\\\/src\\\/\\\/variant-2088\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java","LINE":"90","MP_RANKING":"28","PATCH_HUNK_CODE":"\\\/\\\/ accept the contracted simplex\\n\\n\\\/\\\/ check convergence\\nreturn"}],"TIME":"547","GENERATION":"1044","FOLDER_SOLUTION_CODE":"\\\/Users\\\/marekmazur\\\/astor\\\/.\\\/output_astor\\\/AstorMain-math-84\\\/\\\/src\\\/\\\/variant-2088","PATCH_DIFF_ORIG":"--- \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java\\n+++ \\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/optimization\\\/direct\\\/MultiDirectional.java\\n@@ -95,2 +95,2 @@\\n-\\t\\t\\t}\\n-\\n+\\t\\t\\t} \\t\\t\\t\\\/\\\/ accept the contracted simplex \\t\\t\\t\\\/\\\/ check convergence\\n+\\t\\t\\treturn;\\n\\n"}]}
Time Total(s): 591.807
